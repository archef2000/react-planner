{"version":3,"file":"6a1216d8c947558feccd.app.js","mappings":"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","sources":["webpack:///./src/catalog/items/table/planner-element.tsx","webpack:///./src/catalog/items/recycling-bins/recycling-bins.png","webpack:///./src/catalog/holes/door-double/planner-element.tsx","webpack:///./src/catalog/items/schneider/schneider.png","webpack:///./src/catalog/holes/door/texture.jpg","webpack:///./src/catalog/items/router-wifi/routerWifi.png","webpack:///./src/catalog/items/tv/tv.mtl","webpack:///./src/catalog/items/wardrobe/wardrobe.png","webpack:///./src/catalog/items/router-wifi/planner-element.tsx","webpack:///./src/catalog/items/naspo/naspo.png","webpack:///./src/catalog/items/metal-detector/display2.png","webpack:///./src/catalog/items/umbrella-stand/bronze-texture.jpg","webpack:///./src/catalog/holes/window/texture.png","webpack:///./src/catalog/items/three-phase-panel/PanelTexture.png","webpack:///./src/catalog/items/bookcase/bookcase.png","webpack:///./src/catalog/items/electrical-panel/texturePanel.png","webpack:///./src/catalog/items/chair/planner-element.tsx","webpack:///./src/catalog/holes/panic-door/planner-element.tsx","webpack:///./src/catalog/items/cube/cube.png","webpack:///./src/catalog/items/toilet/toilet.png","webpack:///./src/catalog/items/bookcase/bookTexture2.jpg","webpack:///./src/catalog/holes/window-curtain/window.mtl","webpack:///./src/catalog/items/deskdouble/deskdouble.png","webpack:///./src/catalog/items/radiator-modern-style/ModernStyleRadiator.png","webpack:///./src/catalog/items/radiator-old-style/OldStyleRadiator.png","webpack:///./src/catalog/items/column-square/square_column.png","webpack:///./src/catalog/holes/door/door.png","webpack:///./src/catalog/items/kitchen/steel.jpg","webpack:///./src/catalog/areas/area/textures/tile1.jpg","webpack:///./src/catalog/items/smoke-detector/smokeDetector.png","webpack:///./src/catalog/holes/window-curtain/texture.png","webpack:///./src/catalog/holes/venetian-blind-window/texture.png","webpack:///./src/catalog/items/hiroos/hiroos.png","webpack:///./src/catalog/holes/door/planner-element.tsx","webpack:///./src/catalog/holes/panic-door-double/planner-element.tsx","webpack:///./src/catalog/items/coat-hook/planner-element.tsx","webpack:///./src/catalog/items/fridge/planner-element.tsx","webpack:///./src/catalog/items/recycling-bins/recycle.png","webpack:///./src/catalog/items/column/column.png","webpack:///./src/catalog/holes/panic-door-double/panicDoorDouble.png","webpack:///./src/catalog/items/projector/projector.png","webpack:///./src/catalog/lines/wall/textures/painted.jpg","webpack:///./src/catalog/items/monitor-pc/white.jpg","webpack:///./src/catalog/items/metal-detector/metalDetector.png","webpack:///./src/catalog/items/bookcase/bookTexture3.jpg","webpack:///./src/catalog/items/camera/camera.png","webpack:///./src/catalog/items/camera/planner-element.tsx","webpack:///./src/catalog/items/armchairs/planner-element.tsx","webpack:///./src/catalog/items/air-conditioner/air_conditioner.png","webpack:///./src/catalog/holes/door/door.obj","webpack:///./src/catalog/items/hub/front.png","webpack:///./src/catalog/items/text-3d/planner-element.tsx","webpack:///./src/catalog/items/text-3d/helvetiker_regular.typeface.ts","webpack:///./src/catalog/items/sofa/texture.jpg","webpack:///./src/catalog/items/lim/planner-element.tsx","webpack:///../src/styles/tabs.module.css","webpack:///./src/catalog/items/schneider/planner-element.tsx","webpack:///./src/catalog/holes/window-curtain/window-curtain.jpg","webpack:///./src/catalog/items/kitchen/planner-element.tsx","webpack:///./src/catalog/items/fire-extinguisher/planner-element.tsx","webpack:///./src/catalog/holes/sash-window/sash-window.mtl","webpack:///./src/catalog/holes/window-curtain/planner-element.tsx","webpack:///./src/catalog/items/fridge/steel.jpg","webpack:///./src/catalog/items/monitor-pc/keyboard.jpg","webpack:///./src/catalog/items/balcony/painted.jpg","webpack:///./src/catalog/items/teaching-post/wood.jpg","webpack:///./src/catalog/items/simple-stair/simple-stair.png","webpack:///./src/catalog/items/hub/hub.png","webpack:///./src/catalog/items/kitchen/kitchen.png","webpack:///./src/catalog/holes/ sync planner-element\\.[tj]sx$","webpack:///./src/catalog/items/electrical-panel/planner-element.tsx","webpack:///./src/catalog/items/school-desk/school-desk.png","webpack:///./src/catalog/holes/venetian-blind-window/venetian.obj","webpack:///./src/catalog/items/canteencart/planner-element.tsx","webpack:///./src/catalog/items/chairdesk/chairdesk.png","webpack:///./src/catalog/items/hiroos/planner-element.tsx","webpack:///./src/catalog/items/chairdesk/planner-element.tsx","webpack:///./src/catalog/items/simple-stair/planner-element.tsx","webpack:///./src/catalog/items/umbrella-stand/umbrellaStand.png","webpack:///./src/catalog/items/deskoffice/planner-element.tsx","webpack:///./src/catalog/utils/load-obj.ts","webpack:///./src/catalog/items/coat-hook/coat-hook.png","webpack:///./src/catalog/items/canteen-table/planner-element.tsx","webpack:///./src/catalog/items/school-desk-double/wood.jpg","webpack:///./src/catalog/items/wardrobe/planner-element.tsx","webpack:///./src/catalog/items/column/copper.jpg","webpack:///./src/catalog/holes/sash-window/sash-window.obj","webpack:///./src/catalog/items/column/planner-element.tsx","webpack:///./src/catalog/items/hiroos/hiroosTexture.jpg","webpack:///./src/catalog/holes/venetian-blind-window/venetian.jpg","webpack:///./src/catalog/items/trash/planner-element.tsx","webpack:///./src/catalog/items/canteencart/canteen_cart.png","webpack:///./src/catalog/items/school-desk-double/planner-element.tsx","webpack:///./src/catalog/holes/window/planner-element.tsx","webpack:///./src/catalog/items/three-phase-panel/planner-element.tsx","webpack:///./src/catalog/items/sink/planner-element.tsx","webpack:///./src/catalog/items/bookcase/bookTexture1.jpg","webpack:///./src/catalog/items/chair/chair.png","webpack:///./src/catalog/items/sofa/sofa.png","webpack:///./src/catalog/items/metal-detector/planner-element.tsx","webpack:///./src/catalog/items/cleaningcart/cleaning_cart.png","webpack:///./src/catalog/items/deskoffice/wood.jpg","webpack:///./src/catalog/items/school-desk/planner-element.tsx","webpack:///./src/catalog/holes/venetian-blind-window/venetian.mtl","webpack:///./src/catalog/areas/area/textures/grass.jpg","webpack:///./src/catalog/holes/window/window.obj","webpack:///./src/catalog/items/bookcase/planner-element.tsx","webpack:///./src/catalog/holes/door-double/door_double.png","webpack:///./src/catalog/items/hanger/hanger.png","webpack:///./src/catalog/holes/sash-window/window.png","webpack:///./src/catalog/items/toilet/planner-element.tsx","webpack:///./src/catalog/items/tv/tv.obj","webpack:///./src/catalog/items/blackboard/planner-element.tsx","webpack:///./src/catalog/items/bench/planner-element.tsx","webpack:///./src/catalog/items/kitchen/darksteel.jpg","webpack:///./src/catalog/items/teaching-post/planner-element.tsx","webpack:///./src/catalog/areas/area/textures/ceramic-tile.jpg","webpack:///./src/catalog/holes/sash-window/texture.png","webpack:///./src/catalog/holes/sliding-door/slidingDoor.png","webpack:///./src/catalog/items/electrical-panel/electricalPanel.png","webpack:///./src/catalog/areas/area/textures/strand-porcelain.jpg","webpack:///./src/catalog/items/image/image.png","webpack:///./src/catalog/lines/wall/textures/bricks-normal.jpg","webpack:///./src/catalog/holes/gate/gate.jpg","webpack:///./src/catalog/items/kitchen/logo.jpg","webpack:///./src/catalog/items/simple-stair/textures/white-paint.jpg","webpack:///./src/catalog/holes/window-curtain/window.obj","webpack:///./src/catalog/items/sofa/sofa.mtl","webpack:///./src/catalog/items/radiator-old-style/planner-element.tsx","webpack:///./src/catalog/items/canteen-table/canteen_table.png","webpack:///./src/catalog/items/balcony/balcony.png","webpack:///./src/catalog/items/monitor-pc/monitorPC.png","webpack:///./src/catalog/items/balcony/bricks.jpg","webpack:///./src/catalog/items/column-square/planner-element.tsx","webpack:///./src/catalog/items/radiator-modern-style/planner-element.tsx","webpack:///./src/catalog/items/recycling-bins/planner-element.tsx","webpack:///./src/catalog/items/fire-extinguisher/fire-extinguisher.png","webpack:///./src/catalog/items/naspo/naspofront.png","webpack:///./src/catalog/holes/sash-window/planner-element.tsx","webpack:///./src/catalog/items/child-chair-desk/chairDesk.png","webpack:///./src/catalog/items/trash/trash.png","webpack:///./src/catalog/items/bookcase/wood.jpg","webpack:///./src/catalog/items/fridge/fridge.png","webpack:///./src/catalog/items/air-conditioner/planner-element.tsx","webpack:///./src/catalog/items/schneider/monitor.png","webpack:///./src/catalog/items/monitor-pc/power.jpg","webpack:///./src/catalog/lines/wall/textures/painted-normal.jpg","webpack:///./src/catalog/items/school-desk/wood.jpg","webpack:///./src/catalog/items/three-phase-panel/threePhasePanel.png","webpack:///./src/catalog/items/coat-hook/wood.jpg","webpack:///./src/catalog/items/fire-extinguisher/gage-image.png","webpack:///./src/catalog/items/projector/planner-element.tsx","webpack:///./src/catalog/items/desk/desk.png","webpack:///./src/catalog/items/hanger/planner-element.tsx","webpack:///./src/catalog/items/school-desk-double/school-desk-double.png","webpack:///./src/catalog/items/deskoffice/white.jpg","webpack:///./src/catalog/items/simple-stair/textures/marble.jpg","webpack:///./src/catalog/items/tv/planner-element.tsx","webpack:///./src/catalog/items/balcony/planner-element.tsx","webpack:///./src/catalog/items/fire-extinguisher/label-image.png","webpack:///./src/catalog/items/cleaningcart/planner-element.tsx","webpack:///./src/catalog/items/lim/example_lim.png","webpack:///./src/catalog/items/table/table.png","webpack:///./src/catalog/items/tv/tv.png","webpack:///./src/catalog/holes/venetian-blind-window/planner-element.tsx","webpack:///./src/catalog/lines/wall/textures/bricks.jpg","webpack:///./src/catalog/items/smoke-detector/planner-element.tsx","webpack:///../src/shared-style.ts","webpack:///../src/components/style/button.tsx","webpack:///../src/components/style/cancel-button.tsx","webpack:///../src/components/style/content-container.tsx","webpack:///../src/components/style/content-title.tsx","webpack:///../src/components/style/delete-button.tsx","webpack:///../src/components/style/form-block.tsx","webpack:///../src/components/style/form-text-input.tsx","webpack:///../src/components/style/form-color-input.tsx","webpack:///../src/components/style/form-label.tsx","webpack:///../src/constants.ts","webpack:///../src/react-planner-context.tsx","webpack:///../src/components/style/form-number-input.tsx","webpack:///../src/components/style/form-select.tsx","webpack:///../src/components/style/form-slider.tsx","webpack:///../src/components/style/form-submit-button.tsx","webpack:///../src/components/style/export.tsx","webpack:///../src/catalog/properties/shared-property-style.ts","webpack:///../src/catalog/properties/property-color.tsx","webpack:///../src/catalog/properties/property-enum.tsx","webpack:///../src/catalog/properties/property-string.tsx","webpack:///../src/catalog/properties/property-number.tsx","webpack:///../src/utils/math.ts","webpack:///../src/catalog/properties/property-lenght-measure.tsx","webpack:///../src/catalog/properties/property-toggle.tsx","webpack:///../src/catalog/properties/property-checkbox.tsx","webpack:///../src/catalog/properties/property-hidden.tsx","webpack:///../src/catalog/properties/property-read-only.tsx","webpack:///../src/catalog/catalog.ts","webpack:///../src/translator/en.ts","webpack:///../src/translator/it.ts","webpack:///../src/translator/ru.ts","webpack:///../src/translator/translator.ts","webpack:///../src/utils/geometry.ts","webpack:///../src/utils/snap.ts","webpack:///../src/models.ts","webpack:///../src/utils/graph.ts","webpack:///../src/utils/get-edges-of-subgraphs.ts","webpack:///../src/utils/graph-cycles.ts","webpack:///../src/utils/graph-inner-cycles.ts","webpack:///../src/utils/snap-scene.ts","webpack:///../src/utils/history.ts","webpack:///../src/utils/objects-utils.ts","webpack:///../src/utils/id-broker.ts","webpack:///../src/utils/name-generator.ts","webpack:///../src/class/project.ts","webpack:///../src/class/group.ts","webpack:///../src/class/layer.ts","webpack:///../src/class/line.ts","webpack:///../src/class/hole.ts","webpack:///../src/class/vertex.ts","webpack:///../src/class/area.ts","webpack:///../src/class/item.ts","webpack:///../src/class/guide.ts","webpack:///../src/reducers/reducer.ts","webpack:///../src/reducers/project-reducer.ts","webpack:///../src/reducers/viewer2d-reducer.ts","webpack:///../src/reducers/viewer3d-reducer.ts","webpack:///../src/reducers/items-reducer.ts","webpack:///../src/reducers/holes-reducer.ts","webpack:///../src/reducers/lines-reducer.ts","webpack:///../src/reducers/areas-reducer.ts","webpack:///../src/reducers/groups-reducer.ts","webpack:///../src/reducers/scene-reducer.ts","webpack:///../src/reducers/vertices-reducer.ts","webpack:///../src/actions/project-actions.ts","webpack:///../src/actions/viewer2d-actions.ts","webpack:///../src/actions/viewer3d-actions.ts","webpack:///../src/actions/lines-actions.ts","webpack:///../src/actions/holes-actions.ts","webpack:///../src/actions/scene-actions.ts","webpack:///../src/actions/vertices-actions.ts","webpack:///../src/actions/items-actions.ts","webpack:///../src/actions/area-actions.ts","webpack:///../src/actions/groups-actions.ts","webpack:///../src/actions/export.ts","webpack:///../src/components/toolbar/toolbar-button.tsx","webpack:///../src/components/toolbar/toolbar-save-button.tsx","webpack:///../src/utils/browser.ts","webpack:///../src/components/toolbar/toolbar-load-button.tsx","webpack:///../src/utils/react-if.tsx","webpack:///../src/components/toolbar/toolbar.tsx","webpack:///../src/components/sidebar/panel.tsx","webpack:///../src/components/sidebar/panel-element-editor/attributes-editor/item-attributes-editor.tsx","webpack:///../src/components/sidebar/panel-element-editor/attributes-editor/line-attributes-editor.tsx","webpack:///../src/components/sidebar/panel-element-editor/attributes-editor/hole-attributes-editor.tsx","webpack:///../src/components/sidebar/panel-element-editor/attributes-editor/attributes-editor.tsx","webpack:///../src/components/sidebar/panel-element-editor/element-editor.tsx","webpack:///../src/components/sidebar/panel-element-editor/panel-element-editor.tsx","webpack:///../src/components/sidebar/panel-group-editor.tsx","webpack:///../src/components/sidebar/panel-element-editor/panel-multi-elements-editor.tsx","webpack:///../src/components/sidebar/panel-layers.tsx","webpack:///../src/components/sidebar/panel-guides.tsx","webpack:///../src/components/sidebar/panel-groups.tsx","webpack:///../src/components/sidebar/panel-layer-elements.tsx","webpack:///../src/components/sidebar/sidebar.tsx","webpack:///../src/components/viewer2d/vertex.tsx","webpack:///../src/components/viewer2d/snap.tsx","webpack:///../src/components/viewer2d/ruler.tsx","webpack:///../src/components/viewer2d/line.tsx","webpack:///../src/components/viewer2d/layer.tsx","webpack:///../src/components/viewer2d/item.tsx","webpack:///../src/components/viewer2d/area.tsx","webpack:///../src/components/viewer2d/grids/grid-horizontal-streak.tsx","webpack:///../src/components/viewer2d/grids/grid-vertical-streak.tsx","webpack:///../src/components/viewer2d/grids/grids.tsx","webpack:///../src/components/viewer2d/group.tsx","webpack:///../src/components/viewer2d/rulerX.tsx","webpack:///../src/components/viewer2d/rulerY.tsx","webpack:///../src/components/viewer2d/export.ts","webpack:///../src/components/viewer2d/scene.tsx","webpack:///../src/components/viewer2d/state.tsx","webpack:///../src/components/viewer2d/viewer2d.tsx","webpack:///../src/components/viewer3d/libs/helvetiker_regular.typeface.ts","webpack:///../src/components/viewer3d/three-memory-cleaner.ts","webpack:///../src/components/viewer3d/scene-creator.ts","webpack:///../src/components/viewer3d/grid-creator.ts","webpack:///../src/components/viewer3d/grids/grid-horizontal-streak.ts","webpack:///../src/components/viewer3d/grids/grid-vertical-streak.ts","webpack:///../src/components/viewer3d/viewer3d.tsx","webpack:///../src/components/viewer3d/libs/pointer-lock-controls.ts","webpack:///../src/components/viewer3d/viewer3d-first-person.tsx","webpack:///../src/components/viewer3d/pointer-lock-navigation.ts","webpack:///../src/components/viewer3d/libs/first-person-controls.ts","webpack:///../src/components/catalog-view/catalog-item.tsx","webpack:///../src/components/catalog-view/catalog-breadcrumb.tsx","webpack:///../src/components/catalog-view/catalog-page-item.tsx","webpack:///../src/components/catalog-view/catalog-turn-back-page-item.tsx","webpack:///../src/components/catalog-view/catalog-list.tsx","webpack:///../src/components/configurator/project-configurator.tsx","webpack:///../src/components/content.tsx","webpack:///../src/components/footerbar/footer-toggle-button.tsx","webpack:///../src/components/footerbar/footer-content-button.tsx","webpack:///../src/version.ts","webpack:///../src/components/footerbar/footerbar.tsx","webpack:///../src/styles/tabs.module.css?8300","webpack:///../src/react-planner.tsx","webpack:///../src/plugins/autosave.ts","webpack:///../src/plugins/export.ts","webpack:///../src/plugins/keyboard.ts","webpack:///../src/plugins/console-debugger.ts","webpack:///../src/components/export.ts","webpack:///../src/components/toolbar/export.ts","webpack:///../src/components/sidebar/export.ts","webpack:///../src/components/footerbar/export.ts","webpack:///../src/catalog/factories/utils/calcPolygon.ts","webpack:///../src/catalog/factories/wall-factory-3d.ts","webpack:///../src/catalog/factories/wall-factory.tsx","webpack:///../src/catalog/factories/area-factory-3d.ts","webpack:///../src/catalog/factories/area-factory.tsx","webpack:///../src/catalog/factories/export.ts","webpack:///../src/types.ts","webpack:///./src/catalog/items/cube/planner-element.tsx","webpack:///./src/catalog/items/text-3d/img.png","webpack:///./src/catalog/holes/window/window.mtl","webpack:///./src/catalog/holes/sliding-door/planner-element.tsx","webpack:///./src/catalog/items/image/imageful.tsx","webpack:///./src/catalog/items/image/planner-element.tsx","webpack:///./src/catalog/items/ sync planner-element\\.[tj]sx$","webpack:///./src/catalog/holes/window/window.png","webpack:///./src/catalog/areas/area/textures/parquet.jpg","webpack:///./src/catalog/items/umbrella-stand/planner-element.tsx","webpack:///./src/catalog/items/sofa/sofa.obj","webpack:///./src/catalog/items/desk/planner-element.tsx","webpack:///./src/catalog/items/fridge/logo.jpg","webpack:///./src/catalog/items/armchairs/armchairs.png","webpack:///./src/catalog/items/monitor-pc/black.jpg","webpack:///./src/catalog/items/sink/sink.png","webpack:///./src/catalog/areas/area/planner-element.tsx","webpack:///./src/catalog/lines/wall/planner-element.tsx","webpack:///./src/catalog/mycatalog.ts","webpack:///./src/ui/toolbar-screenshot-button.tsx","webpack:///./src/renderer.tsx","webpack:///./src/catalog/holes/panic-door/panicDoor.png","webpack:///./src/catalog/items/bench/bench.png","webpack:///./src/catalog/items/lim/lim.png","webpack:///./src/catalog/items/bench/wood.jpg","webpack:///./src/catalog/items/monitor-pc/planner-element.tsx","webpack:///./src/catalog/items/teaching-post/teaching-post.png","webpack:///./src/catalog/items/deskoffice/desk.png","webpack:///./src/catalog/items/sofa/planner-element.tsx","webpack:///./src/catalog/items/naspo/planner-element.tsx","webpack:///./src/catalog/items/child-chair-desk/planner-element.tsx","webpack:///./src/catalog/items/blackboard/blackboard.png","webpack:///./src/catalog/items/deskdouble/planner-element.tsx","webpack:///./src/catalog/holes/door/door.mtl","webpack:///./src/catalog/lines/wall/wall.png","webpack:///./src/catalog/items/hub/planner-element.tsx","webpack:///./src/catalog/items/metal-detector/display1.png","webpack:///./src/catalog/holes/gate/planner-element.tsx"],"sourcesContent":["import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst RADIUS = 3;\n\nconst PlaneMaterial = new Three.MeshLambertMaterial({ color: 0x9b8c75 });\nconst material_legs = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n\nfunction makeObjectMaxLOD(newWidth: number, newHeight: number, newDepth: number) {\n  const table = new Three.Mesh();\n\n  const PlaneGeometry = new Three.BoxGeometry(newWidth, newHeight / 20, newDepth);\n  const plane = new Three.Mesh(PlaneGeometry, PlaneMaterial);\n  plane.position.y = newHeight;\n  table.add(plane);\n\n  const geometry_legs = new Three.CylinderGeometry(RADIUS, RADIUS, newHeight, 32, 32);\n\n  const leg1 = new Three.Mesh(geometry_legs, material_legs);\n  leg1.position.x = newWidth / 2;\n  leg1.position.z = newDepth / 2;\n  leg1.position.y = newHeight / 2;\n  table.add(leg1);\n\n  const leg2 = new Three.Mesh(geometry_legs, material_legs);\n  leg2.position.x = newWidth / 2;\n  leg2.position.z = -newDepth / 2;\n  leg2.position.y = newHeight / 2;\n  table.add(leg2);\n\n  const leg3 = new Three.Mesh(geometry_legs, material_legs);\n  leg3.position.x = -newWidth / 2;\n  leg3.position.z = newDepth / 2;\n  leg3.position.y = newHeight / 2;\n  table.add(leg3);\n\n  const leg4 = new Three.Mesh(geometry_legs, material_legs);\n  leg4.position.x = -newWidth / 2;\n  leg4.position.z = -newDepth / 2;\n  leg4.position.y = newHeight / 2;\n  table.add(leg4);\n\n  return table;\n}\n\nfunction makeObjectMinLOD(newWidth: number, newHeight: number, newDepth: number) {\n  const table = new Three.Mesh();\n\n  const PlaneGeometry = new Three.BoxGeometry(newWidth, newHeight / 20, newDepth);\n  const plane = new Three.Mesh(PlaneGeometry, PlaneMaterial);\n  plane.position.y = newHeight;\n  table.add(plane);\n\n  const geometry_legs = new Three.CylinderGeometry(RADIUS, RADIUS, newHeight, 8, 8);\n\n  const leg1 = new Three.Mesh(geometry_legs, material_legs);\n  leg1.position.x = newWidth / 2;\n  leg1.position.z = newDepth / 2;\n  leg1.position.y = newHeight / 2;\n  table.add(leg1);\n\n  const leg2 = new Three.Mesh(geometry_legs, material_legs);\n  leg2.position.x = newWidth / 2;\n  leg2.position.z = -newDepth / 2;\n  leg2.position.y = newHeight / 2;\n  table.add(leg2);\n\n  const leg3 = new Three.Mesh(geometry_legs, material_legs);\n  leg3.position.x = -newWidth / 2;\n  leg3.position.z = newDepth / 2;\n  leg3.position.y = newHeight / 2;\n  table.add(leg3);\n\n  const leg4 = new Three.Mesh(geometry_legs, material_legs);\n  leg4.position.x = -newWidth / 2;\n  leg4.position.z = -newDepth / 2;\n  leg4.position.y = newHeight / 2;\n  table.add(leg4);\n\n  return table;\n}\n\nexport default defineCatalogElement({\n  name: \"table\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'wood'],\n    title: \"table\",\n    description: \"table\",\n    image: require('./table.png')\n  },\n\n  properties: {\n    width: {\n      label: \"width\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 90\n      }\n    },\n    depth: {\n      label: \"depth\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 50\n      }\n    },\n    height: {\n      label: \"height\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 80\n      }\n    },\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n\n    const newWidth = element.properties.width.length;\n    const newDepth = element.properties.depth.length;\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={newWidth} height={newDepth}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newWidth: number = element.properties.width.length;\n    const newDepth: number = element.properties.depth.length;\n    const newHeight: number = element.properties.height.length;\n    const newAltitude: number = element.properties.altitude.length;\n\n    /********** lod max ************/\n\n    const tableMaxLOD = new Three.Object3D();\n    const objectMaxLod = makeObjectMaxLOD(newWidth, newHeight, newDepth);\n    tableMaxLOD.add(objectMaxLod.clone());\n    tableMaxLOD.position.y += newHeight / 20 + newAltitude;\n\n    /********** lod min ************/\n\n    const tableMinLOD = new Three.Object3D();\n    const objectMinLod = makeObjectMinLOD(newWidth, newHeight, newDepth);\n    tableMinLOD.add(objectMinLod.clone());\n    tableMinLOD.position.y += newHeight / 20 + newAltitude;\n\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(tableMaxLOD, 200);\n    lod.addLevel(tableMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/recycling-bins/recycling-bins.png\";","import React from 'react';\nimport * as Three from 'three';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst metalBlue = new Three.MeshLambertMaterial({ color: 0xB7CEEC });\nconst grey = new Three.MeshLambertMaterial({ color: 0xD2B06A });\nconst darkGrey = new Three.MeshLambertMaterial({ color: 0xFFEFCE });\n\nconst boxMaterials = [grey, grey, grey, grey, darkGrey, darkGrey];\n\nfunction makeDoor(width: number, height: number, thickness: number) {\n  const door_double = new Three.Mesh();\n\n  const LongDoorGeometry = new Three.BoxGeometry(.75 * width, height, thickness);\n  const longDoor = new Three.Mesh(LongDoorGeometry, boxMaterials);\n  longDoor.position.x -= width * .25;\n  door_double.add(longDoor);\n\n  const ShortDoorGeometry = new Three.BoxGeometry(.25 * width, height, thickness);\n  const shortDoor = new Three.Mesh(ShortDoorGeometry, boxMaterials);\n  shortDoor.position.x += width * 0.25;\n  shortDoor.position.z += thickness / 10;\n  door_double.add(shortDoor);\n\n  const handle = makeHandle(width);\n  handle.position.set(width / 20, height / 40, thickness / 2 + thickness / 10);\n  handle.rotation.z += Math.PI;\n  handle.rotation.x += Math.PI / 2;\n  door_double.add(handle);\n\n  const handleBase = makeHandleBase();\n  handleBase.position.set(width / 20, 0, thickness / 2);\n  handleBase.rotation.x = 0;\n  door_double.add(handleBase);\n\n  const handle2 = makeHandle(width);\n  handle2.position.set(width / 20, height / 40, -thickness / 2 - thickness / 10);\n  handle2.rotation.z += Math.PI;\n  handle2.rotation.x -= Math.PI / 2;\n  door_double.add(handle2);\n\n  const handleBase2 = makeHandleBase();\n  handleBase2.position.set(width / 20, 0, -thickness / 2);\n  handleBase2.rotation.x = 0;\n  door_double.add(handleBase2);\n\n  return door_double\n}\n\n\nfunction makeHandle(width: number) {\n  const handle = new Three.Object3D();\n  const geometry_p1 = new Three.CylinderGeometry(width / 100, width / 100, width / 32.5, Math.round(32));\n  const geometry_p2 = new Three.SphereGeometry(width / 100, Math.round(32), Math.round(32));\n  const geometry_p3 = new Three.CylinderGeometry(width / 100, width / 100, width / 14.5, Math.round(32));\n  const p1 = new Three.Mesh(geometry_p1, black);\n  const p2 = new Three.Mesh(geometry_p2, black);\n  const p3 = new Three.Mesh(geometry_p3, black);\n  const p4 = new Three.Mesh(geometry_p2, black);\n  p3.rotation.z = Math.PI / 2;\n  p3.position.x = width / 14.5 / 2;\n  p2.position.y = -width / 32.5 / 2;\n  p4.position.y = -width / 14.5 / 2;\n  p3.add(p4);\n  p2.add(p3);\n  p1.add(p2);\n  handle.add(p1);\n\n  return handle;\n}\n\nfunction makeHandleBase() {\n  const handleBase = new Three.Object3D();\n  const geometryBase1 = new Three.BoxGeometry(7.6, 28, 2);\n  const geometryBase2 = new Three.CylinderGeometry(3.6, 3.6, 2, Math.round(32));\n  const lock = makeLock();\n  const handleBase1 = new Three.Mesh(geometryBase1, black);\n  const handleBase2 = new Three.Mesh(geometryBase2, black);\n  lock.rotation.x = Math.PI / 2;\n  lock.position.y = -3;\n  handleBase2.rotation.x = Math.PI / 2;\n  handleBase2.position.y = -3.3;\n  handleBase2.scale.z = 1.5;\n  handleBase1.add(lock);\n  handleBase1.add(handleBase2);\n  handleBase.add(handleBase1);\n\n  return handleBase;\n}\n\nfunction makeLock() {\n  const lock = new Three.Object3D();\n  const LockGeometry1 = new Three.CylinderGeometry(1.5, 1.5, 4, Math.round(32));\n  const lockGeometry2 = new Three.BoxGeometry(1.6, 4, 4);\n  const lockGeometry3 = new Three.BoxGeometry(1.4, 4.06, 0.36);\n  const lock_p1 = new Three.Mesh(LockGeometry1, metalBlue);\n  const lock_p2 = new Three.Mesh(lockGeometry2, metalBlue);\n  const lock_p3 = new Three.Mesh(lockGeometry3, grey);\n  lock_p2.position.z = 1;\n  lock_p1.add(lock_p2);\n  lock_p1.add(lock_p3);\n  lock.add(lock_p1);\n\n  return lock;\n}\n\nexport default defineCatalogElement({\n  name: 'double door',\n  prototype: 'holes',\n\n  info: {\n    tag: ['door'],\n    title: 'double door',\n    description: 'iron door',\n    image: require('./door_double.png')\n  },\n\n  properties: {\n    width: {\n      label: 'width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 200\n      }\n    },\n    height: {\n      label: 'height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 215\n      }\n    },\n    thickness: {\n      label: 'thickness',\n      type: 'length-measure',\n      defaultValue: {\n        length: 30\n      }\n    },\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    },\n    flip_horizontal: {\n      label: 'flip',\n      type: 'checkbox',\n      defaultValue: false,\n      values: {\n        'none': false,\n        'yes': true\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const STYLE_HOLE_BASE = { stroke: '#ff0000', strokeWidth: '3px', fill: '#ff0000' };\n    const STYLE_HOLE_SELECTED = { stroke: '#ff0000', strokeWidth: '4px', fill: '#ff0000', cursor: 'move' };\n    const STYLE_ARC_BASE = { stroke: '#ff0000', strokeWidth: '3px', strokeDasharray: '5,5', fill: 'none' };\n    const STYLE_ARC_SELECTED = { stroke: '#ff0000', strokeWidth: '4px', strokeDasharray: '5,5', fill: 'none', cursor: 'move' };\n\n    const epsilon = 3;\n    const flip = element.properties.flip_horizontal;\n    const holeWidth = element.properties.width.length;\n    const holePath = `M${0} ${-epsilon}  L${holeWidth} ${-epsilon}  L${holeWidth} ${epsilon}  L${0} ${epsilon}  z`;\n    const arcPath = `M${0},${0}  A${holeWidth / 4},${holeWidth / 4} 0 0,1 ${holeWidth / 4},${holeWidth / 4}`;\n    const arcPath2 = `M${0},${0}  A${holeWidth / 2 + holeWidth / 4},${holeWidth / 2 + holeWidth / 4} 0 0,0 ${holeWidth / 2 + holeWidth / 4},${holeWidth / 2 + holeWidth / 4}`;\n    const holeStyle = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE;\n    const arcStyle = element.selected ? STYLE_ARC_SELECTED : STYLE_ARC_BASE;\n    const length = element.properties.width.length;\n\n    if (flip) {\n      return (\n        <g transform={`translate(${-length / 2}, 0)`}>\n          <path key='1' d={arcPath} style={arcStyle} transform={`translate(${0},${-holeWidth / 4})`} />\n          <line key='2' x1={0} y1={0 - epsilon} x2={0} y2={-holeWidth / 4 - epsilon} style={holeStyle} />\n          <path key='3' d={arcPath2} style={arcStyle} transform={`translate(${holeWidth},${-holeWidth / 2 - holeWidth / 4}) rotate(90)`} />\n          <line key='4' x1={holeWidth} y1={0 - epsilon} x2={holeWidth} y2={-holeWidth / 2 - holeWidth / 4 - epsilon} style={holeStyle} />\n          <path key='5' d={holePath} style={holeStyle} />\n        </g>\n      )\n    }\n    else {\n      return (\n        <g transform={`translate(${-length / 2}, 0)`}>\n          <path key='1' d={arcPath} style={arcStyle} transform={`translate(${holeWidth},${holeWidth / 4}) rotate(180)`} />\n          <line key='2' x1={0} y1={0 - epsilon} x2={0} y2={holeWidth / 2 + holeWidth / 4 - epsilon} style={holeStyle} />\n          <path key='3' d={arcPath2} style={arcStyle} transform={`translate(${0},${holeWidth / 2 + holeWidth / 4}) rotate(270)`} />\n          <line key='4' x1={holeWidth} y1={0 - epsilon} x2={holeWidth} y2={holeWidth / 4 - epsilon} style={holeStyle} />\n          <path key='5' d={holePath} style={holeStyle} />\n        </g>\n      )\n    }\n  },\n\n  async render3D(element, layer, scene) {\n    const flip = element.properties.flip_horizontal;\n    const width = element.properties.width.length;\n    const height = element.properties.height.length;\n    const thickness = element.properties.thickness.length;\n    const newAltitude = element.properties.altitude.length;\n\n    const door_double = new Three.Object3D();\n    door_double.add(makeDoor(width, height, thickness).clone());\n\n    const valuePosition = new Three.Box3().setFromObject(door_double);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(door_double, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      door_double.add(bbox);\n    }\n\n    if (flip) {\n      door_double.rotation.y += Math.PI;\n      door_double.position.x -= width / 4;\n    }\n\n    door_double.position.y += newAltitude;\n    door_double.position.x += width / 8;\n    door_double.scale.set(width / deltaX, height / deltaY, thickness / deltaZ);\n\n    return door_double;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/schneider/schneider.png\";","module.exports = __webpack_public_path__ + \"catalog/holes/door/texture.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/router-wifi/routerWifi.png\";","module.exports = __webpack_public_path__ + \"catalog/items/tv/tv.mtl\";","module.exports = __webpack_public_path__ + \"catalog/items/wardrobe/wardrobe.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 20;\nconst DEPTH = 5;\nconst HEIGHT = 20;\nconst RADIUS = 10;\n\nconst grey = new Three.MeshLambertMaterial({ color: 0x6b6b6b });\nconst grey2 = new Three.MeshLambertMaterial({ color: 0x939393 });\nconst greenMaterial = new Three.MeshLambertMaterial({ color: 0x00FF00 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const routerWifi = new Three.Mesh();\n\n  const x = 0;\n  const y = 0;\n  const w = WIDTH;\n  const h = HEIGHT;\n  const r = RADIUS;\n\n  const roundedRectShape = new Three.Shape();\n\n  roundedRectShape.moveTo(x, y + r);\n  roundedRectShape.lineTo(x, y + h - r);\n  roundedRectShape.quadraticCurveTo(x, y + h, x + r, y + h);\n  roundedRectShape.lineTo(x + w - r, y + h);\n  roundedRectShape.quadraticCurveTo(x + w, y + h, x + w, y + h - r);\n  roundedRectShape.lineTo(x + w, y + r);\n  roundedRectShape.quadraticCurveTo(x + w, y, x + w - r, y);\n  roundedRectShape.lineTo(x + r, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + r);\n\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: DEPTH / 2,\n    bevelEnabled: true,\n    bevelThickness: DEPTH,\n    bevelSize: 2 * DEPTH,\n    bevelSegments: 2\n  };\n\n  const geometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const mesh = new Three.Mesh(geometry, grey);\n\n  mesh.position.set(-0.4, 1, 0.2);\n  routerWifi.add(mesh);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: DEPTH / 2,\n    bevelEnabled: false,\n    bevelThickness: DEPTH,\n    bevelSize: 2 * DEPTH,\n    bevelSegments: 2\n  };\n\n  const geometry2 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings2);\n  const mesh2 = new Three.Mesh(geometry2, grey2);\n\n  mesh2.position.set(-0.4, 1, 5.5);\n  routerWifi.add(mesh2);\n\n  const cylinderGeometry = new Three.CylinderGeometry(RADIUS / 20, RADIUS / 20, DEPTH, 32, 32);\n  const led = new Three.Mesh(cylinderGeometry, greenMaterial);\n  led.rotation.x += Math.PI / 2;\n  led.position.set(WIDTH / 2, WIDTH / 2, 1.2 * DEPTH);\n  routerWifi.add(led);\n\n  const led2 = new Three.Mesh(cylinderGeometry, greenMaterial);\n  led2.rotation.x += Math.PI / 2;\n  led2.position.set(WIDTH / 2 + 5, WIDTH / 2, 1.2 * DEPTH);\n  routerWifi.add(led2);\n\n  const led3 = new Three.Mesh(cylinderGeometry, greenMaterial);\n  led3.rotation.x += Math.PI / 2;\n  led3.position.set(WIDTH / 2 - 5, WIDTH / 2, 1.2 * DEPTH);\n  routerWifi.add(led3);\n\n  return routerWifi;\n}\n\nfunction makeObjectMinLOD() {\n  const routerWifi = new Three.Mesh();\n\n  const x = 0;\n  const y = 0;\n  const w = WIDTH;\n  const h = HEIGHT;\n  const r = RADIUS;\n\n  const roundedRectShape = new Three.Shape();\n\n  roundedRectShape.moveTo(x, y + r);\n  roundedRectShape.lineTo(x, y + h - r);\n  roundedRectShape.quadraticCurveTo(x, y + h, x + r, y + h);\n  roundedRectShape.lineTo(x + w - r, y + h);\n  roundedRectShape.quadraticCurveTo(x + w, y + h, x + w, y + h - r);\n  roundedRectShape.lineTo(x + w, y + r);\n  roundedRectShape.quadraticCurveTo(x + w, y, x + w - r, y);\n  roundedRectShape.lineTo(x + r, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + r);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: DEPTH / 2,\n    bevelEnabled: true,\n    bevelThickness: DEPTH,\n    bevelSize: 2 * DEPTH,\n    bevelSegments: 2\n  };\n\n  const geometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const mesh = new Three.Mesh(geometry, grey);\n\n  mesh.position.set(-0.4, 1, 0.2);\n  routerWifi.add(mesh);\n\n  return routerWifi;\n}\n\nexport default defineCatalogElement({\n  name: \"router_wifi\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['telecomunication'],\n    title: \"router Wifi\",\n    description: \"router Wifi\",\n    image: require('./routerWifi.png')\n  },\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#bb00ff\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /**************** LOD max ***********************/\n\n    const routerWifiMaxLOD = new Three.Object3D();\n    routerWifiMaxLOD.add(objectMaxLOD.clone());\n\n    const aa = new Three.Box3().setFromObject(routerWifiMaxLOD);\n\n    const deltaX = Math.abs(aa.max.x - aa.min.x);\n    const deltaY = Math.abs(aa.max.y - aa.min.y);\n    const deltaZ = Math.abs(aa.max.z - aa.min.z);\n\n    routerWifiMaxLOD.position.y += HEIGHT / 2 + newAltitude;\n    routerWifiMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**************** LOD min ***********************/\n\n    const routerWifiMinLOD = new Three.Object3D();\n    routerWifiMinLOD.add(objectMinLOD.clone());\n\n    routerWifiMinLOD.position.y += HEIGHT / 2 + newAltitude;\n    routerWifiMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(routerWifiMaxLOD, 200);\n    lod.addLevel(routerWifiMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/naspo/naspo.png\";","module.exports = __webpack_public_path__ + \"catalog/items/metal-detector/display2.png\";","module.exports = __webpack_public_path__ + \"catalog/items/umbrella-stand/bronze-texture.jpg\";","module.exports = __webpack_public_path__ + \"catalog/holes/window/texture.png\";","module.exports = __webpack_public_path__ + \"catalog/items/three-phase-panel/PanelTexture.png\";","module.exports = __webpack_public_path__ + \"catalog/items/bookcase/bookcase.png\";","module.exports = __webpack_public_path__ + \"catalog/items/electrical-panel/texturePanel.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 55;\nconst DEPTH = 55;\nconst HEIGHT = 50;\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const chair = new Three.Mesh();\n\n  const LegGeometry = new Three.CylinderGeometry(0.02, 0.02, 0.5, 32, 32);\n  const LegMaterial = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n\n  const leg1 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg1.rotation.x += Math.PI / 2;\n  leg1.position.z += 0.5 / 2;\n\n  const leg2 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg2.rotation.x += Math.PI / 2;\n  leg2.position.z += 0.5 / 2;\n  leg2.position.y += 0.4;\n\n  const leg3 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg3.rotation.x += Math.PI / 2;\n  leg3.position.z += 0.5 / 2;\n  leg3.position.x += 0.4;\n\n  const leg4 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg4.rotation.x += Math.PI / 2;\n  leg4.position.z += 0.5 / 2;\n  leg4.position.y += 0.4;\n  leg4.position.x += 0.4;\n\n  const leg5 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg5.rotation.x += Math.PI / 2;\n  leg5.position.z += 0.5 * 3 / 2;\n\n  const leg6 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg6.rotation.x += Math.PI / 2;\n  leg6.position.z += 0.5 * 3 / 2;\n  leg6.position.x += 0.4;\n\n  const WoodMaterial = new Three.MeshLambertMaterial({ color: 0x9b8c75 });\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = .5;\n  const height = .48;\n  const radius = 0.05;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 0.03,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const PlaneGeometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const plane = new Three.Mesh(PlaneGeometry, WoodMaterial);\n\n  plane.position.x += -0.05;\n  plane.position.y += -0.04;\n  plane.position.z += 0.5;\n\n  const roundedRectShape2 = new Three.Shape();\n\n  const x1 = 0;\n  const y1 = 0;\n  const width1 = .45;\n  const height1 = .25;\n  const radius1 = 0.05;\n\n  roundedRectShape2.moveTo(x1, y1 + radius1);\n  roundedRectShape2.lineTo(x1, y1 + height1 - radius1);\n  roundedRectShape2.quadraticCurveTo(x1, y1 + height1, x1 + radius1, y1 + height1);\n  roundedRectShape2.lineTo(x1 + width1 - radius1, y1 + height1);\n  roundedRectShape2.quadraticCurveTo(x1 + width1, y1 + height1, x1 + width1, y1 + height1 - radius1);\n  roundedRectShape2.lineTo(x1 + width1, y1 + radius1);\n  roundedRectShape2.quadraticCurveTo(x1 + width1, y1, x1 + width1 - radius1, y1);\n  roundedRectShape2.lineTo(x1 + radius1, y1);\n  roundedRectShape2.quadraticCurveTo(x1, y1, x1, y1 + radius1);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: 0.03,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const backGeometry = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n  const back = new Three.Mesh(backGeometry, WoodMaterial);\n  back.rotation.x += Math.PI / 2;\n  back.position.z += 0.5 * 12 / 8;\n  back.position.y += 0.03;\n  back.position.x += -0.025;\n\n  chair.add(back);\n  chair.add(plane);\n  chair.add(leg1);\n  chair.add(leg2);\n  chair.add(leg3);\n  chair.add(leg4);\n  chair.add(leg5);\n  chair.add(leg6);\n\n  return chair\n}\n\nfunction makeObjectMinLOD() {\n  const chair = new Three.Mesh();\n\n  const LegGeometry = new Three.CylinderGeometry(0.02, 0.02, 0.5, 8, 8);\n  const LegMaterial = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n\n  const leg1 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg1.rotation.x += Math.PI / 2;\n  leg1.position.z += 0.5 / 2;\n\n  const leg2 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg2.rotation.x += Math.PI / 2;\n  leg2.position.z += 0.5 / 2;\n  leg2.position.y += 0.4;\n\n  const leg3 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg3.rotation.x += Math.PI / 2;\n  leg3.position.z += 0.5 / 2;\n  leg3.position.x += 0.4;\n\n  const leg4 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg4.rotation.x += Math.PI / 2;\n  leg4.position.z += 0.5 / 2;\n  leg4.position.y += 0.4;\n  leg4.position.x += 0.4;\n\n  const leg5 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg5.rotation.x += Math.PI / 2;\n  leg5.position.z += 0.5 * 3 / 2;\n\n  const leg6 = new Three.Mesh(LegGeometry, LegMaterial);\n  leg6.rotation.x += Math.PI / 2;\n  leg6.position.z += 0.5 * 3 / 2;\n  leg6.position.x += 0.4;\n\n  const WoodMaterial = new Three.MeshLambertMaterial({ color: 0x9b8c75 });\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = .5;\n  const height = .48;\n  const radius = 0.025;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 0.03,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const PlaneGeometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const plane = new Three.Mesh(PlaneGeometry, WoodMaterial);\n\n  plane.position.x += -0.05;\n  plane.position.y += -0.04;\n  plane.position.z += 0.5;\n\n  const roundedRectShape2 = new Three.Shape();\n\n  const x1 = 0;\n  const y1 = 0;\n  const width1 = .45;\n  const height1 = .25;\n  const radius1 = 0.025;\n\n  roundedRectShape2.moveTo(x1, y1 + radius1);\n  roundedRectShape2.lineTo(x1, y1 + height1 - radius1);\n  roundedRectShape2.quadraticCurveTo(x1, y1 + height1, x1 + radius1, y1 + height1);\n  roundedRectShape2.lineTo(x1 + width1 - radius1, y1 + height1);\n  roundedRectShape2.quadraticCurveTo(x1 + width1, y1 + height1, x1 + width1, y1 + height1 - radius1);\n  roundedRectShape2.lineTo(x1 + width1, y1 + radius1);\n  roundedRectShape2.quadraticCurveTo(x1 + width1, y1, x1 + width1 - radius1, y1);\n  roundedRectShape2.lineTo(x1 + radius1, y1);\n  roundedRectShape2.quadraticCurveTo(x1, y1, x1, y1 + radius1);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: 0.03,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const backGeometry = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n  const back = new Three.Mesh(backGeometry, WoodMaterial);\n  back.rotation.x += Math.PI / 2;\n  back.position.z += 0.5 * 12 / 8;\n  back.position.y += 0.03;\n  back.position.x += -0.025;\n\n  chair.add(back);\n  chair.add(plane);\n  chair.add(leg1);\n  chair.add(leg2);\n  chair.add(leg3);\n  chair.add(leg4);\n  chair.add(leg5);\n  chair.add(leg6);\n\n  return chair\n}\n\nexport default defineCatalogElement({\n  name: \"sedia\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'wood'],\n    title: \"chair\",\n    description: \"chair\",\n    image: require('./chair.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /************** lod max *********************/\n\n    const chair1 = new Three.Object3D();\n    chair1.add(objectMaxLOD.clone());\n\n    const aa = new Three.Box3().setFromObject(chair1);\n\n    const deltaX = Math.abs(aa.max.x - aa.min.x);\n    const deltaY = Math.abs(aa.max.y - aa.min.y);\n    const deltaZ = Math.abs(aa.max.z - aa.min.z);\n\n    chair1.rotation.x += -Math.PI / 2;\n    chair1.position.y += newAltitude;\n    chair1.position.x += -WIDTH / 3.5;\n    chair1.position.z += DEPTH / 4;\n    chair1.scale.set(1.5 * WIDTH / deltaZ, DEPTH / 1.5 / deltaX, HEIGHT / deltaY);\n\n    /************** lod min *********************/\n\n    const chair0 = new Three.Object3D();\n    chair0.add(objectMinLOD.clone());\n    chair0.rotation.x += -Math.PI / 2;\n    chair0.position.y += newAltitude;\n    chair0.position.x += -WIDTH / 3.5;\n    chair0.position.z += DEPTH / 4;\n    chair0.scale.set(1.5 * WIDTH / deltaZ, DEPTH / 1.5 / deltaX, HEIGHT / deltaY);\n\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(chair1, 200);\n    lod.addLevel(chair0, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","import React from 'react';\nimport * as Three from 'three';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\n// TODO: better scaling\n\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst green = new Three.MeshLambertMaterial({ color: 0x348781 });\nconst red = new Three.MeshLambertMaterial({ color: 0xFF0000 });\nconst turquoise = new Three.MeshLambertMaterial({ color: 0x43C6DB, opacity: 0.7, transparent: true });\nconst metalBlue = new Three.MeshLambertMaterial({ color: 0xB7CEEC });\nconst metalBlueGrey = new Three.MeshLambertMaterial({ color: 0x566D7E });\n\nfunction makePanicDoor(handleSide: boolean) {\n  const panicDoor = new Three.Mesh();\n  const leftDoor = makeDoorStructure();\n  const handle = makeHandle(handleSide);\n  const leftDoorPivot = makePivot();\n  const rightDoorPivot = makePivot();\n  const safetyHandleLeft = makeSafetyHandle();\n  const safetyHandleRight = makeSafetyHandle();\n  const hilt = makeLock();\n  const doorLock = makeDoorLock();\n  hilt.position.set(-0.05, -0.02, 0.03);\n  handle.position.set(-0.47 / 2, 0.85 / 2, -0.03);\n\n  if (handleSide) {\n    leftDoorPivot.position.set(0.595 / 2, 0, -0.06 / 2);\n  } else {\n    leftDoorPivot.position.set(-0.595 / 2, 0, -0.06 / 2);\n  }\n  rightDoorPivot.position.set(0.6 / 2, 0, 0.077 / 2);\n  safetyHandleLeft.position.set(0, 0.4, 0.06 / 2);\n  safetyHandleRight.position.set(0, 0.4, -0.062 / 2);\n  handle.add(hilt);\n  leftDoor.add(handle);\n  leftDoor.add(safetyHandleLeft);\n  leftDoor.add(leftDoorPivot);\n  panicDoor.add(leftDoor);\n  leftDoor.add(doorLock);\n\n  return panicDoor\n}\n\nfunction makeDoorLock() {\n  const DoorLock = new Three.Object3D();\n  const doorLockGeometry1 = new Three.CylinderGeometry(0.012, 0.012, 1.905, Math.round(32));\n  const doorLockGeometry2 = new Three.CylinderGeometry(0.007, 0.007, 1.907, Math.round(32));\n  const doorLock1 = new Three.Mesh(doorLockGeometry1, metalBlue);\n  const doorLock2 = new Three.Mesh(doorLockGeometry2, metalBlueGrey);\n  DoorLock.position.set(-0.275, 0.7 / 2, 0);\n  DoorLock.scale.x = 1 / 1.3;\n  doorLock1.add(doorLock2);\n  DoorLock.add(doorLock1);\n\n  return DoorLock;\n}\n\nfunction makeLock() {\n  const mechanism = new Three.Object3D();\n  const BaseGeometry = new Three.BoxGeometry(0.01, 0.1, 0.02);\n  const PieceGeometry1 = new Three.BoxGeometry(0.01, 0.02, 0.01);\n  const PieceGeometry2 = new Three.BoxGeometry(0.006, 0.04, 0.008);\n  const base = new Three.Mesh(BaseGeometry, metalBlue);\n  const piece1 = new Three.Mesh(PieceGeometry1, metalBlueGrey);\n  const piece2 = new Three.Mesh(PieceGeometry2, metalBlueGrey);\n  piece1.position.set(-0.008 / 2, 0.03, 0);\n  piece2.position.y = -0.05;\n  piece1.add(piece2);\n  base.add(piece1);\n  mechanism.add(base);\n\n  return mechanism;\n}\n\nfunction makeSafetyHandle() {\n  const handle = new Three.Object3D();\n  const HandleSupportGeometry = new Three.BoxGeometry(0.5, 0.1, 0.005);\n  const PushGeometry = new Three.CylinderGeometry(0.04, 0.04, 0.48, Math.round(32));\n  const CoverPushGeometry = new Three.CylinderGeometry(0.042, 0.042, 0.01, Math.round(32));\n  const handleSupport = new Three.Mesh(HandleSupportGeometry, black);\n  const PushButton = new Three.Mesh(PushGeometry, red);\n  const CoverPush1 = new Three.Mesh(CoverPushGeometry, black);\n  const CoverPush2 = new Three.Mesh(CoverPushGeometry, black);\n  handleSupport.position.z = 0.005 / 2;\n  PushButton.rotation.z = Math.PI / 2;\n  CoverPush1.position.y = 0.48 / 2 + 0.01 / 2;\n  CoverPush2.position.y = -0.48 / 2 - 0.01 / 2;\n  PushButton.add(CoverPush1);\n  PushButton.add(CoverPush2);\n  handleSupport.add(PushButton);\n  handle.add(handleSupport);\n\n  return handle;\n}\n\nfunction makePivot() {\n  const DoorPivot = new Three.Object3D();\n  const DownPivotGeometry = new Three.CylinderGeometry(0.009, 0.009, 0.04, Math.round(32));\n  const UpPivotGeometry = new Three.CylinderGeometry(0.01, 0.01, 0.04, Math.round(32));\n  const downPivot1 = new Three.Mesh(DownPivotGeometry, green);\n  const upPivot1 = new Three.Mesh(UpPivotGeometry, green);\n  const downPivot2 = new Three.Mesh(DownPivotGeometry, green);\n  const upPivot2 = new Three.Mesh(UpPivotGeometry, green);\n  downPivot1.position.y = -0.4;\n  upPivot1.position.y = 0.04;\n  downPivot2.position.y = 1;\n  upPivot2.position.y = 0.04;\n  downPivot2.add(upPivot2);\n  downPivot1.add(upPivot1);\n  DoorPivot.add(downPivot2);\n  DoorPivot.add(downPivot1);\n\n  return DoorPivot;\n}\n\nfunction makeHandle(handleSide_value: boolean) {\n  const handle = new Three.Object3D();\n  const handleBase = makeHandleBase(handleSide_value);\n  const hilt = makeHilt();\n  hilt.rotation.x = Math.PI / 2;\n\n  if (handleSide_value) {\n    hilt.position.set(0, 0.04, -0.03 / 2 - 0.01 / 2);\n  } else {\n    hilt.position.set(0.4, 0.04, -0.03 / 2 - 0.01 / 2);\n    hilt.rotation.y = Math.PI;\n  }\n  handle.add(handleBase);\n  handle.add(hilt);\n  handle.scale.set(1.1, 1.1, 1.1);\n  return handle;\n}\n\nfunction makeHilt() {\n  const hilt = new Three.Object3D();\n  const Geometry_p1 = new Three.CylinderGeometry(0.01, 0.01, 0.03, Math.round(32));\n  const Geometry_p2 = new Three.SphereGeometry(0.01, Math.round(32), Math.round(32));\n  const Geometry_p3 = new Three.CylinderGeometry(0.01, 0.01, 0.07, Math.round(32));\n  const piece1 = new Three.Mesh(Geometry_p1, black);\n  const piece2 = new Three.Mesh(Geometry_p2, black);\n  const piece3 = new Three.Mesh(Geometry_p3, black);\n  const piece4 = new Three.Mesh(Geometry_p2, black);\n  piece3.rotation.z = Math.PI / 2;\n  piece3.position.x = 0.07 / 2;\n  piece2.position.y = -0.03 / 2;\n  piece4.position.y = -0.07 / 2;\n  piece3.add(piece4);\n  piece2.add(piece3);\n  piece1.add(piece2);\n  hilt.add(piece1);\n\n  return hilt;\n}\n\nfunction makeHandleBase(handleSide_value: boolean) {\n  const base = new Three.Object3D();\n  const BaseGeometry1 = new Three.BoxGeometry(0.038, 0.14, 0.01);\n  const BaseGeometry2 = new Three.CylinderGeometry(0.023, 0.023, 0.01, Math.round(32));\n  const lock = makeLockKey();\n  const base1 = new Three.Mesh(BaseGeometry1, black);\n  const base2 = new Three.Mesh(BaseGeometry2, black);\n  lock.rotation.x = Math.PI / 2;\n  base2.rotation.x = Math.PI / 2;\n  lock.position.y = -0.03;\n  base2.position.y = -0.033;\n  if (!handleSide_value)\n    base1.position.x = 0.4;\n  base2.scale.z = 1.5;\n  base1.add(lock);\n  base1.add(base2);\n  base.add(base1);\n  return base;\n}\n\nfunction makeLockKey() {\n  const Lock = new Three.Object3D();\n  const geometry1 = new Three.CylinderGeometry(0.005, 0.005, 0.02, Math.round(32));\n  const geometry2 = new Three.BoxGeometry(0.008, 0.02, 0.02);\n  const geometry3 = new Three.BoxGeometry(0.007, 0.0203, 0.0018);\n  const LockPiece1 = new Three.Mesh(geometry1, metalBlue);\n  const LockPiece2 = new Three.Mesh(geometry2, metalBlue);\n  const LockPiece3 = new Three.Mesh(geometry3, metalBlueGrey);\n  LockPiece2.position.z = 0.01;\n  LockPiece1.add(LockPiece2);\n  LockPiece1.add(LockPiece3);\n  Lock.add(LockPiece1);\n\n  return Lock;\n}\n\nfunction makeDoorStructure() {\n  const door = new Three.Object3D();\n  const lowBaseDoorGeometry = new Three.BoxGeometry(0.6, 1.2, 0.01);\n  const middleBaseDoorGeometry = new Three.BoxGeometry(0.2, 0.7, 0.01);\n  const highBaseDoorGeometry = new Three.BoxGeometry(0.2, 0.2, 0.01);\n  const BorderCoverDoorGeometry1 = new Three.CylinderGeometry(0.005, 0.005, 1.9, Math.round(32));\n  const BorderCoverDoorGeometry2 = new Three.BoxGeometry(0.03, 1.9, 0.01);\n  const MiddleDoorGeometry2 = new Three.BoxGeometry(0.2, 0.7, 0.06);\n  const MiddleDoorGeometry1 = new Three.BoxGeometry(0.19, 0.7, 0.06);\n  const HighDoorGeometry = new Three.BoxGeometry(0.2, 0.2, 0.06);\n  const glassGeometry = new Three.BoxGeometry(0.2, 0.5, 0.05);\n  const LowDoorGeometry = new Three.BoxGeometry(0.59, 1.2, 0.06);\n  const glassCoverVertical = new Three.BoxGeometry(0.01, 0.52, 0.064);\n  const glassCoverHorizontal = new Three.BoxGeometry(0.224, 0.01, 0.064);\n  const lowCoverDoor = new Three.Mesh(lowBaseDoorGeometry, green);\n  const middleDoor1 = new Three.Mesh(MiddleDoorGeometry1, green);\n  const middleDoor2 = new Three.Mesh(MiddleDoorGeometry2, green);\n  const baseDoor = new Three.Mesh(LowDoorGeometry, green);\n  const middleCoverDoor1 = new Three.Mesh(middleBaseDoorGeometry, green);\n  const middleCoverDoor2 = new Three.Mesh(middleBaseDoorGeometry, green);\n  const highCoverDoor = new Three.Mesh(highBaseDoorGeometry, green);\n  const highDoor = new Three.Mesh(HighDoorGeometry, green);\n  const borderCoverDoor1 = new Three.Mesh(BorderCoverDoorGeometry1, green);\n  const borderCoverDoor2 = new Three.Mesh(BorderCoverDoorGeometry2, green);\n  const glass = new Three.Mesh(glassGeometry, turquoise);\n  const glassVerticalCover1 = new Three.Mesh(glassCoverVertical, green);\n  const glassVerticalCover2 = new Three.Mesh(glassCoverVertical, green);\n  const glassHorizontalCover1 = new Three.Mesh(glassCoverHorizontal, green);\n  const glassHorizontalCover2 = new Three.Mesh(glassCoverHorizontal, green);\n  lowCoverDoor.position.set(-(0.6 - 0.59) / 2, 0, -0.05 / 2);\n  middleCoverDoor1.position.set(-0.2, 1.2 / 2 + 0.7 / 2, 0);\n  middleCoverDoor2.position.set(0.2, 1.2 / 2 + 0.7 / 2, 0);\n  highCoverDoor.position.set(0, (0.5 + 0.2) / 2, -0.05 / 2);\n  highDoor.position.set(0, (0.5 + 0.2) / 2, -0.05 / 2 + 0.05 / 2);\n  glass.position.set(-0.01 / 2, 1.2 / 2 + 0.5 / 2, 0);\n  middleDoor2.position.z = 0.05 / 2;\n  middleDoor1.position.set(0.005, 0, 0.05 / 2);\n  borderCoverDoor1.position.set(-0.6 / 2, 0.7 / 2, 0);\n  glassVerticalCover1.position.x = 0.2 / 2 + 0.014 / 2;\n  glassVerticalCover2.position.x = -0.2 / 2 - 0.014 / 2;\n  glassHorizontalCover1.position.y = 0.5 / 2 + 0.014 / 2;\n  glassHorizontalCover2.position.y = -0.5 / 2 - 0.014 / 2;\n  borderCoverDoor2.position.set(0.02 / 2, 0, -0.01 / 2);\n  borderCoverDoor1.add(borderCoverDoor2);\n  glass.add(highCoverDoor);\n  glass.add(glassVerticalCover1);\n  glass.add(glassVerticalCover2);\n  glass.add(glassHorizontalCover1);\n  glass.add(glassHorizontalCover2);\n  glass.add(highCoverDoor);\n  glass.add(highDoor);\n  baseDoor.add(glass);\n  middleCoverDoor1.add(middleDoor1);\n  middleCoverDoor2.add(middleDoor2);\n  lowCoverDoor.add(borderCoverDoor1);\n  lowCoverDoor.add(middleCoverDoor1);\n  lowCoverDoor.add(middleCoverDoor2);\n  baseDoor.add(lowCoverDoor);\n  door.add(baseDoor);\n  door.scale.x = 1.3;\n  return door;\n}\n\nexport default defineCatalogElement({\n  name: 'panic door',\n  prototype: 'holes',\n\n  info: {\n    tag: ['door'],\n    title: 'panic door',\n    description: 'iron door',\n    image: require('./panicDoor.png')\n  },\n\n  properties: {\n    width: {\n      label: 'width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 100\n      }\n    },\n    height: {\n      label: 'height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 215\n      }\n    },\n    thickness: {\n      label: 'thickness',\n      type: 'length-measure',\n      defaultValue: {\n        length: 30\n      }\n    },\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    },\n    flip_horizontal: {\n      label: 'horizontal flip',\n      type: 'checkbox',\n      defaultValue: true,\n      values: {\n        'none': false,\n        'yes': true,\n      }\n    },\n    flip_vertical: {\n      label: 'vertical flip',\n      type: 'checkbox',\n      defaultValue: true,\n      values: {\n        'left': false,\n        'right': true,\n      }\n    },\n  },\n\n  render2D: function (element, layer, scene) {\n    const STYLE_HOLE_BASE = { stroke: '#ff0000', strokeWidth: '3px', fill: '#ff0000' };\n    const STYLE_HOLE_SELECTED = { stroke: '#ff0000', strokeWidth: '4px', fill: '#ff0000', cursor: 'move' };\n    const STYLE_ARC_BASE = { stroke: '#ff0000', strokeWidth: '3px', strokeDasharray: '5,5', fill: 'none' };\n    const STYLE_ARC_SELECTED = { stroke: '#ff0000', strokeWidth: '4px', strokeDasharray: '5,5', fill: 'none', cursor: 'move' };\n\n    const epsilon = 3;\n\n    const flip_horizontal = element.properties.flip_horizontal;\n    const handleSide = element.properties.flip_vertical;\n    const holeWidth = element.properties.width.length;\n    const holePath = `M${0} ${-epsilon}  L${holeWidth} ${-epsilon}  L${holeWidth} ${epsilon}  L${0} ${epsilon}  z`;\n    const arcPath = `M${0},${0}  A${holeWidth},${holeWidth} 0 0,1 ${holeWidth},${holeWidth}`;\n    const holeStyle = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE;\n    const arcStyle = element.selected ? STYLE_ARC_SELECTED : STYLE_ARC_BASE;\n    const length = element.properties.width.length;\n\n    let scaleX, scaleY;\n    let rotateAngle;\n    let tX, tY;\n    let pX1, pX2, pY1, pY2;\n\n    const handleSide_value = handleSide ? 'right' : 'left';\n\n    if (flip_horizontal) {\n      scaleX = 1;\n      if (handleSide_value === 'right') {\n        tX = holeWidth;\n        tY = -holeWidth;\n        pX1 = -holeWidth;\n        pY1 = 0;\n        pX2 = -holeWidth;\n        pY2 = holeWidth;\n        rotateAngle = 180;\n        scaleY = -1;\n      }\n      else {\n        tX = 0;\n        tY = -holeWidth;\n        pX1 = 0;\n        pY1 = 0;\n        pX2 = 0;\n        pY2 = -holeWidth;\n        scaleY = 1;\n        rotateAngle = 0;\n      }\n    } else {\n      scaleX = -1;\n      if (handleSide_value === 'left') {\n        tX = holeWidth;\n        tY = 0;\n        pX1 = 0;\n        pY1 = 0;\n        pX2 = 0;\n        pY2 = -holeWidth;\n        rotateAngle = -90;\n        scaleY = -1;\n      }\n      else {\n        tX = 0;\n        tY = 0;\n        pX1 = holeWidth;\n        pY1 = 0;\n        pX2 = holeWidth;\n        pY2 = holeWidth;\n        rotateAngle = 90;\n        scaleY = 1;\n      }\n    }\n    return (\n      <g transform={`translate(${-element.properties.width.length / 2}, 0)`}>\n        <path key='1' d={arcPath} style={arcStyle}\n          transform={`translate(${tX},${tY}) scale(${scaleX},${scaleY}) rotate(${rotateAngle})`} />\n        <line key='2' x1={pX1} y1={pY1 - epsilon} x2={pX2} y2={pY2 - epsilon} style={holeStyle}\n          transform={`scale(${-scaleX},${scaleY})`} />\n        <path key='5' d={holePath} style={holeStyle} />\n      </g>\n    );\n  },\n\n  render3D: async function (element, layer, scene) {\n    const flip_horizontal = element.properties.flip_horizontal;\n    const handleSide = element.properties.flip_vertical;\n    const width = element.properties.width.length;\n    const height = element.properties.height.length;\n    const thickness = element.properties.thickness.length;\n    const newAltitude = element.properties.altitude.length;\n\n    const panicDoor = new Three.Object3D();\n    panicDoor.add(makePanicDoor(handleSide).clone());\n\n    if (element.selected) {\n      const boundingBox = new Three.BoxHelper(panicDoor, 0x99c3fb);\n      boundingBox.material.linewidth = 5;\n      boundingBox.renderOrder = 1000;\n      boundingBox.material.depthTest = false;\n      panicDoor.add(boundingBox);\n    }\n\n    const valuePosition = new Three.Box3().setFromObject(panicDoor);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    if (flip_horizontal) {\n      panicDoor.rotation.y += Math.PI;\n    }\n\n    panicDoor.position.y += newAltitude;\n    panicDoor.scale.set(width / deltaX, height / deltaY, thickness / deltaZ);\n\n    return panicDoor;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/cube/cube.png\";","module.exports = __webpack_public_path__ + \"catalog/items/toilet/toilet.png\";","module.exports = __webpack_public_path__ + \"catalog/items/bookcase/bookTexture2.jpg\";","module.exports = __webpack_public_path__ + \"catalog/holes/window-curtain/window.mtl\";","module.exports = __webpack_public_path__ + \"catalog/items/deskdouble/deskdouble.png\";","module.exports = __webpack_public_path__ + \"catalog/items/radiator-modern-style/ModernStyleRadiator.png\";","module.exports = __webpack_public_path__ + \"catalog/items/radiator-old-style/OldStyleRadiator.png\";","module.exports = __webpack_public_path__ + \"catalog/items/column-square/square_column.png\";","module.exports = __webpack_public_path__ + \"catalog/holes/door/door.png\";","module.exports = __webpack_public_path__ + \"catalog/items/kitchen/steel.jpg\";","module.exports = __webpack_public_path__ + \"catalog/areas/area/textures/tile1.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/smoke-detector/smokeDetector.png\";","module.exports = __webpack_public_path__ + \"catalog/holes/window-curtain/texture.png\";","module.exports = __webpack_public_path__ + \"catalog/holes/venetian-blind-window/texture.png\";","module.exports = __webpack_public_path__ + \"catalog/items/hiroos/hiroos.png\";","import React from 'react';\nimport * as Three from 'three';\nimport { loadObjWithMaterial } from '../../utils/load-obj';\nimport { Object3DEventMap, Group } from 'three';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nlet cached3DDoor: Group<Object3DEventMap>;\n\nconst STYLE_HOLE_BASE = { stroke: '#000', strokeWidth: '3px', fill: '#000' } as const;\nconst STYLE_HOLE_SELECTED = { stroke: '#0096fd', strokeWidth: '4px', fill: '#0096fd', cursor: 'move' } as const;\nconst STYLE_ARC_BASE = { stroke: '#000', strokeWidth: '3px', strokeDasharray: '5,5', fill: 'none' } as const;\nconst STYLE_ARC_SELECTED = { stroke: '#0096fd', strokeWidth: '4px', strokeDasharray: '5,5', fill: 'none', cursor: 'move' } as const;\nconst EPSILON = 3;\n\nexport default defineCatalogElement({\n  name: 'door',\n  prototype: 'holes',\n\n  info: {\n    title: 'door',\n    tag: ['door'],\n    description: 'Wooden door',\n    image: require('./door.png')\n  },\n\n  properties: {\n    width: {\n      label: 'Width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 80\n      }\n    },\n    height: {\n      label: 'Height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 215\n      }\n    },\n    altitude: {\n      label: 'Altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    },\n    thickness: {\n      label: 'Thickness',\n      type: 'length-measure',\n      defaultValue: {\n        length: 30\n      }\n    },\n    flip_orizzontal: {\n      label: 'flip orizzontale',\n      type: 'checkbox',\n      defaultValue: false,\n      values: {\n        'none': false,\n        'yes': true\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const flip = element.properties.flip_orizzontal;\n    const holeWidth = element.properties.width.length;\n    const holePath = `M${0} ${-EPSILON}  L${holeWidth} ${-EPSILON}  L${holeWidth} ${EPSILON}  L${0} ${EPSILON}  z`;\n    const arcPath = `M${0},${0}  A${holeWidth},${holeWidth} 0 0,1 ${holeWidth},${holeWidth}`;\n    const holeStyle = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE;\n    const arcStyle = element.selected ? STYLE_ARC_SELECTED : STYLE_ARC_BASE;\n    const length = element.properties.width.length;\n\n    if (flip == false) {\n      return (\n        <g transform={`translate(${-length / 2}, 0)`}>\n          <path d={arcPath} style={arcStyle} transform={`translate(${0},${holeWidth}) scale(${1},${-1}) rotate(${0})`} />\n          <line x1={0} y1={holeWidth - EPSILON} x2={0} y2={0 - EPSILON} style={holeStyle} transform={`scale(${-1},${1})`} />\n          <path d={holePath} style={holeStyle} />\n        </g>\n      )\n    }\n    else {\n      return (\n        <g transform={`translate(${-length / 2}, 0)`}>\n          <path d={arcPath} style={arcStyle} transform={`translate(${0},${-holeWidth}) scale(${1},${1}) rotate(${0})`} />\n          <line x1={0} y1={-holeWidth - EPSILON} x2={0} y2={0 - EPSILON} style={holeStyle} transform={`scale(${-1},${1})`} />\n          <path d={holePath} style={holeStyle} />\n        </g>\n      )\n    }\n  },\n\n  render3D: async function (element, layer, scene) {\n    const onLoadItem = (object: Group<Object3DEventMap>) => {\n      const boundingBox = new Three.Box3().setFromObject(object);\n\n      const initialWidth = boundingBox.max.x - boundingBox.min.x;\n      const initialHeight = boundingBox.max.y - boundingBox.min.y;\n      const initialThickness = boundingBox.max.z - boundingBox.min.z;\n\n      if (element.selected) {\n        const box = new Three.BoxHelper(object, 0x99c3fb);\n        box.material.linewidth = 2;\n        box.material.depthTest = false;\n        box.renderOrder = 1000;\n        object.add(box);\n      }\n\n      const width = element.properties.width.length;\n      const height = element.properties.height.length;\n      const thickness = element.properties.thickness.length;\n\n      object.scale.set(width / initialWidth, height / initialHeight,\n        thickness / initialThickness);\n\n      return object;\n    };\n\n    if (cached3DDoor) {\n      return onLoadItem(cached3DDoor.clone());\n    }\n\n    const mtl = require('./door.mtl');\n    const obj = require('./door.obj');\n    const img = require('./texture.jpg');\n    const resourcePath = img.substr(0, img.lastIndexOf(\"/\")) + \"/\";\n\n    cached3DDoor = await loadObjWithMaterial(mtl, obj, resourcePath);\n    return onLoadItem(cached3DDoor.clone());\n  }\n});\n","import { defineCatalogElement } from '@archef2000/react-planner';\nimport React from 'react';\nimport * as Three from 'three';\n\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst green = new Three.MeshLambertMaterial({ color: 0x348781 });\nconst red = new Three.MeshLambertMaterial({ color: 0xFF0000 });\nconst turquoise = new Three.MeshLambertMaterial({ color: 0x43C6DB, opacity: 0.7, transparent: true });\nconst metalBlue = new Three.MeshLambertMaterial({ color: 0xB7CEEC });\nconst darkGrey = new Three.MeshLambertMaterial({ color: 0x313131 });\nconst darkGrey2 = new Three.MeshLambertMaterial({ color: 0x212121 });\nconst metalBlueGrey = new Three.MeshLambertMaterial({ color: 0x566D7E });\n\nfunction makePanicDoor() {\n  const panicDoorDouble = new Three.Mesh();\n  const doorLeft = makeDoorStructure();\n  const doorRight = makeDoorStructure();\n  const handle = makeHandle();\n  const doorLeftPivot = makePivot();\n  const doorRightPivot = makePivot();\n  const safetyHandleLeft = makeSafetyHandle();\n  const safetyHandleRight = makeSafetyHandle();\n  const lock = makeLock();\n  const doorLockLeft = makeDoorLock();\n  const doorLockRight = makeDoorLock();\n  lock.position.set(-0.05, -0.02, 0.03);\n  handle.position.set(-0.47 / 2, 0.85 / 2, -0.03);\n  doorLeftPivot.position.set(0.595 / 2, 0, -0.06 / 2);\n  doorRightPivot.position.set(0.6 / 2, 0, 0.077 / 2);\n  doorRight.rotation.y = Math.PI;\n  doorRight.position.set(-0.35 / 2 - 0.084, 0, 0.0043);\n  doorLeft.position.set(0.35 / 2 + 0.084, 0, -0.0043);\n  safetyHandleLeft.position.set(0, 0.4, 0.06 / 2);\n  safetyHandleRight.position.set(0, 0.4, -0.062 / 2);\n  handle.add(lock);\n  doorLeft.add(handle);\n  doorLeft.add(safetyHandleLeft);\n  doorRight.add(safetyHandleRight);\n  doorLeft.add(doorLeftPivot);\n  panicDoorDouble.add(doorLeft);\n  doorRight.add(doorRightPivot);\n  doorLeft.add(doorLockLeft);\n  doorRight.add(doorLockRight);\n  panicDoorDouble.add(doorRight);\n\n  return panicDoorDouble\n}\n\nfunction makeDoorLock() {\n  const block = new Three.Object3D();\n  const DoorLockGeometry1 = new Three.CylinderGeometry(0.012, 0.012, 1.905, Math.round(32));\n  const DoorLockGeometry2 = new Three.CylinderGeometry(0.007, 0.007, 1.907, Math.round(32));\n  const DoorLock1 = new Three.Mesh(DoorLockGeometry1, metalBlue);\n  const DoorLock2 = new Three.Mesh(DoorLockGeometry2, metalBlueGrey);\n  block.position.set(-0.275, 0.7 / 2, 0);\n  block.scale.x = 1 / 1.3;\n  DoorLock1.add(DoorLock2);\n  block.add(DoorLock1);\n\n  return block;\n}\n\nfunction makeLock() {\n  const mechanism = new Three.Object3D();\n  const BaseGeometry = new Three.BoxGeometry(0.01, 0.1, 0.02);\n  const FirstBlockGeometry = new Three.BoxGeometry(0.01, 0.02, 0.01);\n  const SecondBlockGeometry = new Three.BoxGeometry(0.006, 0.04, 0.008);\n  const base = new Three.Mesh(BaseGeometry, metalBlue);\n  const FirstBlock = new Three.Mesh(FirstBlockGeometry, metalBlueGrey);\n  const SecondBlock = new Three.Mesh(SecondBlockGeometry, metalBlueGrey);\n  FirstBlock.position.set(-0.008 / 2, 0.03, 0);\n  SecondBlock.position.y = -0.05;\n  FirstBlock.add(SecondBlock);\n  base.add(FirstBlock);\n  mechanism.add(base);\n\n  return mechanism;\n}\n\nfunction makeSafetyHandle() {\n  const handle = new Three.Object3D();\n  const handleSupportGeometry = new Three.BoxGeometry(0.5, 0.1, 0.005);\n  const PushButtonGeometry = new Three.CylinderGeometry(0.04, 0.04, 0.48, Math.round(32));\n  const PushButtonCoverGeometry = new Three.CylinderGeometry(0.042, 0.042, 0.01, Math.round(32));\n  const handleSupport = new Three.Mesh(handleSupportGeometry, black);\n  const pushButton = new Three.Mesh(PushButtonGeometry, red);\n  const pushButtonCover1 = new Three.Mesh(PushButtonCoverGeometry, black);\n  const pushButtonCover2 = new Three.Mesh(PushButtonCoverGeometry, black);\n  handleSupport.position.z = 0.005 / 2;\n  pushButton.rotation.z = Math.PI / 2;\n  pushButtonCover1.position.y = 0.48 / 2 + 0.01 / 2;\n  pushButtonCover2.position.y = -0.48 / 2 - 0.01 / 2;\n  pushButton.add(pushButtonCover1);\n  pushButton.add(pushButtonCover2);\n  handleSupport.add(pushButton);\n  handle.add(handleSupport);\n\n  return handle;\n}\n\nfunction makePivot() {\n  const DoorPivot = new Three.Object3D();\n  const DownPivotGeometry = new Three.CylinderGeometry(0.009, 0.009, 0.04, Math.round(32));\n  const UpPivotGeometry = new Three.CylinderGeometry(0.01, 0.01, 0.04, Math.round(32));\n  const downPivot1 = new Three.Mesh(DownPivotGeometry, green);\n  const upPivot1 = new Three.Mesh(UpPivotGeometry, green);\n  const downPivot2 = new Three.Mesh(DownPivotGeometry, green);\n  const upPivot2 = new Three.Mesh(UpPivotGeometry, green);\n  downPivot1.position.y = -0.4;\n  upPivot1.position.y = 0.04;\n  downPivot2.position.y = 1;\n  upPivot2.position.y = 0.04;\n  downPivot2.add(upPivot2);\n  downPivot1.add(upPivot1);\n  DoorPivot.add(downPivot2);\n  DoorPivot.add(downPivot1);\n\n  return DoorPivot;\n}\n\nfunction makeHandle() {\n  const handle = new Three.Object3D();\n  const handleBase = makeHandleBase();\n  const hilt = makeHilt();\n  hilt.rotation.x = Math.PI / 2;\n  hilt.position.set(0, 0.04, -0.03 / 2 - 0.01 / 2);\n  handle.add(handleBase);\n  handle.add(hilt);\n  handle.scale.set(1.1, 1.1, 1.1);\n\n  return handle;\n}\n\nfunction makeHilt() {\n  const hilt = new Three.Object3D();\n  const GeometryPiece1 = new Three.CylinderGeometry(0.01, 0.01, 0.03, Math.round(32));\n  const GeometryPiece2 = new Three.SphereGeometry(0.01, Math.round(32), Math.round(32));\n  const GeometryPiece3 = new Three.CylinderGeometry(0.01, 0.01, 0.07, Math.round(32));\n  const piece1 = new Three.Mesh(GeometryPiece1, black);\n  const piece2 = new Three.Mesh(GeometryPiece2, black);\n  const piece3 = new Three.Mesh(GeometryPiece3, black);\n  const piece4 = new Three.Mesh(GeometryPiece2, black);\n  piece3.rotation.z = Math.PI / 2;\n  piece3.position.x = 0.07 / 2;\n  piece2.position.y = -0.03 / 2;\n  piece4.position.y = -0.07 / 2;\n  piece3.add(piece4);\n  piece2.add(piece3);\n  piece1.add(piece2);\n  hilt.add(piece1);\n\n  return hilt;\n}\n\nfunction makeHandleBase() {\n  const base = new Three.Object3D();\n  const BaseGeometry1 = new Three.BoxGeometry(0.038, 0.14, 0.01);\n  const BaseGeometry2 = new Three.CylinderGeometry(0.023, 0.023, 0.01, Math.round(32));\n  const lock = makeLockKey();\n  const base1 = new Three.Mesh(BaseGeometry1, black);\n  const base2 = new Three.Mesh(BaseGeometry2, black);\n  lock.rotation.x = Math.PI / 2;\n  lock.position.y = -0.03;\n  base2.rotation.x = Math.PI / 2;\n  base2.position.y = -0.033;\n  base2.scale.z = 1.5;\n  base1.add(lock);\n  base1.add(base2);\n  base.add(base1);\n\n  return base;\n}\n\nfunction makeLockKey() {\n  const lock = new Three.Object3D();\n  const geometryLock1 = new Three.CylinderGeometry(0.005, 0.005, 0.02, Math.round(32));\n  const geometryLock2 = new Three.BoxGeometry(0.008, 0.02, 0.02);\n  const geometryLock3 = new Three.BoxGeometry(0.007, 0.0203, 0.0018);\n  const lockPiece1 = new Three.Mesh(geometryLock1, metalBlue);\n  const lockPiece2 = new Three.Mesh(geometryLock2, metalBlue);\n  const lockPiece3 = new Three.Mesh(geometryLock3, metalBlueGrey);\n  lockPiece2.position.z = 0.01;\n  lockPiece1.add(lockPiece2);\n  lockPiece1.add(lockPiece3);\n  lock.add(lockPiece1);\n\n  return lock;\n}\n\nfunction makeDoorStructure() {\n  const door = new Three.Object3D();\n  const lowBaseDoorGeometry = new Three.BoxGeometry(0.6, 1.2, 0.01);\n  const middleBaseDoorGeometry = new Three.BoxGeometry(0.2, 0.7, 0.01);\n  const highBaseDoorGeometry = new Three.BoxGeometry(0.2, 0.2, 0.01);\n  const BorderCoverDoorGeometry1 = new Three.CylinderGeometry(0.005, 0.005, 1.9, Math.round(32));\n  const BorderCoverDoorGeometry2 = new Three.BoxGeometry(0.03, 1.9, 0.01);\n  const MiddleDoorGeometry2 = new Three.BoxGeometry(0.2, 0.7, 0.06);\n  const MiddleDoorGeometry1 = new Three.BoxGeometry(0.19, 0.7, 0.06);\n  const HighDoorGeometry = new Three.BoxGeometry(0.2, 0.2, 0.06);\n  const glassGeometry = new Three.BoxGeometry(0.2, 0.5, 0.05);\n  const LowDoorGeometry = new Three.BoxGeometry(0.59, 1.2, 0.06);\n  const glassCoverVertical = new Three.BoxGeometry(0.01, 0.52, 0.064);\n  const glassCoverHorizontal = new Three.BoxGeometry(0.224, 0.01, 0.064);\n  const lowCoverDoor = new Three.Mesh(lowBaseDoorGeometry, green);\n  const middleDoor1 = new Three.Mesh(MiddleDoorGeometry1, green);\n  const middleDoor2 = new Three.Mesh(MiddleDoorGeometry2, green);\n  const baseDoor = new Three.Mesh(LowDoorGeometry, green);\n  const middleCoverDoor1 = new Three.Mesh(middleBaseDoorGeometry, green);\n  const middleCoverDoor2 = new Three.Mesh(middleBaseDoorGeometry, green);\n  const highCoverDoor = new Three.Mesh(highBaseDoorGeometry, green);\n  const highDoor = new Three.Mesh(HighDoorGeometry, green);\n  const borderCoverDoor1 = new Three.Mesh(BorderCoverDoorGeometry1, green);\n  const borderCoverDoor2 = new Three.Mesh(BorderCoverDoorGeometry2, green);\n  const glass = new Three.Mesh(glassGeometry, turquoise);\n  const glassVerticalCover1 = new Three.Mesh(glassCoverVertical, green);\n  const glassVerticalCover2 = new Three.Mesh(glassCoverVertical, green);\n  const glassHorizontalCover1 = new Three.Mesh(glassCoverHorizontal, green);\n  const glassHorizontalCover2 = new Three.Mesh(glassCoverHorizontal, green);\n  lowCoverDoor.position.set(-(0.6 - 0.59) / 2, 0, -0.05 / 2);\n  middleCoverDoor1.position.set(-0.2, 1.2 / 2 + 0.7 / 2, 0);\n  middleCoverDoor2.position.set(0.2, 1.2 / 2 + 0.7 / 2, 0);\n  highCoverDoor.position.set(0, (0.5 + 0.2) / 2, -0.05 / 2);\n  highDoor.position.set(0, (0.5 + 0.2) / 2, -0.05 / 2 + 0.05 / 2);\n  glass.position.set(-0.01 / 2, 1.2 / 2 + 0.5 / 2, 0);\n  middleDoor2.position.z = 0.05 / 2;\n  middleDoor1.position.set(0.005, 0, 0.05 / 2);\n  borderCoverDoor1.position.set(-0.6 / 2, 0.7 / 2, 0);\n  glassVerticalCover1.position.x = 0.2 / 2 + 0.014 / 2;\n  glassVerticalCover2.position.x = -0.2 / 2 - 0.014 / 2;\n  glassHorizontalCover1.position.y = 0.5 / 2 + 0.014 / 2;\n  glassHorizontalCover2.position.y = -0.5 / 2 - 0.014 / 2;\n  borderCoverDoor2.position.set(0.02 / 2, 0, -0.01 / 2);\n  borderCoverDoor1.add(borderCoverDoor2);\n  glass.add(highCoverDoor);\n  glass.add(glassVerticalCover1);\n  glass.add(glassVerticalCover2);\n  glass.add(glassHorizontalCover1);\n  glass.add(glassHorizontalCover2);\n  glass.add(highCoverDoor);\n  glass.add(highDoor);\n  baseDoor.add(glass);\n  middleCoverDoor1.add(middleDoor1);\n  middleCoverDoor2.add(middleDoor2);\n  lowCoverDoor.add(borderCoverDoor1);\n  lowCoverDoor.add(middleCoverDoor1);\n  lowCoverDoor.add(middleCoverDoor2);\n  baseDoor.add(lowCoverDoor);\n  door.add(baseDoor);\n  door.scale.x = 0.9;\n\n  return door;\n}\n\nexport default defineCatalogElement({\n  name: 'double panic door',\n  prototype: 'holes',\n\n  info: {\n    tag: ['door'],\n    title: 'double panic door',\n    description: 'iron door',\n    image: require('./panicDoorDouble.png')\n  },\n\n  properties: {\n    width: {\n      label: 'width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 200\n      }\n    },\n    height: {\n      label: 'height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 215\n      }\n    },\n    thickness: {\n      label: 'thickness',\n      type: 'length-measure',\n      defaultValue: {\n        length: 30\n      }\n    },\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    },\n    flip_horizontal: {\n      label: 'flip',\n      type: 'checkbox',\n      defaultValue: false,\n      values: {\n        'none': false,\n        'yes': true\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const STYLE_HOLE_BASE = { stroke: '#ff0000', strokeWidth: '3px', fill: '#ff0000' };\n    const STYLE_HOLE_SELECTED = { stroke: '#ff0000', strokeWidth: '4px', fill: '#ff0000', cursor: 'move' };\n    const STYLE_ARC_BASE = { stroke: '#ff0000', strokeWidth: '3px', strokeDasharray: '5,5', fill: 'none' };\n    const STYLE_ARC_SELECTED = { stroke: '#ff0000', strokeWidth: '4px', strokeDasharray: '5,5', fill: 'none', cursor: 'move' };\n\n    const epsilon = 3;\n    const flip = element.properties.flip_horizontal;\n    const holeWidth = element.properties.width.length;\n    const holePath = `M${0} ${-epsilon}  L${holeWidth} ${-epsilon}  L${holeWidth} ${epsilon}  L${0} ${epsilon}  z`;\n    const arcPath = `M${0},${0}  A${holeWidth / 2},${holeWidth / 2} 0 0,1 ${holeWidth / 2},${holeWidth / 2}`;\n    const arcPath2 = `M${0},${0}  A${holeWidth / 2},${holeWidth / 2} 0 0,0 ${holeWidth / 2},${holeWidth / 2}`;\n    const holeStyle = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE;\n    const arcStyle = element.selected ? STYLE_ARC_SELECTED : STYLE_ARC_BASE;\n    const length = element.properties.width.length;\n\n    if (flip) {\n      return (\n        <g transform={`translate(${-element.properties.width.length / 2}, 0)`}>\n          <path key='1' d={arcPath} style={arcStyle} transform={`translate(${0},${-holeWidth / 2})`} />\n          <line key='2' x1={0} y1={0 - epsilon} x2={0} y2={-holeWidth / 2 - epsilon} style={holeStyle} />\n          <path key='3' d={arcPath2} style={arcStyle} transform={`translate(${holeWidth},${-holeWidth / 2}) rotate(90)`} />\n          <line key='4' x1={holeWidth} y1={0 - epsilon} x2={holeWidth} y2={-holeWidth / 2 - epsilon} style={holeStyle} />\n          <path key='5' d={holePath} style={holeStyle} />\n        </g>\n      )\n    }\n    else {\n      return (\n        <g transform={`translate(${-element.properties.width.length / 2}, 0)`}>\n          <path key='1' d={arcPath} style={arcStyle} transform={`translate(${holeWidth},${holeWidth / 2}) rotate(180)`} />\n          <line key='2' x1={0} y1={0 - epsilon} x2={0} y2={holeWidth / 2 - epsilon} style={holeStyle} />\n          <path key='3' d={arcPath2} style={arcStyle} transform={`translate(${0},${holeWidth / 2}) rotate(270)`} />\n          <line key='4' x1={holeWidth} y1={0 - epsilon} x2={holeWidth} y2={holeWidth / 2 - epsilon} style={holeStyle} />\n          <path key='5' d={holePath} style={holeStyle} />\n        </g>\n      )\n    }\n  },\n\n  async render3D(element, layer, scene) {\n    const flip = element.properties.flip_horizontal;\n    const width = element.properties.width.length;\n    const height = element.properties.height.length;\n    const thickness = element.properties.thickness.length;\n    const newAltitude = element.properties.altitude.length;\n\n    const panicDoorDouble = new Three.Object3D();\n    panicDoorDouble.add(makePanicDoor().clone());\n\n    const valuePosition = new Three.Box3().setFromObject(panicDoorDouble);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    if (element.selected) {\n      const boundingBox = new Three.BoxHelper(panicDoorDouble, 0x99c3fb);\n      boundingBox.material.linewidth = 5;\n      boundingBox.renderOrder = 1000;\n      boundingBox.material.depthTest = false;\n      panicDoorDouble.add(boundingBox);\n    }\n\n    if (flip) {\n      panicDoorDouble.rotation.y += Math.PI;\n    }\n\n    panicDoorDouble.position.y += newAltitude;\n    panicDoorDouble.scale.set(width / deltaX, height / deltaY, thickness / deltaZ);\n\n    return panicDoorDouble;\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 200;\nconst DEPTH = 20;\nconst HEIGHT = 40;\n\nexport default defineCatalogElement({\n  name: 'coat-hook',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'optional'],\n    title: 'Coat hook',\n    description: 'Coat hook',\n    image: require('./coat-hook.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 120\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' } as const;\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: '2px', fill: '#84e1ce' } as const;\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH} style={rect_style} />\n        <line key='2' x1={WIDTH / 2} x2={WIDTH / 2} y1={DEPTH} y2={1.5 * DEPTH} style={arrow_style} />\n        <line key='3' x1={.45 * WIDTH} x2={WIDTH / 2} y1={1.2 * DEPTH} y2={1.5 * DEPTH} style={arrow_style} />\n        <line key='4' x1={WIDTH / 2} x2={.55 * WIDTH} y1={1.5 * DEPTH} y2={1.2 * DEPTH} style={arrow_style} />\n        <text key='5' x='0' y='0'\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    const coatHook = new Three.Object3D();\n\n    const newWidth = 2.15;\n    const newDepth = .04;\n    const newHeight = .1;\n    const radius = .0125;\n\n    const texture = new Three.TextureLoader().load(require('./wood.jpg'));\n    const materialTexture = new Three.MeshLambertMaterial({ map: texture });\n\n    const geometry = new Three.BoxGeometry(newWidth, 1.5 * newHeight, newDepth);\n    //let material = new Three.MeshLambertMaterial( {color: 0x9b8c75} );\n    const plane = new Three.Mesh(geometry, materialTexture);\n    plane.position.y = newHeight / 2;\n    coatHook.add(plane);\n\n    const geometry_legs = new Three.CylinderGeometry(radius, radius, newHeight / 1.7, 32);\n    const material_legs = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n    const p1 = new Three.Mesh(geometry_legs, material_legs);\n    p1.rotation.x += Math.PI / 2;\n    p1.position.set(1, 0.05, 0.05);\n    coatHook.add(p1);\n\n    const p2 = new Three.Mesh(geometry_legs, material_legs);\n    p2.rotation.x += Math.PI / 2;\n    p2.position.set(-.95, 0.05, 0.05);\n    coatHook.add(p2);\n\n    const geometrySphereUp = new Three.SphereGeometry(0.035, 32, 32);\n    const sphere = new Three.Mesh(geometrySphereUp, material_legs);\n    sphere.position.set(1, 0.05, 0.08);\n    sphere.scale.set(1, 1, .5);\n    coatHook.add(sphere);\n\n    const sphere2 = new Three.Mesh(geometrySphereUp, material_legs);\n    sphere2.position.set(-.95, 0.05, 0.08);\n    sphere2.scale.set(1, 1, .5);\n    coatHook.add(sphere2);\n\n    const newHeight2 = .2;\n\n    const curve = new Three.CatmullRomCurve3([\n      new Three.Vector3(.05, 0.125, 0),\n      new Three.Vector3(.125, .025, 0),\n      new Three.Vector3(-.05, -.075, 0),\n    ]);\n\n    for (let i = -0.95; i <= 1.05; i += 0.15) {\n      const geometry_legs2 = new Three.CylinderGeometry(radius, radius, newHeight2, 32);\n      const p3 = new Three.Mesh(geometry_legs2, material_legs);\n      p3.position.set(i, -0.05, 0);\n      coatHook.add(p3);\n\n      const geometry3 = new Three.TubeGeometry(curve, 32, .015, 16, false);\n      const mesh3 = new Three.Mesh(geometry3, material_legs);\n      mesh3.position.set(i, -.05, .045);\n      mesh3.rotation.y -= Math.PI / 2;\n      mesh3.rotation.x += Math.PI + Math.PI / 7.5;\n      mesh3.rotation.z += Math.PI / 2;\n      coatHook.add(mesh3);\n\n      const geometrySphere = new Three.SphereGeometry(0.035, 32, 32);\n      const sphereTop = new Three.Mesh(geometrySphere, material_legs);\n      sphereTop.position.set(i, -0.142, 0.15);\n      sphereTop.rotation.x += Math.PI / 2 + Math.PI / 3;\n      coatHook.add(sphereTop);\n    }\n\n    const value = new Three.Box3().setFromObject(coatHook);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(coatHook, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      coatHook.add(bbox);\n    }\n\n    coatHook.rotation.y += Math.PI;\n    coatHook.position.y += HEIGHT / 1.5 + newAltitude;\n    coatHook.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    return coatHook;\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 80;\nconst DEPTH = 80;\nconst HEIGHT = 180;\n\nconst textureLoader = new Three.TextureLoader();\nconst logoTexture = textureLoader.load(require('./logo.jpg'));\nconst steelTexture = textureLoader.load(require('./steel.jpg'));\nconst logoMaterial = new Three.MeshLambertMaterial({ map: logoTexture });\nconst steel = new Three.MeshLambertMaterial({ map: steelTexture });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const fridge = new Three.Mesh();\n\n  //base\n  const base = new Three.Mesh(new Three.BoxGeometry(1, 0.05, 1), steel);\n  base.position.set(0, 0.15, 0);\n  fridge.add(base);\n\n  //foot\n  for (let gx = -0.45; gx <= 0.45; gx += 0.9) {\n    for (let gz = -0.45; gz <= 0.45; gz += 0.9) {\n      const foot = new Three.Mesh(new Three.CylinderGeometry(0.05, 0.05, 0.05, 4), steel);\n      foot.position.set(gx, -0.05, gz);\n      foot.rotation.y = 0.25 * Math.PI;\n      base.add(foot)\n    }\n  }\n\n  //back\n  const back = new Three.Mesh(new Three.BoxGeometry(0.05, 1.8, 1), steel);\n  back.position.set(0.475, 0.925, 0);\n  base.add(back);\n\n  //side\n  const side1 = new Three.Mesh(new Three.BoxGeometry(1, 1.8, 0.05), steel);\n  side1.position.set(0, 0.925, 0.475);\n  base.add(side1);\n\n  const side2 = new Three.Mesh(new Three.BoxGeometry(1, 1.8, 0.05), steel);\n  side2.position.set(0, 0.925, -0.475);\n  base.add(side2);\n\n  //top\n  const top = new Three.Mesh(new Three.BoxGeometry(1, 0.20, 1), steel);\n  top.position.set(0, 1.85, 0);\n  base.add(top);\n\n  //logo\n  const logo = new Three.Mesh(new Three.PlaneGeometry(0.2, 0.1), logoMaterial);\n  logo.position.set(-0.51, 1.85, 0);\n  logo.rotation.y = -0.5 * Math.PI;\n  base.add(logo);\n\n  //up door\n  const door1 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.9, 0.95), steel);\n  door1.position.set(-0.5, 1.30, 0);\n  base.add(door1);\n\n  //down door\n  const door2 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.8, 0.95), steel);\n  door2.position.set(-0.5, 0.425, 0);\n  base.add(door2);\n\n  //middle plane\n  const middlePlane = new Three.Mesh(new Three.BoxGeometry(1, 0.05, 1), steel);\n  middlePlane.position.set(0, 0.845, 0);\n  base.add(middlePlane);\n\n  //handle\n  const handle1_p1 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.8), steel);\n  handle1_p1.position.set(-0.56, 1.30, -0.4);\n  base.add(handle1_p1);\n\n  const handle1_p2 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), steel);\n  handle1_p2.position.set(-0.53, 1.60, -0.4);\n  handle1_p2.rotation.z = 0.5 * Math.PI;\n  base.add(handle1_p2);\n\n  const handle1_p3 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), steel);\n  handle1_p3.position.set(-0.53, 1, -0.4);\n  handle1_p3.rotation.z = 0.5 * Math.PI;\n  base.add(handle1_p3);\n\n  //handle\n  const handle2_p1 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.7), steel);\n  handle2_p1.position.set(-0.56, 0.425, -0.4);\n  base.add(handle2_p1);\n\n  const handle2_p2 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), steel);\n  handle2_p2.position.set(-0.53, 0.7, -0.4);\n  handle2_p2.rotation.z = 0.5 * Math.PI;\n  base.add(handle2_p2);\n\n  const handle2_p3 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), steel);\n  handle2_p3.position.set(-0.53, 0.15, -0.4);\n  handle2_p3.rotation.z = 0.5 * Math.PI;\n  base.add(handle2_p3);\n\n  return fridge\n}\n\nfunction makeObjectMinLOD() {\n  const fridge = new Three.Mesh();\n  //base\n  const base = new Three.Mesh(new Three.BoxGeometry(1, 0.05, 1), steel);\n  base.position.set(0, 0.15, 0);\n  fridge.add(base);\n\n  //foot\n  for (let gx = -0.45; gx <= 0.45; gx += 0.9) {\n    for (let gz = -0.45; gz <= 0.45; gz += 0.9) {\n      const foot = new Three.Mesh(new Three.CylinderGeometry(0.05, 0.05, 0.05, 4), steel);\n      foot.position.set(gx, -0.05, gz);\n      foot.rotation.y = 0.25 * Math.PI;\n      base.add(foot)\n    }\n  }\n\n  //back\n  const back = new Three.Mesh(new Three.BoxGeometry(0.05, 1.8, 1), steel);\n  back.position.set(0.475, 0.925, 0);\n  base.add(back);\n\n  //side\n  const side1 = new Three.Mesh(new Three.BoxGeometry(1, 1.8, 0.05), steel);\n  side1.position.set(0, 0.925, 0.475);\n  base.add(side1);\n\n  const side2 = new Three.Mesh(new Three.BoxGeometry(1, 1.8, 0.05), steel);\n  side2.position.set(0, 0.925, -0.475);\n  base.add(side2);\n\n  //top\n  const top = new Three.Mesh(new Three.BoxGeometry(1, 0.20, 1), steel);\n  top.position.set(0, 1.85, 0);\n  base.add(top);\n\n  //logo\n  const logo = new Three.Mesh(new Three.PlaneGeometry(0.2, 0.1), logoMaterial);\n  logo.position.set(-0.51, 1.85, 0);\n  logo.rotation.y = -0.5 * Math.PI;\n  base.add(logo);\n\n  //up door\n  const door1 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.9, 0.95), steel);\n  door1.position.set(-0.5, 1.30, 0);\n  base.add(door1);\n\n  //down door\n  const door2 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.8, 0.95), steel);\n  door2.position.set(-0.5, 0.425, 0);\n  base.add(door2);\n\n  //middle plane\n  const middlePlane = new Three.Mesh(new Three.BoxGeometry(1, 0.05, 1), steel);\n  middlePlane.position.set(0, 0.845, 0);\n  base.add(middlePlane);\n\n  //handle\n  const handle1_p1 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.8), steel);\n  handle1_p1.position.set(-0.56, 1.30, -0.4);\n  base.add(handle1_p1);\n\n  const handle1_p2 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), steel);\n  handle1_p2.position.set(-0.53, 1.60, -0.4);\n  handle1_p2.rotation.z = 0.5 * Math.PI;\n  base.add(handle1_p2);\n\n  const handle1_p3 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), steel);\n  handle1_p3.position.set(-0.53, 1, -0.4);\n  handle1_p3.rotation.z = 0.5 * Math.PI;\n  base.add(handle1_p3);\n\n  //handle\n  const handle2_p1 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.7), steel);\n  handle2_p1.position.set(-0.56, 0.425, -0.4);\n  base.add(handle2_p1);\n\n  const handle2_p2 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), steel);\n  handle2_p2.position.set(-0.53, 0.7, -0.4);\n  handle2_p2.rotation.z = 0.5 * Math.PI;\n  base.add(handle2_p2);\n\n  const handle2_p3 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), steel);\n  handle2_p3.position.set(-0.53, 0.15, -0.4);\n  handle2_p3.rotation.z = 0.5 * Math.PI;\n  base.add(handle2_p3);\n\n  return fridge\n}\n\nexport default defineCatalogElement({\n  name: \"fridge\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"fridge\",\n    description: \"fridge\",\n    image: require('./fridge.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /**************** lod max *******************/\n\n    const fridgeMaxLOD = new Three.Object3D();\n    fridgeMaxLOD.add(objectMaxLOD.clone());\n\n    const valuePosition = new Three.Box3().setFromObject(fridgeMaxLOD);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    fridgeMaxLOD.position.y += newAltitude;\n    fridgeMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**************** lod min *******************/\n\n    const fridgeMinLOD = new Three.Object3D();\n    fridgeMinLOD.add(objectMinLOD.clone());\n    fridgeMinLOD.position.y += newAltitude;\n    fridgeMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(fridgeMaxLOD, 200);\n    lod.addLevel(fridgeMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/recycling-bins/recycle.png\";","module.exports = __webpack_public_path__ + \"catalog/items/column/column.png\";","module.exports = __webpack_public_path__ + \"catalog/holes/panic-door-double/panicDoorDouble.png\";","module.exports = __webpack_public_path__ + \"catalog/items/projector/projector.png\";","module.exports = __webpack_public_path__ + \"catalog/lines/wall/textures/painted.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/monitor-pc/white.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/metal-detector/metalDetector.png\";","module.exports = __webpack_public_path__ + \"catalog/items/bookcase/bookTexture3.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/camera/camera.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 10;\nconst DEPTH = 20;\nconst HEIGHT = 20;\n\nconst grey = new Three.MeshLambertMaterial({ color: 0xaaaaaa });\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst white = new Three.MeshLambertMaterial({ color: 0xffffff });\nconst glassMaterial = new Three.MeshLambertMaterial({ color: 0xffffff, transparent: true, opacity: 0.5 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const video_camera = new Three.Mesh();\n\n  const cylinderGeometry = new Three.CylinderGeometry(0.2, 0.2, 0.5, 80);\n  const body = new Three.Mesh(cylinderGeometry, grey);\n  body.rotation.x += Math.PI / 2;\n  body.position.set(0, 0.5, 0);\n\n  const geometrySphereUp = new Three.SphereGeometry(0.2, 32, 32);\n  const sphereUp = new Three.Mesh(geometrySphereUp, grey);\n  sphereUp.position.set(0, -0.25, 0);\n  body.add(sphereUp);\n\n  const cylinderGeometry2b = new Three.CylinderGeometry(0.085, 0.085, 0.5, 80);\n  const focus = new Three.Mesh(cylinderGeometry2b, black);\n  focus.position.set(0, 0.04, 0);\n  body.add(focus);\n\n  const geometrySphereUp2 = new Three.SphereGeometry(0.025, 32, 32);\n\n  for (let i = 0; i < 16; i++) {\n    const led_1 = new Three.Mesh(geometrySphereUp2, white);\n    const led_2 = new Three.Mesh(geometrySphereUp2, white);\n\n    led_1.position.set(Math.cos(2 * Math.PI / 14 * i) * 0.115, 0.2497, Math.sin(2 * Math.PI / 14 * i) * 0.115);\n    led_2.position.set(Math.cos(2 * Math.PI / 16 * i) * 0.17, 0.25, Math.sin(2 * Math.PI / 16 * i) * 0.17);\n    led_1.scale.set(1, 1, 1.3);\n    led_2.scale.set(1, 1, 1.3);\n    led_1.rotation.x += Math.PI / 2;\n    led_2.rotation.x += Math.PI / 2;\n    body.add(led_1);\n    body.add(led_2);\n  }\n\n  const cylinderGeometry2 = new Three.CylinderGeometry(0.195, 0.195, 0.05, 80);\n  const glass = new Three.Mesh(cylinderGeometry2, glassMaterial);\n  glass.position.set(0, 0.27, 0);\n  body.add(glass);\n\n  const cylinderGeometry3 = new Three.CylinderGeometry(0.2, 0.2, 0.1, 80, 16, true);\n  const cover = new Three.Mesh(cylinderGeometry3, grey);\n  cover.position.set(0, 0.25, 0);\n  body.add(cover);\n\n  const cubeGeometryBase = new Three.BoxGeometry(0.25, 0.05, 0.25);\n  const base = new Three.Mesh(cubeGeometryBase, grey);\n  base.position.set(0, -0.6, 0.35);\n  body.add(base);\n\n  for (let i = 0.265; i <= 0.5; i += 0.165) {\n    const cylinderGeometry = new Three.CylinderGeometry(0.02, 0.02, 0.055, 6, 6);\n    const locknut1 = new Three.Mesh(cylinderGeometry, black);\n    const locknut2 = new Three.Mesh(cylinderGeometry, black);\n    locknut1.position.set(0.08, -0.6, i);\n    locknut2.position.set(-0.08, -0.6, i);\n    body.add(locknut1);\n    body.add(locknut2);\n  }\n\n  const shape2 = new Three.Shape();\n  shape2.moveTo(0.2, 0.45);\n  shape2.lineTo(0.5, 0.5);\n  shape2.lineTo(0.7, 0.5);\n  shape2.lineTo(0.7, 0.6);\n  shape2.lineTo(0.2, 0.6);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 0.1,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometry3 = new Three.ExtrudeGeometry(shape2, extrudeSettings);\n  const arm_p1 = new Three.Mesh(geometry3, grey);\n  arm_p1.rotation.z = Math.PI / 2;\n  arm_p1.rotation.y = -Math.PI / 2;\n  arm_p1.position.set(0.05, -0.8, 0.875);\n  body.add(arm_p1);\n\n  const cylinderGeometry4 = new Three.CylinderGeometry(0.1, 0.1, 0.1, 80, 16);\n  const arm_p2 = new Three.Mesh(cylinderGeometry4, grey);\n  arm_p2.rotation.x += Math.PI / 2;\n  arm_p2.position.set(0, -0.02, 0.325);\n  body.add(arm_p2);\n\n  const cylinderGeometry5 = new Three.CylinderGeometry(0.05, 0.05, 0.14, 80, 16);\n  const arm_p3 = new Three.Mesh(cylinderGeometry5, black);\n  arm_p3.rotation.x += Math.PI / 2;\n  arm_p3.position.set(0, -0.02, 0.325);\n  body.add(arm_p3);\n\n  const cylinderGeometry6 = new Three.CylinderGeometry(0.025, 0.025, 0.16, 80, 16);\n  const arm_p3b = new Three.Mesh(cylinderGeometry6, grey);\n  arm_p3b.rotation.x += Math.PI / 2;\n  arm_p3b.position.set(0, -0.02, 0.325);\n  body.add(arm_p3b);\n\n  const cylinderGeometry7 = new Three.CylinderGeometry(0.026, 0.026, 0.12, 80, 16);\n  const arm_p4 = new Three.Mesh(cylinderGeometry7, black);\n  arm_p4.rotation.z += Math.PI / 2;\n  arm_p4.position.set(0, -0.02, 0.23);\n  body.add(arm_p4);\n\n  const cylinderGeometry8 = new Three.CylinderGeometry(0.02, 0.02, 0.16, 80, 16);\n  const arm_p5 = new Three.Mesh(cylinderGeometry8, grey);\n  arm_p5.rotation.z += Math.PI / 2;\n  arm_p5.position.set(0, -0.02, 0.23);\n  body.add(arm_p5);\n\n  const joint = new Three.Shape();\n\n  // startpoint\n  joint.moveTo(0, 0);\n  joint.lineTo(0, 0.1);\n  joint.lineTo(0.1, 0.1);\n  joint.bezierCurveTo(0.05, 0.05, 0.05, 0.05, 0.1, 0);\n\n  const extrudeSettings2 = { depth: 0.1, bevelEnabled: false, bevelSegments: 1, steps: 1, bevelSize: 1, bevelThickness: 1 };\n\n  const geometry4 = new Three.ExtrudeGeometry(joint, extrudeSettings2);\n\n  const mesh_1 = new Three.Mesh(geometry4, grey);\n\n  mesh_1.position.set(-0.05, 0.03, 0.15);\n  mesh_1.rotation.y += Math.PI / 2;\n  mesh_1.rotation.z += -Math.PI;\n\n  const mesh_2 = new Three.Mesh(geometry4, grey);\n  mesh_2.position.set(-0.05, -0.07, 0.3);\n  mesh_2.rotation.y += Math.PI / 2;\n\n  body.add(mesh_1);\n  body.add(mesh_2);\n\n  const points: Three.Vector2[] = [];\n\n  points.push(new Three.Vector2(0.2, 0));\n  points.push(new Three.Vector2(0.2, 0));\n  points.push(new Three.Vector2(0.2, 0.2));\n  points.push(new Three.Vector2(0.2, 0.2));\n\n  const geometry = new Three.LatheGeometry(points, 200, 0, Math.PI);\n  grey.side = Three.DoubleSide;\n  const cover_2 = new Three.Mesh(geometry, grey);\n  cover_2.position.set(0, 0.2, 0);\n  cover_2.rotation.y += Math.PI / 2;\n  body.add(cover_2);\n\n  const cylinderGeometry9 = new Three.CylinderGeometry(0.025, 0.02, 0.3, 80, 16);\n  const antenna_p1 = new Three.Mesh(cylinderGeometry9, black);\n  antenna_p1.rotation.x += Math.PI / 2;\n  antenna_p1.position.set(0, -0.5, -0.18);\n  body.add(antenna_p1);\n\n  const cylinderGeometry10 = new Three.CylinderGeometry(0.02, 0.015, 0.3, 80, 16);\n  const antenna_p2 = new Three.Mesh(cylinderGeometry10, black);\n  antenna_p2.rotation.x += Math.PI / 2;\n  antenna_p2.position.set(0, -0.5, -0.35);\n  body.add(antenna_p2);\n\n  const sphere_p1 = new Three.SphereGeometry(0.015, 32, 32);\n  const antenna_p3 = new Three.Mesh(sphere_p1, black);\n  antenna_p3.position.set(0, -0.5, -0.5);\n  body.add(antenna_p3);\n\n  const sphere_p2 = new Three.SphereGeometry(0.04, 32, 32);\n  const antenna_p4 = new Three.Mesh(sphere_p2, black);\n  antenna_p4.position.set(0, -0.5, 0);\n  body.add(antenna_p4);\n\n  const cylinderGeometry11 = new Three.CylinderGeometry(0.025, 0.025, 0.1, 80, 16);\n  const antenna_p5 = new Three.Mesh(cylinderGeometry11, black);\n  antenna_p5.position.set(0, -0.42, 0);\n  body.add(antenna_p5);\n  video_camera.add(body);\n\n  return video_camera;\n}\n\nfunction makeObjectMinLOD() {\n  const video_camera = new Three.Mesh();\n\n  const cylinderGeometry = new Three.CylinderGeometry(0.2, 0.2, 0.5, 8.8);\n  const body = new Three.Mesh(cylinderGeometry, grey);\n  body.rotation.x += Math.PI / 2;\n  body.position.set(0, 0.5, 0);\n\n  const geometrySphereUp = new Three.SphereGeometry(0.2, 8, 8);\n  const sphereUp = new Three.Mesh(geometrySphereUp, grey);\n  sphereUp.position.set(0, -0.25, 0);\n  body.add(sphereUp);\n\n  const cylinderGeometry2b = new Three.CylinderGeometry(0.085, 0.085, 0.5, 8, 8);\n  const focus = new Three.Mesh(cylinderGeometry2b, black);\n  focus.position.set(0, 0.04, 0);\n  body.add(focus);\n\n  const cylinderGeometry2 = new Three.CylinderGeometry(0.195, 0.195, 0.05, 8, 8);\n  const glass = new Three.Mesh(cylinderGeometry2, glassMaterial);\n  glass.position.set(0, 0.27, 0);\n  body.add(glass);\n\n  const cylinderGeometry3 = new Three.CylinderGeometry(0.2, 0.2, 0.1, 8, 8, true);\n  const cover = new Three.Mesh(cylinderGeometry3, grey);\n  cover.position.set(0, 0.25, 0);\n  body.add(cover);\n\n  const cubeGeometryBase = new Three.BoxGeometry(0.25, 0.05, 0.25);\n  const base = new Three.Mesh(cubeGeometryBase, grey);\n  base.position.set(0, -0.6, 0.35);\n  body.add(base);\n\n  const shape2 = new Three.Shape();\n  shape2.moveTo(0.2, 0.45);\n  shape2.lineTo(0.5, 0.5);\n  shape2.lineTo(0.7, 0.5);\n  shape2.lineTo(0.7, 0.6);\n  shape2.lineTo(0.2, 0.6);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 0.1,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometry3 = new Three.ExtrudeGeometry(shape2, extrudeSettings);\n  const arm_p1 = new Three.Mesh(geometry3, grey);\n  arm_p1.rotation.z = Math.PI / 2;\n  arm_p1.rotation.y = -Math.PI / 2;\n  arm_p1.position.set(0.05, -0.8, 0.875);\n  body.add(arm_p1);\n\n  const cylinderGeometry4 = new Three.CylinderGeometry(0.1, 0.1, 0.1, 80, 16);\n  const arm_p2 = new Three.Mesh(cylinderGeometry4, grey);\n  arm_p2.rotation.x += Math.PI / 2;\n  arm_p2.position.set(0, -0.02, 0.325);\n  body.add(arm_p2);\n\n  const cylinderGeometry5 = new Three.CylinderGeometry(0.05, 0.05, 0.14, 80, 16);\n  const arm_p3 = new Three.Mesh(cylinderGeometry5, black);\n  arm_p3.rotation.x += Math.PI / 2;\n  arm_p3.position.set(0, -0.02, 0.325);\n  body.add(arm_p3);\n\n  const cylinderGeometry6 = new Three.CylinderGeometry(0.025, 0.025, 0.16, 80, 16);\n  const arm_p3b = new Three.Mesh(cylinderGeometry6, grey);\n  arm_p3b.rotation.x += Math.PI / 2;\n  arm_p3b.position.set(0, -0.02, 0.325);\n  body.add(arm_p3b);\n\n  const cylinderGeometry7 = new Three.CylinderGeometry(0.026, 0.026, 0.12, 80, 16);\n  const arm_p4 = new Three.Mesh(cylinderGeometry7, black);\n  arm_p4.rotation.z += Math.PI / 2;\n  arm_p4.position.set(0, -0.02, 0.23);\n  body.add(arm_p4);\n\n  const cylinderGeometry8 = new Three.CylinderGeometry(0.02, 0.02, 0.16, 80, 16);\n  const arm_p5 = new Three.Mesh(cylinderGeometry8, grey);\n  arm_p5.rotation.z += Math.PI / 2;\n  arm_p5.position.set(0, -0.02, 0.23);\n  body.add(arm_p5);\n\n  const joint = new Three.Shape();\n\n  // startpoint\n  joint.moveTo(0, 0);\n  joint.lineTo(0, 0.1);\n  joint.lineTo(0.1, 0.1);\n  joint.bezierCurveTo(0.05, 0.05, 0.05, 0.05, 0.1, 0);\n\n  const extrudeSettings2 = { depth: 0.1, bevelEnabled: false, bevelSegments: 1, steps: 1, bevelSize: 1, bevelThickness: 1 };\n\n  const geometry4 = new Three.ExtrudeGeometry(joint, extrudeSettings2);\n\n  const mesh_1 = new Three.Mesh(geometry4, grey);\n\n  mesh_1.position.set(-0.05, 0.03, 0.15);\n  mesh_1.rotation.y += Math.PI / 2;\n  mesh_1.rotation.z += -Math.PI;\n\n  const mesh_2 = new Three.Mesh(geometry4, grey);\n  mesh_2.position.set(-0.05, -0.07, 0.3);\n  mesh_2.rotation.y += Math.PI / 2;\n\n  body.add(mesh_1);\n  body.add(mesh_2);\n\n  const cylinderGeometry9 = new Three.CylinderGeometry(0.025, 0.02, 0.3, 8, 8);\n  const antenna_p1 = new Three.Mesh(cylinderGeometry9, black);\n  antenna_p1.rotation.x += Math.PI / 2;\n  antenna_p1.position.set(0, -0.5, -0.18);\n  body.add(antenna_p1);\n\n  const cylinderGeometry10 = new Three.CylinderGeometry(0.02, 0.015, 0.3, 8, 8);\n  const antenna_p2 = new Three.Mesh(cylinderGeometry10, black);\n  antenna_p2.rotation.x += Math.PI / 2;\n  antenna_p2.position.set(0, -0.5, -0.35);\n  body.add(antenna_p2);\n\n  const sphere_p1 = new Three.SphereGeometry(0.015, 8, 8);\n  const antenna_p3 = new Three.Mesh(sphere_p1, black);\n  antenna_p3.position.set(0, -0.5, -0.5);\n  body.add(antenna_p3);\n\n  const sphere_p2 = new Three.SphereGeometry(0.04, 8, 8);\n  const antenna_p4 = new Three.Mesh(sphere_p2, black);\n  antenna_p4.position.set(0, -0.5, 0);\n  body.add(antenna_p4);\n\n  const cylinderGeometry11 = new Three.CylinderGeometry(0.025, 0.025, 0.1, 8, 8);\n  const antenna_p5 = new Three.Mesh(cylinderGeometry11, black);\n  antenna_p5.position.set(0, -0.42, 0);\n  body.add(antenna_p5);\n  video_camera.add(body);\n\n  return video_camera;\n}\n\nexport default defineCatalogElement({\n  name: 'camera',\n  prototype: 'items',\n\n  info: {\n    tag: ['security', 'metal'],\n    title: 'camera',\n    description: 'camera',\n    image: require('./camera.png')\n  },\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 100\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' }} />\n        <text key='2' x='0' y='0'\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /**************** LOD max ***********************/\n\n    const video_cameraMaxLOD = new Three.Object3D();\n    video_cameraMaxLOD.add(objectMaxLOD.clone());\n\n    const aa = new Three.Box3().setFromObject(video_cameraMaxLOD);\n\n    const deltaX = Math.abs(aa.max.x - aa.min.x);\n    const deltaY = Math.abs(aa.max.y - aa.min.y);\n    const deltaZ = Math.abs(aa.max.z - aa.min.z);\n\n    video_cameraMaxLOD.position.y += HEIGHT / 8 + newAltitude;\n    video_cameraMaxLOD.position.z += DEPTH / 2;\n    video_cameraMaxLOD.scale.set(DEPTH / deltaZ, HEIGHT / deltaY, WIDTH / deltaX);\n\n    /**************** LOD min ***********************/\n\n    const video_cameraMinLOD = new Three.Object3D();\n    video_cameraMinLOD.add(objectMinLOD.clone());\n\n\n    video_cameraMinLOD.position.y += HEIGHT / 8 + newAltitude;\n    video_cameraMinLOD.position.z += DEPTH / 2;\n    video_cameraMinLOD.scale.set(DEPTH / deltaZ, HEIGHT / deltaY, WIDTH / deltaX);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(video_cameraMaxLOD, 200);\n    lod.addLevel(video_cameraMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 60;\nconst DEPTH = 60;\nconst HEIGHT = 100;\n\nconst greyMaterial = new Three.MeshLambertMaterial({ color: 0xC0C0C0 });\ngreyMaterial.side = Three.DoubleSide;\nconst greenMaterial = new Three.MeshLambertMaterial({ color: 0x008250 });\n\nfunction makeArmchairMaxLOD() {\n  const armchair = new Three.Object3D();\n  const foot = new Three.Mesh();\n\n  //armchair base\n  const g_base_foot = new Three.BoxGeometry(0.3, 0.05, 0.4);\n  const m_base_foot1 = new Three.Mesh(g_base_foot, greyMaterial);\n  m_base_foot1.position.set(0, 0.1, 0.1);\n  foot.add(m_base_foot1);\n\n  const g_base_foot2 = new Three.CylinderGeometry(0.055, 0.055, 0.35, 20);\n  const m_base_foot2 = new Three.Mesh(g_base_foot2, greyMaterial);\n  m_base_foot2.position.set(0, 0.25, 0.15);\n  foot.add(m_base_foot2);\n\n  armchair.add(foot);\n\n  //seat\n  const seat = new Three.Mesh();\n\n  const extrusionSettings = {\n    depth: 0.65,\n    bevelEnabled: false,\n    bevelSegments: 2,\n    steps: 10,\n    bevelSize: 1,\n    bevelThickness: 1\n  };\n\n  const shape_sed = new Three.Shape();\n  shape_sed.moveTo(0, 0);\n  shape_sed.lineTo(0, 0.05);\n  shape_sed.quadraticCurveTo(0, 0.1, -0.02, 0.1);\n  shape_sed.lineTo(-0.6, 0.1);\n  shape_sed.quadraticCurveTo(-0.6, 0.1, -0.6, 0.07);\n  shape_sed.lineTo(-0.6, 0);\n\n  const g_sitting = new Three.ExtrudeGeometry(shape_sed, extrusionSettings);\n  const sitting = new Three.Mesh(g_sitting, greenMaterial);\n\n  sitting.rotation.y = Math.PI / 2;\n  sitting.rotation.z = Math.PI / 3.5;\n  sitting.position.set(-0.325, .905, -0.3);\n  seat.add(sitting);\n\n  //back armchair\n  const shape_sc = new Three.Shape();\n  shape_sc.moveTo(0, 0);\n  shape_sc.lineTo(0, 0.1);\n  shape_sc.quadraticCurveTo(-0.5, 0.07, -0.97, 0.1);\n  shape_sc.quadraticCurveTo(-1, 0.1, -1, 0.07);\n  shape_sc.lineTo(-1, 0);\n  shape_sc.quadraticCurveTo(-0.5, -0.03, 0, 0);\n\n  const g_back = new Three.ExtrudeGeometry(shape_sc, extrusionSettings);\n  const back = new Three.Mesh(g_back, greenMaterial);\n\n  back.rotation.z = -105 * Math.PI / 180;\n  back.rotation.y = -Math.PI / 2;\n  back.position.set(0.325, 0.52, 0.125);\n  seat.add(back);\n\n  const g_asse_rotaz2 = new Three.CylinderGeometry(0.06, 0.06, 0.8, 32, 32, true);\n  const asse_rotaz2 = new Three.Mesh(g_asse_rotaz2, greyMaterial);\n\n  asse_rotaz2.rotation.z = -Math.PI / 2;\n  asse_rotaz2.position.set(0, 0.45, 0.15);\n  seat.add(asse_rotaz2);\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = .7;\n  const height = .75;\n  const radius = 0.25;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: .07,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometry2 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const armrest_1 = new Three.Mesh(geometry2, greyMaterial);\n  armrest_1.rotation.y = Math.PI / 2;\n  armrest_1.rotation.z = .9 * Math.PI;\n  armrest_1.position.set(-0.4, 1, -0.4);\n  seat.add(armrest_1);\n\n  const armrest_2 = armrest_1.clone();\n  armrest_2.position.x += .73;\n  seat.add(armrest_2);\n  armchair.add(seat);\n\n  return armchair\n}\n\nfunction makeArmchairMinLOD() {\n  const armchair = new Three.Object3D();\n  const foot = new Three.Mesh();\n\n  //armchair base\n  const g_base_foot = new Three.BoxGeometry(0.3, 0.05, 0.4);\n  const base_foot1 = new Three.Mesh(g_base_foot, greyMaterial);\n  base_foot1.position.set(0, 0.1, 0.1);\n  foot.add(base_foot1);\n\n  const g_base_foot2 = new Three.CylinderGeometry(0.055, 0.055, 0.35, 8, 8);\n  const base_foot2 = new Three.Mesh(g_base_foot2, greyMaterial);\n  base_foot2.position.set(0, 0.25, 0.15);\n  foot.add(base_foot2);\n\n  armchair.add(foot);\n\n  //seat\n  const seat = new Three.Mesh();\n\n  const extrusionSettings = {\n    depth: 0.65,\n    bevelEnabled: false,\n    bevelSegments: 2,\n    steps: 10,\n    bevelSize: 1,\n    bevelThickness: 1\n  };\n\n  const shape_sed = new Three.Shape();\n  shape_sed.moveTo(0, 0);\n  shape_sed.lineTo(0, 0.05);\n  shape_sed.quadraticCurveTo(0, 0.1, -0.02, 0.1);\n  shape_sed.lineTo(-0.6, 0.1);\n  shape_sed.quadraticCurveTo(-0.6, 0.1, -0.6, 0.07);\n  shape_sed.lineTo(-0.6, 0);\n\n  const g_sitting = new Three.ExtrudeGeometry(shape_sed, extrusionSettings);\n  const sitting = new Three.Mesh(g_sitting, greenMaterial);\n\n  sitting.rotation.y = Math.PI / 2;\n  sitting.rotation.z = Math.PI / 3.5;\n  sitting.position.set(-0.325, .905, -0.3);\n  seat.add(sitting);\n\n  //back armchair\n  const shape_sc = new Three.Shape();\n  shape_sc.moveTo(0, 0);\n  shape_sc.lineTo(0, 0.1);\n  shape_sc.quadraticCurveTo(-0.5, 0.07, -0.97, 0.1);\n  shape_sc.quadraticCurveTo(-1, 0.1, -1, 0.07);\n  shape_sc.lineTo(-1, 0);\n  shape_sc.quadraticCurveTo(-0.5, -0.03, 0, 0);\n\n  const g_back = new Three.ExtrudeGeometry(shape_sc, extrusionSettings);\n  const back = new Three.Mesh(g_back, greenMaterial);\n\n  back.rotation.z = -105 * Math.PI / 180;\n  back.rotation.y = -Math.PI / 2;\n  back.position.set(0.325, 0.52, 0.125);\n  seat.add(back);\n\n  const g_asse_rotaz2 = new Three.CylinderGeometry(0.06, 0.06, 0.8, 8, 8, true);\n  const asse_rotaz2 = new Three.Mesh(g_asse_rotaz2, greyMaterial);\n\n  asse_rotaz2.rotation.z = -Math.PI / 2;\n  asse_rotaz2.position.set(0, 0.45, 0.15);\n  seat.add(asse_rotaz2);\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = .7;\n  const height = .75;\n  const radius = 0.25;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: .07,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometry2 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const armrest_1 = new Three.Mesh(geometry2, greyMaterial);\n  armrest_1.rotation.y = Math.PI / 2;\n  armrest_1.rotation.z = .9 * Math.PI;\n  armrest_1.position.set(-0.4, 1, -0.4);\n  seat.add(armrest_1);\n\n  const armrest_2 = armrest_1.clone();\n  armrest_2.position.x += .73;\n  seat.add(armrest_2);\n  armchair.add(seat);\n\n  return armchair\n}\n\nexport default defineCatalogElement({\n  name: 'armchairs',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'wood'],\n    title: 'armchairs',\n    description: 'armchairs',\n    image: require('./armchairs.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    },\n    seat: {\n      label: 'seats',\n      type: 'number',\n      defaultValue: 1\n    },\n    flip: {\n      label: 'flip',\n      type: 'checkbox',\n      defaultValue: false,\n      values: {\n        'none': false,\n        'yes': true\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' } as const;\n    const text_style = { textAnchor: 'middle', fontSize: '11px', fill: '#FF0000' } as const;\n\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const seats: number = element.properties.seat;\n    const flip: boolean = element.properties.flip;\n\n    const seatsArray = new Array(seats);\n\n    const eps = -1.7;\n\n    for (let ind = 0; ind < seats; ind++) {\n      seatsArray[ind] = <rect key={ind} x={WIDTH * ind} y={eps * ind}\n        width={WIDTH} height={DEPTH} style={rect_style} />\n    }\n\n    return (\n      <g transform={`translate(${(flip ? -1 : 1) * WIDTH * seats / 2},${-DEPTH / 2}) scale(${flip ? 1 : -1},1)`}>\n        {seatsArray}\n        <text x='0' y='0'\n          transform={`translate(${WIDTH * seats / 2}, ${DEPTH / 2 + eps * seats / 2}) scale(${flip ? 1 : -1},-1) rotate(${textRotation})`}\n          style={text_style}>\n          {element.type}\n        </text>\n      </g>\n    );\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude: number = element.properties.altitude.length;\n    const seats: number = element.properties.seat;\n    const flip: boolean = element.properties.flip;\n    let newWidth = WIDTH;\n    let newDepth = DEPTH;\n\n    const armchairsMaxLOD = new Three.Object3D();\n    let seatArray = new Array<Three.Object3D<Three.Object3DEventMap>>(seats);\n\n    function setArmchairsPos(listObject: Three.Object3D<Three.Object3DEventMap>[], seats: number) {\n      newWidth = WIDTH * seats;\n      newDepth = DEPTH + (DEPTH / 8 * seats / 2);\n      seatArray = listObject;\n\n      for (let ind = 0; ind < seats; ind++) {\n        seatArray[ind].position.x = (ind - Math.floor(seats / 2)) * -.8;\n        if (flip) {\n          seatArray[ind].position.z = (ind - Math.floor(seats / 2)) * -.085;\n        } else {\n          seatArray[ind].position.z = (ind - Math.floor(seats / 2)) * +.085;\n        }\n      }\n    }\n\n    function makeSeriesArmchair2(seats: number) {\n      const chair = makeArmchairMaxLOD().clone();\n      for (let ind = 0; ind < seats; ind++) {\n        seatArray[ind] = chair.clone();\n      }\n      return seatArray\n    }\n\n    const armchairsObject2 = makeSeriesArmchair2(seats);\n    setArmchairsPos(armchairsObject2, seats);\n\n    for (let i = 0; i < armchairsObject2.length; i++) {\n      armchairsMaxLOD.add(armchairsObject2[i]);\n    }\n\n    const valueObject = new Three.Box3().setFromObject(armchairsMaxLOD);\n\n    const deltaX = Math.abs(valueObject.max.x - valueObject.min.x);\n    const deltaY = Math.abs(valueObject.max.y - valueObject.min.y);\n    const deltaZ = Math.abs(valueObject.max.z - valueObject.min.z);\n\n    armchairsMaxLOD.position.y += -HEIGHT / 20 + newAltitude;\n    seats % 2 ? armchairsMaxLOD.position.x += newWidth / seats - WIDTH : armchairsMaxLOD.position.x += newWidth / seats - 1.5 * WIDTH;\n    armchairsMaxLOD.position.z -= DEPTH / 8;\n    armchairsMaxLOD.scale.set(newWidth / deltaX, HEIGHT / deltaY, newDepth / deltaZ);\n\n\n    /********************** lod min ************************************/\n\n    const armchairsMinLOD = new Three.Object3D();\n\n    function makeSeriesArmchair1(seats) {\n      const chair = makeArmchairMinLOD().clone();\n\n      for (let ind = 0; ind < seats; ind++) {\n        seatArray[ind] = chair.clone();\n      }\n\n      return seatArray\n    }\n\n    const armchairsObject1 = makeSeriesArmchair1(seats);\n    setArmchairsPos(armchairsObject1, seats);\n\n    for (let j = 0; j < armchairsObject1.length; j++)\n      armchairsMinLOD.add(armchairsObject1[j]);\n\n    armchairsMinLOD.position.y += -HEIGHT / 20 + newAltitude;\n    seats % 2 ? armchairsMinLOD.position.x += newWidth / seats - WIDTH : armchairsMinLOD.position.x += (newWidth) / seats - 1.5 * WIDTH;\n    armchairsMinLOD.position.z -= DEPTH / 8;\n    armchairsMinLOD.scale.set(newWidth / deltaX, HEIGHT / deltaY, newDepth / deltaZ);\n\n\n    /********* all level of detail ************/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(armchairsMaxLOD, 200);\n    lod.addLevel(armchairsMinLOD, 700);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/air-conditioner/air_conditioner.png\";","module.exports = __webpack_public_path__ + \"catalog/holes/door/door.obj\";","module.exports = __webpack_public_path__ + \"catalog/items/hub/front.png\";","import { MeshBasicMaterial, Mesh, BoxHelper } from 'three';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport React from 'react';\nimport { HELVETIKER } from './helvetiker_regular.typeface';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst fontLoader = new FontLoader();\nconst font = fontLoader.parse(HELVETIKER);\n\nconst defaultFontSize = 16;\nconst defaultColor = '#000000';\n\nexport default defineCatalogElement({\n  name: 'text',\n  prototype: 'items',\n\n  info: {\n    tag: ['text'],\n    title: 'Text 3D',\n    description: 'Text',\n    image: require('./img.png')\n  },\n\n  properties: {\n    text: {\n      label: 'text',\n      type: 'string',\n      defaultValue: 'Custom Text'\n    },\n    fontSize: {\n      label: 'font size',\n      type: 'number',\n      defaultValue: defaultFontSize\n    },\n    color: {\n      label: 'text color',\n      type: 'color',\n      defaultValue: defaultColor\n    },\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const color = element.properties.color || defaultColor;\n    const text = element.properties.text || '';\n    const fontSize = element.properties.fontSize || defaultFontSize;\n    const textHorizontalPadding = defaultFontSize;\n    const width = ((text.length - (text.length / 2)) * fontSize) + textHorizontalPadding;\n    const height = 2 * fontSize;\n\n    return (\n      <g>\n        <rect\n          x={-width / 2}\n          y={-height / 2}\n          fill=\"#FFF\"\n          width={width}\n          height={height}\n          stroke=\"#000\"\n          strokeWidth=\"2\"\n        />\n        <text\n          x=\"0\"\n          y=\"0\"\n          fontFamily=\"Arial\"\n          alignmentBaseline=\"middle\"\n          textAnchor=\"middle\"\n          fontSize={fontSize}\n          fill={color}\n          transform={'scale(1,-1)'}\n        >\n          {text}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const text = element.properties.text || '';\n    const size = element.properties.fontSize || defaultFontSize;\n    const textHorizontalPadding = defaultFontSize;\n    const width = ((text.length - (text.length / 2)) * size) + textHorizontalPadding;\n    const color = element.properties.color || defaultColor;\n\n    const mesh = new Mesh(\n      new TextGeometry(text, { size, depth: 1, font }),\n      new MeshBasicMaterial({ color })\n    );\n\n    if (element.selected) {\n      const box = new BoxHelper(mesh, 0x99c3fb);\n      box.material.linewidth = 2;\n      box.material.depthTest = false;\n      box.renderOrder = 1000;\n      mesh.add(box);\n    }\n\n    mesh.position.y += element.properties.altitude.length;\n    mesh.position.x -= (width / 2);\n\n    return mesh;\n  }\n});\n","export const HELVETIKER = { \"glyphs\": { \"ο\": { \"x_min\": 0, \"x_max\": 712, \"ha\": 815, \"o\": \"m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 \" }, \"S\": { \"x_min\": 0, \"x_max\": 788, \"ha\": 890, \"o\": \"m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 \" }, \"¦\": { \"x_min\": 343, \"x_max\": 449, \"ha\": 792, \"o\": \"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 \" }, \"/\": { \"x_min\": 183.25, \"x_max\": 608.328125, \"ha\": 792, \"o\": \"m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 \" }, \"Τ\": { \"x_min\": -0.4375, \"x_max\": 777.453125, \"ha\": 839, \"o\": \"m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 \" }, \"y\": { \"x_min\": 0, \"x_max\": 684.78125, \"ha\": 771, \"o\": \"m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 \" }, \"Π\": { \"x_min\": 0, \"x_max\": 803, \"ha\": 917, \"o\": \"m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 \" }, \"ΐ\": { \"x_min\": -111, \"x_max\": 339, \"ha\": 361, \"o\": \"m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 \" }, \"g\": { \"x_min\": 0, \"x_max\": 686, \"ha\": 838, \"o\": \"m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 \" }, \"²\": { \"x_min\": 0, \"x_max\": 442, \"ha\": 539, \"o\": \"m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 \" }, \"–\": { \"x_min\": 0, \"x_max\": 705.5625, \"ha\": 803, \"o\": \"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 \" }, \"Κ\": { \"x_min\": 0, \"x_max\": 819.5625, \"ha\": 893, \"o\": \"m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 \" }, \"ƒ\": { \"x_min\": -46.265625, \"x_max\": 392, \"ha\": 513, \"o\": \"m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 \" }, \"e\": { \"x_min\": 0, \"x_max\": 714, \"ha\": 813, \"o\": \"m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 \" }, \"ό\": { \"x_min\": 0, \"x_max\": 712, \"ha\": 815, \"o\": \"m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 \" }, \"J\": { \"x_min\": 0, \"x_max\": 588, \"ha\": 699, \"o\": \"m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 \" }, \"»\": { \"x_min\": -1, \"x_max\": 503, \"ha\": 601, \"o\": \"m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 \" }, \"©\": { \"x_min\": -3, \"x_max\": 1008, \"ha\": 1106, \"o\": \"m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 \" }, \"ώ\": { \"x_min\": 0, \"x_max\": 922, \"ha\": 1030, \"o\": \"m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 \" }, \"^\": { \"x_min\": 193.0625, \"x_max\": 598.609375, \"ha\": 792, \"o\": \"m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 \" }, \"«\": { \"x_min\": 0, \"x_max\": 507.203125, \"ha\": 604, \"o\": \"m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 \" }, \"D\": { \"x_min\": 0, \"x_max\": 828, \"ha\": 935, \"o\": \"m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 \" }, \"∙\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 \" }, \"ÿ\": { \"x_min\": 0, \"x_max\": 47, \"ha\": 125, \"o\": \"m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 \" }, \"w\": { \"x_min\": 0, \"x_max\": 1009.71875, \"ha\": 1100, \"o\": \"m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 \" }, \"$\": { \"x_min\": 0, \"x_max\": 700, \"ha\": 793, \"o\": \"m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 \" }, \"\\\\\": { \"x_min\": -0.015625, \"x_max\": 425.0625, \"ha\": 522, \"o\": \"m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 \" }, \"µ\": { \"x_min\": 0, \"x_max\": 697.21875, \"ha\": 747, \"o\": \"m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 \" }, \"Ι\": { \"x_min\": 42, \"x_max\": 181, \"ha\": 297, \"o\": \"m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 \" }, \"Ύ\": { \"x_min\": 0, \"x_max\": 1144.5, \"ha\": 1214, \"o\": \"m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \" }, \"’\": { \"x_min\": 0, \"x_max\": 139, \"ha\": 236, \"o\": \"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 \" }, \"Ν\": { \"x_min\": 0, \"x_max\": 801, \"ha\": 915, \"o\": \"m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 \" }, \"-\": { \"x_min\": 8.71875, \"x_max\": 350.390625, \"ha\": 478, \"o\": \"m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 \" }, \"Q\": { \"x_min\": 0, \"x_max\": 968, \"ha\": 1072, \"o\": \"m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 \" }, \"ς\": { \"x_min\": 1, \"x_max\": 676.28125, \"ha\": 740, \"o\": \"m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 \" }, \"M\": { \"x_min\": 0, \"x_max\": 954, \"ha\": 1067, \"o\": \"m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 \" }, \"Ψ\": { \"x_min\": 0, \"x_max\": 1006, \"ha\": 1094, \"o\": \"m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 \" }, \"C\": { \"x_min\": 0, \"x_max\": 886, \"ha\": 944, \"o\": \"m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 \" }, \"!\": { \"x_min\": 0, \"x_max\": 138, \"ha\": 236, \"o\": \"m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 \" }, \"{\": { \"x_min\": 0, \"x_max\": 480.5625, \"ha\": 578, \"o\": \"m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 \" }, \"X\": { \"x_min\": -0.015625, \"x_max\": 854.15625, \"ha\": 940, \"o\": \"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 \" }, \"#\": { \"x_min\": 0, \"x_max\": 963.890625, \"ha\": 1061, \"o\": \"m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 \" }, \"ι\": { \"x_min\": 42, \"x_max\": 284, \"ha\": 361, \"o\": \"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 \" }, \"Ά\": { \"x_min\": 0, \"x_max\": 906.953125, \"ha\": 982, \"o\": \"m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 \" }, \")\": { \"x_min\": 0, \"x_max\": 318, \"ha\": 415, \"o\": \"m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 \" }, \"ε\": { \"x_min\": 0, \"x_max\": 634.71875, \"ha\": 714, \"o\": \"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 \" }, \"Δ\": { \"x_min\": 0, \"x_max\": 952.78125, \"ha\": 1028, \"o\": \"m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 \" }, \"}\": { \"x_min\": 0, \"x_max\": 481, \"ha\": 578, \"o\": \"m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 \" }, \"‰\": { \"x_min\": -3, \"x_max\": 1672, \"ha\": 1821, \"o\": \"m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 \" }, \"a\": { \"x_min\": 0, \"x_max\": 698.609375, \"ha\": 794, \"o\": \"m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 \" }, \"—\": { \"x_min\": 0, \"x_max\": 941.671875, \"ha\": 1039, \"o\": \"m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 \" }, \"=\": { \"x_min\": 8.71875, \"x_max\": 780.953125, \"ha\": 792, \"o\": \"m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 \" }, \"N\": { \"x_min\": 0, \"x_max\": 801, \"ha\": 914, \"o\": \"m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 \" }, \"ρ\": { \"x_min\": 0, \"x_max\": 712, \"ha\": 797, \"o\": \"m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 \" }, \"2\": { \"x_min\": 59, \"x_max\": 731, \"ha\": 792, \"o\": \"m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 \" }, \"¯\": { \"x_min\": 0, \"x_max\": 941.671875, \"ha\": 938, \"o\": \"m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 \" }, \"Z\": { \"x_min\": 0, \"x_max\": 779, \"ha\": 849, \"o\": \"m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 \" }, \"u\": { \"x_min\": 0, \"x_max\": 617, \"ha\": 729, \"o\": \"m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 \" }, \"k\": { \"x_min\": 0, \"x_max\": 612.484375, \"ha\": 697, \"o\": \"m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 \" }, \"Η\": { \"x_min\": 0, \"x_max\": 803, \"ha\": 917, \"o\": \"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 \" }, \"Α\": { \"x_min\": 0, \"x_max\": 906.953125, \"ha\": 985, \"o\": \"m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 \" }, \"s\": { \"x_min\": 0, \"x_max\": 604, \"ha\": 697, \"o\": \"m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 \" }, \"B\": { \"x_min\": 0, \"x_max\": 778, \"ha\": 876, \"o\": \"m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 \" }, \"…\": { \"x_min\": 0, \"x_max\": 614, \"ha\": 708, \"o\": \"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 \" }, \"?\": { \"x_min\": 0, \"x_max\": 607, \"ha\": 704, \"o\": \"m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 \" }, \"H\": { \"x_min\": 0, \"x_max\": 803, \"ha\": 915, \"o\": \"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 \" }, \"ν\": { \"x_min\": 0, \"x_max\": 675, \"ha\": 761, \"o\": \"m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 \" }, \"c\": { \"x_min\": 1, \"x_max\": 701.390625, \"ha\": 775, \"o\": \"m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 \" }, \"¶\": { \"x_min\": 0, \"x_max\": 566.671875, \"ha\": 678, \"o\": \"m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 \" }, \"β\": { \"x_min\": 0, \"x_max\": 660, \"ha\": 745, \"o\": \"m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 \" }, \"Μ\": { \"x_min\": 0, \"x_max\": 954, \"ha\": 1068, \"o\": \"m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 \" }, \"Ό\": { \"x_min\": 0.109375, \"x_max\": 1120, \"ha\": 1217, \"o\": \"m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \" }, \"Ή\": { \"x_min\": 0, \"x_max\": 1158, \"ha\": 1275, \"o\": \"m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \" }, \"•\": { \"x_min\": 0, \"x_max\": 663.890625, \"ha\": 775, \"o\": \"m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 \" }, \"¥\": { \"x_min\": 0.1875, \"x_max\": 819.546875, \"ha\": 886, \"o\": \"m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 \" }, \"(\": { \"x_min\": 0, \"x_max\": 318.0625, \"ha\": 415, \"o\": \"m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 \" }, \"U\": { \"x_min\": 0, \"x_max\": 796, \"ha\": 904, \"o\": \"m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 \" }, \"γ\": { \"x_min\": 0.5, \"x_max\": 744.953125, \"ha\": 822, \"o\": \"m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 \" }, \"α\": { \"x_min\": 0, \"x_max\": 765.5625, \"ha\": 809, \"o\": \"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 \" }, \"F\": { \"x_min\": 0, \"x_max\": 683.328125, \"ha\": 717, \"o\": \"m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 \" }, \"­\": { \"x_min\": 0, \"x_max\": 705.5625, \"ha\": 803, \"o\": \"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 \" }, \":\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 \" }, \"Χ\": { \"x_min\": 0, \"x_max\": 854.171875, \"ha\": 935, \"o\": \"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 \" }, \"*\": { \"x_min\": 116, \"x_max\": 674, \"ha\": 792, \"o\": \"m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 \" }, \"†\": { \"x_min\": 0, \"x_max\": 777, \"ha\": 835, \"o\": \"m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 \" }, \"°\": { \"x_min\": 0, \"x_max\": 347, \"ha\": 444, \"o\": \"m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 \" }, \"V\": { \"x_min\": 0, \"x_max\": 862.71875, \"ha\": 940, \"o\": \"m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 \" }, \"Ξ\": { \"x_min\": 0, \"x_max\": 734.71875, \"ha\": 763, \"o\": \"m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 \" }, \" \": { \"x_min\": 0, \"x_max\": 0, \"ha\": 853 }, \"Ϋ\": { \"x_min\": 0.328125, \"x_max\": 819.515625, \"ha\": 889, \"o\": \"m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 \" }, \"0\": { \"x_min\": 73, \"x_max\": 715, \"ha\": 792, \"o\": \"m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 \" }, \"”\": { \"x_min\": 0, \"x_max\": 347, \"ha\": 454, \"o\": \"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 \" }, \"@\": { \"x_min\": 0, \"x_max\": 1260, \"ha\": 1357, \"o\": \"m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 \" }, \"Ί\": { \"x_min\": 0, \"x_max\": 499, \"ha\": 613, \"o\": \"m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 \" }, \"i\": { \"x_min\": 14, \"x_max\": 136, \"ha\": 275, \"o\": \"m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 \" }, \"Β\": { \"x_min\": 0, \"x_max\": 778, \"ha\": 877, \"o\": \"m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 \" }, \"υ\": { \"x_min\": 0, \"x_max\": 617, \"ha\": 725, \"o\": \"m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 \" }, \"]\": { \"x_min\": 0, \"x_max\": 275, \"ha\": 372, \"o\": \"m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 \" }, \"m\": { \"x_min\": 0, \"x_max\": 1019, \"ha\": 1128, \"o\": \"m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 \" }, \"χ\": { \"x_min\": 8.328125, \"x_max\": 780.5625, \"ha\": 815, \"o\": \"m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 \" }, \"8\": { \"x_min\": 55, \"x_max\": 736, \"ha\": 792, \"o\": \"m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 \" }, \"ί\": { \"x_min\": 42, \"x_max\": 326.71875, \"ha\": 361, \"o\": \"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 \" }, \"Ζ\": { \"x_min\": 0, \"x_max\": 779.171875, \"ha\": 850, \"o\": \"m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 \" }, \"R\": { \"x_min\": 0, \"x_max\": 781.953125, \"ha\": 907, \"o\": \"m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 \" }, \"o\": { \"x_min\": 0, \"x_max\": 713, \"ha\": 821, \"o\": \"m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 \" }, \"5\": { \"x_min\": 54.171875, \"x_max\": 738, \"ha\": 792, \"o\": \"m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 \" }, \"7\": { \"x_min\": 58.71875, \"x_max\": 730.953125, \"ha\": 792, \"o\": \"m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 \" }, \"K\": { \"x_min\": 0, \"x_max\": 819.46875, \"ha\": 906, \"o\": \"m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 \" }, \",\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 \" }, \"d\": { \"x_min\": 0, \"x_max\": 683, \"ha\": 796, \"o\": \"m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 \" }, \"¨\": { \"x_min\": -109, \"x_max\": 247, \"ha\": 232, \"o\": \"m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 \" }, \"E\": { \"x_min\": 0, \"x_max\": 736.109375, \"ha\": 789, \"o\": \"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 \" }, \"Y\": { \"x_min\": 0, \"x_max\": 820, \"ha\": 886, \"o\": \"m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 \" }, \"\\\"\": { \"x_min\": 0, \"x_max\": 299, \"ha\": 396, \"o\": \"m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 \" }, \"‹\": { \"x_min\": 17.984375, \"x_max\": 773.609375, \"ha\": 792, \"o\": \"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 \" }, \"„\": { \"x_min\": 0, \"x_max\": 364, \"ha\": 467, \"o\": \"m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 \" }, \"δ\": { \"x_min\": 1, \"x_max\": 710, \"ha\": 810, \"o\": \"m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 \" }, \"έ\": { \"x_min\": 0, \"x_max\": 634.71875, \"ha\": 714, \"o\": \"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 \" }, \"ω\": { \"x_min\": 0, \"x_max\": 922, \"ha\": 1031, \"o\": \"m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 \" }, \"´\": { \"x_min\": 0, \"x_max\": 96, \"ha\": 251, \"o\": \"m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 \" }, \"±\": { \"x_min\": 11, \"x_max\": 781, \"ha\": 792, \"o\": \"m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 \" }, \"|\": { \"x_min\": 343, \"x_max\": 449, \"ha\": 792, \"o\": \"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 \" }, \"ϋ\": { \"x_min\": 0, \"x_max\": 617, \"ha\": 725, \"o\": \"m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 \" }, \"§\": { \"x_min\": 0, \"x_max\": 593, \"ha\": 690, \"o\": \"m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 \" }, \"b\": { \"x_min\": 0, \"x_max\": 685, \"ha\": 783, \"o\": \"m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 \" }, \"q\": { \"x_min\": 0, \"x_max\": 683, \"ha\": 876, \"o\": \"m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 \" }, \"Ω\": { \"x_min\": -0.171875, \"x_max\": 969.5625, \"ha\": 1068, \"o\": \"m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 \" }, \"ύ\": { \"x_min\": 0, \"x_max\": 617, \"ha\": 725, \"o\": \"m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 \" }, \"z\": { \"x_min\": -0.015625, \"x_max\": 613.890625, \"ha\": 697, \"o\": \"m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 \" }, \"™\": { \"x_min\": 0, \"x_max\": 894, \"ha\": 1000, \"o\": \"m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 \" }, \"ή\": { \"x_min\": 0.78125, \"x_max\": 697, \"ha\": 810, \"o\": \"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 \" }, \"Θ\": { \"x_min\": 0, \"x_max\": 960, \"ha\": 1056, \"o\": \"m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 \" }, \"®\": { \"x_min\": -3, \"x_max\": 1008, \"ha\": 1106, \"o\": \"m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 \" }, \"~\": { \"x_min\": 0, \"x_max\": 833, \"ha\": 931, \"o\": \"m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 \" }, \"Ε\": { \"x_min\": 0, \"x_max\": 736.21875, \"ha\": 778, \"o\": \"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 \" }, \"³\": { \"x_min\": 0, \"x_max\": 450, \"ha\": 547, \"o\": \"m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 \" }, \"[\": { \"x_min\": 0, \"x_max\": 273.609375, \"ha\": 371, \"o\": \"m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 \" }, \"L\": { \"x_min\": 0, \"x_max\": 645.828125, \"ha\": 696, \"o\": \"m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 \" }, \"σ\": { \"x_min\": 0, \"x_max\": 803.390625, \"ha\": 894, \"o\": \"m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 \" }, \"ζ\": { \"x_min\": 0, \"x_max\": 573, \"ha\": 642, \"o\": \"m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 \" }, \"θ\": { \"x_min\": 0, \"x_max\": 674, \"ha\": 778, \"o\": \"m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 \" }, \"Ο\": { \"x_min\": 0, \"x_max\": 958, \"ha\": 1054, \"o\": \"m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 \" }, \"Γ\": { \"x_min\": 0, \"x_max\": 705.28125, \"ha\": 749, \"o\": \"m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 \" }, \" \": { \"x_min\": 0, \"x_max\": 0, \"ha\": 375 }, \"%\": { \"x_min\": -3, \"x_max\": 1089, \"ha\": 1186, \"o\": \"m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 \" }, \"P\": { \"x_min\": 0, \"x_max\": 726, \"ha\": 806, \"o\": \"m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 \" }, \"Έ\": { \"x_min\": 0, \"x_max\": 1078.21875, \"ha\": 1118, \"o\": \"m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \" }, \"Ώ\": { \"x_min\": 0.125, \"x_max\": 1136.546875, \"ha\": 1235, \"o\": \"m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 \" }, \"_\": { \"x_min\": 0, \"x_max\": 705.5625, \"ha\": 803, \"o\": \"m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 \" }, \"Ϊ\": { \"x_min\": -110, \"x_max\": 246, \"ha\": 275, \"o\": \"m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 \" }, \"+\": { \"x_min\": 23, \"x_max\": 768, \"ha\": 792, \"o\": \"m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 \" }, \"½\": { \"x_min\": 0, \"x_max\": 1050, \"ha\": 1149, \"o\": \"m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 \" }, \"Ρ\": { \"x_min\": 0, \"x_max\": 720, \"ha\": 783, \"o\": \"m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 \" }, \"'\": { \"x_min\": 0, \"x_max\": 139, \"ha\": 236, \"o\": \"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 \" }, \"ª\": { \"x_min\": 0, \"x_max\": 350, \"ha\": 397, \"o\": \"m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 \" }, \"΅\": { \"x_min\": 0, \"x_max\": 450, \"ha\": 553, \"o\": \"m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 \" }, \"T\": { \"x_min\": 0, \"x_max\": 777, \"ha\": 835, \"o\": \"m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 \" }, \"Φ\": { \"x_min\": 0, \"x_max\": 915, \"ha\": 997, \"o\": \"m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 \" }, \"⁋\": { \"x_min\": 0, \"x_max\": 0, \"ha\": 694 }, \"j\": { \"x_min\": -77.78125, \"x_max\": 167, \"ha\": 349, \"o\": \"m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 \" }, \"Σ\": { \"x_min\": 0, \"x_max\": 756.953125, \"ha\": 819, \"o\": \"m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 \" }, \"1\": { \"x_min\": 215.671875, \"x_max\": 574, \"ha\": 792, \"o\": \"m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 \" }, \"›\": { \"x_min\": 18.0625, \"x_max\": 774, \"ha\": 792, \"o\": \"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 \" }, \"<\": { \"x_min\": 17.984375, \"x_max\": 773.609375, \"ha\": 792, \"o\": \"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 \" }, \"£\": { \"x_min\": 0, \"x_max\": 704.484375, \"ha\": 801, \"o\": \"m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 \" }, \"t\": { \"x_min\": 0, \"x_max\": 367, \"ha\": 458, \"o\": \"m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 \" }, \"¬\": { \"x_min\": 0, \"x_max\": 706, \"ha\": 803, \"o\": \"m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 \" }, \"λ\": { \"x_min\": 0, \"x_max\": 750, \"ha\": 803, \"o\": \"m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 \" }, \"W\": { \"x_min\": 0, \"x_max\": 1263.890625, \"ha\": 1351, \"o\": \"m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 \" }, \">\": { \"x_min\": 18.0625, \"x_max\": 774, \"ha\": 792, \"o\": \"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 \" }, \"v\": { \"x_min\": 0, \"x_max\": 675.15625, \"ha\": 761, \"o\": \"m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 \" }, \"τ\": { \"x_min\": 0.28125, \"x_max\": 644.5, \"ha\": 703, \"o\": \"m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 \" }, \"ξ\": { \"x_min\": 0, \"x_max\": 624.9375, \"ha\": 699, \"o\": \"m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 \" }, \"&\": { \"x_min\": -3, \"x_max\": 894.25, \"ha\": 992, \"o\": \"m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 \" }, \"Λ\": { \"x_min\": 0, \"x_max\": 862.5, \"ha\": 942, \"o\": \"m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 \" }, \"I\": { \"x_min\": 41, \"x_max\": 180, \"ha\": 293, \"o\": \"m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 \" }, \"G\": { \"x_min\": 0, \"x_max\": 921, \"ha\": 1011, \"o\": \"m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 \" }, \"ΰ\": { \"x_min\": 0, \"x_max\": 617, \"ha\": 725, \"o\": \"m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 \" }, \"`\": { \"x_min\": 0, \"x_max\": 138.890625, \"ha\": 236, \"o\": \"m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 \" }, \"·\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 \" }, \"Υ\": { \"x_min\": 0.328125, \"x_max\": 819.515625, \"ha\": 889, \"o\": \"m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 \" }, \"r\": { \"x_min\": 0, \"x_max\": 355.5625, \"ha\": 432, \"o\": \"m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 \" }, \"x\": { \"x_min\": 0, \"x_max\": 675, \"ha\": 764, \"o\": \"m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 \" }, \"μ\": { \"x_min\": 0, \"x_max\": 696.609375, \"ha\": 747, \"o\": \"m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 \" }, \"h\": { \"x_min\": 0, \"x_max\": 615, \"ha\": 724, \"o\": \"m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 \" }, \".\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 \" }, \"φ\": { \"x_min\": -2, \"x_max\": 878, \"ha\": 974, \"o\": \"m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 \" }, \";\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 \" }, \"f\": { \"x_min\": 0, \"x_max\": 378, \"ha\": 472, \"o\": \"m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 \" }, \"“\": { \"x_min\": 1, \"x_max\": 348.21875, \"ha\": 454, \"o\": \"m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 \" }, \"A\": { \"x_min\": 0.03125, \"x_max\": 906.953125, \"ha\": 1008, \"o\": \"m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 \" }, \"6\": { \"x_min\": 53, \"x_max\": 739, \"ha\": 792, \"o\": \"m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 \" }, \"‘\": { \"x_min\": 1, \"x_max\": 139.890625, \"ha\": 236, \"o\": \"m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 \" }, \"ϊ\": { \"x_min\": -70, \"x_max\": 283, \"ha\": 361, \"o\": \"m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 \" }, \"π\": { \"x_min\": -0.21875, \"x_max\": 773.21875, \"ha\": 857, \"o\": \"m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 \" }, \"ά\": { \"x_min\": 0, \"x_max\": 765.5625, \"ha\": 809, \"o\": \"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 \" }, \"O\": { \"x_min\": 0, \"x_max\": 958, \"ha\": 1057, \"o\": \"m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 \" }, \"n\": { \"x_min\": 0, \"x_max\": 615, \"ha\": 724, \"o\": \"m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 \" }, \"3\": { \"x_min\": 54, \"x_max\": 737, \"ha\": 792, \"o\": \"m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 \" }, \"9\": { \"x_min\": 53, \"x_max\": 739, \"ha\": 792, \"o\": \"m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 \" }, \"l\": { \"x_min\": 41, \"x_max\": 166, \"ha\": 279, \"o\": \"m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 \" }, \"¤\": { \"x_min\": 40.09375, \"x_max\": 728.796875, \"ha\": 825, \"o\": \"m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 \" }, \"κ\": { \"x_min\": 0, \"x_max\": 632.328125, \"ha\": 679, \"o\": \"m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 \" }, \"4\": { \"x_min\": 48, \"x_max\": 742.453125, \"ha\": 792, \"o\": \"m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 \" }, \"p\": { \"x_min\": 0, \"x_max\": 685, \"ha\": 786, \"o\": \"m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 \" }, \"‡\": { \"x_min\": 0, \"x_max\": 777, \"ha\": 835, \"o\": \"m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 \" }, \"ψ\": { \"x_min\": 0, \"x_max\": 808, \"ha\": 907, \"o\": \"m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 \" }, \"η\": { \"x_min\": 0.78125, \"x_max\": 697, \"ha\": 810, \"o\": \"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 \" } }, \"cssFontWeight\": \"normal\", \"ascender\": 1189, \"underlinePosition\": -100, \"cssFontStyle\": \"normal\", \"boundingBox\": { \"yMin\": -334, \"xMin\": -111, \"yMax\": 1189, \"xMax\": 1672 }, \"resolution\": 1000, \"original_font_information\": { \"postscript_name\": \"Helvetiker-Regular\", \"version_string\": \"Version 1.00 2004 initial release\", \"vendor_url\": \"http://www.magenta.gr/\", \"full_font_name\": \"Helvetiker\", \"font_family_name\": \"Helvetiker\", \"copyright\": \"Copyright (c) Μagenta ltd, 2004\", \"description\": \"\", \"trademark\": \"\", \"designer\": \"\", \"designer_url\": \"\", \"unique_font_identifier\": \"Μagenta ltd:Helvetiker:22-10-104\", \"license_url\": \"http://www.ellak.gr/fonts/MgOpen/license.html\", \"license_description\": \"Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\\r\\n\\r\\nPermission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license (\\\"Fonts\\\") and associated documentation files (the \\\"Font Software\\\"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \\r\\n\\r\\nThe above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\\r\\n\\r\\nThe Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word \\\"MgOpen\\\", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\\r\\n\\r\\nThis License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the \\\"MgOpen\\\" name.\\r\\n\\r\\nThe Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \\r\\n\\r\\nTHE FONT SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.\", \"manufacturer_name\": \"Μagenta ltd\", \"font_sub_family_name\": \"Regular\" }, \"descender\": -334, \"familyName\": \"Helvetiker\", \"lineHeight\": 1522, \"underlineThickness\": 50 };\n","module.exports = __webpack_public_path__ + \"catalog/items/sofa/texture.jpg\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 200;\nconst DEPTH = 60;\nconst HEIGHT = 150;\n\n//colors\nconst white = new Three.MeshLambertMaterial({ color: 0xffffff });\nconst grey = new Three.MeshLambertMaterial({ color: 0xdddddd });\nconst grey2 = new Three.MeshLambertMaterial({ color: 0x414449 });\n\nexport default defineCatalogElement({\n  name: 'multimedia chalkboard',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'wood', 'metal'],\n    title: 'multimedia chalkboard',\n    description: 'multimedia chalkboard',\n    image: require('./lim.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 100\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' };\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH} style={rect_style} />\n        <text key='2' x='0' y='0' transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    const lim = new Three.Object3D();\n\n    const roundedRectShape = new Three.Shape();\n\n    const x = 0;\n    const y = 0;\n    const width = 5;\n    const height = 4;\n    const radius = 0.25;\n\n    roundedRectShape.moveTo(x, y + radius);\n    roundedRectShape.lineTo(x, y + height - radius);\n    roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n    roundedRectShape.lineTo(x + width - radius, y + height);\n    roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n    roundedRectShape.lineTo(x + width, y + radius);\n    roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n    roundedRectShape.lineTo(x + radius, y);\n    roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n    const extrudeSettings = {\n      steps: 1,\n      depth: 0.003125,\n      bevelEnabled: false,\n      bevelThickness: .4,\n      bevelSize: .4,\n      bevelSegments: 1\n    };\n\n    const geometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n    const mesh = new Three.Mesh(geometry, grey);\n    mesh.position.set(0, 1.2, 0);\n    lim.add(mesh);\n\n    const geometry2 = new Three.BoxGeometry(width - width / 11, height - height / 8, .003125);\n    const mesh2 = new Three.Mesh(geometry2, white);\n    mesh2.position.set(2.5, 3.2, 0.00125);\n    lim.add(mesh2);\n\n    const roundedRectShape2 = new Three.Shape();\n\n    const x2 = 0;\n    const y2 = 0;\n    const width2 = 1;\n    const height2 = .6;\n    const radius2 = 0.125;\n\n    roundedRectShape2.moveTo(x2, y2 + radius2);\n    roundedRectShape2.lineTo(x2, y2 + height2 - radius2);\n    roundedRectShape2.quadraticCurveTo(x2, y2 + height2, x2 + radius2, y2 + height2);\n    roundedRectShape2.lineTo(x2 + width2 - radius2, y2 + height2);\n    roundedRectShape2.quadraticCurveTo(x2 + width2, y2 + height2, x2 + width2, y2 + height2 - radius2);\n    roundedRectShape2.lineTo(x2 + width2, y2 + radius2);\n    roundedRectShape2.quadraticCurveTo(x2 + width2, y2, x2 + width2 - radius2, y2);\n    roundedRectShape2.lineTo(x2 + radius2, y2);\n    roundedRectShape2.quadraticCurveTo(x2, y2, x2, y2 + radius2);\n\n    const extrudeSettings2 = {\n      steps: 1,\n      depth: 0.003125,\n      bevelEnabled: false,\n      bevelThickness: .4,\n      bevelSize: .4,\n      bevelSegments: 1\n    };\n\n    const textureLoader = new Three.TextureLoader();\n    const etichettaImage = textureLoader.load(require('./example_lim.png'));\n\n    const geometryPlane = new Three.PlaneGeometry(4, 3);\n    const material = new Three.MeshLambertMaterial({ map: etichettaImage, transparent: true });\n    const plane = new Three.Mesh(geometryPlane, material);\n    plane.position.set(2.5, 3.1, -.0005);\n    plane.rotation.y += Math.PI;\n    lim.add(plane);\n\n    const geometry3 = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n    const mesh3 = new Three.Mesh(geometry3, grey);\n    mesh3.position.set(width / 2 - width / 10, 5.35, 0);\n    lim.add(mesh3);\n\n    const roundedRectShape3 = new Three.Shape();\n\n    const x3 = 0;\n    const y3 = 0;\n    const width3 = .45;\n    const height3 = .25;\n    const radius3 = 0.125;\n\n    roundedRectShape3.moveTo(x3, y3 + radius3);\n    roundedRectShape3.lineTo(x3, y3 + height3 - radius3);\n    roundedRectShape3.quadraticCurveTo(x3, y3 + height3, x3 + radius3, y3 + height3);\n    roundedRectShape3.lineTo(x3 + width3 - radius3, y3 + height3);\n    roundedRectShape3.quadraticCurveTo(x3 + width3, y3 + height3, x3 + width3, y3 + height3 - radius3);\n    roundedRectShape3.lineTo(x3 + width3, y3 + radius3);\n    roundedRectShape3.quadraticCurveTo(x3 + width3, y3, x3 + width3 - radius3, y3);\n    roundedRectShape3.lineTo(x3 + radius3, y3);\n    roundedRectShape3.quadraticCurveTo(x3, y3, x3, y3 + radius3);\n\n    const extrudeSettings3 = {\n      steps: 1,\n      depth: 0.0125,\n      bevelEnabled: false,\n      bevelThickness: .4,\n      bevelSize: .4,\n      bevelSegments: 1\n    };\n\n    const geometry4 = new Three.ExtrudeGeometry(roundedRectShape3, extrudeSettings3);\n    const mesh4 = new Three.Mesh(geometry4, grey2);\n    mesh4.position.set(width / 2 - width / 24, 5.45, -0.0125);\n    lim.add(mesh4);\n\n    const roundedRectShape4 = new Three.Shape();\n\n    const x4 = 0;\n    const y4 = 0;\n    const width4 = .4;\n    const height4 = .2;\n    const radius4 = 0.10;\n\n    roundedRectShape4.moveTo(x4, y4 + radius4);\n    roundedRectShape4.lineTo(x4, y4 + height4 - radius4);\n    roundedRectShape4.quadraticCurveTo(x4, y4 + height4, x4 + radius4, y4 + height4);\n    roundedRectShape4.lineTo(x4 + width4 - radius4, y4 + height4);\n    roundedRectShape4.quadraticCurveTo(x4 + width4, y4 + height4, x4 + width4, y4 + height4 - radius4);\n    roundedRectShape4.lineTo(x4 + width4, y4 + radius4);\n    roundedRectShape4.quadraticCurveTo(x4 + width4, y4, x4 + width4 - radius4, y4);\n    roundedRectShape4.lineTo(x4 + radius4, y4);\n    roundedRectShape4.quadraticCurveTo(x4, y4, x4, y4 + radius4);\n\n    const extrudeSettings4 = {\n      steps: 1,\n      depth: 0.0125,\n      bevelEnabled: false,\n      bevelThickness: .4,\n      bevelSize: .4,\n      bevelSegments: 1\n    };\n\n    const geometry5 = new Three.ExtrudeGeometry(roundedRectShape4, extrudeSettings4);\n    const mesh5 = new Three.Mesh(geometry5, grey2);\n    mesh5.position.set(width / 2 - width / 27, 5.5, -0.02);\n    lim.add(mesh5);\n\n\n    const supportGeometry = new Three.CylinderGeometry(0.025, 0.035, 0.1, 32, 32, false, 0, 2 * Math.PI);\n    const support = new Three.Mesh(supportGeometry, grey2);\n    support.position.set(width / 2 - width / 1024, 5.45, -0.018);\n    support.rotation.y += Math.PI / 2;\n    support.scale.set(.05, 1, 4);\n    lim.add(support);\n\n    const roundedRectShape5 = new Three.Shape();\n\n    const x5 = 0;\n    const y5 = 0;\n    const width5 = .4;\n    const height5 = .2;\n    const radius5 = 0.10;\n\n    roundedRectShape5.moveTo(x5, y5);\n    roundedRectShape5.lineTo(width5, y5);\n    roundedRectShape5.lineTo(width5, height5);\n    roundedRectShape5.lineTo(x5, height5);\n\n    const extrudeSettings5 = {\n      steps: 1,\n      depth: 0.01,\n      bevelEnabled: false,\n      bevelThickness: .4,\n      bevelSize: .4,\n      bevelSegments: 1\n    };\n\n    const geometry6 = new Three.ExtrudeGeometry(roundedRectShape5, extrudeSettings5);\n    const mesh6 = new Three.Mesh(geometry6, grey2);\n    mesh6.position.set(width / 2 - width / 24.45, 5.2, -0.0225);\n    lim.add(mesh6);\n\n    const supportGeometry2 = new Three.CylinderGeometry(0.029, 0.029, 0.4, 32, 32, false, 0, 2 * Math.PI);\n    const support2 = new Three.Mesh(supportGeometry2, grey2);\n    support2.position.set(width / 2 - width / 1024, 5.2, -0.021);\n    support2.rotation.y += Math.PI;\n    support2.rotation.x += Math.PI / 2;\n    support2.rotation.z += Math.PI / 2;\n    support2.scale.set(.05, 1, 4);\n    lim.add(support2);\n\n    const value = new Three.Box3().setFromObject(lim);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lim, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lim.add(bbox);\n    }\n\n    lim.rotation.y += Math.PI;\n    lim.position.y += -HEIGHT / 3.2 + newAltitude;\n    lim.position.x += WIDTH / 2;\n    lim.position.z += -DEPTH / 3.5;\n\n    lim.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    return lim;\n  }\n});\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.sTeBNqk5newgqVD8g87r {\n  border-bottom: 1px solid #aaa;\n  margin: 0 0 10px;\n  padding: 0;\n}\n\n.OEej9jwFFwmLITBIMj6u {\n  display: inline-block;\n  border: 1px solid transparent;\n  border-bottom: none;\n  bottom: -1px;\n  position: relative;\n  list-style: none;\n  padding: 6px 12px;\n  cursor: pointer;\n}\n\n.MvtodN4Rv39YXBOa2HUA,\n.OEej9jwFFwmLITBIMj6u:focus {\n  border-color: #aaa;\n  color: #1CA6FC;\n  outline: none;\n}\n\n.jUSIlOmpOmlfpknzPEPG {\n  display: none;\n}\n\n.bexZAQuz9lOaDwB97TvY {\n  display: block;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./../src/styles/tabs.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,6BAA6B;EAC7B,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,qBAAqB;EACrB,6BAA6B;EAC7B,mBAAmB;EACnB,YAAY;EACZ,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;;EAEE,kBAAkB;EAClB,cAAc;EACd,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB\",\"sourcesContent\":[\".react-tabs__tab-list {\\n  border-bottom: 1px solid #aaa;\\n  margin: 0 0 10px;\\n  padding: 0;\\n}\\n\\n.react-tabs__tab {\\n  display: inline-block;\\n  border: 1px solid transparent;\\n  border-bottom: none;\\n  bottom: -1px;\\n  position: relative;\\n  list-style: none;\\n  padding: 6px 12px;\\n  cursor: pointer;\\n}\\n\\n.react-tabs__tab--selected,\\n.react-tabs__tab:focus {\\n  border-color: #aaa;\\n  color: #1CA6FC;\\n  outline: none;\\n}\\n\\n.react-tabs__tab-panel {\\n  display: none;\\n}\\n\\n.react-tabs__tab-panel--selected {\\n  display: block;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"react-tabs__tab-list\": `sTeBNqk5newgqVD8g87r`,\n\t\"react-tabs__tab\": `OEej9jwFFwmLITBIMj6u`,\n\t\"react-tabs__tab--selected\": `MvtodN4Rv39YXBOa2HUA`,\n\t\"react-tabs__tab-panel\": `jUSIlOmpOmlfpknzPEPG`,\n\t\"react-tabs__tab-panel--selected\": `bexZAQuz9lOaDwB97TvY`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\n//color\nconst grey = new Three.MeshLambertMaterial({ color: 0xd3d3d3 });\nconst white = new Three.MeshLambertMaterial({ color: 0xf5f5f5 });\nconst darkGrey = new Three.MeshLambertMaterial({ color: 0x3d3d3d });\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst boxMaterials = [grey, darkGrey, grey, grey, grey, grey];\nconst boxMaterials2 = [grey, grey, grey, grey, grey, darkGrey];\nconst boxMaterials3 = [grey, grey, grey, grey, darkGrey, grey];\n\nconst textureLoader = new Three.TextureLoader();\nconst lcdTexture = textureLoader.load(require('./monitor.png'));\n\n//dimensions\nconst width = 258;\nconst depth = 87;\nconst height = 195;\nconst filterWidth = 48;\nconst filterDepth = 10;\nconst filterHeight = 52;\nconst gridThickness = 3;\n\nfunction makeObjectMaxLOD() {\n  const schneider = new Three.Mesh();\n\n  const gridVerticalElemGeometry = new Three.BoxGeometry(gridThickness / 2, filterHeight, filterDepth);\n  const gridHorizontalElemGeometry = new Three.BoxGeometry(filterWidth, gridThickness, filterDepth);\n\n  const filter = new Three.Object3D();\n\n  for (let i = 0.25; i < 48; i += 3.32) {\n    const gridVerticalElem = new Three.Mesh(gridVerticalElemGeometry, white);\n    gridVerticalElem.position.x = i;\n    gridVerticalElem.position.y = 26;\n    filter.add(gridVerticalElem);\n  }\n\n  for (let i = 0; i < 52; i += 7.4) {\n    const gridHorizontalElem = new Three.Mesh(gridHorizontalElemGeometry, white);\n    gridHorizontalElem.position.x = 23.5;\n    gridHorizontalElem.position.y = i;\n    filter.add(gridHorizontalElem);\n  }\n\n  for (let k = 0; k <= 54; k += 46) {\n    for (let j = 10; j < 240; j += 48) {\n      const filterClone = filter.clone();\n      filterClone.position.x += j;\n      filterClone.position.y += k;\n      filterClone.rotation.x -= Math.PI / 6;\n      if (k === 0)\n        filterClone.position.z += 18;\n      else\n        filterClone.position.z -= 10;\n      schneider.add(filterClone);\n    }\n  }\n\n  const panelSideElemGeometry = new Three.BoxGeometry(5, height, depth);\n  const panelSideElemLeft = new Three.Mesh(panelSideElemGeometry, boxMaterials);\n  panelSideElemLeft.rotation.y += Math.PI;\n  schneider.add(panelSideElemLeft);\n\n  const panelSideElemRight = new Three.Mesh(panelSideElemGeometry, boxMaterials);\n  panelSideElemRight.position.x += 258;\n  schneider.add(panelSideElemRight);\n\n  const panelSideBackElemGeometry = new Three.BoxGeometry(width, height, 5);\n  const panelSideElemBack = new Three.Mesh(panelSideBackElemGeometry, boxMaterials3);\n  panelSideElemBack.position.x += 129;\n  panelSideElemBack.position.z -= 43.5;\n  schneider.add(panelSideElemBack);\n\n  const boxElemGeometry = new Three.BoxGeometry(width / 3, height / 3, depth / 8);\n  const boxElem = new Three.Mesh(boxElemGeometry, grey);\n  boxElem.position.x += 212;\n  boxElem.position.y += 65;\n  boxElem.position.z += 35;\n  schneider.add(boxElem);\n\n  const panelSideFrontElemGeometry = new Three.BoxGeometry(width / 3, height, 5);\n  const panelSideElemFront_P1 = new Three.Mesh(panelSideFrontElemGeometry, boxMaterials2);\n  panelSideElemFront_P1.position.x += 43.5;\n  panelSideElemFront_P1.position.z += 43.5;\n  schneider.add(panelSideElemFront_P1);\n\n  const panelSideElemFront_P2 = new Three.Mesh(panelSideFrontElemGeometry, boxMaterials2);\n  panelSideElemFront_P2.position.x += 130;\n  panelSideElemFront_P2.position.z += 43.5;\n  schneider.add(panelSideElemFront_P2);\n\n  const panelSideElemFront_P3 = new Three.Mesh(panelSideFrontElemGeometry, boxMaterials2);\n  panelSideElemFront_P3.position.x += 217;\n  panelSideElemFront_P3.position.z += 43.5;\n  schneider.add(panelSideElemFront_P3);\n\n  const planeGeometryFront = new Three.PlaneGeometry(width / 16, height / 12);\n  const planeMaterialFront = new Three.MeshLambertMaterial({ map: lcdTexture, transparent: true });\n\n  const planeGeometryFront1 = new Three.PlaneGeometry(width / 8, height / 3);\n  const panelBase = new Three.Mesh(planeGeometryFront1, darkGrey);\n  panelBase.position.set(217, 65, 46.5);\n  schneider.add(panelBase);\n\n  const lcd = new Three.Mesh(planeGeometryFront, planeMaterialFront);\n  lcd.position.set(217, 60, 46.55);\n  schneider.add(lcd);\n\n  const panelSideMiddleElemGeometry = new Three.BoxGeometry(width, 5, depth);\n  const panelSideElemMiddle = new Three.Mesh(panelSideMiddleElemGeometry, grey);\n  panelSideElemMiddle.position.x += 129;\n  panelSideElemMiddle.position.y -= 10;\n  schneider.add(panelSideElemMiddle);\n\n  const panelSideElemFooter = new Three.Mesh(panelSideMiddleElemGeometry, black);\n  panelSideElemFooter.position.x += 129;\n  panelSideElemFooter.position.y -= 97.5;\n  schneider.add(panelSideElemFooter);\n\n  return schneider\n}\n\nfunction makeObjectMinLOD() {\n  const schneider = new Three.Mesh();\n\n  const gridVerticalElemGeometry = new Three.BoxGeometry(gridThickness / 2, filterHeight, filterDepth);\n  const gridHorizontalElemGeometry = new Three.BoxGeometry(filterWidth, gridThickness, filterDepth);\n\n  const filter = new Three.Object3D();\n\n  for (let i = 0.25; i < 48; i += 3.32) {\n    const gridVerticalElem = new Three.Mesh(gridVerticalElemGeometry, white);\n    gridVerticalElem.position.x = i;\n    gridVerticalElem.position.y = 26;\n    filter.add(gridVerticalElem);\n  }\n\n  for (let i = 0; i < 52; i += 7.4) {\n    const gridHorizontalElem = new Three.Mesh(gridHorizontalElemGeometry, white);\n    gridHorizontalElem.position.x = 23.5;\n    gridHorizontalElem.position.y = i;\n    filter.add(gridHorizontalElem);\n  }\n\n  for (let k = 0; k <= 54; k += 46) {\n    for (let j = 10; j < 240; j += 48) {\n      const filterClone = filter.clone();\n      filterClone.position.x += j;\n      filterClone.position.y += k;\n      filterClone.rotation.x -= Math.PI / 6;\n      if (k === 0)\n        filterClone.position.z += 18;\n      else\n        filterClone.position.z -= 10;\n      schneider.add(filterClone);\n    }\n  }\n\n  const panelSideElemGeometry = new Three.BoxGeometry(5, height, depth);\n  const panelSideElemLeft = new Three.Mesh(panelSideElemGeometry, boxMaterials);\n  panelSideElemLeft.rotation.y += Math.PI;\n  schneider.add(panelSideElemLeft);\n\n  const panelSideElemRight = new Three.Mesh(panelSideElemGeometry, boxMaterials);\n  panelSideElemRight.position.x += 258;\n  schneider.add(panelSideElemRight);\n\n  const panelSideBackElemGeometry = new Three.BoxGeometry(width, height, 5);\n  const panelSideElemBack = new Three.Mesh(panelSideBackElemGeometry, boxMaterials3);\n  panelSideElemBack.position.x += 129;\n  panelSideElemBack.position.z -= 43.5;\n  schneider.add(panelSideElemBack);\n\n  const boxElemGeometry = new Three.BoxGeometry(width / 3, height / 3, depth / 8);\n  const boxElem = new Three.Mesh(boxElemGeometry, grey);\n  boxElem.position.x += 212;\n  boxElem.position.y += 65;\n  boxElem.position.z += 35;\n  schneider.add(boxElem);\n\n  const panelSideFrontElemGeometry = new Three.BoxGeometry(width / 3, height, 5);\n  const panelSideElemFront_P1 = new Three.Mesh(panelSideFrontElemGeometry, boxMaterials2);\n  panelSideElemFront_P1.position.x += 43.5;\n  panelSideElemFront_P1.position.z += 43.5;\n  schneider.add(panelSideElemFront_P1);\n\n  const panelSideElemFront_P2 = new Three.Mesh(panelSideFrontElemGeometry, boxMaterials2);\n  panelSideElemFront_P2.position.x += 130;\n  panelSideElemFront_P2.position.z += 43.5;\n  schneider.add(panelSideElemFront_P2);\n\n  const panelSideElemFront_P3 = new Three.Mesh(panelSideFrontElemGeometry, boxMaterials2);\n  panelSideElemFront_P3.position.x += 217;\n  panelSideElemFront_P3.position.z += 43.5;\n  schneider.add(panelSideElemFront_P3);\n\n  const planeGeometryFront = new Three.PlaneGeometry(width / 16, height / 12);\n  const planeMaterialFront = new Three.MeshLambertMaterial({ map: lcdTexture, transparent: true });\n\n  const planeGeometryFront1 = new Three.PlaneGeometry(width / 8, height / 3);\n  const panelBase = new Three.Mesh(planeGeometryFront1, darkGrey);\n  panelBase.position.set(217, 65, 46.5);\n  schneider.add(panelBase);\n\n  const lcd = new Three.Mesh(planeGeometryFront, planeMaterialFront);\n  lcd.position.set(217, 60, 46.55);\n  schneider.add(lcd);\n\n  const panelSideMiddleElemGeometry = new Three.BoxGeometry(width, 5, depth);\n  const panelSideElemMiddle = new Three.Mesh(panelSideMiddleElemGeometry, grey);\n  panelSideElemMiddle.position.x += 129;\n  panelSideElemMiddle.position.y -= 10;\n  schneider.add(panelSideElemMiddle);\n\n  const panelSideElemFooter = new Three.Mesh(panelSideMiddleElemGeometry, black);\n  panelSideElemFooter.position.x += 129;\n  panelSideElemFooter.position.y -= 97.5;\n  schneider.add(panelSideElemFooter);\n\n  return schneider\n}\n\nexport default defineCatalogElement({\n  name: \"schneider\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['metal'],\n    title: \"schneider\",\n    description: \"schneider\",\n    image: require('./schneider.png')\n  },\n  properties: {\n    patternColor: {\n      label: \"pattern colori\",\n      type: \"color\",\n      defaultValue: \"#f5f4f4\"\n    },\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const fillValue = element.selected ? \"#99c3fb\" : element.properties.patternColor;\n\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n    return (\n      <g transform={`translate(${-width / 2},${-depth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={width} height={depth}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: fillValue }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${width / 2}, ${depth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.name}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /**************** LOD max ***********************/\n\n    const rackMaxLOD = new Three.Object3D();\n\n    const objectMaxLOD = makeObjectMaxLOD();\n    rackMaxLOD.add(objectMaxLOD.clone());\n    rackMaxLOD.rotation.y = Math.PI;\n    rackMaxLOD.position.x += width / 2;\n    rackMaxLOD.position.y += height / 1.8 + newAltitude;\n\n    /**************** LOD min ***********************/\n\n    const rackMinLOD = new Three.Object3D();\n    const objectMinLOD = makeObjectMinLOD();\n    rackMinLOD.add(objectMinLOD.clone());\n    rackMinLOD.rotation.y = Math.PI;\n    rackMinLOD.position.x += width / 2;\n    rackMinLOD.position.y += height / 1.8 + newAltitude;\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(rackMaxLOD, 100);\n    lod.addLevel(rackMinLOD, 1800);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/holes/window-curtain/window-curtain.jpg\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 80;\nconst DEPTH = 100;\nconst HEIGHT = 80;\n\nconst textureLoader = new Three.TextureLoader();\nconst steel = textureLoader.load(require('./steel.jpg'));\nconst darkSteel = textureLoader.load(require('./darksteel.jpg'));\nconst logo = textureLoader.load(require('./logo.jpg'));\nconst steelTexture = new Three.MeshLambertMaterial({ map: steel });\nconst darkSteelTexture = new Three.MeshLambertMaterial({ map: darkSteel });\nconst logoTexture = new Three.MeshLambertMaterial({ map: logo });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const kitchen = new Three.Mesh();\n\n  //base\n  const body = new Three.Mesh(new Three.BoxGeometry(1, 0.05, 1.5), steelTexture);\n  body.position.set(0, 0.15, 0);\n  kitchen.add(body);\n\n  //foot\n  for (let gx = -0.45; gx <= 0.45; gx += 0.9) {\n    for (let gz = -0.7125; gz <= 0.7125; gz += 1.425) {\n      const foot = new Three.Mesh(new Three.CylinderGeometry(0.05, 0.05, 0.05, 4), steelTexture)\n      foot.position.set(gx, -0.05, gz);\n      foot.rotation.y = 0.25 * Math.PI;\n      body.add(foot)\n    }\n  }\n\n  //back\n  const back = new Three.Mesh(new Three.BoxGeometry(0.05, 1, 1.5), steelTexture);\n  back.position.set(0.475, 0.525, 0);\n  body.add(back);\n\n  //side\n  const side1 = new Three.Mesh(new Three.BoxGeometry(1, 1, 0.05), steelTexture);\n  side1.position.set(0, 0.525, 0.725);\n  body.add(side1);\n\n  const side2 = new Three.Mesh(new Three.BoxGeometry(1, 1, 0.05), steelTexture);\n  side2.position.set(0, 0.525, -0.725);\n  body.add(side2);\n\n  //top\n  const top = new Three.Mesh(new Three.BoxGeometry(1, 0.20, 1.5), steelTexture);\n  top.position.set(0, 1.1, 0);\n  body.add(top);\n\n  //logo\n  const logo = new Three.Mesh(new Three.PlaneGeometry(0.1, 0.05), logoTexture);\n  logo.position.set(-0.51, 1.13, 0);\n  logo.rotation.y = -0.5 * Math.PI;\n  body.add(logo);\n\n  //front\n  const front = new Three.Mesh(new Three.BoxGeometry(0.05, 0.99, 1.4), steelTexture);\n  front.position.set(-0.47, 0.525, 0);\n  body.add(front);\n\n  //oven\n  const oven = new Three.Mesh(new Three.BoxGeometry(0.05, 0.9, 1.3), steelTexture);\n  oven.position.set(-0.53, 0.525, 0);\n  body.add(oven);\n\n  //handle\n  const handle1 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 1), darkSteelTexture);\n  handle1.position.set(-0.6, 0.85, 0);\n  handle1.rotation.x = 0.5 * Math.PI;\n  body.add(handle1);\n\n  const handle2 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), darkSteelTexture);\n  handle2.position.set(-0.56, 0.85, -0.4);\n  handle2.rotation.z = 0.5 * Math.PI;\n  body.add(handle2);\n\n  const handle3 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), darkSteelTexture);\n  handle3.position.set(-0.56, 0.85, 0.4);\n  handle3.rotation.z = 0.5 * Math.PI;\n  body.add(handle3);\n\n  //knob\n  for (let gz = -0.6; gz <= 0.65; gz += 0.3) {\n    const knob = new Three.Mesh(new Three.CylinderGeometry(0.03, 0.03, 0.02, 32), darkSteelTexture);\n    knob.position.set(-0.51, 1.05, gz);\n    knob.rotation.z = 0.5 * Math.PI;\n    body.add(knob);\n\n    const knob_p2 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.03, 0.01), darkSteelTexture);\n    knob_p2.position.set(0, 0.02, 0);\n    knob.add(knob_p2)\n  }\n\n  //fire\n  for (let gx = -0.22; gx <= 0.22; gx += 0.44) {\n    for (let gz = -0.45; gz <= 0.45; gz += 0.9) {\n      const fire = new Three.Mesh(new Three.CylinderGeometry(0.08, 0.1, 0.02, 32), darkSteelTexture)\n      fire.position.set(gx, 1.21, gz);\n      body.add(fire)\n    }\n  }\n\n  //central fire\n  const centralFire = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.12, 0.02, 32), darkSteelTexture);\n  centralFire.position.set(0, 1.21, 0);\n  body.add(centralFire);\n\n\n  //long side grid\n  for (let gx = -0.45; gx <= 0.45; gx += 0.45) {\n    if (gx !== 0) {\n      const longSideGrid = new Three.Mesh(new Three.BoxGeometry(0.03, 0.05, 1.38), darkSteelTexture);\n      longSideGrid.position.set(gx, 1.21, 0);\n      body.add(longSideGrid)\n    }\n    else {\n      for (let gz = -0.46; gz <= 0.68; gz += 0.90) {\n        const longSideGrid2 = new Three.Mesh(new Three.BoxGeometry(0.03, 0.05, 0.46), darkSteelTexture);\n        longSideGrid2.position.set(gx, 1.21, gz);\n        body.add(longSideGrid2)\n      }\n    }\n  }\n\n  //short side grid\n  for (let gz = -0.675; gz <= 0.675; gz += 0.45) {\n    const shortSideGrid = new Three.Mesh(new Three.BoxGeometry(0.9, 0.05, 0.03), darkSteelTexture);\n    shortSideGrid.position.set(0, 1.21, gz);\n    body.add(shortSideGrid)\n  }\n\n  //long side grid central\n  for (let gx = -0.22; gx <= 0.22; gx += 0.44) {\n    for (let gz = -0.59; gz <= 0.68; gz += 0.90) {\n      const lsgc1 = new Three.Mesh(new Three.BoxGeometry(0.03, 0.01, 0.2), darkSteelTexture);\n      lsgc1.position.set(gx, 1.24, gz);\n      body.add(lsgc1)\n    }\n    for (let gz = 0.59; gz >= -0.68; gz -= 0.90) {\n      const lsgc2 = new Three.Mesh(new Three.BoxGeometry(0.03, 0.01, 0.2), darkSteelTexture);\n      lsgc2.position.set(gx, 1.24, gz);\n      body.add(lsgc2)\n    }\n  }\n\n  //short side grid central\n  for (let gx = -0.365; gx <= 0.345; gx += 0.7) {\n    for (let gz = -0.45; gz <= 0.45; gz += 0.45) {\n      if (gz !== 0) {\n        const ssgc1 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.02, 0.03), darkSteelTexture);\n        if (gx < 0)\n          ssgc1.position.set(gx, 1.24, gz);\n        else\n          ssgc1.position.set(gx + 0.03, 1.24, gz);\n        body.add(ssgc1)\n      }\n      else {\n        const ssgc2 = new Three.Mesh(new Three.BoxGeometry(0.4, 0.02, 0.03), darkSteelTexture);\n        if (gx < 0)\n          ssgc2.position.set(gx + 0.1, 1.24, gz);\n        else\n          ssgc2.position.set(gx - 0.07, 1.24, gz);\n        body.add(ssgc2)\n      }\n    }\n  }\n\n  //long side grid inside\n  for (let gz = -0.45; gz <= 0.45; gz += 0.9) {\n    const lsgi = new Three.Mesh(new Three.BoxGeometry(0.35, 0.02, 0.03), darkSteelTexture);\n    lsgi.position.set(0, 1.24, gz);\n    body.add(lsgi)\n  }\n\n  //central peace\n  for (let gz = -0.14; gz <= 0.14; gz += 0.28) {\n    const cp = new Three.Mesh(new Three.BoxGeometry(0.03, 0.02, 0.2), darkSteelTexture);\n    cp.position.set(0, 1.25, gz);\n    body.add(cp)\n  }\n\n  return kitchen\n}\n\nfunction makeObjectMinLOD() {\n  const kitchen = new Three.Mesh();\n\n  //base\n  const body = new Three.Mesh(new Three.BoxGeometry(1, 0.05, 1.5), steelTexture);\n  body.position.set(0, 0.15, 0);\n  kitchen.add(body);\n\n  //foot\n  for (let gx = -0.45; gx <= 0.45; gx += 0.9) {\n    for (let gz = -0.7125; gz <= 0.7125; gz += 1.425) {\n      const foot = new Three.Mesh(new Three.CylinderGeometry(0.05, 0.05, 0.05, 4), steelTexture)\n      foot.position.set(gx, -0.05, gz);\n      foot.rotation.y = 0.25 * Math.PI;\n      body.add(foot)\n    }\n  }\n\n  //back\n  const back = new Three.Mesh(new Three.BoxGeometry(0.05, 1, 1.5), steelTexture);\n  back.position.set(0.475, 0.525, 0);\n  body.add(back);\n\n  //side\n  const side1 = new Three.Mesh(new Three.BoxGeometry(1, 1, 0.05), steelTexture);\n  side1.position.set(0, 0.525, 0.725);\n  body.add(side1);\n\n  const side2 = new Three.Mesh(new Three.BoxGeometry(1, 1, 0.05), steelTexture);\n  side2.position.set(0, 0.525, -0.725);\n  body.add(side2);\n\n  //top\n  const top = new Three.Mesh(new Three.BoxGeometry(1, 0.20, 1.5), steelTexture);\n  top.position.set(0, 1.1, 0);\n  body.add(top);\n\n  //logo\n  const logo = new Three.Mesh(new Three.PlaneGeometry(0.1, 0.05), logoTexture);\n  logo.position.set(-0.51, 1.13, 0);\n  logo.rotation.y = -0.5 * Math.PI;\n  body.add(logo);\n\n  //front\n  const front = new Three.Mesh(new Three.BoxGeometry(0.05, 0.99, 1.4), steelTexture);\n  front.position.set(-0.47, 0.525, 0);\n  body.add(front);\n\n  //oven\n  const oven = new Three.Mesh(new Three.BoxGeometry(0.05, 0.9, 1.3), steelTexture);\n  oven.position.set(-0.53, 0.525, 0);\n  body.add(oven);\n\n  //handle\n  const handle1 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 1), darkSteelTexture);\n  handle1.position.set(-0.6, 0.85, 0);\n  handle1.rotation.x = 0.5 * Math.PI;\n  body.add(handle1);\n\n  const handle2 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), darkSteelTexture);\n  handle2.position.set(-0.56, 0.85, -0.4);\n  handle2.rotation.z = 0.5 * Math.PI;\n  body.add(handle2);\n\n  const handle3 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06), darkSteelTexture);\n  handle3.position.set(-0.56, 0.85, 0.4);\n  handle3.rotation.z = 0.5 * Math.PI;\n  body.add(handle3);\n\n  //knob\n  for (let gz = -0.6; gz <= 0.65; gz += 0.3) {\n    const knob = new Three.Mesh(new Three.CylinderGeometry(0.03, 0.03, 0.02, 32), darkSteelTexture);\n    knob.position.set(-0.51, 1.05, gz);\n    knob.rotation.z = 0.5 * Math.PI;\n    body.add(knob);\n\n    const knob_p2 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.03, 0.01), darkSteelTexture);\n    knob_p2.position.set(0, 0.02, 0);\n    knob.add(knob_p2)\n  }\n\n  //fire\n  for (let gx = -0.22; gx <= 0.22; gx += 0.44) {\n    for (let gz = -0.45; gz <= 0.45; gz += 0.9) {\n      const fire = new Three.Mesh(new Three.CylinderGeometry(0.08, 0.1, 0.02, 32), darkSteelTexture)\n      fire.position.set(gx, 1.21, gz);\n      body.add(fire)\n    }\n  }\n\n  //central fire\n  const centralFire = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.12, 0.02, 32), darkSteelTexture);\n  centralFire.position.set(0, 1.21, 0);\n  body.add(centralFire);\n\n  //long side grid\n  for (let gx = -0.45; gx <= 0.45; gx += 0.45) {\n    if (gx !== 0) {\n      const longSideGrid = new Three.Mesh(new Three.BoxGeometry(0.03, 0.05, 1.38), darkSteelTexture);\n      longSideGrid.position.set(gx, 1.21, 0);\n      body.add(longSideGrid)\n    } else {\n      for (let gz = -0.46; gz <= 0.68; gz += 0.90) {\n        const longSideGrid2 = new Three.Mesh(new Three.BoxGeometry(0.03, 0.05, 0.46), darkSteelTexture);\n        longSideGrid2.position.set(gx, 1.21, gz);\n        body.add(longSideGrid2)\n      }\n    }\n  }\n\n  //short side grid\n  for (let gz = -0.675; gz <= 0.675; gz += 0.45) {\n    const shortSideGrid = new Three.Mesh(new Three.BoxGeometry(0.9, 0.05, 0.03), darkSteelTexture);\n    shortSideGrid.position.set(0, 1.21, gz);\n    body.add(shortSideGrid)\n  }\n\n  //long side grid central\n  for (let gx = -0.22; gx <= 0.22; gx += 0.44) {\n    for (let gz = -0.59; gz <= 0.68; gz += 0.90) {\n      const lsgc1 = new Three.Mesh(new Three.BoxGeometry(0.03, 0.01, 0.2), darkSteelTexture);\n      lsgc1.position.set(gx, 1.24, gz);\n      body.add(lsgc1)\n    }\n    for (let gz = 0.59; gz >= -0.68; gz -= 0.90) {\n      const lsgc2 = new Three.Mesh(new Three.BoxGeometry(0.03, 0.01, 0.2), darkSteelTexture);\n      lsgc2.position.set(gx, 1.24, gz);\n      body.add(lsgc2)\n    }\n  }\n\n  //short side grid central\n  for (let gx = -0.365; gx <= 0.345; gx += 0.7) {\n    for (let gz = -0.45; gz <= 0.45; gz += 0.45) {\n      if (gz !== 0) {\n        const ssgc1 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.02, 0.03), darkSteelTexture);\n        if (gx < 0)\n          ssgc1.position.set(gx, 1.24, gz);\n        else\n          ssgc1.position.set(gx + 0.03, 1.24, gz);\n        body.add(ssgc1)\n      }\n      else {\n        const ssgc2 = new Three.Mesh(new Three.BoxGeometry(0.4, 0.02, 0.03), darkSteelTexture);\n        if (gx < 0)\n          ssgc2.position.set(gx + 0.1, 1.24, gz);\n        else\n          ssgc2.position.set(gx - 0.07, 1.24, gz);\n        body.add(ssgc2)\n      }\n    }\n  }\n\n  //long side grid inside\n  for (let gz = -0.45; gz <= 0.45; gz += 0.9) {\n    const lsgi = new Three.Mesh(new Three.BoxGeometry(0.35, 0.02, 0.03), darkSteelTexture);\n    lsgi.position.set(0, 1.24, gz);\n    body.add(lsgi)\n  }\n\n  //central peace\n  for (let gz = -0.14; gz <= 0.14; gz += 0.28) {\n    const cp = new Three.Mesh(new Three.BoxGeometry(0.03, 0.02, 0.2), darkSteelTexture);\n    cp.position.set(0, 1.25, gz);\n    body.add(cp)\n  }\n\n  return kitchen\n}\n\nexport default defineCatalogElement({\n  name: \"kitchen\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"kitchen\",\n    description: \"kitchen\",\n    image: require('./kitchen.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /************ lod max ****************/\n\n    const kitchenMaxLOD = new Three.Object3D();\n    kitchenMaxLOD.add(objectMaxLOD.clone());\n\n    const valuePosition = new Three.Box3().setFromObject(kitchenMaxLOD);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    kitchenMaxLOD.position.y += newAltitude;\n    kitchenMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n\n    /************ lod min ****************/\n\n    const kitchenMinLOD = new Three.Object3D();\n    kitchenMinLOD.add(objectMinLOD.clone());\n    kitchenMinLOD.position.y += newAltitude;\n    kitchenMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(kitchenMaxLOD, 200);\n    lod.addLevel(kitchenMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst RADIUS = 15;\nconst HEIGHT = 60;\n\n//colors\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst red = new Three.MeshLambertMaterial({ color: 0xff0000 });\nconst grey = new Three.MeshLambertMaterial({ color: 0xCCCCCC });\nconst yellow = new Three.MeshLambertMaterial({ color: 0xffff00 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMiddleLOD = makeObjectMiddleLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const bodyGeometry = new Three.CylinderGeometry(0.1, 0.1, 0.5, 32);\n  const body = new Three.Mesh(bodyGeometry, red);\n  body.position.set(0, 1, 0);\n\n  const bodyGeometry2 = new Three.CylinderGeometry(0.11, 0.11, 0.03, 32);\n  const lock = new Three.Mesh(bodyGeometry2, black);\n  lock.position.set(0, -0.2, 0);\n  body.add(lock);\n\n  const geometrySphereUp = new Three.SphereGeometry(0.1, 32, 32);\n  const sphereUp = new Three.Mesh(geometrySphereUp, red);\n  sphereUp.position.set(0, 0.25, 0);\n  body.add(sphereUp);\n\n  const cylinderGeometry = new Three.CylinderGeometry(0.015, 0.025, 0.05, 32);\n  const vent_p1 = new Three.Mesh(cylinderGeometry, black);\n  vent_p1.position.z = -0.13;\n  vent_p1.position.y = -0.23;\n  body.add(vent_p1);\n\n  const cylinderGeometry1 = new Three.CylinderGeometry(0.01, 0.01, 0.02, 32);\n  const vent_p2 = new Three.Mesh(cylinderGeometry1, grey);\n  vent_p2.position.z = -0.13;\n  vent_p2.position.y = -0.2;\n  body.add(vent_p2);\n\n  const cylinderGeometry2 = new Three.CylinderGeometry(0.015, 0.02, 0.04, 32);\n  const cylinder2 = new Three.Mesh(cylinderGeometry2, black);\n  cylinder2.position.set(0, 0.35, 0);\n  body.add(cylinder2);\n\n  const cylinderGeometry3 = new Three.CylinderGeometry(0.01, 0.01, 0.02, 32);\n  const cylinder3 = new Three.Mesh(cylinderGeometry3, grey);\n  cylinder3.position.set(0, 0.38, 0);\n  body.add(cylinder3);\n\n  const cylinderGeometry4 = new Three.CylinderGeometry(0.005, 0.005, 0.02, 32);\n  const cylinder4 = new Three.Mesh(cylinderGeometry4, grey);\n  cylinder4.position.set(-0.01, 0.38, 0);\n  cylinder4.rotation.z += Math.PI / 2;\n  body.add(cylinder4);\n\n  const cylinderGeometry5 = new Three.CylinderGeometry(0.02, 0.02, 0.01, 32);\n  const cylinder5 = new Three.Mesh(cylinderGeometry5, grey);\n  cylinder5.position.set(-0.02, 0.38, 0);\n  cylinder5.rotation.z += Math.PI / 2;\n  body.add(cylinder5);\n\n  const textureLoader = new Three.TextureLoader();\n  const gageImage = textureLoader.load(require('./gage-image.png'));\n\n  const geometry2 = new Three.PlaneGeometry(0.04, 0.04);\n  const material2 = new Three.MeshLambertMaterial({ map: gageImage, transparent: true });\n  const gage = new Three.Mesh(geometry2, material2);\n  gage.position.set(-0.0255, 0.38, 0);\n  gage.rotation.y = -Math.PI / 2;\n  body.add(gage);\n\n  const cylinderGeometry6 = new Three.CylinderGeometry(0.005, 0.005, 0.03, 32);\n  const cylinder6 = new Three.Mesh(cylinderGeometry6, grey);\n  cylinder6.position.set(0, 0.38, -0.01);\n  cylinder6.rotation.z += Math.PI / 2;\n  cylinder6.rotation.y += Math.PI / 2;\n  body.add(cylinder6);\n\n  const cylinderGeometry7 = new Three.CylinderGeometry(0.01, 0.01, 0.02, 32);\n  const cylinder7 = new Three.Mesh(cylinderGeometry7, grey);\n  cylinder7.position.set(0, 0.38, -0.03);\n  cylinder7.rotation.z += Math.PI / 2;\n  cylinder7.rotation.y += Math.PI / 2;\n  body.add(cylinder7);\n\n  const labelImage = textureLoader.load(require('./label-image.png'));\n  labelImage.wrapS = Three.RepeatWrapping;\n  labelImage.wrapT = Three.RepeatWrapping;\n  labelImage.repeat.set(1, 1);\n  labelImage.offset.x = 0; // 0.0 - 1.0\n  labelImage.offset.y = 0; // 0.0 - 1.0\n\n  const points = [\n    new Three.Vector2(.1, .666),\n    new Three.Vector2(.1, 1)\n  ];\n\n  const geometry = new Three.LatheGeometry(points, 200, 0, Math.PI);\n  const material = new Three.MeshLambertMaterial({ map: labelImage });\n  const label = new Three.Mesh(geometry, material);\n\n  label.rotation.y = 60;\n  label.position.y -= .75;\n  body.add(label);\n\n  const shape2 = new Three.Shape();\n  shape2.moveTo(0.02, 0.06);\n  shape2.lineTo(0.06, 0.07);\n  shape2.lineTo(0.08, 0.1);\n  shape2.lineTo(0.16, 0.1);\n  shape2.lineTo(0.18, 0.09);\n  shape2.lineTo(0.09, 0.08);\n  shape2.lineTo(0.07, 0.05);\n  shape2.lineTo(0.02, 0.04);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 0.02,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometry4 = new Three.ExtrudeGeometry(shape2, extrudeSettings);\n  const material4 = new Three.MeshLambertMaterial({ color: 0xff0000 });\n  const valve_p1 = new Three.Mesh(geometry4, material4);\n  valve_p1.rotation.y = -Math.PI / 2;\n  valve_p1.position.set(0.01, 0.35, -0.035);\n  body.add(valve_p1);\n\n  const shape3 = new Three.Shape();\n  shape3.moveTo(0.02, 0.06);\n  shape3.lineTo(0.04, 0.06);\n  shape3.lineTo(0.16, 0.05);\n  shape3.lineTo(0.18, 0.03);\n  shape3.lineTo(0.16, 0.04);\n  shape3.lineTo(0.02, 0.04);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: 0.016,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometry5 = new Three.ExtrudeGeometry(shape3, extrudeSettings2);\n  const valve_p2 = new Three.Mesh(geometry5, red);\n  valve_p2.rotation.y = -Math.PI / 2;\n  valve_p2.position.set(0.01, 0.34, -0.035);\n  body.add(valve_p2);\n\n  const geometry6 = new Three.TorusGeometry(0.0075, 0.00125, 16, 32, 1200);\n  const safetyValve_p1 = new Three.Mesh(geometry6, yellow);\n  safetyValve_p1.rotation.x = -Math.PI / 2;\n  safetyValve_p1.position.set(-0.023, 0.41, 0.02);\n  body.add(safetyValve_p1);\n\n  const cylinderGeometry8 = new Three.CylinderGeometry(0.001, 0.001, 0.03, 32);\n  const safetyValve_p2 = new Three.Mesh(cylinderGeometry8, yellow);\n  safetyValve_p2.position.set(0, 0.41, 0.02);\n  safetyValve_p2.rotation.z += Math.PI / 2;\n  body.add(safetyValve_p2);\n\n  const cylinderGeometry9 = new Three.CylinderGeometry(0.0025, 0.0025, 0.026, 32);\n  const cylinder9 = new Three.Mesh(cylinderGeometry9, grey);\n  cylinder9.position.set(0, 0.40, 0.0);\n  cylinder9.rotation.z += Math.PI / 2;\n  body.add(cylinder9);\n\n  const curve = new Three.CatmullRomCurve3([\n    new Three.Vector3(.5, 0, 0),\n    new Three.Vector3(.5, 0, 0),\n    new Three.Vector3(0, 0, 0),\n    new Three.Vector3(-0.03, .1050, 0),\n    new Three.Vector3(-0.03, .1050, 0)\n  ]);\n\n  const geometry7 = new Three.TubeGeometry(curve, 32, 0.008, 16, false);\n  const mesh = new Three.Mesh(geometry7, black);\n  mesh.position.set(0, 0.35, -0.13);\n  mesh.rotation.y -= Math.PI / 2;\n  mesh.rotation.z = (Math.PI / 2) + (4 * Math.PI);\n  mesh.rotation.x += Math.PI;\n  body.add(mesh);\n\n  return body\n\n}\n\nfunction makeObjectMiddleLOD() {\n  const bodyGeometry21 = new Three.CylinderGeometry(0.1, 0.1, 0.5, 8);\n  const body1 = new Three.Mesh(bodyGeometry21, red);\n  body1.position.set(0, 1, 0);\n\n  const bodyGeometry22 = new Three.CylinderGeometry(0.11, 0.11, 0.03, 8);\n  const lock2 = new Three.Mesh(bodyGeometry22, black);\n  lock2.position.set(0, -0.2, 0);\n  body1.add(lock2);\n\n  const geometrySphereUp1 = new Three.SphereGeometry(0.095, 32, 8);\n  const sphereUp1 = new Three.Mesh(geometrySphereUp1, red);\n  sphereUp1.position.set(0, 0.25, 0);\n  body1.add(sphereUp1);\n\n  return body1\n\n}\n\nfunction makeObjectMinLOD() {\n  const bodyGeometry0 = new Three.CylinderGeometry(0.1, 0.1, 0.475, 6);\n  const body0 = new Three.Mesh(bodyGeometry0, red);\n  body0.position.set(0, .95, 0);\n\n  return body0\n}\n\nexport default defineCatalogElement({\n  name: \"fire-extinguisher\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['security'],\n    title: \"Fire extinguisher\",\n    description: \"Fire extinguisher\",\n    image: require('./fire-extinguisher.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n\n    return (\n      <g transform={`translate(${-RADIUS / (RADIUS / 2)},${-(RADIUS + 5) / (RADIUS / 2)})`}>\n        <ellipse key=\"1\" cx=\"0\" cy=\"0\" rx={RADIUS + 5} ry={RADIUS}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#ff0000\" }} />\n        <line key=\"2\" x1={0} x2={0} y1={RADIUS} y2={2 * RADIUS} style={arrow_style} />\n        <line key=\"3\" x1={-RADIUS / 2 + .15 * RADIUS} x2={-RADIUS / 2 + RADIUS / 2} y1={1.2 * RADIUS} y2={2 * RADIUS}\n          style={arrow_style} />\n        <line key=\"4\" x1={0} x2={-RADIUS / 2 + .85 * RADIUS} y1={2 * RADIUS} y2={1.2 * RADIUS} style={arrow_style} />\n        <text key=\"5\" cx={RADIUS} cy={RADIUS}\n          transform={`translate(${RADIUS / 8}, ${0}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /**************** LOD max ***********************/\n\n    const fireExtinguisher2 = new Three.Object3D();\n\n    fireExtinguisher2.add(objectMaxLOD.clone());\n\n    const value = new Three.Box3().setFromObject(fireExtinguisher2);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n\n    fireExtinguisher2.rotation.y += -Math.PI / 2;\n    fireExtinguisher2.position.y += -HEIGHT / 1.25 + newAltitude;\n    fireExtinguisher2.scale.set(RADIUS / deltaX, RADIUS / deltaX, HEIGHT / deltaY);\n\n    /**************** LOD middle ***********************/\n\n    const fireExtinguisher1 = new Three.Object3D();\n\n\n    fireExtinguisher1.add(objectMiddleLOD.clone());\n\n    fireExtinguisher1.position.y += -HEIGHT / 1.25 + newAltitude;\n    fireExtinguisher1.scale.set(RADIUS / deltaX, RADIUS / deltaX, HEIGHT / deltaY);\n\n\n    /**************** LOD min ***********************/\n\n    const fireExtinguisher0 = new Three.Object3D();\n\n    fireExtinguisher0.add(objectMinLOD.clone());\n\n    fireExtinguisher0.position.y += -HEIGHT / 1.35 + newAltitude;\n    fireExtinguisher0.scale.set(RADIUS / deltaX, RADIUS / deltaX, HEIGHT / deltaY);\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(fireExtinguisher2, 200);\n    lod.addLevel(fireExtinguisher1, 900);\n    lod.addLevel(fireExtinguisher0, 1200);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/holes/sash-window/sash-window.mtl\";","import React from 'react';\nimport * as Three from 'three';\nimport { ParametricGeometry } from 'three/examples/jsm/geometries/ParametricGeometry';\nimport { loadObjWithMaterial } from '../../utils/load-obj';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nlet cached3DWindow: Three.Group<Three.Object3DEventMap>;\n\nconst STYLE_HOLE_BASE = { stroke: '#000', strokeWidth: '3px', fill: '#000' };\nconst STYLE_HOLE_SELECTED = { stroke: '#0096fd', strokeWidth: '3px', fill: '#0096fd', cursor: 'move' };\nconst EPSILON = 3;\n\nexport default defineCatalogElement({\n  name: 'window-curtain',\n  prototype: 'holes',\n\n  info: {\n    tag: ['window'],\n    title: 'Curtain window',\n    description: 'Curtain window',\n    image: require('./window-curtain.jpg')\n  },\n\n  properties: {\n    width: {\n      label: 'width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 90\n      }\n    },\n    height: {\n      label: 'height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 100\n      }\n    },\n    altitude: {\n      label: 'altitudine',\n      type: 'length-measure',\n      defaultValue: {\n        length: 90\n      }\n    },\n    thickness: {\n      label: 'spessore',\n      type: 'length-measure',\n      defaultValue: {\n        length: 10\n      }\n    },\n    flip: {\n      label: 'flip',\n      type: 'checkbox',\n      defaultValue: false,\n      values: {\n        'none': false,\n        'yes': true\n      }\n    },\n  },\n\n  render2D: function (element, layer, scene) {\n    const holeWidth = element.properties.width.length;\n    const holePath = `M${0} ${-EPSILON}  L${holeWidth} ${-EPSILON}  L${holeWidth} ${EPSILON}  L${0} ${EPSILON}  z`;\n    const holeStyle = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE;\n    const length = element.properties.width.length;\n    return (\n      <g transform={`translate(${-length / 2}, 0)`}>\n        <path key='1' d={holePath} style={holeStyle} />\n        <line key='2' x1={holeWidth / 2} y1={-10 - EPSILON} x2={holeWidth / 2} y2={10 + EPSILON} style={holeStyle} />\n      </g>\n    );\n  },\n\n  render3D: async function (element, layer, scene) {\n    const width = element.properties.width.length;\n    const height = element.properties.height.length;\n    const thickness = element.properties.thickness.length;\n    const flip = element.properties.flip;\n\n    const onLoadItem = (object: Three.Group<Three.Object3DEventMap>) => {\n\n      const window = new Three.Object3D();\n\n      const boundingBox = new Three.Box3().setFromObject(object);\n\n      const initialWidth = boundingBox.max.x - boundingBox.min.x;\n      const initialHeight = boundingBox.max.y - boundingBox.min.y;\n      const initialThickness = boundingBox.max.z - boundingBox.min.z;\n\n      if (element.selected) {\n        const box = new Three.BoxHelper(object, 0x99c3fb);\n        box.material.linewidth = 2;\n        box.material.depthTest = false;\n        box.renderOrder = 1000;\n        object.add(box);\n      }\n\n      const width = element.properties.width.length;\n      const height = element.properties.height.length;\n      const thickness = element.properties.thickness.length;\n\n      object.scale.set(width / initialWidth, height / initialHeight,\n        thickness / 2 / initialThickness);\n\n      window.add(object);\n      window.add(createTenda());\n\n      if (flip === true)\n        window.rotation.y += Math.PI;\n\n      return window;\n    };\n\n    if (cached3DWindow) {\n      return onLoadItem(cached3DWindow.clone());\n    }\n\n    const mtl = require('./window.mtl');\n    const obj = require('./window.obj');\n    const img = require('./texture.png');\n    const resourcePath = img.substr(0, img.lastIndexOf(\"/\")) + \"/\";\n\n    cached3DWindow = await loadObjWithMaterial(mtl, obj, resourcePath);\n    return onLoadItem(cached3DWindow.clone());\n\n    function createTenda() {\n      const radialWave = function (u: number, v: number) {\n        const r = 10;\n        const x = Math.sin(u) * 3 * r;\n        const z = Math.sin(v / 2) * 2 * r;\n        const y = (Math.sin(u * 2 * Math.PI) + Math.cos(v * 2 * Math.PI)) * .5;\n\n        return new Three.Vector3(x, y, z);\n      };\n\n      //color\n      const white = new Three.MeshLambertMaterial({ color: 0xeae6ca });\n\n      const Tenda = new Three.Object3D();\n\n      const mesh = createMesh(new ParametricGeometry(radialWave, 20, 20));\n      mesh.rotation.x += Math.PI / 2;\n      mesh.rotation.y += Math.PI / 2;\n      mesh.position.y += 3.1;\n      mesh.position.x += .05;\n      mesh.scale.set(.125, .125, .125);\n\n      const mesh2 = mesh.clone();\n      mesh2.rotation.x += Math.PI;\n      mesh2.position.set(1.4, 0, 0.06);\n\n      Tenda.add(mesh);\n      Tenda.add(mesh2);\n\n      for (let i = -.7; i > -3.4; i -= .45) {\n        const geometry = new Three.TorusGeometry(.08, .016, 32, 32, 2 * Math.PI);\n        const torus = new Three.Mesh(geometry, white);\n\n        if (i == -1.15)\n          torus.position.set(i, 3.14, .045);\n        else if (i == -2.5)\n          torus.position.set(i, 3.14, -.01);\n        else\n          torus.position.set(i, 3.14, .04);\n        torus.rotation.y += Math.PI / 2;\n        Tenda.add(torus);\n      }\n\n      const geometryAsta = new Three.CylinderGeometry(0.02, 0.02, 1.25, 32);\n      const asta = new Three.Mesh(geometryAsta, white);\n      asta.position.set(-1.1, 3.18, 0.02);\n      asta.rotation.z += Math.PI / 2;\n      Tenda.add(asta);\n\n      const asta2 = asta.clone();\n      asta2.position.set(-2.5, 3.18, 0.02);\n      Tenda.add(asta2);\n\n      const geometrySphereUp = new Three.SphereGeometry(0.04, 32, 32);\n      const sphere = new Three.Mesh(geometrySphereUp, white);\n      sphere.position.set(-.5, 3.18, 0.02);\n      sphere.rotation.x += Math.PI / 2;\n      sphere.scale.set(0.8, 1, 1);\n      Tenda.add(sphere);\n\n      const sphere2 = sphere.clone();\n      sphere2.position.x += -1.2;\n      Tenda.add(sphere2);\n\n      const sphere3 = sphere.clone();\n      sphere3.position.x += -1.4;\n      Tenda.add(sphere3);\n\n      const sphere4 = sphere.clone();\n      sphere4.position.x += -2.6;\n      Tenda.add(sphere4);\n\n      const panelMaterial = new Three.MeshLambertMaterial({ color: 0xffffff, transparent: true, opacity: 0.85, side: Three.DoubleSide });\n      const panelWidth = 1.2; // base before scaling\n      const panelHeight = 3.0;\n      const segmentsX = 24;\n      const segmentsY = 32;\n\n      const buildPanel = (mirror = false) => {\n        const geom = new Three.PlaneGeometry(panelWidth, panelHeight, segmentsX, segmentsY);\n        const pos = geom.attributes.position;\n        const v = new Three.Vector3();\n        for (let i = 0; i < pos.count; i++) {\n          v.fromBufferAttribute(pos, i);\n          // u 0..1 across width\n          const u = (v.x + panelWidth / 2) / panelWidth;\n          // folds\n          const fold = Math.sin(u * Math.PI * 3) * 0.05 * (0.3 + 0.7 * (-(v.y - panelHeight / 2) / panelHeight + 1));\n          v.z = fold * (mirror ? 1 : -1);\n          pos.setXYZ(i, v.x, v.y, v.z);\n        }\n        geom.computeVertexNormals();\n        const mesh = new Three.Mesh(geom, panelMaterial.clone());\n        mesh.position.y = 3.18 - panelHeight / 2 - 0.05; // hang from rod\n        mesh.position.z = 0.03; // slightly in front\n        return mesh;\n      };\n\n      const leftPanel = buildPanel(false);\n      leftPanel.position.x = -1.15;\n      const rightPanel = buildPanel(true);\n      rightPanel.position.x = -2.45;\n      Tenda.add(leftPanel);\n      Tenda.add(rightPanel);\n\n      const valueObject = new Three.Box3().setFromObject(Tenda);\n\n      const deltaX = Math.abs(valueObject.max.x - valueObject.min.x);\n      const deltaY = Math.abs(valueObject.max.y - valueObject.min.y);\n      const deltaZ = Math.abs(valueObject.max.z - valueObject.min.z);\n\n      Tenda.position.x += width / 1.48;\n      Tenda.position.y += -height / 2.1;\n      Tenda.position.z += thickness / 1024;\n      Tenda.scale.set(width / deltaX, height / deltaY, thickness / deltaZ);\n\n      return Tenda;\n    }\n\n    function createMesh(geom: ParametricGeometry) {\n      geom.applyMatrix4(new Three.Matrix4().makeTranslation(-25, 0, -25));\n      const meshMaterial = new Three.MeshLambertMaterial({ color: 0xffffff, opacity: 0.9, transparent: true });\n      meshMaterial.side = Three.DoubleSide;\n\n      const plane = new Three.Mesh(geom, meshMaterial);\n      return plane;\n    }\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/fridge/steel.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/monitor-pc/keyboard.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/balcony/painted.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/teaching-post/wood.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/simple-stair/simple-stair.png\";","module.exports = __webpack_public_path__ + \"catalog/items/hub/hub.png\";","module.exports = __webpack_public_path__ + \"catalog/items/kitchen/kitchen.png\";","var map = {\n\t\"./door-double/planner-element.tsx\": 71,\n\t\"./door/planner-element.tsx\": 1781,\n\t\"./gate/planner-element.tsx\": 9976,\n\t\"./panic-door-double/planner-element.tsx\": 1793,\n\t\"./panic-door/planner-element.tsx\": 835,\n\t\"./sash-window/planner-element.tsx\": 7075,\n\t\"./sliding-door/planner-element.tsx\": 8206,\n\t\"./venetian-blind-window/planner-element.tsx\": 7878,\n\t\"./window-curtain/planner-element.tsx\": 2744,\n\t\"./window/planner-element.tsx\": 4433\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3067;","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst cubeMaterial = new Three.MeshLambertMaterial({ color: 0xf5f4f4 });\n\nfunction makeObjectMaxLOD(newWidth: number, newHeight: number, newDepth: number) {\n  const electricalPanel = new Three.Mesh();\n\n  const textureLoader = new Three.TextureLoader();\n  const mat = textureLoader.load(require('./texturePanel.png'));\n\n  const cubeGeometryBase = new Three.BoxGeometry(newWidth, newHeight, newDepth);\n\n  const p1 = new Three.Mesh(cubeGeometryBase, cubeMaterial);\n  p1.position.set(0, 1, 0);\n  electricalPanel.add(p1);\n\n  const planeGeometryBase = new Three.PlaneGeometry(newWidth, newHeight);\n  const planeMaterial = new Three.MeshLambertMaterial({ map: mat });\n\n  const p2 = new Three.Mesh(planeGeometryBase, planeMaterial);\n  p2.position.set(0, 1, 25.5);\n  p1.add(p2);\n\n  return electricalPanel\n}\n\nfunction makeObjectMinLOD(newWidth: number, newHeight: number, newDepth: number) {\n  const electricalPanel = new Three.Mesh();\n\n  const cubeGeometryBase = new Three.BoxGeometry(newWidth, newHeight, newDepth);\n  const p1 = new Three.Mesh(cubeGeometryBase, cubeMaterial);\n  p1.position.set(0, 1, 0);\n  electricalPanel.add(p1);\n\n  return electricalPanel\n}\n\nexport default defineCatalogElement({\n  name: \"pannello_elettrico\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"electric panel\",\n    description: \"electric panel\",\n    image: require('./electricalPanel.png')\n  },\n  properties: {\n    width: {\n      label: \"width\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 90\n      }\n    },\n    depth: {\n      label: \"depth\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 50\n      }\n    },\n    height: {\n      label: \"height\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 210\n      }\n    },\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const newWidth = element.properties.width.length;\n    const newDepth = element.properties.depth.length;\n\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={newWidth} height={newDepth}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#ff0000\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.name}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newWidth = element.properties.width.length;\n    const newDepth = element.properties.depth.length;\n    const newHeight = element.properties.height.length;\n    const newAltitude = element.properties.altitude.length;\n\n\n    /**************** LOD max ***********************/\n\n    const elettricalPannel2 = new Three.Object3D();\n\n    const objectMaxLOD = makeObjectMaxLOD(newWidth, newHeight, newDepth);\n    elettricalPannel2.add(objectMaxLOD.clone());\n    elettricalPannel2.rotation.y = Math.PI;\n    elettricalPannel2.position.y += newHeight / 2 + newAltitude;\n\n    /**************** LOD max ***********************/\n\n    const elettricalPannel1 = new Three.Object3D();\n    const objectMinLOD = makeObjectMinLOD(newWidth, newHeight, newDepth);\n    elettricalPannel1.add(objectMinLOD.clone());\n    elettricalPannel1.rotation.y = Math.PI;\n    elettricalPannel1.position.y += newHeight / 2 + newAltitude;\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(elettricalPannel2, 200);\n    lod.addLevel(elettricalPannel1, 2000);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/school-desk/school-desk.png\";","module.exports = __webpack_public_path__ + \"catalog/holes/venetian-blind-window/venetian.obj\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 30;\nconst DEPTH = 40;\nconst HEIGHT = 180;\nconst RADIUS = 10;\n\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst grey = new Three.MeshLambertMaterial({ color: 0xC0C0C0 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const canteen_cart = new Three.Mesh(new Three.CylinderGeometry(0.8, 0.8, 0.5, 32), black);\n\n  for (let fx = 0; fx <= 6; fx += 6) {\n    for (let fz = 0; fz <= 6; fz += 6) {\n      // ruota pneumatico\n      const wheel = new Three.Mesh(new Three.CylinderGeometry(0.8, 0.8, 0.5, 32), black);\n      wheel.position.set(fx, fz, 0);\n      canteen_cart.add(wheel);\n\n      // ruota cuscinetto\n      const r1a = new Three.Mesh(new Three.CylinderGeometry(0.6, 0.6, 0.6, 32), grey);\n      wheel.add(r1a);\n\n      // dado esagonale\n      const cr1 = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.1, 0.8, 6), black);\n      cr1.position.set(0, 0, 0);\n      wheel.add(cr1);\n\n      // copriruota disco superiore\n      const wheelCoverUp = new Three.Mesh(new Three.CylinderGeometry(0.6, 0.6, 0.1, 32), grey);\n      wheelCoverUp.rotation.x = 0.5 * Math.PI;\n      wheelCoverUp.position.set(-0.3, 0, -1.2);\n      wheel.add(wheelCoverUp);\n\n      // copriruota disco inferiore\n      const wheelCoverDown = new Three.Mesh(new Three.CylinderGeometry(0.3725, 0.3725, 0.3, 32), black);\n      wheelCoverDown.rotation.x = 0.5 * Math.PI;\n      wheelCoverDown.position.set(-0.3, 0, -1);\n      wheel.add(wheelCoverDown);\n\n      // triangolo  lato 1\n      const cr2 = new Three.Mesh(new Three.CylinderGeometry(0.55, 0.55, 0.05, 3), grey);\n      cr2.position.set(-0.2, -0.35, -0.6);\n      wheel.add(cr2);\n\n      // rettangolo lato 1\n      const b1 = new Three.Mesh(new Three.BoxGeometry(0.55, 1.1, 0.05), grey);\n      b1.rotation.x = 0.5 * Math.PI;\n      b1.position.set(0, -0.35, -0.4);\n      wheel.add(b1);\n\n      // triangolo  lato 2\n      const cr3 = new Three.Mesh(new Three.CylinderGeometry(0.55, 0.55, 0.05, 3), grey);\n      cr3.position.set(-0.2, 0.35, -0.6);\n      wheel.add(cr3);\n\n      // rettangolo lato 2\n      const b2 = new Three.Mesh(new Three.BoxGeometry(0.55, 1.1, 0.05), grey);\n      b2.rotation.x = 0.5 * Math.PI;\n      b2.position.set(0, 0.35, -0.4);\n      wheel.add(b2);\n\n      // rettangolo lato up\n      const b3 = new Three.Mesh(new Three.BoxGeometry(0.95, 0.75, 0.1), grey);\n      b3.position.set(-0.2, 0, -0.9);\n      wheel.add(b3);\n    }\n  }\n\n  // side\n  const side1 = new Three.Mesh(new Three.BoxGeometry(0.3, 17.1, 0.3), grey);\n  side1.rotation.x = 0.5 * Math.PI;\n  side1.position.set(-0.3, 0, -9.6);\n  canteen_cart.add(side1);\n\n  const side2 = new Three.Mesh(new Three.BoxGeometry(0.3, 17.1, 0.3), grey);\n  side2.rotation.x = 0.5 * Math.PI;\n  side2.position.set(-0.3, 6, -9.6);\n  canteen_cart.add(side2);\n\n  const side3 = new Three.Mesh(new Three.BoxGeometry(0.3, 17.1, 0.3), grey);\n  side3.rotation.x = 0.5 * Math.PI;\n  side3.position.set(5.7, 0, -9.6);\n  canteen_cart.add(side3);\n\n  const side4 = new Three.Mesh(new Three.BoxGeometry(0.3, 17.1, 0.3), grey);\n  side4.rotation.x = 0.5 * Math.PI;\n  side4.position.set(5.7, 6, -9.6);\n  canteen_cart.add(side4);\n\n  // archi top\n  const a1 = new Three.Mesh(new Three.TorusGeometry(3, 0.15, 20, 20, 3.125), grey);\n  a1.rotation.x = -0.5 * Math.PI;\n  a1.position.set(2.7, 6, -18.1);\n  canteen_cart.add(a1);\n\n  // archi top\n  const a2 = new Three.Mesh(new Three.TorusGeometry(3, 0.15, 20, 20, 3.125), grey);\n  a2.rotation.x = -0.5 * Math.PI;\n  a2.position.set(2.7, 0, -18.1);\n  canteen_cart.add(a2);\n\n  // ripiano top\n  const plane = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  plane.position.set(-0.3, 3, -18);\n  canteen_cart.add(plane);\n\n  // ripiano top\n  const plane2 = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  plane2.rotation.x = 0.5 * Math.PI;\n  plane2.rotation.z = 0.5 * Math.PI;\n  plane2.position.set(2.7, 0, -18);\n  canteen_cart.add(plane2);\n\n  // ripiano top\n  const plane3 = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  plane3.rotation.x = 0.5 * Math.PI;\n  plane3.rotation.z = 0.5 * Math.PI;\n  plane3.position.set(2.7, 6, -18);\n  canteen_cart.add(plane3);\n\n  // ripiano top\n  const plane4 = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  plane4.position.set(5.7, 3, -18);\n  canteen_cart.add(plane4);\n\n  //ripiani\n  for (let Dz = -16.5; Dz <= -2.8; Dz += 1.5) {\n    const plane5 = new Three.Mesh(new Three.BoxGeometry(0.5, 5.7, 0.1), grey);\n    plane5.rotation.z = 0.5 * Math.PI;\n    plane5.position.set(2.7, 5.9, Dz + 0.2);\n    canteen_cart.add(plane5);\n\n    const plane6 = new Three.Mesh(new Three.BoxGeometry(0.1, 5.7, 0.5), grey);\n    plane6.rotation.z = 0.5 * Math.PI;\n    plane6.position.set(2.7, 6.1, Dz);\n    canteen_cart.add(plane6);\n\n    const plane7 = new Three.Mesh(new Three.BoxGeometry(0.5, 5.7, 0.1), grey);\n    plane7.rotation.z = 0.5 * Math.PI;\n    plane7.position.set(2.7, 0.1, Dz + 0.2);\n    canteen_cart.add(plane7);\n\n    const plane8 = new Three.Mesh(new Three.BoxGeometry(0.1, 5.7, 0.5), grey);\n    plane8.rotation.z = 0.5 * Math.PI;\n    plane8.position.set(2.7, -0.1, Dz);\n    canteen_cart.add(plane8)\n  }\n\n  // ripiano down\n  const d1 = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  d1.position.set(-0.3, 3, -2);\n  canteen_cart.add(d1);\n\n  //ripiano down\n  const d2 = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  d2.position.set(5.7, 3, -2);\n  canteen_cart.add(d2);\n\n  return canteen_cart\n}\n\nfunction makeObjectMinLOD() {\n  const canteen_cart = new Three.Mesh();\n\n  for (let fx = 0; fx <= 6; fx += 6) {\n    for (let fz = 0; fz <= 6; fz += 6) {\n      // ruota pneumatico\n      const wheel = new Three.Mesh(new Three.CylinderGeometry(0.8, 0.8, 0.5, 32), black);\n      wheel.position.set(fx, fz, 0);\n      canteen_cart.add(wheel);\n\n      // ruota cuscinetto\n      const r1a = new Three.Mesh(new Three.CylinderGeometry(0.6, 0.6, 0.6, 32), grey);\n      wheel.add(r1a);\n\n      // dado esagonale\n      const cr1 = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.1, 0.8, 6), black);\n      cr1.position.set(0, 0, 0);\n      wheel.add(cr1);\n\n      // copriruota disco superiore\n      const wheelCoverUp = new Three.Mesh(new Three.CylinderGeometry(0.6, 0.6, 0.1, 32), grey);\n      wheelCoverUp.rotation.x = 0.5 * Math.PI;\n      wheelCoverUp.position.set(-0.3, 0, -1.2);\n      wheel.add(wheelCoverUp);\n\n      // copriruota disco inferiore\n      const wheelCoverDown = new Three.Mesh(new Three.CylinderGeometry(0.3725, 0.3725, 0.3, 32), black);\n      wheelCoverDown.rotation.x = 0.5 * Math.PI;\n      wheelCoverDown.position.set(-0.3, 0, -1);\n      wheel.add(wheelCoverDown);\n\n      // triangolo  lato 1\n      const cr2 = new Three.Mesh(new Three.CylinderGeometry(0.55, 0.55, 0.05, 3), grey);\n      cr2.position.set(-0.2, -0.35, -0.6);\n      wheel.add(cr2);\n\n      // rettangolo lato 1\n      const b1 = new Three.Mesh(new Three.BoxGeometry(0.55, 1.1, 0.05), grey);\n      b1.rotation.x = 0.5 * Math.PI;\n      b1.position.set(0, -0.35, -0.4);\n      wheel.add(b1);\n\n      // triangolo  lato 2\n      const cr3 = new Three.Mesh(new Three.CylinderGeometry(0.55, 0.55, 0.05, 3), grey);\n      cr3.position.set(-0.2, 0.35, -0.6);\n      wheel.add(cr3);\n\n      // rettangolo lato 2\n      const b2 = new Three.Mesh(new Three.BoxGeometry(0.55, 1.1, 0.05), grey);\n      b2.rotation.x = 0.5 * Math.PI;\n      b2.position.set(0, 0.35, -0.4);\n      wheel.add(b2);\n\n      // rettangolo lato up\n      const b3 = new Three.Mesh(new Three.BoxGeometry(0.95, 0.75, 0.1), grey);\n      b3.position.set(-0.2, 0, -0.9);\n      wheel.add(b3);\n    }\n  }\n\n  // side\n  const side1 = new Three.Mesh(new Three.BoxGeometry(0.3, 17.1, 0.3), grey);\n  side1.rotation.x = 0.5 * Math.PI;\n  side1.position.set(-0.3, 0, -9.6);\n  canteen_cart.add(side1);\n\n  const side2 = new Three.Mesh(new Three.BoxGeometry(0.3, 17.1, 0.3), grey);\n  side2.rotation.x = 0.5 * Math.PI;\n  side2.position.set(-0.3, 6, -9.6);\n  canteen_cart.add(side2);\n\n  const side3 = new Three.Mesh(new Three.BoxGeometry(0.3, 17.1, 0.3), grey);\n  side3.rotation.x = 0.5 * Math.PI;\n  side3.position.set(5.7, 0, -9.6);\n  canteen_cart.add(side3);\n\n  const side4 = new Three.Mesh(new Three.BoxGeometry(0.3, 17.1, 0.3), grey);\n  side4.rotation.x = 0.5 * Math.PI;\n  side4.position.set(5.7, 6, -9.6);\n  canteen_cart.add(side4);\n\n  // archi top\n  const a1 = new Three.Mesh(new Three.TorusGeometry(3, 0.15, 20, 20, 3.125), grey);\n  a1.rotation.x = -0.5 * Math.PI;\n  a1.position.set(2.7, 6, -18.1);\n  canteen_cart.add(a1);\n\n  // archi top\n  const a2 = new Three.Mesh(new Three.TorusGeometry(3, 0.15, 20, 20, 3.125), grey);\n  a2.rotation.x = -0.5 * Math.PI;\n  a2.position.set(2.7, 0, -18.1);\n  canteen_cart.add(a2);\n\n  // ripiano top\n  const plane = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  plane.position.set(-0.3, 3, -18);\n  canteen_cart.add(plane);\n\n  // ripiano top\n  const plane2 = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  plane2.rotation.x = 0.5 * Math.PI;\n  plane2.rotation.z = 0.5 * Math.PI;\n  plane2.position.set(2.7, 0, -18);\n  canteen_cart.add(plane2);\n\n  // ripiano top\n  const plane3 = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  plane3.rotation.x = 0.5 * Math.PI;\n  plane3.rotation.z = 0.5 * Math.PI;\n  plane3.position.set(2.7, 6, -18);\n  canteen_cart.add(plane3);\n\n  // ripiano top\n  const plane4 = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  plane4.position.set(5.7, 3, -18);\n  canteen_cart.add(plane4);\n\n  //ripiani\n  for (let Dz = -16.5; Dz <= -2.8; Dz += 1.5) {\n    const plane5 = new Three.Mesh(new Three.BoxGeometry(0.5, 5.7, 0.1), grey);\n    plane5.rotation.z = 0.5 * Math.PI;\n    plane5.position.set(2.7, 5.9, Dz + 0.2);\n    canteen_cart.add(plane5);\n\n    const plane6 = new Three.Mesh(new Three.BoxGeometry(0.1, 5.7, 0.5), grey);\n    plane6.rotation.z = 0.5 * Math.PI;\n    plane6.position.set(2.7, 6.1, Dz);\n    canteen_cart.add(plane6);\n\n    const plane7 = new Three.Mesh(new Three.BoxGeometry(0.5, 5.7, 0.1), grey);\n    plane7.rotation.z = 0.5 * Math.PI;\n    plane7.position.set(2.7, 0.1, Dz + 0.2);\n    canteen_cart.add(plane7);\n\n    const plane8 = new Three.Mesh(new Three.BoxGeometry(0.1, 5.7, 0.5), grey);\n    plane8.rotation.z = 0.5 * Math.PI;\n    plane8.position.set(2.7, -0.1, Dz);\n    canteen_cart.add(plane8)\n  }\n\n  // ripiano down\n  const d1 = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  d1.position.set(-0.3, 3, -2);\n  canteen_cart.add(d1);\n\n  //ripiano down\n  const d2 = new Three.Mesh(new Three.BoxGeometry(0.3, 5.7, 0.3), grey);\n  d2.position.set(5.7, 3, -2);\n  canteen_cart.add(d2);\n\n  return canteen_cart\n}\n\nexport default defineCatalogElement({\n  name: 'canteen cart',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: 'canteen cart',\n    description: 'canteen cart',\n    image: require('./canteen_cart.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' }} />\n        <text key='2' x='0' y='0' transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}</text>\n      </g>\n    )\n  },\n\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /************** lod max ****************/\n\n    const canteen_cartMaxLOD = new Three.Object3D();\n    canteen_cartMaxLOD.add(objectMaxLOD.clone());\n\n    const valuePosition = new Three.Box3().setFromObject(canteen_cartMaxLOD);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    canteen_cartMaxLOD.rotation.x += Math.PI / 2;\n    canteen_cartMaxLOD.position.y += newAltitude;\n    canteen_cartMaxLOD.scale.set(WIDTH / deltaY, DEPTH / deltaX, HEIGHT / deltaZ);\n\n    /************** lod min ****************/\n\n    const canteen_cartMinLOD = new Three.Object3D();\n    canteen_cartMinLOD.add(objectMinLOD.clone());\n    canteen_cartMinLOD.rotation.x += Math.PI / 2;\n    canteen_cartMinLOD.position.y += newAltitude;\n    canteen_cartMinLOD.scale.set(WIDTH / deltaY, DEPTH / deltaX, HEIGHT / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(canteen_cartMaxLOD, 200);\n    lod.addLevel(canteen_cartMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/chairdesk/chairdesk.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst cubeMaterial = new Three.MeshLambertMaterial({ color: 0x65696c });\nconst textureLoader = new Three.TextureLoader();\nconst frontTexture1 = textureLoader.load(require('./hiroosTexture.jpg'));\nconst newWidth = 175;\nconst newDepth = 85;\nconst newHeight = 195;\n\nfunction makeObjectMaxLOD(newWidth: number, newHeight: number, newDepth: number) {\n  const rack = new Three.Mesh();\n\n  //let backTexture;\n\n  // if((Math.floor(Math.random()*10)+1) % 2 === 0) {\n  //   backTexture  = backTexture1;\n  const frontTexture = frontTexture1;\n  // }\n  // else {\n  //   backTexture = backTexture2;\n  //   frontTexture= frontTexture2;\n  // }\n\n  //base\n  const cubeGeometryBase = new Three.BoxGeometry(newWidth, newHeight, newDepth);\n\n  const p1 = new Three.Mesh(cubeGeometryBase, cubeMaterial);\n  p1.position.set(0, 1, 0);\n  rack.add(p1);\n\n  const planeGeometryFront = new Three.PlaneGeometry(newWidth, newHeight);\n  const planeMaterialFront = new Three.MeshLambertMaterial({ map: frontTexture });\n\n  const front = new Three.Mesh(planeGeometryFront, planeMaterialFront);\n  front.position.set(0, 1, newDepth / 1.95);\n  rack.add(front);\n\n  // let planeGeometryBack = new Three.PlaneGeometry(newWidth,newHeight);\n  // let planeMaterialBack = new Three.MeshLambertMaterial({map:backTexture});\n  //\n  // let back = new Three.Mesh(planeGeometryBack,planeMaterialBack);\n  // back.position.set(0,1,-newDepth/1.95);\n  // back.rotation.y+=Math.PI;\n  // rack.add(back);\n\n  return rack\n}\n\nfunction makeObjectMinLOD(newWidth: number, newHeight: number, newDepth: number) {\n  const rack = new Three.Mesh();\n\n  //base\n  const cubeGeometryBase = new Three.BoxGeometry(newWidth, newHeight, newDepth);\n\n  const p1 = new Three.Mesh(cubeGeometryBase, cubeMaterial);\n  p1.position.set(0, 1, 0);\n  rack.add(p1);\n\n  return rack\n}\n\nexport default defineCatalogElement({\n  name: \"hiroos\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"hiroos\",\n    description: \"hiroos\",\n    image: require('./hiroos.png')\n  },\n\n  properties: {\n    patternColor: {\n      label: \"pattern colori\",\n      type: \"color\",\n      defaultValue: \"#f5f4f4\"\n    },\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const fillValue = element.selected ? \"#99c3fb\" : element.properties.patternColor;\n\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n    return (\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={newWidth} height={newDepth}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: fillValue }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.name}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /**************** LOD max ***********************/\n\n    const rackMaxLOD = new Three.Object3D();\n\n    const objectMaxLOD = makeObjectMaxLOD(newWidth, newHeight, newDepth);\n    rackMaxLOD.add(objectMaxLOD.clone());\n    rackMaxLOD.rotation.y = Math.PI;\n    rackMaxLOD.position.y += newHeight / 2 + newAltitude;\n\n    /**************** LOD min ***********************/\n\n    const rackMinLOD = new Three.Object3D();\n    const objectMinLOD = makeObjectMinLOD(newWidth, newHeight, newDepth);\n    rackMinLOD.add(objectMinLOD.clone());\n    rackMinLOD.rotation.y = Math.PI;\n    rackMinLOD.position.y += newHeight / 2 + newAltitude;\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(rackMaxLOD, 100);\n    lod.addLevel(rackMinLOD, 1800);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 70;\nconst DEPTH = 70;\nconst HEIGHT = 100;\n\nconst grey = new Three.MeshBasicMaterial({ color: 0xD3D3D3 });\nconst metalGrey = new Three.MeshBasicMaterial({ color: 0x808080 });\nconst white = new Three.MeshBasicMaterial({ color: 0x000000 });\nconst black = new Three.MeshBasicMaterial({ color: 0x000000 });\n\n\nfunction makeBackrest() {\n  const backrest = new Three.Object3D();\n  const backrestGeometry1 = new Three.CylinderGeometry(0.01, 0.01, 0.18, 32, 32);\n  const backrestGeometry2 = new Three.CylinderGeometry(0.01, 0.01, 0.04, 32, 32);\n  const NodeGeometry = new Three.SphereGeometry(0.01, 32, 32);\n  const backrest1 = new Three.Mesh(backrestGeometry1, black);\n  const backrest2 = new Three.Mesh(backrestGeometry2, black);\n  const backrest3 = new Three.Mesh(backrestGeometry1, black);\n  const backrest4 = new Three.Mesh(backrestGeometry2, black);\n  const node1 = new Three.Mesh(NodeGeometry, black);\n  const node2 = new Three.Mesh(NodeGeometry, black);\n  const backrestPillow = makeBackrestPillow();\n  backrest1.rotation.z = Math.PI * (90 + 6) / 180;\n  backrest1.position.z = 0.05;\n  backrest1.position.x = 0.09;\n  backrest2.rotation.z = -Math.PI * 96 / 180;\n  backrest2.position.x = 0.02 * Math.cos(Math.PI * 6 / 180);\n  backrest3.rotation.z = Math.PI * (90 + 6) / 180;\n  backrest3.position.z = -0.05;\n  backrest3.position.x = 0.09;\n  backrest4.rotation.z = -Math.PI * 96 / 180;\n  backrest4.position.x = 0.02 * Math.cos(Math.PI * 6 / 180);\n  node1.position.y = 0.09;\n  node2.position.y = 0.09;\n  node1.add(backrest2);\n  node2.add(backrest4);\n  backrestPillow.rotation.y = Math.PI / 2;\n  backrestPillow.position.y = 0.25 + 0.02;\n  backrest1.add(node1);\n  backrest.add(backrest1);\n  backrest3.add(node2);\n  backrest.add(backrest3);\n  backrest.add(backrestPillow);\n\n  return backrest;\n}\n\nfunction makeBackrestMinLOD() {\n  const backrest = new Three.Object3D();\n  const backrestGeometry1 = new Three.CylinderGeometry(0.01, 0.01, 0.18, 8, 8);\n  const backrestGeometry2 = new Three.CylinderGeometry(0.01, 0.01, 0.04, 8, 8);\n  const NodeGeometry = new Three.SphereGeometry(0.01, 32, 32);\n  const backrest1 = new Three.Mesh(backrestGeometry1, black);\n  const backrest2 = new Three.Mesh(backrestGeometry2, black);\n  const backrest3 = new Three.Mesh(backrestGeometry1, black);\n  const backrest4 = new Three.Mesh(backrestGeometry2, black);\n  const node1 = new Three.Mesh(NodeGeometry, black);\n  const node2 = new Three.Mesh(NodeGeometry, black);\n  const backrestPillow = makeBackrestPillowMinLOD();\n  backrest1.rotation.z = Math.PI * (90 + 6) / 180;\n  backrest1.position.z = 0.05;\n  backrest1.position.x = 0.09;\n  backrest2.rotation.z = -Math.PI * 96 / 180;\n  backrest2.position.x = 0.02 * Math.cos(Math.PI * 6 / 180);\n  backrest3.rotation.z = Math.PI * (90 + 6) / 180;\n  backrest3.position.z = -0.05;\n  backrest3.position.x = 0.09;\n  backrest4.rotation.z = -Math.PI * 96 / 180;\n  backrest4.position.x = 0.02 * Math.cos(Math.PI * 6 / 180);\n  node1.position.y = 0.09;\n  node2.position.y = 0.09;\n  node1.add(backrest2);\n  node2.add(backrest4);\n  backrestPillow.rotation.y = Math.PI / 2;\n  backrestPillow.position.y = 0.25 + 0.02;\n  backrest1.add(node1);\n  backrest.add(backrest1);\n  backrest3.add(node2);\n  backrest.add(backrest3);\n  backrest.add(backrestPillow);\n\n  return backrest;\n}\n\n\nfunction makeWheel() {\n  const ArmrestGeometry = new Three.CylinderGeometry(0.027, 0.02, 0.3, 32, 32);\n  const SupportGeometry = new Three.CylinderGeometry(0.02, 0.01, 0.02, 32, 32);\n  const PivotGeometry = new Three.CylinderGeometry(0.008, 0.008, 0.01, 32, 32);\n  const SupportGeometryStart = new Three.SphereGeometry(0.02, 32, 32);\n  const WheelGeometry = new Three.CylinderGeometry(0.025, 0.025, 0.05, 32, 32);\n  const InsideWheelGeometry = new Three.CylinderGeometry(0.02, 0.02, 0.051, 32, 32);\n  const WheelCoverGeometry = new Three.CylinderGeometry(0.026, 0.026, 0.045, 32, 32);\n  const armrest = new Three.Mesh(ArmrestGeometry, metalGrey);\n  const support = new Three.Mesh(SupportGeometry, metalGrey);\n  const pivot = new Three.Mesh(PivotGeometry, grey);\n  const SupportStart = new Three.Mesh(SupportGeometryStart, metalGrey);\n  const Wheel = new Three.Mesh(WheelGeometry, black);\n  const WheelCover = new Three.Mesh(WheelCoverGeometry, metalGrey);\n  const InsideWheel = new Three.Mesh(InsideWheelGeometry, metalGrey);\n  const Armrest1 = new Three.Object3D();\n  const Armrest2 = new Three.Object3D();\n  armrest.rotation.z = Math.PI * 80 / 180;\n  armrest.position.x = 0.01 + 0.15;\n  Armrest1.rotation.z = -Math.PI * 80 / 180;\n  Armrest1.position.y = -Math.sin(Math.PI * 80 / 180) * 0.15;\n  support.position.y = -0.01;\n  pivot.position.y = -0.01 - 0.005;\n  Wheel.rotation.x = Math.PI / 2;\n  Wheel.position.y = -0.005 - 0.02;\n  WheelCover.position.z = -0.003;\n  Wheel.add(InsideWheel);\n  Wheel.add(WheelCover);\n  pivot.add(Wheel);\n  support.add(pivot);\n  Armrest1.add(support);\n  Armrest1.add(SupportStart);\n  armrest.add(Armrest1);\n  Armrest2.add(armrest);\n  return Armrest2;\n}\n\nfunction makeWheelMinLOD() {\n  const ArmrestGeometry = new Three.CylinderGeometry(0.027, 0.02, 0.3, 8, 8);\n  const SupportGeometry = new Three.CylinderGeometry(0.02, 0.01, 0.02, 8, 8);\n  const PivotGeometry = new Three.CylinderGeometry(0.008, 0.008, 0.01, 8, 8);\n  const SupportGeometryStart = new Three.SphereGeometry(0.02, 8, 8);\n  const WheelGeometry = new Three.CylinderGeometry(0.025, 0.025, 0.05, 8, 8);\n  const InsideWheelGeometry = new Three.CylinderGeometry(0.02, 0.02, 0.051, 8, 8);\n  const armrest = new Three.Mesh(ArmrestGeometry, metalGrey);\n  const support = new Three.Mesh(SupportGeometry, metalGrey);\n  const pivot = new Three.Mesh(PivotGeometry, grey);\n  const SupportStart = new Three.Mesh(SupportGeometryStart, metalGrey);\n  const Wheel = new Three.Mesh(WheelGeometry, black);\n  const InsideWheel = new Three.Mesh(InsideWheelGeometry, metalGrey);\n  const Armrest1 = new Three.Object3D();\n  const Armrest2 = new Three.Object3D();\n  armrest.rotation.z = Math.PI * 80 / 180;\n  armrest.position.x = 0.01 + 0.15;\n  Armrest1.rotation.z = -Math.PI * 80 / 180;\n  Armrest1.position.y = -Math.sin(Math.PI * 80 / 180) * 0.15;\n  support.position.y = -0.01;\n  pivot.position.y = -0.01 - 0.005;\n  Wheel.rotation.x = Math.PI / 2;\n  Wheel.position.y = -0.005 - 0.02;\n  Wheel.add(InsideWheel);\n  pivot.add(Wheel);\n  support.add(pivot);\n  Armrest1.add(support);\n  Armrest1.add(SupportStart);\n  armrest.add(Armrest1);\n  Armrest2.add(armrest);\n  return Armrest2;\n}\n\nfunction makeBackrestPillow() {\n  const pillow = new Three.Object3D();\n  const CenterGeometry = new Three.BoxGeometry(0.3, 0.5, 0.04);\n  const ShortEdgeGeometry = new Three.CylinderGeometry(0.02, 0.02, 0.3, 32, 32);\n  const LongEdgeGeometry = new Three.CylinderGeometry(0.02, 0.02, 0.5, 32, 32);\n  const AngleGeometry = new Three.SphereGeometry(0.02, 32, 32);\n  const edgeShort1 = new Three.Mesh(ShortEdgeGeometry, white);\n  const edgeShort2 = new Three.Mesh(ShortEdgeGeometry, white);\n  const edgeLong1 = new Three.Mesh(LongEdgeGeometry, white);\n  const edgeLong2 = new Three.Mesh(LongEdgeGeometry, white);\n  const angle1c = new Three.Mesh(AngleGeometry, white);\n  const angle2c = new Three.Mesh(AngleGeometry, white);\n  const angle1l = new Three.Mesh(AngleGeometry, white);\n  const angle2l = new Three.Mesh(AngleGeometry, white);\n  const center = new Three.Mesh(CenterGeometry, white);\n  edgeShort1.rotation.z = Math.PI / 2;\n  edgeShort1.position.y = 0.25;\n  angle1c.position.y = 0.15;\n  edgeShort2.rotation.z = Math.PI / 2;\n  edgeShort2.position.y = -0.25;\n  angle2c.position.y = -0.15;\n  edgeLong1.position.x = 0.15;\n  angle1l.position.y = 0.25;\n  edgeLong2.position.x = -0.15;\n  angle2l.position.y = -0.25;\n  edgeLong2.add(angle2l);\n  pillow.add(edgeLong2);\n  edgeLong1.add(angle1l);\n  pillow.add(edgeLong1);\n  edgeShort2.add(angle2c);\n  pillow.add(edgeShort2);\n  edgeShort1.add(angle1c);\n  pillow.add(edgeShort1);\n  pillow.add(center);\n  return pillow;\n}\n\nfunction makeBackrestPillowMinLOD() {\n  const pillow = new Three.Object3D();\n  const CenterGeometry = new Three.BoxGeometry(0.3, 0.5, 0.04);\n  const ShortEdgeGeometry = new Three.CylinderGeometry(0.02, 0.02, 0.3, 8, 8);\n  const LongEdgeGeometry = new Three.CylinderGeometry(0.02, 0.02, 0.5, 8, 8);\n  const AngleGeometry = new Three.SphereGeometry(0.02, 32, 32);\n  const edgeShort1 = new Three.Mesh(ShortEdgeGeometry, white);\n  const edgeShort2 = new Three.Mesh(ShortEdgeGeometry, white);\n  const edgeLong1 = new Three.Mesh(LongEdgeGeometry, white);\n  const edgeLong2 = new Three.Mesh(LongEdgeGeometry, white);\n  const angle1c = new Three.Mesh(AngleGeometry, white);\n  const angle2c = new Three.Mesh(AngleGeometry, white);\n  const angle1l = new Three.Mesh(AngleGeometry, white);\n  const angle2l = new Three.Mesh(AngleGeometry, white);\n  const center = new Three.Mesh(CenterGeometry, white);\n  edgeShort1.rotation.z = Math.PI / 2;\n  edgeShort1.position.y = 0.25;\n  angle1c.position.y = 0.15;\n  edgeShort2.rotation.z = Math.PI / 2;\n  edgeShort2.position.y = -0.25;\n  angle2c.position.y = -0.15;\n  edgeLong1.position.x = 0.15;\n  angle1l.position.y = 0.25;\n  edgeLong2.position.x = -0.15;\n  angle2l.position.y = -0.25;\n  edgeLong2.add(angle2l);\n  pillow.add(edgeLong2);\n  edgeLong1.add(angle1l);\n  pillow.add(edgeLong1);\n  edgeShort2.add(angle2c);\n  pillow.add(edgeShort2);\n  edgeShort1.add(angle1c);\n  pillow.add(edgeShort1);\n  pillow.add(center);\n  return pillow;\n}\n\nfunction makeBody() {\n  const body = new Three.Object3D();\n  const SupportPillowGeometry1 = new Three.BoxGeometry(0.28, 0.06, 0.07);\n  const SupportPillowGeometry2 = new Three.BoxGeometry(0.3, 0.04, 0.09);\n  const ShortHandleGeometry = new Three.CylinderGeometry(0.0045, 0.0045, 0.07, 32, 32);\n  const LongHandleGeometry = new Three.CylinderGeometry(0.0045, 0.0045, 0.09, 32, 32);\n  const HandleGeometry = new Three.CylinderGeometry(0.007, 0.005, 0.06, 32);\n  const ArmrestSupportGeometry = new Three.CylinderGeometry(0.01, 0.01, 0.2, 32, 32);\n  const SupportPillow1 = new Three.Mesh(SupportPillowGeometry1, metalGrey);\n  const SupportPillow2 = new Three.Mesh(SupportPillowGeometry2, metalGrey);\n  const LongHandle = new Three.Mesh(LongHandleGeometry, white);\n  const ShortHandle = new Three.Mesh(ShortHandleGeometry, white);\n  const Handle1 = new Three.Mesh(HandleGeometry, black);\n  const Handle2 = new Three.Mesh(HandleGeometry, black);\n  const ArmrestBase1 = new Three.Mesh(ArmrestSupportGeometry, metalGrey);\n  const ArmrestBase2 = new Three.Mesh(ArmrestSupportGeometry, metalGrey);\n  const Pillow = makePillow();\n  const armrest1 = makeArmrest();\n  const armrest2 = makeArmrest();\n  SupportPillow1.position.y = 0.03;\n  SupportPillow2.rotation.z = Math.PI * 6 / 180;\n  SupportPillow2.position.y = 0.06;\n  LongHandle.rotation.x = Math.PI * 80 / 180;\n  LongHandle.position.z = 0.035 + 0.045;\n  LongHandle.position.x = 0.1;\n  ShortHandle.rotation.x = -Math.PI * 80 / 180;\n  ShortHandle.position.z = -0.035 - 0.035;\n  ShortHandle.position.x = 0.08;\n  Handle2.position.y = 0.035 + 0.03;\n  Handle1.position.y = 0.045 + 0.03;\n  Pillow.position.y = 0.02 + 0.02;\n  ArmrestBase1.rotation.x = Math.PI / 2;\n  ArmrestBase1.rotation.y = -Math.PI * 6 / 180;\n  ArmrestBase2.rotation.x = Math.PI / 2;\n  ArmrestBase2.rotation.y = -Math.PI * 6 / 180;\n  ArmrestBase1.position.z = 0.045 + 0.1;\n  ArmrestBase2.position.z = -0.045 - 0.1;\n  armrest1.position.y = 0.1;\n  armrest2.position.y = -0.1;\n  SupportPillow2.add(Pillow);\n  ArmrestBase1.add(armrest1);\n  ArmrestBase2.add(armrest2);\n  SupportPillow2.add(ArmrestBase1);\n  SupportPillow2.add(ArmrestBase2);\n  LongHandle.add(Handle1);\n  ShortHandle.add(Handle2);\n  SupportPillow1.add(LongHandle);\n  SupportPillow1.add(ShortHandle);\n  body.add(SupportPillow2);\n  body.add(SupportPillow1);\n  return body;\n}\n\nfunction makeBodyMinLOD() {\n  const body = new Three.Object3D();\n  const SupportPillowGeometry1 = new Three.BoxGeometry(0.28, 0.06, 0.07);\n  const SupportPillowGeometry2 = new Three.BoxGeometry(0.3, 0.04, 0.09);\n  const ArmrestSupportGeometry = new Three.CylinderGeometry(0.01, 0.01, 0.2, 8, 8);\n  const SupportPillow1 = new Three.Mesh(SupportPillowGeometry1, metalGrey);\n  const SupportPillow2 = new Three.Mesh(SupportPillowGeometry2, metalGrey);\n  const ArmrestBase1 = new Three.Mesh(ArmrestSupportGeometry, metalGrey);\n  const ArmrestBase2 = new Three.Mesh(ArmrestSupportGeometry, metalGrey);\n  const Pillow = makePillow();\n  const armrest1 = makeArmrestMinLOD();\n  const armrest2 = makeArmrestMinLOD();\n  SupportPillow1.position.y = 0.03;\n  SupportPillow2.rotation.z = Math.PI * 6 / 180;\n  SupportPillow2.position.y = 0.06;\n  Pillow.position.y = 0.02 + 0.02;\n  ArmrestBase1.rotation.x = Math.PI / 2;\n  ArmrestBase1.rotation.y = -Math.PI * 6 / 180;\n  ArmrestBase2.rotation.x = Math.PI / 2;\n  ArmrestBase2.rotation.y = -Math.PI * 6 / 180;\n  ArmrestBase1.position.z = 0.045 + 0.1;\n  ArmrestBase2.position.z = -0.045 - 0.1;\n  armrest1.position.y = 0.1;\n  armrest2.position.y = -0.1;\n  SupportPillow2.add(Pillow);\n  ArmrestBase1.add(armrest1);\n  ArmrestBase2.add(armrest2);\n  SupportPillow2.add(ArmrestBase1);\n  SupportPillow2.add(ArmrestBase2);\n  body.add(SupportPillow2);\n  body.add(SupportPillow1);\n  return body;\n}\n\nfunction makeArmrest() {\n  const armrest = new Three.Object3D();\n  const NodeGeometry = new Three.SphereGeometry(0.01, 32, 32);\n  const GeometryP1 = new Three.CylinderGeometry(0.01, 0.01, 0.24, 32, 32);\n  const GeometryP2 = new Three.CylinderGeometry(0.01, 0.01, 0.04, 32, 32);\n  const GeometryP3 = new Three.CylinderGeometry(0.02, 0.025, 0.2, 32, 32);\n  const node1 = new Three.Mesh(NodeGeometry, metalGrey);\n  const node2 = new Three.Mesh(NodeGeometry, metalGrey);\n  const P1 = new Three.Mesh(GeometryP1, metalGrey);\n  const P2 = new Three.Mesh(GeometryP2, metalGrey);\n  const P3 = new Three.Mesh(GeometryP3, white);\n  P1.rotation.x = Math.PI / 2;\n  P1.rotation.z = -Math.PI * 25 / 180;\n  P1.position.set(0.12 * Math.sin(P1.rotation.z), 0, -0.12 * Math.cos(P1.rotation.z));\n  P2.rotation.z = Math.PI * 100 / 180;\n  P2.position.x = 0.02;\n  P2.position.y = 0.0035;\n  node2.position.y = -0.12;\n  P3.position.y = -0.1 - 0.02;\n  P2.add(P3);\n  node2.add(P2);\n  P1.add(node2);\n  node1.add(P1);\n  armrest.add(node1);\n  return armrest;\n}\n\nfunction makeArmrestMinLOD() {\n  const armrest = new Three.Object3D();\n  const NodeGeometry = new Three.SphereGeometry(0.01, 8, 8);\n  const GeometryP1 = new Three.CylinderGeometry(0.01, 0.01, 0.24, 8, 8);\n  const GeometryP2 = new Three.CylinderGeometry(0.01, 0.01, 0.04, 8, 8);\n  const GeometryP3 = new Three.CylinderGeometry(0.02, 0.025, 0.2, 8, 8);\n  const node1 = new Three.Mesh(NodeGeometry, metalGrey);\n  const node2 = new Three.Mesh(NodeGeometry, metalGrey);\n  const P1 = new Three.Mesh(GeometryP1, metalGrey);\n  const P2 = new Three.Mesh(GeometryP2, metalGrey);\n  const P3 = new Three.Mesh(GeometryP3, white);\n  P1.rotation.x = Math.PI / 2;\n  P1.rotation.z = -Math.PI * 25 / 180;\n  P1.position.set(0.12 * Math.sin(P1.rotation.z), 0, -0.12 * Math.cos(P1.rotation.z));\n  P2.rotation.z = Math.PI * 100 / 180;\n  P2.position.x = 0.02;\n  P2.position.y = 0.0035;\n  node2.position.y = -0.12;\n  P3.position.y = -0.1 - 0.02;\n  P2.add(P3);\n  node2.add(P2);\n  P1.add(node2);\n  node1.add(P1);\n  armrest.add(node1);\n  return armrest;\n}\n\nfunction makePillow() {\n  const pillow = new Three.Object3D();\n  const CenterGeometry = new Three.BoxGeometry(0.4, 0.04, 0.4);\n  const CenterPillow = new Three.Mesh(CenterGeometry, white);\n  const edge1 = makeEdge();\n  const edge2 = makeEdge();\n  const edge3 = makeEdge();\n  const edge4 = makeEdge();\n  edge1.rotation.x = Math.PI / 2;\n  edge1.position.x = 0.2;\n  edge2.rotation.x = -Math.PI / 2;\n  edge2.position.x = -0.2;\n  edge3.rotation.z = -Math.PI / 2;\n  edge3.position.z = -0.2;\n  edge4.rotation.z = Math.PI / 2;\n  edge4.position.z = 0.2;\n  CenterPillow.add(edge1);\n  CenterPillow.add(edge2);\n  CenterPillow.add(edge3);\n  CenterPillow.add(edge4);\n  pillow.add(CenterPillow);\n  return pillow;\n}\n\nfunction makeEdge() {\n  const EdgeGeometry = new Three.CylinderGeometry(0.02, 0.02, 0.4, 32, 32, true); // openEnded is set here\n  const AngleGeometry = new Three.SphereGeometry(0.02, 32, 32);\n  const angle = new Three.Mesh(AngleGeometry, white);\n  const edge = new Three.Mesh(EdgeGeometry, white);\n  angle.position.y = 0.2;\n  edge.add(angle);\n  return edge;\n}\n\nfunction makeBase() {\n  const base = new Three.Object3D();\n  const CylinderGeometry1 = new Three.CylinderGeometry(0.027, 0.027, 0.05, 32, 32);\n  const CylinderGeometry2 = new Three.CylinderGeometry(0.03, 0.03, 0.2, 32, 32);\n  const CylinderGeometry3 = new Three.CylinderGeometry(0.04, 0.04, 0.06, 32, 32);\n  const CylinderCoverGeometryCylinder2 = new Three.TorusGeometry(0.04, 0.025, 32, 100);\n  const CylinderGeometry4 = new Three.CylinderGeometry(0.02, 0.02, 0.14, 32, 32);\n  const Cylinder1 = new Three.Mesh(CylinderGeometry1, metalGrey);\n  const Cylinder2 = new Three.Mesh(CylinderGeometry2, metalGrey);\n  const CoverCylinder1 = new Three.Mesh(CylinderGeometry3, metalGrey);\n  const CoverCylinder2 = new Three.Mesh(CylinderCoverGeometryCylinder2, metalGrey);\n  const Cylinder3 = new Three.Mesh(CylinderGeometry4, metalGrey);\n  const Wheel = makeWheels();\n  Cylinder1.position.y = -0.1 - 0.025;\n  Cylinder3.position.y = 0.1 + 0.07;\n  Wheel.position.y = -0.07;\n  CoverCylinder1.position.y = -0.05;\n  CoverCylinder2.rotation.x = Math.PI / 2;\n  CoverCylinder2.position.y = -0.05;\n  Cylinder2.add(CoverCylinder1);\n  Cylinder2.add(CoverCylinder2);\n  Cylinder2.add(Wheel);\n  Cylinder2.add(Cylinder1);\n  Cylinder2.add(Cylinder3);\n  base.add(Cylinder2);\n  return base;\n}\n\nfunction makeBaseMinLOD() {\n  const base = new Three.Object3D();\n  const CylinderGeometry1 = new Three.CylinderGeometry(0.027, 0.027, 0.05, 8, 8);\n  const CylinderGeometry2 = new Three.CylinderGeometry(0.03, 0.03, 0.2, 8, 8);\n  const CylinderGeometry3 = new Three.CylinderGeometry(0.04, 0.04, 0.06, 8, 8);\n  const CylinderCoverGeometryCylinder2 = new Three.TorusGeometry(0.04, 0.025, 8, 100);\n  const CylinderGeometry4 = new Three.CylinderGeometry(0.02, 0.02, 0.14, 8, 8);\n  const Cylinder1 = new Three.Mesh(CylinderGeometry1, metalGrey);\n  const Cylinder2 = new Three.Mesh(CylinderGeometry2, metalGrey);\n  const CoverCylinder1 = new Three.Mesh(CylinderGeometry3, metalGrey);\n  const CoverCylinder2 = new Three.Mesh(CylinderCoverGeometryCylinder2, metalGrey);\n  const Cylinder3 = new Three.Mesh(CylinderGeometry4, metalGrey);\n  const Wheel = makeWheelsMinLOD();\n  Cylinder1.position.y = -0.1 - 0.025;\n  Cylinder3.position.y = 0.1 + 0.07;\n  Wheel.position.y = -0.07;\n  CoverCylinder1.position.y = -0.05;\n  CoverCylinder2.rotation.x = Math.PI / 2;\n  CoverCylinder2.position.y = -0.05;\n  Cylinder2.add(CoverCylinder1);\n  Cylinder2.add(CoverCylinder2);\n  Cylinder2.add(Wheel);\n  Cylinder2.add(Cylinder1);\n  Cylinder2.add(Cylinder3);\n  base.add(Cylinder2);\n  return base;\n}\n\nfunction makeWheels() {\n  const wheels = new Three.Object3D();\n  for (let i = 0; i < 5; i++) {\n    const wheel = makeWheel();\n    wheel.rotation.y = 2 * Math.PI * i * 72 / 360;\n    wheels.add(wheel);\n  }\n  return wheels;\n}\n\nfunction makeWheelsMinLOD() {\n  const wheels = new Three.Object3D();\n  for (let i = 0; i < 5; i++) {\n    const wheel = makeWheelMinLOD();\n    wheel.rotation.y = 2 * Math.PI * i * 72 / 360;\n    wheels.add(wheel);\n  }\n  return wheels;\n}\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const chairDesk = new Three.Mesh();\n  const baseChair = makeBase();\n  const bodyChair = makeBody();\n  const backrestChair = makeBackrest();\n  baseChair.position.y = 0.1 + 0.07;\n  bodyChair.position.y = 0.1 + 0.14;\n  backrestChair.position.y = 0.06;\n  backrestChair.position.x = -0.25;\n  bodyChair.add(backrestChair);\n  baseChair.add(bodyChair);\n  chairDesk.add(baseChair);\n  chairDesk.rotation.y = -0.5 * Math.PI;\n  chairDesk.position.z -= 0.02;\n\n  return chairDesk\n}\n\nfunction makeObjectMinLOD() {\n  const chairDesk = new Three.Mesh();\n  const baseChair = makeBaseMinLOD();\n  const bodyChair = makeBodyMinLOD();\n  const backrestChair = makeBackrestMinLOD();\n  baseChair.position.y = 0.1 + 0.07;\n  bodyChair.position.y = 0.1 + 0.14;\n  backrestChair.position.y = 0.06;\n  backrestChair.position.x = -0.25;\n  bodyChair.add(backrestChair);\n  baseChair.add(bodyChair);\n  chairDesk.add(baseChair);\n  chairDesk.rotation.y = -0.5 * Math.PI;\n  chairDesk.position.z -= 0.02;\n\n  return chairDesk\n}\n\nexport default defineCatalogElement({\n  name: \"chairdesk\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'wood'],\n    title: \"chairdesk\",\n    description: \"office chair\",\n    image: require('./chairdesk.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    );\n  },\n\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    const chairDeskMaxLOD = new Three.Object3D();\n    chairDeskMaxLOD.add(objectMaxLOD.clone());\n\n    const aa = new Three.Box3().setFromObject(chairDeskMaxLOD);\n\n    const deltaX = Math.abs(aa.max.x - aa.min.x);\n    const deltaY = Math.abs(aa.max.y - aa.min.y);\n    const deltaZ = Math.abs(aa.max.z - aa.min.z);\n\n    chairDeskMaxLOD.position.y += newAltitude;\n    chairDeskMaxLOD.position.x += -WIDTH / 8;\n    chairDeskMaxLOD.position.z += DEPTH / 4;\n    chairDeskMaxLOD.scale.set(WIDTH / deltaX, DEPTH / deltaZ, HEIGHT / deltaY);\n\n    const chairDeskMinLOD = new Three.Object3D();\n    chairDeskMinLOD.add(objectMinLOD.clone());\n    chairDeskMinLOD.position.y += newAltitude;\n    chairDeskMinLOD.position.x += -WIDTH / 8;\n    chairDeskMinLOD.position.z += DEPTH / 4;\n    chairDeskMinLOD.scale.set(WIDTH / deltaX, DEPTH / deltaZ, HEIGHT / deltaY);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(chairDeskMaxLOD, 200);\n    lod.addLevel(chairDeskMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","import * as Three from 'three';\n\nimport React from 'react';\nimport convert from 'convert-units';\nimport { defineCatalogElement } from '@archef2000/react-planner';\nimport { ReactPlannerConstants } from '@archef2000/react-planner';\nimport { BoxHelper, BufferGeometry } from 'three';\n\nexport default defineCatalogElement({\n  name: \"simple-stair\",\n  prototype: \"items\",\n\n  info: {\n    title: \"simple stair\",\n    tag: ['building', 'stair'],\n    description: \"Simple stair\",\n    image: require('./simple-stair.png')\n  },\n\n  properties: {\n    width: {\n      label: \"Width\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 50\n      }\n    },\n    depth: {\n      label: \"Depth\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 300\n      }\n    },\n    height: {\n      label: \"Height\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 300\n      }\n    },\n    altitude: {\n      label: \"Altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const newWidth = convert(element.properties.width.length)\n      .from(ReactPlannerConstants.UNIT_CENTIMETER)\n      .to(scene.unit);\n\n    const newDepth = convert(element.properties.depth.length)\n      .from(ReactPlannerConstants.UNIT_CENTIMETER)\n      .to(scene.unit);\n\n    const angle = element.rotation + 90;\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n\n    return (\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={newWidth} height={newDepth} style={style} />\n        <line key=\"2\" x1={newWidth / 2} x2={newWidth / 2} y1={newDepth} y2={newDepth + 30} style={arrow_style} />\n        <line key=\"3\" x1={.35 * newWidth} x2={newWidth / 2} y1={newDepth + 15} y2={newDepth + 30} style={arrow_style} />\n        <line key=\"4\" x1={newWidth / 2} x2={.65 * newWidth} y1={newDepth + 30} y2={newDepth + 15} style={arrow_style} />\n        <text key=\"5\" x=\"0\" y=\"0\"\n          transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    );\n  },\n\n  async render3D(element, layer, scene) {\n    const loader = new Three.TextureLoader();\n    const whitePaintTextureRepeatFactor = 1 / 20; // In a 100x100 area i want to repeat this texture 5x5 times\n\n    const newWidth: number = convert(element.properties.width.length)\n      .from(ReactPlannerConstants.UNIT_CENTIMETER)\n      .to(scene.unit);\n\n    const newDepth: number = convert(element.properties.depth.length)\n      .from(ReactPlannerConstants.UNIT_CENTIMETER)\n      .to(scene.unit);\n\n    const newHeight: number = convert(element.properties.height.length)\n      .from(ReactPlannerConstants.UNIT_CENTIMETER)\n      .to(scene.unit);\n\n    const newAltitude = convert(element.properties.altitude.length)\n      .from(ReactPlannerConstants.UNIT_CENTIMETER)\n      .to(scene.unit);\n\n    const stair = new Three.Object3D();\n\n    // compute step dimensions with Blondel formula\n    const a = (63 * newHeight) / (newDepth + 2 * newHeight);\n    const p = 63 - 2 * a;\n\n    const numberOfSteps = Math.round(newHeight / a);\n    const stepHeight = newHeight / numberOfSteps;\n    const stepDepth = newDepth / numberOfSteps;\n    const stepWidth = newWidth;\n\n    // Build planes for every step\n    const stepPlaneGeometry = new Three.PlaneGeometry(stepWidth, stepHeight);\n    assignUVs(stepPlaneGeometry);\n    const stepPlaneMaterial = new Three.MeshBasicMaterial({ side: Three.FrontSide });\n    stepPlaneMaterial.map = loader.load(require('./textures/white-paint.jpg'));\n    stepPlaneMaterial.needsUpdate = true;\n    stepPlaneMaterial.map.wrapS = Three.RepeatWrapping;\n    stepPlaneMaterial.map.wrapT = Three.RepeatWrapping;\n    stepPlaneMaterial.map.repeat.set(stepWidth * whitePaintTextureRepeatFactor, stepHeight * whitePaintTextureRepeatFactor);\n\n    // Build stair profile shape\n    const starProfileShapePoints: [number, number][] = [];\n\n    for (let i = 0; i < numberOfSteps; i++) {\n      starProfileShapePoints.push([(numberOfSteps - i) * stepDepth, i * stepHeight],\n        [(numberOfSteps - i) * stepDepth, (i + 1) * stepHeight]);\n\n      const stepPlane = new Three.Mesh(stepPlaneGeometry, stepPlaneMaterial);\n      stepPlane.position.x += stepWidth / 2;\n      stepPlane.position.z = (numberOfSteps - i) * stepDepth;\n      stepPlane.position.y = i * stepHeight + stepHeight / 2;\n      stair.add(stepPlane);\n\n      const stepCover = buildStepCover(stepWidth, stepHeight, stepDepth);\n      stepCover.position.y += stepHeight * i + stepHeight / 2;\n      stepCover.position.z += (numberOfSteps - i) * stepDepth;\n\n      stair.add(stepCover);\n    }\n\n    starProfileShapePoints.push([0, numberOfSteps * stepHeight],\n      [0, (numberOfSteps - 1) * stepHeight],\n      [(numberOfSteps - 1) * stepDepth, 0]);\n\n    const stairShapeProfile = new Three.Shape();\n    stairShapeProfile.moveTo(starProfileShapePoints[0][0], starProfileShapePoints[0][1]);\n    for (let i = 1; i < starProfileShapePoints.length; i++) {\n      stairShapeProfile.lineTo(starProfileShapePoints[i][0], starProfileShapePoints[i][1]);\n    }\n\n    const stairShapeProfileGeometry = new Three.ShapeGeometry(stairShapeProfile);\n    assignUVs(stairShapeProfileGeometry);\n    const stairProfileMaterial = new Three.MeshPhongMaterial({ side: Three.FrontSide });\n\n    stairProfileMaterial.map = loader.load(require('./textures/white-paint.jpg'));\n    stairProfileMaterial.needsUpdate = true;\n    stairProfileMaterial.map.wrapS = Three.RepeatWrapping;\n    stairProfileMaterial.map.wrapT = Three.RepeatWrapping;\n    stairProfileMaterial.map.repeat.set(numberOfSteps * stepDepth * whitePaintTextureRepeatFactor,\n      numberOfSteps * stepHeight * whitePaintTextureRepeatFactor);\n\n    const stairProfile = new Three.Mesh(stairShapeProfileGeometry, stairProfileMaterial);\n\n    stairProfile.rotation.y = -Math.PI / 2;\n\n    stair.add(stairProfile);\n\n    const stairProfileMaterial2 = new Three.MeshPhongMaterial({ side: Three.BackSide });\n\n    stairProfileMaterial2.map = loader.load(require('./textures/white-paint.jpg'));\n    stairProfileMaterial2.needsUpdate = true;\n    stairProfileMaterial2.map.wrapS = Three.RepeatWrapping;\n    stairProfileMaterial2.map.wrapT = Three.RepeatWrapping;\n    stairProfileMaterial2.map.repeat.set(numberOfSteps * stepDepth * whitePaintTextureRepeatFactor,\n      numberOfSteps * stepHeight * whitePaintTextureRepeatFactor);\n\n    const stairProfile2 = new Three.Mesh(stairShapeProfileGeometry, stairProfileMaterial2);\n\n    stairProfile2.rotation.y = -Math.PI / 2;\n    stairProfile2.position.x += newWidth;\n\n    stair.add(stairProfile2);\n\n    // Build closures for the stair\n\n    /*** CLOSURE 1 ***/\n    const closure1Slope = -Math.atan(stepDepth / stepHeight);\n    const stairClosure1Width = newWidth;\n    const stairClosure1Height = (numberOfSteps - 1) * stepHeight / Math.cos(closure1Slope);\n    const stairClosure1Geometry = new Three.PlaneGeometry(stairClosure1Width, stairClosure1Height);\n\n    const closure1Material = new Three.MeshPhongMaterial({ side: Three.BackSide });\n    closure1Material.map = loader.load(require('./textures/white-paint.jpg'));\n    closure1Material.needsUpdate = true;\n    closure1Material.map.wrapS = Three.RepeatWrapping;\n    closure1Material.map.wrapT = Three.RepeatWrapping;\n    closure1Material.map.repeat.set(stairClosure1Width * whitePaintTextureRepeatFactor,\n      stairClosure1Height * whitePaintTextureRepeatFactor);\n    const stairClosure1 = new Three.Mesh(stairClosure1Geometry, closure1Material);\n    const pivotClosure1 = new Three.Object3D();\n    stairClosure1.position.y += stairClosure1Height / 2;\n    pivotClosure1.add(stairClosure1);\n\n    pivotClosure1.position.x = newWidth / 2;\n    pivotClosure1.position.z = (numberOfSteps - 1) * stepDepth;\n\n    pivotClosure1.rotation.x = closure1Slope;\n\n    stair.add(pivotClosure1);\n\n    /*** CLOSURE 2 ***/\n    const closure2 = new Three.Mesh(stepPlaneGeometry, stepPlaneMaterial);\n    closure2.rotation.y = Math.PI;\n    closure2.position.x = stepWidth / 2;\n    closure2.position.y = numberOfSteps * stepHeight - stepHeight / 2;\n    stair.add(closure2);\n\n    /*** CLOSURE 2 ***/\n    const stairClosure3Geometry = new Three.PlaneGeometry(stepWidth, stepDepth);\n    const closure3 = new Three.Mesh(stairClosure3Geometry, stepPlaneMaterial);\n    closure3.rotation.x = Math.PI / 2;\n    closure3.position.x = stepWidth / 2;\n    closure3.position.z = (numberOfSteps - 1) * stepDepth + stepDepth / 2;\n\n    stair.add(closure3);\n\n    if (element.selected) {\n      const box = new BoxHelper(stair, 0x99c3fb);\n      box.material.linewidth = 2;\n      box.material.depthTest = false;\n      box.renderOrder = 1000;\n      stair.add(box);\n    }\n\n    // Normalize the origin of the object\n    const boundingBox = new Three.Box3().setFromObject(stair);\n\n    const center = [\n      (boundingBox.max.x - boundingBox.min.x) / 2 + boundingBox.min.x,\n      (boundingBox.max.y - boundingBox.min.y) / 2 + boundingBox.min.y,\n      (boundingBox.max.z - boundingBox.min.z) / 2 + boundingBox.min.z];\n\n    stair.position.x -= center[0];\n    stair.position.y -= center[1] - (boundingBox.max.y - boundingBox.min.y) / 2;\n    stair.position.z -= center[2];\n\n    // I re-scale the stair following the initial attributes\n    stair.scale.set(newWidth / (boundingBox.max.x - boundingBox.min.x),\n      newHeight / (boundingBox.max.y - boundingBox.min.y),\n      newDepth / (boundingBox.max.z - boundingBox.min.z));\n\n    stair.position.y += newAltitude;\n\n    return stair;\n  },\n\n  async updateRender3D(element, layer, scene, mesh, oldElement, differences, selfDestroy, selfBuild) {\n    const noPerf = () => { selfDestroy(); return selfBuild(); };\n\n    if (differences.indexOf('selected') !== -1) {\n      mesh.traverse((child) => {\n        if (child instanceof BoxHelper) {\n          child.visible = element.selected;\n        }\n      });\n      return mesh;\n    }\n\n    if (differences.indexOf('rotation') !== -1) {\n      mesh.rotation.y = element.rotation * Math.PI / 180;\n      return mesh;\n    }\n\n    if (differences.indexOf('x') !== -1 || differences.indexOf('y') !== -1) {\n      mesh.position.x = element.x;\n      mesh.position.z = -element.y;\n      return mesh;\n    }\n\n    if (differences.indexOf('properties') !== -1) {\n      const oldWidth = convert(oldElement.properties.width.length)\n        .from(ReactPlannerConstants.UNIT_CENTIMETER)\n        .to(scene.unit);\n      const oldDepth = convert(oldElement.properties.depth.length)\n        .from(ReactPlannerConstants.UNIT_CENTIMETER)\n        .to(scene.unit);\n      const oldHeight = convert(oldElement.properties.height.length)\n        .from(ReactPlannerConstants.UNIT_CENTIMETER)\n        .to(scene.unit);\n      const oldAltitude = convert(oldElement.properties.altitude.length)\n        .from(ReactPlannerConstants.UNIT_CENTIMETER)\n        .to(scene.unit);\n\n      const newWidth = convert(element.properties.width.length)\n        .from(ReactPlannerConstants.UNIT_CENTIMETER)\n        .to(scene.unit);\n      const newDepth = convert(element.properties.depth.length)\n        .from(ReactPlannerConstants.UNIT_CENTIMETER)\n        .to(scene.unit);\n      const newHeight = convert(element.properties.height.length)\n        .from(ReactPlannerConstants.UNIT_CENTIMETER)\n        .to(scene.unit);\n      const newAltitude = convert(element.properties.altitude.length)\n        .from(ReactPlannerConstants.UNIT_CENTIMETER)\n        .to(scene.unit);\n\n      const widthChanged = Math.abs(newWidth - oldWidth) > 1e-6;\n      const depthChanged = Math.abs(newDepth - oldDepth) > 1e-6;\n      const heightChanged = Math.abs(newHeight - oldHeight) > 1e-6;\n      const altitudeChanged = Math.abs(newAltitude - oldAltitude) > 1e-6;\n\n      if (depthChanged || heightChanged) {\n        return noPerf();\n      }\n\n      if (widthChanged) {\n        const ratioW = newWidth / oldWidth;\n        mesh.scale.x *= ratioW;\n      }\n\n      if (altitudeChanged) {\n        const deltaAlt = newAltitude - oldAltitude;\n        mesh.position.y += deltaAlt;\n      }\n      return mesh;\n    }\n    return noPerf();\n  }\n});\n\nfunction assignUVs(geometry: BufferGeometry) {\n  geometry.computeBoundingBox();\n\n  const max = geometry.boundingBox.max;\n  const min = geometry.boundingBox.min;\n\n  const offset = new Three.Vector2(0 - min.x, 0 - min.y);\n  const range = new Three.Vector2(max.x - min.x, max.y - min.y);\n\n  const uvAttribute = geometry.getAttribute('uv');\n  const positionAttribute = geometry.getAttribute('position');\n\n  for (let i = 0; i < positionAttribute.count; i++) {\n    const x = positionAttribute.getX(i);\n    const y = positionAttribute.getY(i);\n\n    const u = (x + offset.x) / range.x;\n    const v = (y + offset.y) / range.y;\n\n    uvAttribute.setXY(i, u, v);\n  }\n  uvAttribute.needsUpdate = true;\n}\n\nfunction buildStepCover(width: number, height: number, depth: number) {\n  const loader = new Three.TextureLoader();\n\n  const stepCoverHeight = 2;\n\n  const stepCoverLength = 2;\n\n  const planeGeometry = new Three.PlaneGeometry(width + stepCoverLength * 2, depth + stepCoverHeight);\n  const planeMaterial = new Three.MeshBasicMaterial({ side: Three.FrontSide });\n  assignUVs(planeGeometry);\n\n  const planeGeometry2 = new Three.PlaneGeometry(depth + stepCoverLength, stepCoverHeight);\n  assignUVs(planeGeometry2);\n\n  const planeGeometry3 = new Three.PlaneGeometry(width + stepCoverLength * 2, stepCoverHeight);\n  assignUVs(planeGeometry3);\n\n  planeMaterial.map = loader.load(require('./textures/marble.jpg'));\n  planeMaterial.needsUpdate = true;\n  planeMaterial.map.wrapS = Three.RepeatWrapping;\n  planeMaterial.map.wrapT = Three.RepeatWrapping;\n\n  const plane = new Three.Mesh(planeGeometry, planeMaterial);\n  plane.rotation.x = -Math.PI / 2;\n\n  plane.position.x = width / 2;\n  plane.position.z = -depth / 2;\n  plane.position.y += height / 2 + stepCoverHeight;\n\n  const plane2 = new Three.Mesh(planeGeometry2, planeMaterial);\n  plane2.rotation.y = -Math.PI / 2;\n\n  plane2.position.x -= stepCoverLength;\n  plane2.position.y += height / 2 + stepCoverHeight / 2;\n  plane2.position.z -= depth / 2;\n\n  const plane3 = new Three.Mesh(planeGeometry, planeMaterial);\n  plane3.rotation.x = Math.PI / 2;\n\n  plane3.position.x = width / 2;\n  plane3.position.z = -depth / 2;\n  plane3.position.y += height / 2;\n\n  const plane4 = new Three.Mesh(planeGeometry2, planeMaterial);\n  plane4.rotation.y = Math.PI / 2;\n\n  plane4.position.x += width + stepCoverLength;\n  plane4.position.y += height / 2 + stepCoverHeight / 2;\n  plane4.position.z -= depth / 2;\n\n  const plane5 = new Three.Mesh(planeGeometry3, planeMaterial);\n\n  plane5.position.x += width / 2;\n  plane5.position.y += height / 2 + stepCoverHeight / 2;\n  plane5.position.z += stepCoverLength / 2;\n\n  const plane6 = new Three.Mesh(planeGeometry3, planeMaterial);\n\n  plane6.rotation.y = Math.PI;\n\n  plane6.position.x += width / 2;\n  plane6.position.y += height / 2 + stepCoverHeight / 2;\n  plane6.position.z -= depth + stepCoverLength / 2;\n\n  const stepCover = new Three.Object3D();\n\n  stepCover.add(plane);\n  stepCover.add(plane2);\n  stepCover.add(plane3);\n  stepCover.add(plane4);\n  stepCover.add(plane5);\n  stepCover.add(plane6);\n\n  return stepCover;\n};\n","module.exports = __webpack_public_path__ + \"catalog/items/umbrella-stand/umbrellaStand.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst textureLoader = new Three.TextureLoader();\nconst white = textureLoader.load(require(\"./white.jpg\"));\nconst whiteMaterial = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst wood = textureLoader.load(require(\"./wood.jpg\"));\nconst glassMaterial = new Three.MeshLambertMaterial({ color: 0xc6c6c6, transparent: true, opacity: .5 });\n\nfunction makeMonitor(newDepth: number) {\n  const monitor = new Three.Object3D();\n\n  const cubeGeometryBase = new Three.BoxGeometry(0.04, 0.42, 0.06);\n  const whiteTexture = new Three.MeshLambertMaterial({ map: white });\n  const edge1 = new Three.Mesh(cubeGeometryBase, whiteTexture);\n  edge1.position.set(0, 0.79, 0);\n  edge1.rotation.x = Math.PI / 2;\n  monitor.add(edge1);\n\n  const edge2 = new Three.Mesh(cubeGeometryBase, whiteTexture);\n  edge2.position.set(0, 0.43, 0);\n  edge2.rotation.x = Math.PI / 2;\n  monitor.add(edge2);\n\n  const cubeGeometryBase2 = new Three.BoxGeometry(0.04, 0.42, 0.04);\n  const edge3 = new Three.Mesh(cubeGeometryBase2, whiteTexture);\n  edge3.position.set(0, 0.61, 0.21);\n  monitor.add(edge3);\n\n  const edge4 = new Three.Mesh(cubeGeometryBase2, whiteTexture);\n  edge4.position.set(0, 0.61, -0.21);\n  monitor.add(edge4);\n\n  const cubeGeometryBase3 = new Three.BoxGeometry(0.4, 0.40, 0.05);\n  const screen = new Three.Mesh(cubeGeometryBase3, whiteMaterial);\n  screen.position.set(-0.02, 0.61, 0);\n  screen.rotation.y = Math.PI / 2;\n  monitor.add(screen);\n\n  monitor.rotation.y -= Math.PI / 2;\n  monitor.rotation.x -= Math.PI / 3;\n\n  const value = new Three.Box3().setFromObject(monitor);\n\n  const deltaX = Math.abs(value.max.x - value.min.x);\n  const deltaY = Math.abs(value.max.y - value.min.y);\n  const deltaZ = Math.abs(value.max.z - value.min.z);\n\n  monitor.scale.set(newDepth / 3 / deltaX, newDepth / 4 / deltaY, newDepth / 4 / deltaZ);\n\n  return monitor\n}\n\nfunction makeObjectMaxLOD(newWidthA: number, newWidthB: number, newHeight: number, newDepth: number) {\n  const desk = new Three.Mesh();\n\n  const rectShape = new Three.Shape();\n  if (newWidthA < newWidthB) {\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(newWidthA / 2 - newWidthB / 2, newDepth);\n    rectShape.lineTo(newWidthA - (newWidthA / 2 - newWidthB / 2), newDepth);\n    rectShape.lineTo(newWidthA, 0);\n  } else if (newWidthA > newWidthB) {\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(newWidthA, 0);\n    rectShape.lineTo(newWidthA + (newWidthB / 2 - newWidthA / 2), newDepth);\n    rectShape.lineTo(-(newWidthB / 2 - newWidthA / 2), newDepth);\n  } else if (newWidthA === newWidthB) {\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(0, newDepth);\n    rectShape.lineTo(newWidthA, newDepth);\n    rectShape.lineTo(newWidthA, 0);\n  }\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: newHeight / 40,\n    bevelEnabled: false,\n    bevelThickness: newHeight,\n    bevelSize: newHeight,\n    bevelSegments: 2\n  };\n\n  const geometry = new Three.ExtrudeGeometry(rectShape, extrudeSettings);\n  const woodTexture = new Three.MeshLambertMaterial({ map: wood });\n  const mesh = new Three.Mesh(geometry, woodTexture);\n\n  mesh.rotation.x += Math.PI / 2;\n  mesh.position.y = newHeight / 1.8;\n\n  const rectShape2 = new Three.Shape();\n  const hole = new Three.Path();\n  if (newWidthA < newWidthB) {\n    rectShape2.moveTo(0, 0);\n    rectShape2.lineTo(newWidthA, 0);\n    rectShape2.lineTo(newWidthA + (newWidthB / 2 - newWidthA / 2), newDepth);\n    rectShape2.lineTo(-(newWidthB / 2 - newWidthA / 2), newDepth);\n\n    hole.moveTo(newWidthB / 20, newDepth / 20);\n    hole.lineTo(newWidthA / 2 - newWidthB / 2 + newWidthB / 20, newDepth - newDepth / 20);\n    hole.lineTo(newWidthA - (newWidthA / 2 - newWidthB / 2) - newWidthB / 20, newDepth - newDepth / 20);\n    hole.lineTo(newWidthA - newWidthB / 20, newDepth / 20);\n    rectShape2.holes.push(hole);\n  } else if (newWidthA > newWidthB) {\n    rectShape2.moveTo(0, 0);\n    rectShape2.lineTo(newWidthA, 0);\n    rectShape2.lineTo(newWidthA + (newWidthB / 2 - newWidthA / 2), newDepth);\n    rectShape2.lineTo(-(newWidthB / 2 - newWidthA / 2), newDepth);\n\n    hole.moveTo(newWidthA / 2 - newWidthB / 2 - newWidthA / 20, newDepth / 20);\n    hole.lineTo(newWidthA - (newWidthA / 2 - newWidthB / 2) + newWidthA / 20, newDepth / 20);\n    hole.lineTo(newWidthB + newWidthA / 20, newDepth - newDepth / 20);\n    hole.lineTo(newWidthA - newWidthB - newWidthA / 20, newDepth - newDepth / 20);\n    rectShape2.holes.push(hole);\n  } else if (newWidthA === newWidthB) {\n    rectShape2.moveTo(0, 0);\n    rectShape2.lineTo(newWidthA, 0);\n    rectShape2.lineTo(newWidthA, newDepth);\n    rectShape2.lineTo(0, newDepth);\n\n    hole.moveTo(newWidthA / 20, newDepth / 20);\n    hole.lineTo(newWidthA - newWidthA / 20, newDepth / 20);\n    hole.lineTo(newWidthA - newWidthA / 20, newDepth - newDepth / 20);\n    hole.lineTo(newWidthA / 20, newDepth - newDepth / 20);\n    rectShape2.holes.push(hole);\n  }\n\n  const geometry2 = new Three.ExtrudeGeometry(rectShape2, extrudeSettings);\n  const mesh2 = new Three.Mesh(geometry2, woodTexture);\n  mesh2.position.y += newHeight;\n  mesh2.position.z += newDepth / 40;\n  mesh2.rotation.x += Math.PI / 2;\n\n  const mesh3 = new Three.Mesh(geometry, woodTexture);\n  mesh3.position.y += newHeight;\n  mesh3.rotation.x += Math.PI / 1.5;\n\n  if (newWidthA < newWidthB) {\n    mesh3.scale.set(.98, 1, 1);\n    mesh3.position.x += 3;\n  }\n  if (newWidthA > newWidthB || newWidthA === newWidthB) mesh3.scale.set(1, 1, 1);\n\n  const glass = new Three.Shape();\n  if (newWidthA < newWidthB) {\n    glass.moveTo(newWidthB / 20, newDepth / 20);\n    glass.lineTo(newWidthA / 2 - newWidthB / 2 + newWidthB / 20, newDepth - newDepth / 20);\n    glass.lineTo(newWidthA - (newWidthA / 2 - newWidthB / 2) - newWidthB / 20, newDepth - newDepth / 20);\n    glass.lineTo(newWidthA - newWidthB / 20, newDepth / 20);\n  } else if (newWidthA > newWidthB) {\n    glass.moveTo(newWidthA / 2 - newWidthB / 2 - newWidthA / 20, newDepth / 20);\n    glass.lineTo(newWidthA - (newWidthA / 2 - newWidthB / 2) + newWidthA / 20, newDepth / 20);\n    glass.lineTo(newWidthB + newWidthA / 20, newDepth - newDepth / 20);\n    glass.lineTo(newWidthA - newWidthB - newWidthA / 20, newDepth - newDepth / 20);\n  } else if (newWidthA === newWidthB) {\n    glass.moveTo(newWidthA / 20, newDepth / 20);\n    glass.lineTo(newWidthA - newWidthA / 20, newDepth / 20);\n    glass.lineTo(newWidthA - newWidthA / 20, newDepth - newDepth / 20);\n    glass.lineTo(newWidthA / 20, newDepth - newDepth / 20);\n  }\n\n  const geometry4 = new Three.ExtrudeGeometry(glass, extrudeSettings);\n  const mesh4 = new Three.Mesh(geometry4, glassMaterial);\n  mesh4.position.y += newHeight;\n  mesh4.rotation.x += Math.PI / 2;\n\n  const geometry5 = new Three.BoxGeometry(newWidthA, newDepth / 20, 1.6 * newHeight);\n  const mesh5 = new Three.Mesh(geometry5, woodTexture);\n  mesh5.rotation.x += Math.PI / 2;\n  mesh5.position.set(newWidthA / 2, newHeight / 5, 0);\n\n  let c;\n\n  if (newWidthA < newWidthB) {\n    c = (newWidthB / 2 - newWidthA / 2);\n  } else if (newWidthA > newWidthB) {\n    c = (newWidthA / 2 - newWidthB / 2);\n  }\n\n  const value = (newDepth) / c;\n  const angle = Math.atan(value);\n\n  let edge = Math.sqrt(Math.pow(c, 2) + Math.pow(newDepth, 2));\n\n  if (newWidthA === newWidthB) edge = newDepth;\n\n  const geometry6 = new Three.BoxGeometry(edge, newDepth / 20, 1.6 * newHeight);\n  const mesh6 = new Three.Mesh(geometry6, woodTexture);\n  mesh6.rotation.x += Math.PI / 2;\n\n  if (newWidthA < newWidthB) {\n    mesh6.position.set(-(newWidthB / 2 - newWidthA / 2) / 2, newHeight / 5, newDepth / 2);\n    mesh6.rotation.z -= angle;\n  } else if (newWidthA > newWidthB) {\n    mesh6.position.set((newWidthA - (newWidthA / 2 + newWidthB / 2)) / 2, newHeight / 5, newDepth / 2);\n    mesh6.rotation.z += angle;\n  } else if (newWidthA === newWidthB) {\n    mesh6.position.set(0, newHeight / 5, newDepth / 2);\n    mesh6.rotation.z += Math.PI / 2;\n  }\n\n\n  const mesh7 = mesh6.clone();\n  if (newWidthA < newWidthB) {\n    mesh7.position.set(newWidthB - 1.5 * (newWidthB / 2 - newWidthA / 2), newHeight / 5, newDepth / 2);\n    mesh7.rotation.z = -Math.PI + angle;\n  } else if (newWidthA > newWidthB) {\n    mesh7.position.set(newWidthA - (newWidthA / 2 - newWidthB / 2) / 2, newHeight / 5, newDepth / 2);\n    mesh7.rotation.z = -Math.PI - angle;\n  } else if (newWidthA === newWidthB) {\n    mesh7.position.set(newWidthB, newHeight / 5, newDepth / 2);\n  }\n\n  let index: number;\n  let indexMonitor: number;\n  let lastPosition: number;\n  let lastPositionMonitor: number;\n  let incrPosition: number;\n\n  if (newWidthA < newWidthB) {\n    index = 0;\n    indexMonitor = newWidthB / 2 - newWidthA / 2;\n    lastPosition = newWidthB - 2 * (newWidthB / 2 - newWidthA / 2);\n    lastPositionMonitor = newWidthB - 2 * (newWidthB / 2 - newWidthA / 2) - (newWidthB / 2 - newWidthA / 2);\n    incrPosition = newWidthB / 2 - newWidthA / 2;\n  } else if (newWidthA > newWidthB) {\n    index = newWidthA / 2 - newWidthB / 2;\n    indexMonitor = 2 * (newWidthA / 2 - newWidthB / 2);\n    lastPosition = newWidthA - (newWidthA / 2 - newWidthB / 2);\n    lastPositionMonitor = newWidthA - 2 * (newWidthA / 2 - newWidthB / 2);\n    incrPosition = newWidthA / 2 - newWidthB / 2;\n  } else if (newWidthA === newWidthB) {\n    index = 0;\n    indexMonitor = newWidthA / 8;\n    lastPosition = newWidthA;\n    lastPositionMonitor = newWidthA - newWidthA / 8;\n    incrPosition = newWidthA / 8;\n  }\n\n  for (let i = index + incrPosition; i < lastPosition; i += incrPosition) {\n    const geometry8 = new Three.BoxGeometry(newDepth, newDepth / 20, 1.55 * newHeight);\n    const mesh8 = new Three.Mesh(geometry8, woodTexture);\n    mesh8.rotation.x = Math.PI / 2;\n    mesh8.rotation.z = Math.PI / 2;\n    mesh8.position.x += i;\n    mesh8.position.y += newHeight / 5;\n    mesh8.position.z += newDepth / 2;\n    desk.add(mesh8);\n  }\n\n  desk.add(mesh);\n  desk.add(mesh2);\n  desk.add(mesh3);\n  desk.add(mesh4);\n  desk.add(mesh5);\n  desk.add(mesh6);\n  desk.add(mesh7);\n\n  for (let i = indexMonitor + incrPosition / 2; i < lastPositionMonitor; i += incrPosition) {\n    const monitor2 = makeMonitor(newDepth);\n    monitor2.position.x = i;\n    monitor2.position.z += 1.15 * newDepth;\n    monitor2.position.y += mesh3.position.y / 2.2;\n    desk.add(monitor2);\n  }\n\n  return desk\n}\n\nfunction makeObjectMinLOD(newWidthA: number, newWidthB: number, newHeight: number, newDepth: number) {\n  const desk = new Three.Mesh();\n\n  const rectShape = new Three.Shape();\n  if (newWidthA < newWidthB) {\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(newWidthA / 2 - newWidthB / 2, newDepth);\n    rectShape.lineTo(newWidthA - (newWidthA / 2 - newWidthB / 2), newDepth);\n    rectShape.lineTo(newWidthA, 0);\n  } else if (newWidthA > newWidthB) {\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(newWidthA, 0);\n    rectShape.lineTo(newWidthA + (newWidthB / 2 - newWidthA / 2), newDepth);\n    rectShape.lineTo(-(newWidthB / 2 - newWidthA / 2), newDepth);\n  } else if (newWidthA === newWidthB) {\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(0, newDepth);\n    rectShape.lineTo(newWidthA, newDepth);\n    rectShape.lineTo(newWidthA, 0);\n  }\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: newHeight / 40,\n    bevelEnabled: false,\n    bevelThickness: newHeight,\n    bevelSize: newHeight,\n    bevelSegments: 2\n  };\n\n  const geometry = new Three.ExtrudeGeometry(rectShape, extrudeSettings);\n  const woodTexture = new Three.MeshLambertMaterial({ map: wood });\n  const mesh = new Three.Mesh(geometry, woodTexture);\n\n  mesh.rotation.x += Math.PI / 2;\n  mesh.position.y = newHeight / 1.8;\n\n  const rectShape2 = new Three.Shape();\n  const hole = new Three.Path();\n  if (newWidthA < newWidthB) {\n    rectShape2.moveTo(0, 0);\n    rectShape2.lineTo(newWidthA, 0);\n    rectShape2.lineTo(newWidthA + (newWidthB / 2 - newWidthA / 2), newDepth);\n    rectShape2.lineTo(-(newWidthB / 2 - newWidthA / 2), newDepth);\n\n    hole.moveTo(newWidthB / 20, newDepth / 20);\n    hole.lineTo(newWidthA / 2 - newWidthB / 2 + newWidthB / 20, newDepth - newDepth / 20);\n    hole.lineTo(newWidthA - (newWidthA / 2 - newWidthB / 2) - newWidthB / 20, newDepth - newDepth / 20);\n    hole.lineTo(newWidthA - newWidthB / 20, newDepth / 20);\n    rectShape2.holes.push(hole);\n  } else if (newWidthA > newWidthB) {\n    rectShape2.moveTo(0, 0);\n    rectShape2.lineTo(newWidthA, 0);\n    rectShape2.lineTo(newWidthA + (newWidthB / 2 - newWidthA / 2), newDepth);\n    rectShape2.lineTo(-(newWidthB / 2 - newWidthA / 2), newDepth);\n\n    hole.moveTo(newWidthA / 2 - newWidthB / 2 - newWidthA / 20, newDepth / 20);\n    hole.lineTo(newWidthA - (newWidthA / 2 - newWidthB / 2) + newWidthA / 20, newDepth / 20);\n    hole.lineTo(newWidthB + newWidthA / 20, newDepth - newDepth / 20);\n    hole.lineTo(newWidthA - newWidthB - newWidthA / 20, newDepth - newDepth / 20);\n    rectShape2.holes.push(hole);\n  } else if (newWidthA === newWidthB) {\n    rectShape2.moveTo(0, 0);\n    rectShape2.lineTo(newWidthA, 0);\n    rectShape2.lineTo(newWidthA, newDepth);\n    rectShape2.lineTo(0, newDepth);\n\n    hole.moveTo(newWidthA / 20, newDepth / 20);\n    hole.lineTo(newWidthA - newWidthA / 20, newDepth / 20);\n    hole.lineTo(newWidthA - newWidthA / 20, newDepth - newDepth / 20);\n    hole.lineTo(newWidthA / 20, newDepth - newDepth / 20);\n    rectShape2.holes.push(hole);\n  }\n\n  const geometry2 = new Three.ExtrudeGeometry(rectShape2, extrudeSettings);\n  const mesh2 = new Three.Mesh(geometry2, woodTexture);\n  mesh2.position.y += newHeight;\n  mesh2.position.z += newDepth / 40;\n  mesh2.rotation.x += Math.PI / 2;\n\n  const mesh3 = new Three.Mesh(geometry, woodTexture);\n  mesh3.position.y += newHeight;\n  mesh3.rotation.x += Math.PI / 1.5;\n\n  if (newWidthA < newWidthB) {\n    mesh3.scale.set(.98, 1, 1);\n    mesh3.position.x += 3;\n  }\n  if (newWidthA > newWidthB || newWidthA === newWidthB) mesh3.scale.set(1, 1, 1);\n\n  const glass = new Three.Shape();\n  if (newWidthA < newWidthB) {\n    glass.moveTo(newWidthB / 20, newDepth / 20);\n    glass.lineTo(newWidthA / 2 - newWidthB / 2 + newWidthB / 20, newDepth - newDepth / 20);\n    glass.lineTo(newWidthA - (newWidthA / 2 - newWidthB / 2) - newWidthB / 20, newDepth - newDepth / 20);\n    glass.lineTo(newWidthA - newWidthB / 20, newDepth / 20);\n  } else if (newWidthA > newWidthB) {\n    glass.moveTo(newWidthA / 2 - newWidthB / 2 - newWidthA / 20, newDepth / 20);\n    glass.lineTo(newWidthA - (newWidthA / 2 - newWidthB / 2) + newWidthA / 20, newDepth / 20);\n    glass.lineTo(newWidthB + newWidthA / 20, newDepth - newDepth / 20);\n    glass.lineTo(newWidthA - newWidthB - newWidthA / 20, newDepth - newDepth / 20);\n  } else if (newWidthA === newWidthB) {\n    glass.moveTo(newWidthA / 20, newDepth / 20);\n    glass.lineTo(newWidthA - newWidthA / 20, newDepth / 20);\n    glass.lineTo(newWidthA - newWidthA / 20, newDepth - newDepth / 20);\n    glass.lineTo(newWidthA / 20, newDepth - newDepth / 20);\n  }\n\n  const geometry4 = new Three.ExtrudeGeometry(glass, extrudeSettings);\n  const glassMaterial = new Three.MeshLambertMaterial({ color: 0xc6c6c6, transparent: true, opacity: .5 });\n  const mesh4 = new Three.Mesh(geometry4, glassMaterial);\n  mesh4.position.y += newHeight;\n  mesh4.rotation.x += Math.PI / 2;\n\n  const geometry5 = new Three.BoxGeometry(newWidthA, newDepth / 20, 1.6 * newHeight);\n  const mesh5 = new Three.Mesh(geometry5, woodTexture);\n  mesh5.rotation.x += Math.PI / 2;\n  mesh5.position.set(newWidthA / 2, newHeight / 5, 0);\n\n  let c: number;\n\n  if (newWidthA < newWidthB) {\n    c = (newWidthB / 2 - newWidthA / 2);\n  } else if (newWidthA > newWidthB) {\n    c = (newWidthA / 2 - newWidthB / 2);\n  }\n\n  const value = (newDepth) / c;\n  const angle = Math.atan(value);\n\n  let edge = Math.sqrt(Math.pow(c, 2) + Math.pow(newDepth, 2));\n\n  if (newWidthA === newWidthB) edge = newDepth;\n\n  const geometry6 = new Three.BoxGeometry(edge, newDepth / 20, 1.6 * newHeight);\n  const mesh6 = new Three.Mesh(geometry6, woodTexture);\n  mesh6.rotation.x += Math.PI / 2;\n\n  if (newWidthA < newWidthB) {\n    mesh6.position.set(-(newWidthB / 2 - newWidthA / 2) / 2, newHeight / 5, newDepth / 2);\n    mesh6.rotation.z -= angle;\n  } else if (newWidthA > newWidthB) {\n    mesh6.position.set((newWidthA - (newWidthA / 2 + newWidthB / 2)) / 2, newHeight / 5, newDepth / 2);\n    mesh6.rotation.z += angle;\n  } else if (newWidthA === newWidthB) {\n    mesh6.position.set(0, newHeight / 5, newDepth / 2);\n    mesh6.rotation.z += Math.PI / 2;\n  }\n\n  const mesh7 = mesh6.clone();\n  if (newWidthA < newWidthB) {\n    mesh7.position.set(newWidthB - 1.5 * (newWidthB / 2 - newWidthA / 2), newHeight / 5, newDepth / 2);\n    mesh7.rotation.z = -Math.PI + angle;\n  }\n  else if (newWidthA > newWidthB) {\n    mesh7.position.set(newWidthA - (newWidthA / 2 - newWidthB / 2) / 2, newHeight / 5, newDepth / 2);\n    mesh7.rotation.z = -Math.PI - angle;\n  }\n  else if (newWidthA === newWidthB) {\n    mesh7.position.set(newWidthB, newHeight / 5, newDepth / 2);\n  }\n\n  desk.add(mesh);\n  desk.add(mesh2);\n  desk.add(mesh3);\n  desk.add(mesh4);\n  desk.add(mesh5);\n  desk.add(mesh6);\n  desk.add(mesh7);\n\n  return desk\n}\n\nexport default defineCatalogElement({\n  name: \"desk\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'wood'],\n    title: \"desk\",\n    description: \"desk\",\n    image: require('./desk.png')\n  },\n\n  properties: {\n    widthA: {\n      label: \"larghezza lato A\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 400\n      }\n    },\n    widthB: {\n      label: \"larghezza lato B\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 400\n      }\n    },\n    depth: {\n      label: \"depth\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 90\n      }\n    },\n    height: {\n      label: \"height\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    },\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const newWidthA = element.properties.widthA.length;\n    const newWidthB = element.properties.widthB.length;\n    const newDepth = element.properties.depth.length;\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-newWidthA / 2},${-newDepth / 2})`}>\n        <path key=\"1\" d={`M ${newWidthA / 2 - newWidthB / 2} 0 l ${-newWidthA / 2 + newWidthB / 2} ${newDepth} l ${newWidthA} 0 l ${-newWidthA / 2 + newWidthB / 2}${-newDepth} l ${-newWidthB} 0`} stroke=\"red\"\n          transform={`translate(0, ${newDepth}) scale(1,-1)`}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"5\" x=\"0\" y=\"0\"\n          transform={`translate(${newWidthA / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newWidthA: number = element.properties.widthA.length;\n    const newWidthB: number = element.properties.widthB.length;\n    const newDepth: number = element.properties.depth.length;\n    const newHeight: number = element.properties.height.length;\n    const newAltitude: number = element.properties.altitude.length;\n\n    /********** lod max **********/\n\n    const scrivaniaMaxLOD = new Three.Object3D();\n    scrivaniaMaxLOD.add(makeObjectMaxLOD(newWidthA, newWidthB, newHeight, newDepth).clone());\n\n    const aa = new Three.Box3().setFromObject(scrivaniaMaxLOD);\n\n    const deltaX = Math.abs(aa.max.x - aa.min.x);\n    const deltaY = Math.abs(aa.max.y - aa.min.y);\n    const deltaZ = Math.abs(aa.max.z - aa.min.z);\n\n    scrivaniaMaxLOD.position.y += newHeight / 2 + newAltitude;\n    scrivaniaMaxLOD.position.z += newDepth / 2;\n    if (newWidthA < newWidthB)\n      scrivaniaMaxLOD.position.x += newWidthB / 2 - (newWidthB / 2 - newWidthA / 2);\n    if (newWidthA > newWidthB)\n      scrivaniaMaxLOD.position.x += newWidthA / 2;\n    if (newWidthA === newWidthB)\n      scrivaniaMaxLOD.position.x += newWidthB / 2;\n\n    scrivaniaMaxLOD.rotation.y += Math.PI;\n    if (newWidthA < newWidthB)\n      scrivaniaMaxLOD.scale.set(newWidthB / deltaX, newDepth / deltaY, newHeight / deltaZ);\n    if (newWidthA > newWidthB)\n      scrivaniaMaxLOD.scale.set(newWidthA / deltaX, newDepth / deltaY, newHeight / deltaZ);\n    if (newWidthA === newWidthB)\n      scrivaniaMaxLOD.scale.set(newWidthA / deltaX, newDepth / deltaY, newHeight / deltaZ);\n\n    /********** lod min **********/\n\n    const scrivaniaMinLOD = new Three.Object3D();\n    scrivaniaMinLOD.add(makeObjectMinLOD(newWidthA, newWidthB, newHeight, newDepth).clone());\n\n    scrivaniaMinLOD.position.y += newHeight / 2 + newAltitude;\n    scrivaniaMinLOD.position.z += newDepth / 2;\n    if (newWidthA < newWidthB)\n      scrivaniaMinLOD.position.x += newWidthB / 2 - (newWidthB / 2 - newWidthA / 2);\n    if (newWidthA > newWidthB)\n      scrivaniaMinLOD.position.x += newWidthA / 2;\n    if (newWidthA === newWidthB)\n      scrivaniaMinLOD.position.x += newWidthB / 2;\n\n    scrivaniaMinLOD.rotation.y += Math.PI;\n    if (newWidthA < newWidthB)\n      scrivaniaMinLOD.scale.set(newWidthB / deltaX, newDepth / deltaY, newHeight / deltaZ);\n    if (newWidthA > newWidthB)\n      scrivaniaMinLOD.scale.set(newWidthA / deltaX, newDepth / deltaY, newHeight / deltaZ);\n    if (newWidthA === newWidthB)\n      scrivaniaMinLOD.scale.set(newWidthA / deltaX, newDepth / deltaY, newHeight / deltaZ);\n\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(scrivaniaMaxLOD, 700);\n    lod.addLevel(scrivaniaMinLOD, 1000);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","import { Group, Object3DEventMap } from 'three';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader.js';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\n\nexport async function loadObjWithMaterial(\n  mtlFile: string,\n  objFile: string,\n  resourcePath: string\n) {\n  const mtlLoader = new MTLLoader();\n  mtlLoader.setResourcePath(resourcePath);\n\n  const materials = await mtlLoader.loadAsync(mtlFile);\n  materials.preload();\n\n  const objLoader = new OBJLoader();\n  objLoader.setMaterials(materials);\n  const object = await objLoader.loadAsync(objFile);\n  return object;\n}\n\n","module.exports = __webpack_public_path__ + \"catalog/items/coat-hook/coat-hook.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 100;\nconst DEPTH = 140;\nconst HEIGHT = 100;\n\nconst brown = new Three.MeshLambertMaterial({ color: 0xac6c25 });\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst grey = new Three.MeshLambertMaterial({ color: 0xC0C0C0 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  //central pillar\n  const centralPillar = new Three.BoxGeometry(1, 3, 1);\n  const canteen_table = new Three.Mesh(centralPillar, grey);\n\n  // plane top\n  const planeTop = new Three.Mesh(new Three.BoxGeometry(10, 0.5, 10), brown);\n  planeTop.position.set(0, 1.5, 0);\n  canteen_table.add(planeTop);\n\n  //plane nuts\n  for (let dx = -0.25; dx <= 0.25; dx += 0.5) {\n    for (let dz = -0.25; dz <= 0.25; dz += 0.5) {\n      const nut = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.1, 0.8, 6), black);\n      nut.position.set(dx, 1.4, dz);\n      canteen_table.add(nut);\n    }\n  }\n\n  // central axis\n  const axis1 = new Three.Mesh(new Three.BoxGeometry(1, 15, 1), grey);\n  axis1.rotation.x = 0.5 * Math.PI;\n  axis1.position.set(0, -1, 0);\n  canteen_table.add(axis1);\n\n  //axis\n  const axis2 = new Three.Mesh(new Three.BoxGeometry(1, 10, 1), grey);\n  axis2.rotation.z = 0.5 * Math.PI;\n  axis2.position.set(0, -1, -7);\n  canteen_table.add(axis2);\n\n  //axis\n  const axis3 = new Three.Mesh(new Three.BoxGeometry(1, 10, 1), grey);\n  axis3.rotation.z = 0.5 * Math.PI;\n  axis3.position.set(0, -1, 7);\n  canteen_table.add(axis3);\n\n  //legs\n  for (let gx = -3; gx <= 3; gx += 6) {\n    for (let gz = 7; gz >= -7; gz -= 14) {\n      const leg = new Three.Mesh(new Three.BoxGeometry(1, 3, 1), grey);\n      leg.rotation.y = 0.5 * Math.PI;\n      leg.position.set(gx, -2, gz);\n      canteen_table.add(leg);\n    }\n  }\n\n  //legs base\n  for (let fx = -3; fx <= 3; fx += 6) {\n    for (let fz = 8; fz >= -8; fz -= 16) {\n      const legBase = new Three.Mesh(new Three.BoxGeometry(3, 0.25, 1), grey);\n      legBase.rotation.y = 0.5 * Math.PI;\n      legBase.position.set(fx, -3.5, fz + 1);\n      canteen_table.add(legBase);\n\n      // base nuts\n      const baseNut1 = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.1, 0.3, 6), black);\n      baseNut1.position.set(fx, -3.5, fz - 1);\n      baseNut1.position.set(fx, -3.5, fz + 2);\n      canteen_table.add(baseNut1);\n\n      if (fz > 0) {\n        legBase.position.set(fx, -3.5, fz - 1);\n        baseNut1.position.set(fx, -3.5, fz - 2);\n      }\n\n      const baseNut2 = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.1, 0.3, 6), black);\n      baseNut2.position.set(fx, -3.5, fz);\n      canteen_table.add(baseNut2);\n    }\n  }\n\n  // chair back\n  for (let fsx = -3; fsx <= 3; fsx += 6) {\n    for (let fsz = -9.24; fsz <= 9.24; fsz += 18.48) {\n      const chairBack = new Three.Mesh(new Three.BoxGeometry(4, 0.5, 2.5), brown);\n      chairBack.rotation.x = 0.5 * Math.PI;\n      chairBack.position.set(fsx, 2.5, fsz);\n      canteen_table.add(chairBack);\n    }\n  }\n\n  for (let fbx = -4.5; fbx <= 4.5; fbx += 9) {\n    for (let fbz = -9.45; fbz <= 9.45; fbz += 18.9) {\n      // chair support bar\n      const support1 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.125, 4), grey);\n      support1.rotation.x = 0.5 * Math.PI;\n      support1.position.set(fbx, 1.6, fbz);\n      canteen_table.add(support1);\n\n      const support2 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.125, 4), grey);\n      support2.rotation.x = 0.5 * Math.PI;\n      support2.position.set(fbx - 3, 1.6, fbz);\n      canteen_table.add(support2);\n\n      //nut back chair\n      const nutBack1 = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.1, 0.6, 6), black);\n      nutBack1.rotation.x = 0.5 * Math.PI;\n      nutBack1.position.set(fbx, 2.5, fbz - 0.2);\n      canteen_table.add(nutBack1);\n\n      const nutBack2 = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.1, 0.6, 6), black);\n      nutBack2.rotation.x = 0.5 * Math.PI;\n      nutBack2.position.set(fbx - 3, 2.5, fbz - 0.2);\n      canteen_table.add(nutBack2);\n\n      if (fbx < 0) {\n        support2.position.set(fbx + 3, 1.6, fbz);\n        nutBack2.position.set(fbx + 3, 2.5, fbz - 0.2);\n        if (fbz < 0) {\n          nutBack2.position.set(fbx + 3, 2.5, fbz + 0.2);\n        }\n      }\n\n      if (fbz < 0) {\n        nutBack1.position.set(fbx, 2.5, fbz + 0.2);\n        if (fbx > 0) {\n          nutBack2.position.set(fbx - 3, 2.5, fbz + 0.2);\n        }\n      }\n    }\n  }\n\n  for (let fdx = -3; fdx <= 3; fdx += 6) {\n    for (let fdz = -7; fdz <= 7; fdz += 14) {\n      // seat chair\n      const seat = new Three.Mesh(new Three.BoxGeometry(4, 0.5, 4), brown);\n      seat.rotation.y = 0.5 * Math.PI;\n      seat.position.set(fdx, -0.25, fdz);\n      canteen_table.add(seat);\n    }\n  }\n\n  for (let fbsx = -4.5; fbsx <= 4.5; fbsx += 9) {\n    for (let fbsz = -9; fbsz <= 9; fbsz += 18) {\n      // seat support\n      const seatSupport1 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.125, 1), grey);\n      seatSupport1.position.set(fbsx, -0.35, fbsz);\n      canteen_table.add(seatSupport1);\n\n      const seatSupport2 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.125, 1), grey);\n      seatSupport2.position.set(fbsx - 3, -0.35, fbsz);\n      canteen_table.add(seatSupport2);\n\n      // seat nuts\n      const seatNut1 = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.1, 0.8, 6), black);\n      seatNut1.position.set(fbsx, -0.35, fbsz - 2);\n      canteen_table.add(seatNut1);\n\n      const seatNut2 = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.1, 0.8, 6), black);\n      seatNut2.position.set(fbsx - 3, -0.35, fbsz - 2);\n      canteen_table.add(seatNut2);\n\n      if (fbsx < 0) {\n        seatSupport2.position.set(fbsx + 3, -0.35, fbsz);\n        seatNut2.position.set(fbsx + 3, -0.35, fbsz - 2);\n        if (fbsz < 0) {\n          seatNut2.position.set(fbsx + 3, -0.35, fbsz + 2);\n        }\n      }\n\n      if (fbsz < 0) {\n        seatNut1.position.set(fbsx, -0.35, fbsz + 2);\n        if (fbsx > 0) {\n          seatNut2.position.set(fbsx - 3, -0.35, fbsz + 2);\n        }\n      }\n    }\n  }\n  return canteen_table\n}\n\nfunction makeObjectMinLOD() {\n  //central pillar\n  const centralPillar = new Three.BoxGeometry(1, 3, 1);\n  const canteen_table = new Three.Mesh(centralPillar, grey);\n\n  // plane top\n  const planeTop = new Three.Mesh(new Three.BoxGeometry(10, 0.5, 10), brown);\n  planeTop.position.set(0, 1.5, 0);\n  canteen_table.add(planeTop);\n\n  // central axis\n  const axis1 = new Three.Mesh(new Three.BoxGeometry(1, 15, 1), grey);\n  axis1.rotation.x = 0.5 * Math.PI;\n  axis1.position.set(0, -1, 0);\n  canteen_table.add(axis1);\n\n  //axis\n  const axis2 = new Three.Mesh(new Three.BoxGeometry(1, 10, 1), grey);\n  axis2.rotation.z = 0.5 * Math.PI;\n  axis2.position.set(0, -1, -7);\n  canteen_table.add(axis2);\n\n  //axis\n  const axis3 = new Three.Mesh(new Three.BoxGeometry(1, 10, 1), grey);\n  axis3.rotation.z = 0.5 * Math.PI;\n  axis3.position.set(0, -1, 7);\n  canteen_table.add(axis3);\n\n  //legs\n  for (let gx = -3; gx <= 3; gx += 6) {\n    for (let gz = 7; gz >= -7; gz -= 14) {\n      const leg = new Three.Mesh(new Three.BoxGeometry(1, 3, 1), grey);\n      leg.rotation.y = 0.5 * Math.PI;\n      leg.position.set(gx, -2, gz);\n      canteen_table.add(leg);\n    }\n  }\n\n  //legs base\n  for (let fx = -3; fx <= 3; fx += 6) {\n    for (let fz = 8; fz >= -8; fz -= 16) {\n      const legBase = new Three.Mesh(new Three.BoxGeometry(3, 0.25, 1), grey);\n      legBase.rotation.y = 0.5 * Math.PI;\n      legBase.position.set(fx, -3.5, fz + 1);\n      canteen_table.add(legBase);\n\n      if (fz > 0) {\n        legBase.position.set(fx, -3.5, fz - 1);\n      }\n    }\n  }\n\n  // chair back\n  for (let fsx = -3; fsx <= 3; fsx += 6) {\n    for (let fsz = -9.24; fsz <= 9.24; fsz += 18.48) {\n      const chairBack = new Three.Mesh(new Three.BoxGeometry(4, 0.5, 2.5), brown);\n      chairBack.rotation.x = 0.5 * Math.PI;\n      chairBack.position.set(fsx, 2.5, fsz);\n      canteen_table.add(chairBack);\n    }\n  }\n\n  for (let fbx = -4.5; fbx <= 4.5; fbx += 9) {\n    for (let fbz = -9.45; fbz <= 9.45; fbz += 18.9) {\n      // chair support bar\n      const support1 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.125, 4), grey);\n      support1.rotation.x = 0.5 * Math.PI;\n      support1.position.set(fbx, 1.6, fbz);\n      canteen_table.add(support1);\n\n      const support2 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.125, 4), grey);\n      support2.rotation.x = 0.5 * Math.PI;\n      support2.position.set(fbx - 3, 1.6, fbz);\n      canteen_table.add(support2);\n\n      if (fbx < 0) {\n        support2.position.set(fbx + 3, 1.6, fbz);\n      }\n    }\n  }\n\n  for (let fdx = -3; fdx <= 3; fdx += 6) {\n    for (let fdz = -7; fdz <= 7; fdz += 14) {\n      // seat chair\n      const seat = new Three.Mesh(new Three.BoxGeometry(4, 0.5, 4), brown);\n      seat.rotation.y = 0.5 * Math.PI;\n      seat.position.set(fdx, -0.25, fdz);\n      canteen_table.add(seat);\n    }\n  }\n\n  for (let fbsx = -4.5; fbsx <= 4.5; fbsx += 9) {\n    for (let fbsz = -9; fbsz <= 9; fbsz += 18) {\n      // seat support\n      const seatSupport1 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.125, 1), grey);\n      seatSupport1.position.set(fbsx, -0.35, fbsz);\n      canteen_table.add(seatSupport1);\n\n      const seatSupport2 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.125, 1), grey);\n      seatSupport2.position.set(fbsx - 3, -0.35, fbsz);\n      canteen_table.add(seatSupport2);\n\n      if (fbsx < 0) {\n        seatSupport2.position.set(fbsx + 3, -0.35, fbsz);\n      }\n    }\n  }\n  return canteen_table\n}\n\nexport default defineCatalogElement({\n  name: 'canteen table',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'wood'],\n    title: 'canteen table',\n    description: 'canteen table',\n    image: require('./canteen_table.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' }} />\n        <text key='2' x='0' y='0'\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /************** lod max *****************/\n\n    const canteen_table_MaxLOD = new Three.Object3D();\n    canteen_table_MaxLOD.add(objectMaxLOD.clone());\n\n    const valuePosition = new Three.Box3().setFromObject(canteen_table_MaxLOD);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    canteen_table_MaxLOD.position.y += HEIGHT / 2 + newAltitude;\n    canteen_table_MaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /************** lod min *****************/\n\n    const canteen_table_MinLOD = new Three.Object3D();\n    canteen_table_MinLOD.add(objectMinLOD.clone());\n    canteen_table_MinLOD.position.y += HEIGHT / 2 + newAltitude;\n    canteen_table_MinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(canteen_table_MaxLOD, 200);\n    lod.addLevel(canteen_table_MinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/school-desk-double/wood.jpg\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 60;\nconst DEPTH = 60;\nconst HEIGHT = 220;\n\nconst blue = new Three.MeshLambertMaterial({ color: 0x0000CC });\nconst grey = new Three.MeshLambertMaterial({ color: 0xC0C0C0 });\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const wardrobe = new Three.Mesh();\n\n  //base\n  const bottomSide = new Three.Mesh(new Three.BoxGeometry(1, 0.05, 1), grey);\n  wardrobe.add(bottomSide);\n\n  //side\n  const side1 = new Three.Mesh(new Three.BoxGeometry(1, 2, 0.05), grey);\n  side1.position.set(0, 1.025, 0.475);\n  wardrobe.add(side1);\n\n  const side2 = new Three.Mesh(new Three.BoxGeometry(1, 2, 0.05), grey);\n  side2.position.set(0, 1.025, -0.475);\n  wardrobe.add(side2);\n\n  //backside\n  const backside = new Three.Mesh(new Three.BoxGeometry(0.05, 2, 1), grey);\n  backside.position.set(0.475, 1.025, 0);\n  wardrobe.add(backside);\n\n  // top\n  const topside = new Three.Mesh(new Three.BoxGeometry(1, 0.05, 1), grey);\n  topside.position.set(0, 2.05, 0);\n  wardrobe.add(topside);\n\n  //central axis\n  const centralAxis = new Three.Mesh(new Three.BoxGeometry(0.9, 0.4, 0.05), grey);\n  centralAxis.position.set(0, 1.025, 0);\n  wardrobe.add(centralAxis);\n\n  //lower shelve\n  const lowShelve = new Three.Mesh(new Three.BoxGeometry(0.9, 0.05, 0.5), grey);\n  lowShelve.position.set(0, 0.8, 0.225);\n  wardrobe.add(lowShelve);\n\n  //upper shelve\n  const upShelve = new Three.Mesh(new Three.BoxGeometry(0.9, 0.05, 0.5), grey);\n  upShelve.position.set(0, 1.25, -0.225);\n  wardrobe.add(upShelve);\n\n  //up door\n  const upDoor_p1 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.77, 0.9), blue);\n  upDoor_p1.position.set(-0.475, 1.64, 0);\n  wardrobe.add(upDoor_p1);\n\n  const upDoor_p2 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.44, 0.435), blue);\n  upDoor_p2.position.set(-0.475, 1.035, 0.23);\n  wardrobe.add(upDoor_p2);\n\n  //low door\n  const lowDoor_p1 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.77, 0.9), blue);\n  lowDoor_p1.position.set(-0.475, 0.41, 0);\n  wardrobe.add(lowDoor_p1);\n\n  const lowDoor_p2 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.44, 0.435), blue);\n  lowDoor_p2.position.set(-0.475, 1.015, -0.23);\n  wardrobe.add(lowDoor_p2);\n\n  let fz: number;\n\n  for (let fy = 1.64; fy >= 0.4; fy -= 1.14) {\n    fy === 1.64 ? fz = -0.35 : fz = 0.35;\n\n    //lock\n    const lock_p1 = new Three.Mesh(new Three.CylinderGeometry(0.025, 0.03, 0.02, 32, 32), black);\n    lock_p1.rotation.x = 0.5 * Math.PI;\n    lock_p1.rotation.z = 0.5 * Math.PI;\n    lock_p1.position.set(-0.5, fy, fz);\n    wardrobe.add(lock_p1);\n\n    const lock_p2 = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.022, 0.015, 32, 32), grey);\n    lock_p2.rotation.x = 0.5 * Math.PI;\n    lock_p2.rotation.z = 0.5 * Math.PI;\n    lock_p2.position.set(-0.515, fy, fz);\n    wardrobe.add(lock_p2);\n\n    const lock_p3 = new Three.Mesh(new Three.BoxGeometry(0.01, 0.015, 0.005, 32, 32), black);\n    lock_p3.position.set(-0.518, fy, fz);\n    wardrobe.add(lock_p3);\n\n  }\n\n  for (let fx = -0.47; fx <= 0.47; fx += 0.94) {\n    for (let fz = 0.47; fz >= -0.47; fz -= 0.94) {\n      //foot\n      const foot = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.04, 0.1, 4), grey);\n      foot.position.set(fx, -0.05, fz);\n      foot.rotation.y = 0.25 * Math.PI;\n      foot.rotation.z = Math.PI;\n      wardrobe.add(foot);\n    }\n  }\n  return wardrobe\n}\n\nfunction makeObjectMinLOD() {\n  const wardrobe = new Three.Mesh();\n\n  //base\n  const bottomSide = new Three.Mesh(new Three.BoxGeometry(1, 0.05, 1), grey);\n  wardrobe.add(bottomSide);\n\n  //side\n  const side1 = new Three.Mesh(new Three.BoxGeometry(1, 2, 0.05), grey);\n  side1.position.set(0, 1.025, 0.475);\n  wardrobe.add(side1);\n\n  const side2 = new Three.Mesh(new Three.BoxGeometry(1, 2, 0.05), grey);\n  side2.position.set(0, 1.025, -0.475);\n  wardrobe.add(side2);\n\n  //backside\n  const backside = new Three.Mesh(new Three.BoxGeometry(0.05, 2, 1), grey);\n  backside.position.set(0.475, 1.025, 0);\n  wardrobe.add(backside);\n\n  // top\n  const topside = new Three.Mesh(new Three.BoxGeometry(1, 0.05, 1), grey);\n  topside.position.set(0, 2.05, 0);\n  wardrobe.add(topside);\n\n  //central axis\n  const centralAxis = new Three.Mesh(new Three.BoxGeometry(0.9, 0.4, 0.05), grey);\n  centralAxis.position.set(0, 1.025, 0);\n  wardrobe.add(centralAxis);\n\n  //lower shelve\n  const lowShelve = new Three.Mesh(new Three.BoxGeometry(0.9, 0.05, 0.5), grey);\n  lowShelve.position.set(0, 0.8, 0.225);\n  wardrobe.add(lowShelve);\n\n  //upper shelve\n  const upShelve = new Three.Mesh(new Three.BoxGeometry(0.9, 0.05, 0.5), grey);\n  upShelve.position.set(0, 1.25, -0.225);\n  wardrobe.add(upShelve);\n\n  //up door\n  const upDoor_p1 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.77, 0.9), blue);\n  upDoor_p1.position.set(-0.475, 1.64, 0);\n  wardrobe.add(upDoor_p1);\n\n  const upDoor_p2 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.44, 0.435), blue);\n  upDoor_p2.position.set(-0.475, 1.035, 0.23);\n  wardrobe.add(upDoor_p2);\n\n  //low door\n  const lowDoor_p1 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.77, 0.9), blue);\n  lowDoor_p1.position.set(-0.475, 0.41, 0);\n  wardrobe.add(lowDoor_p1);\n\n  const lowDoor_p2 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.44, 0.435), blue);\n  lowDoor_p2.position.set(-0.475, 1.015, -0.23);\n  wardrobe.add(lowDoor_p2);\n\n\n  for (let fx = -0.47; fx <= 0.47; fx += 0.94) {\n    for (let fz = 0.47; fz >= -0.47; fz -= 0.94) {\n      //foot\n      const foot = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.04, 0.1, 4), grey);\n      foot.position.set(fx, -0.05, fz);\n      foot.rotation.y = 0.25 * Math.PI;\n      foot.rotation.z = Math.PI;\n      wardrobe.add(foot);\n    }\n  }\n  return wardrobe\n}\n\nexport default defineCatalogElement({\n  name: \"wardrobe\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"wardrobe\",\n    description: \"wardrobe\",\n    image: require('./wardrobe.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitudine\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /*************** lod max *******************/\n\n    const wardrobeMaxLOD = new Three.Object3D();\n    wardrobeMaxLOD.add(objectMaxLOD.clone());\n\n    const value = new Three.Box3().setFromObject(wardrobeMaxLOD);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    wardrobeMaxLOD.position.z += -DEPTH / 6;\n    wardrobeMaxLOD.position.y += HEIGHT / 24 + newAltitude;\n    wardrobeMaxLOD.rotation.y += -Math.PI / 2;\n    wardrobeMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /************** lod min ********************/\n\n    const wardrobeMinLOD = new Three.Object3D();\n    wardrobeMinLOD.add(objectMinLOD.clone());\n    wardrobeMinLOD.position.z += -DEPTH / 6;\n    wardrobeMinLOD.position.y += HEIGHT / 24 + newAltitude;\n    wardrobeMinLOD.rotation.y += -Math.PI / 2;\n    wardrobeMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(wardrobeMaxLOD, 200);\n    lod.addLevel(wardrobeMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/column/copper.jpg\";","module.exports = __webpack_public_path__ + \"catalog/holes/sash-window/sash-window.obj\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst textureLoader = new Three.TextureLoader();\nconst mat = textureLoader.load(require('./copper.jpg'));\nconst frameMaterial = new Three.MeshLambertMaterial({ map: mat });\n\nfunction makeObjectMaxLOD(RADIUS: number, HEIGHT: number) {\n  const RADIUS_10 = RADIUS / 10;\n  const RADIUS_2_5 = RADIUS / 2.5;\n\n  const column = new Three.Mesh();\n  const object = new Three.Mesh(new Three.CylinderGeometry(RADIUS, RADIUS, HEIGHT, 32), frameMaterial);\n\n  const frame1 = new Three.Mesh(new Three.CylinderGeometry(RADIUS_10, RADIUS_10, HEIGHT + HEIGHT / 10, 32), frameMaterial);\n  const frame2 = new Three.Mesh(new Three.CylinderGeometry(RADIUS_10, RADIUS_10, HEIGHT + HEIGHT / 10, 32), frameMaterial);\n  const frame3 = new Three.Mesh(new Three.CylinderGeometry(RADIUS_10, RADIUS_10, HEIGHT + HEIGHT / 10, 32), frameMaterial);\n  const frame4 = new Three.Mesh(new Three.CylinderGeometry(RADIUS_10, RADIUS_10, HEIGHT + HEIGHT / 10, 32), frameMaterial);\n\n  frame1.position.x += RADIUS_2_5;\n  frame1.position.z += RADIUS_2_5;\n  frame2.position.x -= RADIUS_2_5;\n  frame2.position.z -= RADIUS_2_5;\n  frame3.position.x -= RADIUS_2_5;\n  frame3.position.z += RADIUS_2_5;\n  frame4.position.x += RADIUS_2_5;\n  frame4.position.z -= RADIUS_2_5;\n  column.add(frame1);\n  column.add(frame2);\n  column.add(frame3);\n  column.add(frame4);\n  column.add(object);\n\n  return column\n}\n\nfunction makeObjectMinLOD(RADIUS: number, HEIGHT: number) {\n  const RADIUS_10 = RADIUS / 10;\n  const RADIUS_2_5 = RADIUS / 2.5;\n\n  const column = new Three.Mesh();\n  const object = new Three.Mesh(new Three.CylinderGeometry(RADIUS, RADIUS, HEIGHT, 6, 6), frameMaterial);\n\n  const frame1 = new Three.Mesh(new Three.CylinderGeometry(RADIUS_10, RADIUS_10, HEIGHT + HEIGHT / 10, 6), frameMaterial);\n  const frame2 = new Three.Mesh(new Three.CylinderGeometry(RADIUS_10, RADIUS_10, HEIGHT + HEIGHT / 10, 6), frameMaterial);\n  const frame3 = new Three.Mesh(new Three.CylinderGeometry(RADIUS_10, RADIUS_10, HEIGHT + HEIGHT / 10, 6), frameMaterial);\n  const frame4 = new Three.Mesh(new Three.CylinderGeometry(RADIUS_10, RADIUS_10, HEIGHT + HEIGHT / 10, 6), frameMaterial);\n\n  frame1.position.x += RADIUS_2_5;\n  frame1.position.z += RADIUS_2_5;\n  frame2.position.x -= RADIUS_2_5;\n  frame2.position.z -= RADIUS_2_5;\n  frame3.position.x -= RADIUS_2_5;\n  frame3.position.z += RADIUS_2_5;\n  frame4.position.x += RADIUS_2_5;\n  frame4.position.z -= RADIUS_2_5;\n  column.add(frame1);\n  column.add(frame2);\n  column.add(frame3);\n  column.add(frame4);\n  column.add(object);\n\n  return column\n}\n\nexport default defineCatalogElement({\n  name: 'round column',\n  prototype: 'items',\n\n  info: {\n    tag: ['structure'],\n    title: 'round column',\n    description: 'round column',\n    image: require('./column.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    },\n    height: {\n      label: 'height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 300\n      }\n    },\n    radius: {\n      label: 'radius',\n      type: 'length-measure',\n      defaultValue: {\n        length: 20\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const RADIUS: number = element.properties.radius.length;\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const circleStyle = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' };\n\n    return (\n      <g>\n        <circle key='1' cx='0' cy='0' r={RADIUS} style={circleStyle} />\n        <text key='2' cx='0' cy='0'\n          transform={`scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const HEIGHT: number = element.properties.height.length;\n    const RADIUS: number = element.properties.radius.length;\n    const newAltitude: number = element.properties.altitude.length;\n\n    /**************** LOD max ***********************/\n\n    const columnMaxLOD = new Three.Object3D();\n    const objectMaxLOD = makeObjectMaxLOD(RADIUS, HEIGHT);\n    columnMaxLOD.add(objectMaxLOD.clone());\n    columnMaxLOD.position.y += HEIGHT / 2 + newAltitude;\n\n    /**************** LOD min ***********************/\n\n    const columnMinLOD = new Three.Object3D();\n    const objectMinLOD = makeObjectMinLOD(RADIUS, HEIGHT);\n    columnMinLOD.add(objectMinLOD.clone());\n    columnMinLOD.position.y += HEIGHT / 2 + newAltitude;\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(columnMaxLOD, 1300);\n    lod.addLevel(columnMinLOD, 2000);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/hiroos/hiroosTexture.jpg\";","module.exports = __webpack_public_path__ + \"catalog/holes/venetian-blind-window/venetian.jpg\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst RADIUS = 20;\nconst HEIGHT = 40;\n\nexport default defineCatalogElement({\n  name: \"trash\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings'],\n    title: \"Trash\",\n    description: \"Trash\",\n    image: require('./trash.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const circleStyle = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n\n    return (\n      <g>\n        <circle key=\"1\" cx=\"0\" cy=\"0\" r={RADIUS} style={circleStyle} />\n        <line key=\"2\" x1={0} x2={0} y1={RADIUS} y2={1.5 * RADIUS} style={arrow_style} />\n        <line key=\"3\" x1={-RADIUS / 2 + .25 * RADIUS} x2={-RADIUS / 2 + RADIUS / 2} y1={1.2 * RADIUS} y2={1.5 * RADIUS} style={arrow_style} />\n        <line key=\"4\" x1={0} x2={-RADIUS / 2 + .75 * RADIUS} y1={1.5 * RADIUS} y2={1.2 * RADIUS} style={arrow_style} />\n        <text key=\"5\" cx=\"0\" cy=\"0\"\n          transform={`scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    const grey = new Three.MeshLambertMaterial({ color: 0xdddddd });\n    grey.side = Three.DoubleSide;\n\n\n    const cestino = new Three.Object3D();\n\n\n    const cylinderGeometry1 = new Three.CylinderGeometry(0.25, 0.25, 0.0001, 80);\n    const p1 = new Three.Mesh(cylinderGeometry1, grey);\n    cestino.add(p1);\n\n    const cylinderGeometry2 = new Three.CylinderGeometry(0.30, 0.25, 0.002, 80, 80, true);\n    const p2 = new Three.Mesh(cylinderGeometry2, grey);\n    p2.position.set(0, 0.001, 0);\n    p1.add(p2);\n\n\n    const value = new Three.Box3().setFromObject(cestino);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(cestino, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      cestino.add(bbox);\n    }\n\n    cestino.position.y += HEIGHT / 16 + newAltitude;\n    cestino.scale.set(1.5 * RADIUS / deltaX, HEIGHT / deltaY, 1.5 * RADIUS / deltaZ);\n\n    return cestino;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/canteencart/canteen_cart.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 120;\nconst DEPTH = 50;\nconst HEIGHT = 90;\n\nconst CHAIR_WIDTH = 55;\nconst CHAIR_DEPTH = 55;\nconst CHAIR_HEIGHT = 50;\n\nconst CHAIR_TRANSLATION = 30;\n\nconst TOTAL_DEPTH = DEPTH + CHAIR_DEPTH / 2 - (CHAIR_TRANSLATION - CHAIR_DEPTH / 2);\n\nexport default defineCatalogElement({\n  name: \"school-desk-double\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings'],\n    title: \"School desk double\",\n    description: \"school desk double\",\n    image: require('./school-desk-double.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-TOTAL_DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={TOTAL_DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <line key=\"2\" x1={WIDTH / 2} x2={WIDTH / 2} y1={DEPTH + DEPTH / 2} y2={1.5 * DEPTH + DEPTH / 2}\n          style={arrow_style} />\n        <line key=\"3\" x1={.25 * WIDTH} x2={WIDTH / 2} y1={1.2 * DEPTH + DEPTH / 2} y2={1.5 * DEPTH + DEPTH / 2}\n          style={arrow_style} />\n        <line key=\"4\" x1={WIDTH / 2} x2={.75 * WIDTH} y1={1.5 * DEPTH + DEPTH / 2} y2={1.2 * DEPTH + DEPTH / 2}\n          style={arrow_style} />\n        <text key=\"5\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${(TOTAL_DEPTH) / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const makeChair = (altitude: number) => {\n      const WIDTH = CHAIR_WIDTH;\n      const DEPTH = CHAIR_DEPTH;\n      const HEIGHT = CHAIR_HEIGHT;\n\n      const chair = new Three.Object3D();\n\n      const geometry = new Three.CylinderGeometry(0.02, 0.02, 0.5, 32);\n      const material = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n\n      const p1 = new Three.Mesh(geometry, material);\n      p1.rotation.x += Math.PI / 2;\n      p1.position.z += 0.5 / 2;\n\n      const p2 = new Three.Mesh(geometry, material);\n      p2.rotation.x += Math.PI / 2;\n      p2.position.z += 0.5 / 2;\n      p2.position.y += 0.4;\n\n      const p3 = new Three.Mesh(geometry, material);\n      p3.rotation.x += Math.PI / 2;\n      p3.position.z += 0.5 / 2;\n      p3.position.x += 0.4;\n\n      const p4 = new Three.Mesh(geometry, material);\n      p4.rotation.x += Math.PI / 2;\n      p4.position.z += 0.5 / 2;\n      p4.position.y += 0.4;\n      p4.position.x += 0.4;\n\n      const p5 = new Three.Mesh(geometry, material);\n      p5.rotation.x += Math.PI / 2;\n      p5.position.z += 0.5 * 3 / 2;\n\n      const p6 = new Three.Mesh(geometry, material);\n      p6.rotation.x += Math.PI / 2;\n      p6.position.z += 0.5 * 3 / 2;\n      p6.position.x += 0.4;\n\n      //      material = new Three.MeshLambertMaterial({color: 0x9b8c75});\n      const texture = new Three.TextureLoader().load(require('./wood.jpg'));\n      const materialTexture = new Three.MeshLambertMaterial({ map: texture });\n\n      const roundedRectShape = new Three.Shape();\n\n      const x = 0;\n      const y = 0;\n      const width = .5;\n      const height = .48;\n      const radius = 0.05;\n\n      roundedRectShape.moveTo(x, y + radius);\n      roundedRectShape.lineTo(x, y + height - radius);\n      roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n      roundedRectShape.lineTo(x + width - radius, y + height);\n      roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n      roundedRectShape.lineTo(x + width, y + radius);\n      roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n      roundedRectShape.lineTo(x + radius, y);\n      roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n      const extrudeSettings = {\n        steps: 2,\n        depth: 0.03,\n        bevelEnabled: false,\n        bevelThickness: 1,\n        bevelSize: 1,\n        bevelSegments: 1\n      };\n\n      const geometry50 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n      const plane = new Three.Mesh(geometry50, materialTexture);\n\n      plane.position.x += -0.05;\n      plane.position.y += -0.04;\n      plane.position.z += 0.5;\n\n      const roundedRectShape2 = new Three.Shape();\n\n      const x1 = 0;\n      const y1 = 0;\n      const width1 = .45;\n      const height1 = .25;\n      const radius1 = 0.05;\n\n      roundedRectShape2.moveTo(x1, y1 + radius1);\n      roundedRectShape2.lineTo(x1, y1 + height1 - radius1);\n      roundedRectShape2.quadraticCurveTo(x1, y1 + height1, x1 + radius1, y1 + height1);\n      roundedRectShape2.lineTo(x1 + width1 - radius1, y1 + height1);\n      roundedRectShape2.quadraticCurveTo(x1 + width1, y1 + height1, x1 + width1, y1 + height1 - radius1);\n      roundedRectShape2.lineTo(x1 + width1, y1 + radius1);\n      roundedRectShape2.quadraticCurveTo(x1 + width1, y1, x1 + width1 - radius1, y1);\n      roundedRectShape2.lineTo(x1 + radius1, y1);\n      roundedRectShape2.quadraticCurveTo(x1, y1, x1, y1 + radius1);\n\n      const extrudeSettings2 = {\n        steps: 2,\n        depth: 0.03,\n        bevelEnabled: false,\n        bevelThickness: 1,\n        bevelSize: 1,\n        bevelSegments: 1\n      };\n\n      const geometry22 = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n      const back = new Three.Mesh(geometry22, materialTexture);\n\n      //geometry = new Three.BoxGeometry( 0.38, 0.02, 0.15);\n      //let back = new Three.Mesh( geometry, material );\n      back.rotation.x += Math.PI / 2;\n      back.position.z += 0.5 * 12 / 8;\n      back.position.y += 0.03;\n      back.position.x += -0.025;\n\n      chair.add(back);\n      chair.add(plane);\n      chair.add(p1);\n      chair.add(p2);\n      chair.add(p3);\n      chair.add(p4);\n      chair.add(p5);\n      chair.add(p6);\n\n      const aa = new Three.Box3().setFromObject(chair);\n\n      const deltaX = Math.abs(aa.max.x - aa.min.x);\n      const deltaY = Math.abs(aa.max.y - aa.min.y);\n      const deltaZ = Math.abs(aa.max.z - aa.min.z);\n\n      // if (element.selected) {\n      //   let bbox = new Three.BoxHelper(chair, 0x99c3fb);\n      //   bbox.material.linewidth = 5;\n      //   bbox.renderOrder = 1000;\n      //   bbox.material.depthTest = false;\n      //   chair.add(bbox);\n      // }\n\n      chair.rotation.x += -Math.PI / 2;\n      chair.position.y += altitude;\n      chair.position.x += -WIDTH / 3.5;\n      chair.position.z += DEPTH / 4;\n      chair.scale.set(1.5 * WIDTH / deltaZ, DEPTH / 1.5 / deltaX, HEIGHT / deltaY);\n\n      return chair;\n    };\n\n    const newAltitude = element.properties.altitude.length;\n\n    const grey = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n\n    const texture = new Three.TextureLoader().load(require('./wood.jpg'));\n    const materialTexture = new Three.MeshLambertMaterial({ map: texture });\n\n    const newDepth = .5;\n    const newWidth = .9;\n    const newHeight = 1;\n    const raggio = .03;\n\n    const bancoDouble = new Three.Object3D();\n\n    const geometry = new Three.BoxGeometry(newWidth + newWidth / 6, newHeight / 20, newDepth + newDepth / 4);\n\n    const boxMaterials = [\n      new Three.MeshBasicMaterial({ map: texture }),\n      new Three.MeshBasicMaterial({ map: texture }),\n      new Three.MeshBasicMaterial({ color: 0x669966 }), //top\n      new Three.MeshBasicMaterial({ map: texture }),\n      new Three.MeshBasicMaterial({ map: texture }),\n      new Three.MeshBasicMaterial({ map: texture })\n    ];\n\n    const plane = new Three.Mesh(geometry, boxMaterials);\n    plane.position.y = newHeight;\n    bancoDouble.add(plane);\n\n    const geometry_legs = new Three.CylinderGeometry(raggio, raggio, newHeight, 32);\n\n    const geometry2 = new Three.BoxGeometry(newWidth, newHeight / 20, newDepth);\n    const plane2 = new Three.Mesh(geometry2, materialTexture);\n    plane2.position.y = newHeight / 2 + newHeight / 4;\n    bancoDouble.add(plane2);\n\n    const geometry3 = new Three.BoxGeometry(newWidth, newHeight / 10, newDepth / 20);\n    const plane3 = new Three.Mesh(geometry3, materialTexture);\n    plane3.position.y = newHeight / 2 + newHeight / 4 + newHeight / 16;\n    plane3.position.z = newDepth / 3 + newDepth / 5;\n    bancoDouble.add(plane3);\n\n    const p1 = new Three.Mesh(geometry_legs, grey);\n    p1.position.x = newWidth / 2;\n    p1.position.z = newDepth / 2;\n    p1.position.y = newHeight / 2;\n    p1.scale.set(.5, 1, .75);\n    bancoDouble.add(p1);\n\n    const p2 = new Three.Mesh(geometry_legs, grey);\n    p2.position.x = newWidth / 2;\n    p2.position.z = -newDepth / 2;\n    p2.position.y = newHeight / 2;\n    p2.scale.set(.5, 1, .75);\n    bancoDouble.add(p2);\n\n    const p3 = new Three.Mesh(geometry_legs, grey);\n    p3.position.x = -newWidth / 2;\n    p3.position.z = newDepth / 2;\n    p3.position.y = newHeight / 2;\n    p3.scale.set(.5, 1, .75);\n    bancoDouble.add(p3);\n\n    const p4 = new Three.Mesh(geometry_legs, grey);\n    p4.position.x = -newWidth / 2;\n    p4.position.z = -newDepth / 2;\n    p4.position.y = newHeight / 2;\n    p4.scale.set(.5, 1, .75);\n    bancoDouble.add(p4);\n\n\n    const valueObject = new Three.Box3().setFromObject(bancoDouble);\n\n    const deltaX = Math.abs(valueObject.max.x - valueObject.min.x);\n    const deltaY = Math.abs(valueObject.max.y - valueObject.min.y);\n    const deltaZ = Math.abs(valueObject.max.z - valueObject.min.z);\n\n\n    // if (element.selected) {\n    //   let bbox = new Three.BoxHelper(bancoDouble, 0x99c3fb);\n    //   bbox.material.linewidth = 5;\n    //   bbox.renderOrder = 1000;\n    //   bbox.material.depthTest = false;\n    //   bancoDouble.add(bbox);\n    // }\n\n    bancoDouble.rotation.y += Math.PI;\n    bancoDouble.position.y += newAltitude;\n    bancoDouble.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    const chair = makeChair(newAltitude);\n    chair.position.z += 30;\n    chair.position.x += 25;\n\n    const chair2 = makeChair(newAltitude);\n    chair2.position.z += 30;\n    chair2.position.x -= 25;\n\n    const deskAndChairDouble = new Three.Object3D();\n    deskAndChairDouble.add(bancoDouble);\n    deskAndChairDouble.add(chair);\n    deskAndChairDouble.add(chair2);\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(deskAndChairDouble, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      deskAndChairDouble.add(bbox);\n    }\n\n    // deskAndChairDouble.position.z-=DEPTH/4;\n\n    deskAndChairDouble.position.z -= (CHAIR_DEPTH / 2 - (CHAIR_TRANSLATION - CHAIR_DEPTH / 2)) / 2;\n\n    const boundingBoxDeskAndChair = new Three.Box3().setFromObject(deskAndChairDouble);\n\n    const deltaZDeskAndChair = Math.abs(boundingBoxDeskAndChair.max.z - boundingBoxDeskAndChair.min.z);\n\n    deskAndChairDouble.scale.set(1, 1, TOTAL_DEPTH / deltaZDeskAndChair); //Fix Depth problem with the chair\n\n    return deskAndChairDouble;\n  }\n});\n","import React from 'react';\nimport * as Three from 'three';\nimport { loadObjWithMaterial } from '../../utils/load-obj';\nimport { Group, Object3DEventMap } from 'three';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nlet cached3DWindow: Group<Object3DEventMap>;\n\nexport default defineCatalogElement({\n  name: \"window\",\n  prototype: \"holes\",\n\n  info: {\n    title: \"window\",\n    tag: ['window'],\n    description: \"Window\",\n    image: require('./window.png')\n  },\n\n  properties: {\n    width: {\n      label: \"Width\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 90\n      }\n    },\n    height: {\n      label: \"Height\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    },\n    altitude: {\n      label: \"Altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 90\n      }\n    },\n    thickness: {\n      label: \"Thickness\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 10\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const STYLE_HOLE_BASE = { stroke: \"#000\", strokeWidth: \"3px\", fill: \"#000\" };\n    const STYLE_HOLE_SELECTED = { stroke: \"#0096fd\", strokeWidth: \"3px\", fill: \"#0096fd\", cursor: \"move\" };\n    //let line = layer.lines[hole.line];\n    //let epsilon = line.properties.thickness / 2;\n\n    const epsilon = 3;\n\n    const holeWidth = element.properties.width.length;\n    const holePath = `M${0} ${-epsilon}  L${holeWidth} ${-epsilon}  L${holeWidth} ${epsilon}  L${0} ${epsilon}  z`;\n    const holeStyle = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE;\n    const length = element.properties.width.length;\n    return (\n      <g transform={`translate(${-length / 2}, 0)`}>\n        <path key=\"1\" d={holePath} style={holeStyle} />\n        <line key=\"2\" x1={holeWidth / 2} y1={-10 - epsilon} x2={holeWidth / 2} y2={10 + epsilon} style={holeStyle} />\n      </g>\n    );\n  },\n\n  render3D: async function (element, layer, scene) {\n    const onLoadItem = (object: Three.Group<Three.Object3DEventMap>) => {\n      const boundingBox = new Three.Box3().setFromObject(object);\n\n      const initialWidth = boundingBox.max.x - boundingBox.min.x;\n      const initialHeight = boundingBox.max.y - boundingBox.min.y;\n      const initialThickness = boundingBox.max.z - boundingBox.min.z;\n\n      if (element.selected) {\n        const box = new Three.BoxHelper(object, 0x99c3fb);\n        box.material.linewidth = 2;\n        box.material.depthTest = false;\n        box.renderOrder = 1000;\n        object.add(box);\n      }\n\n      const width = element.properties.width.length;\n      const height = element.properties.height.length;\n      const thickness = element.properties.thickness.length;\n\n      object.scale.set(width / initialWidth, height / initialHeight,\n        thickness / initialThickness);\n\n      return object;\n    };\n\n    if (cached3DWindow) {\n      return onLoadItem(cached3DWindow.clone());\n    }\n\n    const mtl = require('./window.mtl');\n    const obj = require('./window.obj');\n    const img = require('./texture.png');\n    const resourcePath = img.substr(0, img.lastIndexOf(\"/\")) + \"/\";\n\n    cached3DWindow = await loadObjWithMaterial(mtl, obj, resourcePath);\n    return onLoadItem(cached3DWindow.clone());\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 40;\nconst DEPTH = 20;\nconst HEIGHT = 50;\n\nconst grey = new Three.MeshLambertMaterial({ color: 0xAAAAAA });\ngrey.side = Three.DoubleSide;\nconst red = new Three.MeshPhongMaterial({ color: 0xAA0000 });\nconst blue = new Three.MeshPhongMaterial({ color: 0x0000AA });\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nblack.side = Three.DoubleSide;\n\nconst textureLoader = new Three.TextureLoader();\nconst quadro = textureLoader.load(require('./PanelTexture.png'));\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMiddleLOD = makeObjectMiddleLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const threePhasePanel = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = 0.79;\n  const height = 0.6;\n  const radius = 0.1;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 0.2,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const BackSideGeometry = new Three.BoxGeometry(1, 1.4, 0.1);\n  const BackSide = new Three.Mesh(BackSideGeometry, grey);\n  BackSide.position.set(0.5, 1.5, 0.05);\n  threePhasePanel.add(BackSide);\n\n  const PanelGeometry = new Three.PlaneGeometry(0.5, 0.5);\n  const meshPanel = new Three.Mesh(PanelGeometry, new Three.MeshPhongMaterial({ map: quadro, transparent: true }));\n  meshPanel.position.set(0.5, 1.85, 0.31);\n  threePhasePanel.add(meshPanel);\n\n  const geometry0 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const mesh0 = new Three.Mesh(geometry0, grey);\n  mesh0.position.set(0.1, 1.55, 0.1);\n  threePhasePanel.add(mesh0);\n\n  const geometry1 = new Three.BoxGeometry(0.86, .38, 0.2);\n  const mesh1 = new Three.Mesh(geometry1, grey);\n  mesh1.position.set(0.495, 1.85, 0.2);\n  threePhasePanel.add(mesh1);\n\n  const geometry00 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const mesh00 = new Three.Mesh(geometry00, grey);\n  mesh00.position.set(0.1, .85, 0.1);\n  mesh00.scale.set(1, 1.2, .6);\n  threePhasePanel.add(mesh00);\n\n  const geometry11 = new Three.BoxGeometry(0.86, .51, 0.1);\n  const mesh11 = new Three.Mesh(geometry11, grey);\n  mesh11.position.set(0.495, 1.225, 0.15);\n  threePhasePanel.add(mesh11);\n\n  const geometry1b = new Three.BoxGeometry(0.3, .5, 0.1);\n  const mesh1b = new Three.Mesh(geometry1b, grey);\n  mesh1b.position.set(0.68, 1.2, 0.25);\n  threePhasePanel.add(mesh1b);\n\n  const mesh1c = new Three.Mesh(geometry1b, grey);\n  mesh1c.position.set(0.32, 1.2, 0.25);\n  threePhasePanel.add(mesh1c);\n\n  const geometry1d = new Three.BoxGeometry(0.35, .6, 0.1);\n  const mesh1d = new Three.Mesh(geometry1d, grey);\n  mesh1d.position.set(0.68, 1.2, 0.2);\n  threePhasePanel.add(mesh1d);\n\n  const mesh1e = new Three.Mesh(geometry1d, grey);\n  mesh1e.position.set(0.32, 1.2, 0.2);\n  threePhasePanel.add(mesh1e);\n\n  const geometry1f = new Three.BoxGeometry(.15, .15, .01);\n  const mesh1f = new Three.Mesh(geometry1f, red);\n  mesh1f.position.set(0.32, 1.1, 0.3);\n  threePhasePanel.add(mesh1f);\n\n  const mesh1g = new Three.Mesh(geometry1f, blue);\n  mesh1g.position.set(0.68, 1.1, 0.3);\n  threePhasePanel.add(mesh1g);\n\n  const stopperGeometry1 = new Three.CylinderGeometry(0.05, 0.05, 0.05, 16, 16);\n  const stopper_p1 = new Three.Mesh(stopperGeometry1, red);\n  stopper_p1.position.set(0.32, 1.1, 0.3);\n  stopper_p1.rotation.x = Math.PI / 2;\n  threePhasePanel.add(stopper_p1);\n\n  const stopperGeometry2 = new Three.SphereGeometry(0.07, 16, 16);\n  const stopper_p2 = new Three.Mesh(stopperGeometry2, red);\n  stopper_p2.position.set(0.32, 1.1, 0.35);\n  stopper_p2.rotation.x = Math.PI / 2;\n  stopper_p2.scale.set(1, .5, 1);\n  threePhasePanel.add(stopper_p2);\n\n  const stopperGeometry3 = new Three.CylinderGeometry(0.01, 0.01, 0.065, 16, 16);\n  const stopper_p3 = new Three.Mesh(stopperGeometry3, red);\n  stopper_p3.position.set(0.32, 1.15, 0.32);\n  stopper_p3.rotation.x = Math.PI / 2;\n  stopper_p3.rotation.z = Math.PI / 2;\n  threePhasePanel.add(stopper_p3);\n\n  const stopper2_p1 = new Three.Mesh(stopperGeometry1, blue);\n  stopper2_p1.position.set(0.68, 1.1, 0.3);\n  stopper2_p1.rotation.x = Math.PI / 2;\n  threePhasePanel.add(stopper2_p1);\n\n  const stopper2_p2 = new Three.Mesh(stopperGeometry2, blue);\n  stopper2_p2.position.set(0.68, 1.1, 0.35);\n  stopper2_p2.rotation.x = Math.PI / 2;\n  stopper2_p2.scale.set(1, .5, 1);\n  threePhasePanel.add(stopper2_p2);\n\n  const stopper2_p3 = new Three.Mesh(stopperGeometry3, blue);\n  stopper2_p3.position.set(0.68, 1.15, 0.32);\n  stopper2_p3.rotation.x = Math.PI / 2;\n  stopper2_p3.rotation.z = Math.PI / 2;\n  threePhasePanel.add(stopper2_p3);\n\n  const handleGeometry = new Three.CylinderGeometry(0.05, 0.05, 0.025, 16, 16);\n  const handle_p1 = new Three.Mesh(handleGeometry, grey);\n  handle_p1.position.set(0.32, 1.3, 0.3);\n  handle_p1.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle_p1);\n\n  const handle2_p1 = new Three.Mesh(handleGeometry, grey);\n  handle2_p1.position.set(0.68, 1.3, 0.3);\n  handle2_p1.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle2_p1);\n\n  const cylinderGeometry2 = new Three.CylinderGeometry(0.051, 0.051, 0.05, 16, 16, true);\n  const handle_p2 = new Three.Mesh(cylinderGeometry2, black);\n  handle_p2.position.set(0.32, 1.3, 0.31);\n  handle_p2.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle_p2);\n\n  const handle2_p2 = new Three.Mesh(cylinderGeometry2, black);\n  handle2_p2.position.set(0.68, 1.3, 0.31);\n  handle2_p2.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle2_p2);\n\n  const geometry2 = new Three.BoxGeometry(0.1, 0.02, 0.02);\n  const handle_p3 = new Three.Mesh(geometry2, black);\n  handle_p3.position.set(0.32, 1.3, 0.32);\n  threePhasePanel.add(handle_p3);\n\n  const handle2_p3 = new Three.Mesh(geometry2, black);\n  handle2_p3.position.set(0.68, 1.3, 0.32);\n  threePhasePanel.add(handle2_p3);\n\n  const cylinderGeometry3 = new Three.CylinderGeometry(0.015, 0.015, 0.1, 16, 16);\n  const pivot1 = new Three.Mesh(cylinderGeometry3, black);\n  pivot1.rotation.x += Math.PI / 2;\n  pivot1.position.set(0.91, 2.05, 0.2);\n  threePhasePanel.add(pivot1);\n\n  const pivot2 = new Three.Mesh(cylinderGeometry3, black);\n  pivot2.rotation.x += Math.PI / 2;\n  pivot2.position.set(0.91, 1.65, 0.2);\n  threePhasePanel.add(pivot2);\n\n  const pivot3 = new Three.Mesh(cylinderGeometry3, black);\n  pivot3.rotation.x += Math.PI / 2;\n  pivot3.position.set(.08, 2.05, 0.2);\n  threePhasePanel.add(pivot3);\n\n  const pivot4 = new Three.Mesh(cylinderGeometry3, black);\n  pivot4.rotation.x += Math.PI / 2;\n  pivot4.position.set(.08, 1.65, 0.2);\n  threePhasePanel.add(pivot4);\n\n  const cylinderGeometry4 = new Three.CylinderGeometry(0.018, 0.018, 0.22, 16, 16, true);\n  const pivot11 = new Three.Mesh(cylinderGeometry4, grey);\n  pivot11.rotation.x += Math.PI / 2;\n  pivot11.position.set(0.91, 2.05, 0.18);\n  threePhasePanel.add(pivot11);\n\n  const pivot22 = new Three.Mesh(cylinderGeometry4, grey);\n  pivot22.rotation.x += Math.PI / 2;\n  pivot22.position.set(0.91, 1.65, 0.18);\n  threePhasePanel.add(pivot22);\n\n  const pivot33 = new Three.Mesh(cylinderGeometry4, grey);\n  pivot33.rotation.x += Math.PI / 2;\n  pivot33.position.set(.08, 2.05, 0.18);\n  threePhasePanel.add(pivot33);\n\n  const pivot44 = new Three.Mesh(cylinderGeometry4, grey);\n  pivot44.rotation.x += Math.PI / 2;\n  pivot44.position.set(.08, 1.65, 0.18);\n  threePhasePanel.add(pivot44);\n\n  const pivot1b = new Three.Mesh(cylinderGeometry3, black);\n  pivot1b.rotation.x += Math.PI / 2;\n  pivot1b.position.set(0.91, 1.5, 0.16);\n  threePhasePanel.add(pivot1b);\n\n  const pivot2b = new Three.Mesh(cylinderGeometry3, black);\n  pivot2b.rotation.x += Math.PI / 2;\n  pivot2b.position.set(0.91, .95, 0.16);\n  threePhasePanel.add(pivot2b);\n\n  const pivot3b = new Three.Mesh(cylinderGeometry3, black);\n  pivot3b.rotation.x += Math.PI / 2;\n  pivot3b.position.set(.08, 1.5, 0.16);\n  threePhasePanel.add(pivot3b);\n\n  const pivot4b = new Three.Mesh(cylinderGeometry3, black);\n  pivot4b.rotation.x += Math.PI / 2;\n  pivot4b.position.set(.08, .95, 0.16);\n  threePhasePanel.add(pivot4b);\n\n  const cylinderGeometry5 = new Three.CylinderGeometry(0.018, 0.018, 0.1, 16, 16, true);\n  const pivot11b = new Three.Mesh(cylinderGeometry5, grey);\n  pivot11b.rotation.x += Math.PI / 2;\n  pivot11b.position.set(0.91, 1.5, 0.16);\n  threePhasePanel.add(pivot11b);\n\n  const pivot22b = new Three.Mesh(cylinderGeometry5, grey);\n  pivot22b.rotation.x += Math.PI / 2;\n  pivot22b.position.set(0.91, .95, 0.16);\n  threePhasePanel.add(pivot22b);\n\n  const pivot33b = new Three.Mesh(cylinderGeometry5, grey);\n  pivot33b.rotation.x += Math.PI / 2;\n  pivot33b.position.set(.08, 1.5, 0.16);\n  threePhasePanel.add(pivot33b);\n\n  const pivot44b = new Three.Mesh(cylinderGeometry5, grey);\n  pivot44b.rotation.x += Math.PI / 2;\n  pivot44b.position.set(.08, .95, 0.16);\n  threePhasePanel.add(pivot44b);\n\n  return threePhasePanel;\n}\n\nfunction makeObjectMiddleLOD() {\n  const threePhasePanel = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = 0.79;\n  const height = 0.6;\n  const radius = 0.1;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 0.2,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const backSideGeometry = new Three.BoxGeometry(1, 1.4, 0.1);\n  const backSide = new Three.Mesh(backSideGeometry, grey);\n  backSide.position.set(0.5, 1.5, 0.05);\n  threePhasePanel.add(backSide);\n\n  const PanelGeometry = new Three.PlaneGeometry(0.5, 0.5);\n  const Panel = new Three.Mesh(PanelGeometry, new Three.MeshPhongMaterial({ map: quadro, transparent: true }));\n  Panel.position.set(0.5, 1.85, 0.31);\n  threePhasePanel.add(Panel);\n\n  const geometry0 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const mesh0 = new Three.Mesh(geometry0, grey);\n  mesh0.position.set(0.1, 1.55, 0.1);\n  threePhasePanel.add(mesh0);\n\n  const geometry1 = new Three.BoxGeometry(0.86, .38, 0.2);\n  const mesh1 = new Three.Mesh(geometry1, grey);\n  mesh1.position.set(0.495, 1.85, 0.2);\n  threePhasePanel.add(mesh1);\n\n  const geometry00 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const mesh00 = new Three.Mesh(geometry00, grey);\n  mesh00.position.set(0.1, .85, 0.1);\n  mesh00.scale.set(1, 1.2, .6);\n  threePhasePanel.add(mesh00);\n\n  const geometry11 = new Three.BoxGeometry(0.86, .51, 0.1);\n  const mesh11 = new Three.Mesh(geometry11, grey);\n  mesh11.position.set(0.495, 1.225, 0.15);\n  threePhasePanel.add(mesh11);\n\n  const geometry1b = new Three.BoxGeometry(0.3, .5, 0.1);\n  const mesh1b = new Three.Mesh(geometry1b, grey);\n  mesh1b.position.set(0.68, 1.2, 0.25);\n  threePhasePanel.add(mesh1b);\n\n  const mesh1c = new Three.Mesh(geometry1b, grey);\n  mesh1c.position.set(0.32, 1.2, 0.25);\n  threePhasePanel.add(mesh1c);\n\n  const geometry1d = new Three.BoxGeometry(0.35, .6, 0.1);\n  const mesh1d = new Three.Mesh(geometry1d, grey);\n  mesh1d.position.set(0.68, 1.2, 0.2);\n  threePhasePanel.add(mesh1d);\n\n  const mesh1e = new Three.Mesh(geometry1d, grey);\n  mesh1e.position.set(0.32, 1.2, 0.2);\n  threePhasePanel.add(mesh1e);\n\n  const geometry1f = new Three.BoxGeometry(.15, .15, .01);\n  const mesh1f = new Three.Mesh(geometry1f, red);\n  mesh1f.position.set(0.32, 1.1, 0.3);\n  threePhasePanel.add(mesh1f);\n\n  const mesh1g = new Three.Mesh(geometry1f, blue);\n  mesh1g.position.set(0.68, 1.1, 0.3);\n  threePhasePanel.add(mesh1g);\n\n  const stopperGeometry1 = new Three.CylinderGeometry(0.05, 0.05, 0.05, 16, 16);\n  const stopper_p1 = new Three.Mesh(stopperGeometry1, red);\n  stopper_p1.position.set(0.32, 1.1, 0.3);\n  stopper_p1.rotation.x = Math.PI / 2;\n  threePhasePanel.add(stopper_p1);\n\n  const stopperGeometry2 = new Three.SphereGeometry(0.07, 16, 16);\n  const stopper_p2 = new Three.Mesh(stopperGeometry2, red);\n  stopper_p2.position.set(0.32, 1.1, 0.35);\n  stopper_p2.rotation.x = Math.PI / 2;\n  stopper_p2.scale.set(1, .5, 1);\n  threePhasePanel.add(stopper_p2);\n\n  const stopperGeometry3 = new Three.CylinderGeometry(0.01, 0.01, 0.065, 16, 16);\n  const stopper_p3 = new Three.Mesh(stopperGeometry3, red);\n  stopper_p3.position.set(0.32, 1.15, 0.32);\n  stopper_p3.rotation.x = Math.PI / 2;\n  stopper_p3.rotation.z = Math.PI / 2;\n  threePhasePanel.add(stopper_p3);\n\n  const stopper2_p1 = new Three.Mesh(stopperGeometry1, blue);\n  stopper2_p1.position.set(0.68, 1.1, 0.3);\n  stopper2_p1.rotation.x = Math.PI / 2;\n  threePhasePanel.add(stopper2_p1);\n\n  const stopper2_p2 = new Three.Mesh(stopperGeometry2, blue);\n  stopper2_p2.position.set(0.68, 1.1, 0.35);\n  stopper2_p2.rotation.x = Math.PI / 2;\n  stopper2_p2.scale.set(1, .5, 1);\n  threePhasePanel.add(stopper2_p2);\n\n  const stopper2_p3 = new Three.Mesh(stopperGeometry3, blue);\n  stopper2_p3.position.set(0.68, 1.15, 0.32);\n  stopper2_p3.rotation.x = Math.PI / 2;\n  stopper2_p3.rotation.z = Math.PI / 2;\n  threePhasePanel.add(stopper2_p3);\n\n  const handleGeometry = new Three.CylinderGeometry(0.05, 0.05, 0.025, 16, 16);\n  const handle_p1 = new Three.Mesh(handleGeometry, grey);\n  handle_p1.position.set(0.32, 1.3, 0.3);\n  handle_p1.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle_p1);\n\n  const handle2_p1 = new Three.Mesh(handleGeometry, grey);\n  handle2_p1.position.set(0.68, 1.3, 0.3);\n  handle2_p1.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle2_p1);\n\n  const cylinderGeometry2 = new Three.CylinderGeometry(0.051, 0.051, 0.05, 16, 16, true);\n  const handle_p2 = new Three.Mesh(cylinderGeometry2, black);\n  handle_p2.position.set(0.32, 1.3, 0.31);\n  handle_p2.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle_p2);\n\n  const handle2_p2 = new Three.Mesh(cylinderGeometry2, black);\n  handle2_p2.position.set(0.68, 1.3, 0.31);\n  handle2_p2.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle2_p2);\n\n  const geometry2 = new Three.BoxGeometry(0.1, 0.02, 0.02);\n  const handle_p3 = new Three.Mesh(geometry2, black);\n  handle_p3.position.set(0.32, 1.3, 0.32);\n  threePhasePanel.add(handle_p3);\n\n  const handle2_p3 = new Three.Mesh(geometry2, black);\n  handle2_p3.position.set(0.68, 1.3, 0.32);\n  threePhasePanel.add(handle2_p3);\n\n  return threePhasePanel;\n}\n\nfunction makeObjectMinLOD() {\n  const threePhasePanel = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = 0.79;\n  const height = 0.6;\n  const radius = 0.1;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 0.2,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const backSideGeometry = new Three.BoxGeometry(1, 1.4, 0.1);\n  const backSide = new Three.Mesh(backSideGeometry, grey);\n  backSide.position.set(0.5, 1.5, 0.05);\n  threePhasePanel.add(backSide);\n\n  const geometry0 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const mesh0 = new Three.Mesh(geometry0, grey);\n  mesh0.position.set(0.1, 1.55, 0.1);\n  threePhasePanel.add(mesh0);\n\n  const geometry1 = new Three.BoxGeometry(0.86, .38, 0.2);\n  const mesh1 = new Three.Mesh(geometry1, grey);\n  mesh1.position.set(0.495, 1.85, 0.2);\n  threePhasePanel.add(mesh1);\n\n  const geometry00 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const mesh00 = new Three.Mesh(geometry00, grey);\n  mesh00.position.set(0.1, .85, 0.1);\n  mesh00.scale.set(1, 1.2, .6);\n  threePhasePanel.add(mesh00);\n\n  const geometry11 = new Three.BoxGeometry(0.86, .51, 0.1);\n  const mesh11 = new Three.Mesh(geometry11, grey);\n  mesh11.position.set(0.495, 1.225, 0.15);\n  threePhasePanel.add(mesh11);\n\n  const geometry1b = new Three.BoxGeometry(0.3, .5, 0.1);\n  const mesh1b = new Three.Mesh(geometry1b, grey);\n  mesh1b.position.set(0.68, 1.2, 0.25);\n  threePhasePanel.add(mesh1b);\n\n  const mesh1c = new Three.Mesh(geometry1b, grey);\n  mesh1c.position.set(0.32, 1.2, 0.25);\n  threePhasePanel.add(mesh1c);\n\n  const geometry1d = new Three.BoxGeometry(0.35, .6, 0.1);\n  const mesh1d = new Three.Mesh(geometry1d, grey);\n  mesh1d.position.set(0.68, 1.2, 0.2);\n  threePhasePanel.add(mesh1d);\n\n  const mesh1e = new Three.Mesh(geometry1d, grey);\n  mesh1e.position.set(0.32, 1.2, 0.2);\n  threePhasePanel.add(mesh1e);\n\n  const geometry1f = new Three.BoxGeometry(.15, .15, .01);\n  const mesh1f = new Three.Mesh(geometry1f, red);\n  mesh1f.position.set(0.32, 1.1, 0.3);\n  threePhasePanel.add(mesh1f);\n\n  const mesh1g = new Three.Mesh(geometry1f, blue);\n  mesh1g.position.set(0.68, 1.1, 0.3);\n  threePhasePanel.add(mesh1g);\n\n  const handleGeometry = new Three.CylinderGeometry(0.05, 0.05, 0.025, 8, 8);\n  const handle_p1 = new Three.Mesh(handleGeometry, grey);\n  handle_p1.position.set(0.32, 1.3, 0.3);\n  handle_p1.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle_p1);\n\n  const handle2_p1 = new Three.Mesh(handleGeometry, grey);\n  handle2_p1.position.set(0.68, 1.3, 0.3);\n  handle2_p1.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle2_p1);\n\n  const cylinderGeometry2 = new Three.CylinderGeometry(0.051, 0.051, 0.05, 8, 8, true);\n  const handle_p2 = new Three.Mesh(cylinderGeometry2, black);\n  handle_p2.position.set(0.32, 1.3, 0.31);\n  handle_p2.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle_p2);\n\n  const handle2_p2 = new Three.Mesh(cylinderGeometry2, black);\n  handle2_p2.position.set(0.68, 1.3, 0.31);\n  handle2_p2.rotation.x = Math.PI / 2;\n  threePhasePanel.add(handle2_p2);\n\n  const geometry2 = new Three.BoxGeometry(0.1, 0.02, 0.02);\n  const handle_p3 = new Three.Mesh(geometry2, black);\n  handle_p3.position.set(0.32, 1.3, 0.32);\n  threePhasePanel.add(handle_p3);\n\n  const handle2_p3 = new Three.Mesh(geometry2, black);\n  handle2_p3.position.set(0.68, 1.3, 0.32);\n  threePhasePanel.add(handle2_p3);\n\n  return threePhasePanel;\n}\n\nexport default defineCatalogElement({\n  name: \"three- phase panel\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"three-phase panel\",\n    description: \"electric panel\",\n    image: require('./threePhasePanel.png')\n  },\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const newWidth = WIDTH;\n    const newDepth = DEPTH;\n    const angle = element.rotation + 90;\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={newWidth} height={newDepth}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#ff0000\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newWidth = WIDTH;\n    const newDepth = DEPTH;\n    const newHeight = HEIGHT;\n    const newAltitude = element.properties.altitude.length;\n\n\n    /**************** LOD max ***********************/\n\n    const threePhasePanelMaxLOD = new Three.Object3D();\n    threePhasePanelMaxLOD.add(objectMaxLOD.clone());\n\n    const value = new Three.Box3().setFromObject(threePhasePanelMaxLOD);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    threePhasePanelMaxLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n    threePhasePanelMaxLOD.position.y += -newHeight / 2 + newAltitude;\n    threePhasePanelMaxLOD.position.x += -newWidth / 2;\n    threePhasePanelMaxLOD.position.z += -newDepth / 2;\n\n    /**************** LOD middle ***********************/\n\n    const threePhasePanelMiddleLOD = new Three.Object3D();\n    threePhasePanelMiddleLOD.add(objectMiddleLOD.clone());\n\n    threePhasePanelMiddleLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n    threePhasePanelMiddleLOD.position.y += -newHeight / 2 + newAltitude;\n    threePhasePanelMiddleLOD.position.x += -newWidth / 2;\n    threePhasePanelMiddleLOD.position.z += -newDepth / 2;\n\n\n    /**************** LOD min ***********************/\n\n    const threePhasePanelMinLOD = new Three.Object3D();\n    threePhasePanelMinLOD.add(objectMinLOD.clone());\n\n    threePhasePanelMinLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n    threePhasePanelMinLOD.position.y += -newHeight / 2 + newAltitude;\n    threePhasePanelMinLOD.position.x += -newWidth / 2;\n    threePhasePanelMinLOD.position.z += -newDepth / 2;\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(threePhasePanelMaxLOD, 100);\n    lod.addLevel(threePhasePanelMiddleLOD, 300);\n    lod.addLevel(threePhasePanelMinLOD, 700);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst HEIGHT = 60;\n\nconst steel = new Three.MeshLambertMaterial({ color: 0xffffff });\nconst grey = new Three.MeshLambertMaterial({ color: 0xAAAAAA });\nconst yellow = new Three.MeshLambertMaterial({ color: 0xFF9933 });\nconst blue = new Three.MeshLambertMaterial({ color: 0x0000ff });\n\nfunction makeObjectMaxLOD(newWidth: number, newDepth: number) {\n  const sink = new Three.Mesh();\n\n  const rectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = newWidth;\n  const height = newDepth;\n  const newHeight = HEIGHT;\n  const radius = newDepth / 10;\n\n  rectShape.moveTo(x, y + radius);\n  rectShape.lineTo(x, y + height - radius);\n  rectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  rectShape.lineTo(x + width - radius, y + height);\n  rectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  rectShape.lineTo(x + width, y + radius);\n  rectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  rectShape.lineTo(x + radius, y);\n  rectShape.quadraticCurveTo(x, y, x, y + radius);\n\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: newHeight / 40,\n    bevelEnabled: false,\n    bevelThickness: newHeight,\n    bevelSize: newHeight,\n    bevelSegments: 2\n  };\n\n  const geometry = new Three.ExtrudeGeometry(rectShape, extrudeSettings);\n  const mesh = new Three.Mesh(geometry, steel);\n  mesh.rotation.x += Math.PI / 2;\n  mesh.position.y = newHeight / 4;\n  sink.add(mesh);\n\n  const rectShape2 = new Three.Shape();\n  const hole = new Three.Path();\n\n  rectShape2.moveTo(x, y + radius);\n  rectShape2.lineTo(x, y + height - radius);\n  rectShape2.quadraticCurveTo(x, y + height, x + radius, y + height);\n  rectShape2.lineTo(x + width - radius, y + height);\n  rectShape2.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  rectShape2.lineTo(x + width, y + radius);\n  rectShape2.quadraticCurveTo(x + width, y, x + width - radius, y);\n  rectShape2.lineTo(x + radius, y);\n  rectShape2.quadraticCurveTo(x, y, x, y + radius);\n\n  hole.moveTo(newWidth / 20, newDepth / 20);\n  hole.lineTo(newWidth - newWidth / 20, newDepth / 20);\n  hole.lineTo(newWidth - newWidth / 20, newDepth - newDepth / 20);\n  hole.lineTo(newWidth / 20, newDepth - newDepth / 20);\n  rectShape2.holes.push(hole);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: newHeight / 4,\n    bevelEnabled: false,\n    bevelThickness: newHeight,\n    bevelSize: newHeight,\n    bevelSegments: 2\n  };\n\n  const geometry2 = new Three.ExtrudeGeometry(rectShape2, extrudeSettings2);\n  const mesh2 = new Three.Mesh(geometry2, steel);\n  mesh2.rotation.x += Math.PI / 2;\n  mesh2.position.y += newHeight / 2;\n  sink.add(mesh2);\n\n  //pipe\n  const pipe_p1 = new Three.Mesh(new Three.TorusGeometry(2.5, 2.5, 16, 16, Math.PI / 2), yellow);\n  pipe_p1.position.set(newWidth / 2, newHeight / 5.5, newDepth / 2 - 2.5);\n  pipe_p1.rotation.z = -Math.PI / 2;\n  pipe_p1.rotation.y -= Math.PI / 2;\n  sink.add(pipe_p1);\n\n  const cylinderGeometry1 = new Three.CylinderGeometry(2.25, 2.25, newDepth / 2, 80);\n  const pipe_p2 = new Three.Mesh(cylinderGeometry1, yellow);\n  pipe_p2.rotation.z = Math.PI / 2;\n  pipe_p2.rotation.y -= Math.PI / 2;\n  pipe_p2.position.set(newWidth / 2, newHeight / 7.5, newDepth / 4.5);\n  sink.add(pipe_p2);\n\n  const cylinderGeometry2 = new Three.CylinderGeometry(2.5, 2.5, newDepth / 12, 80);\n  const pipe_p3 = new Three.Mesh(cylinderGeometry2, yellow);\n  pipe_p3.rotation.y -= Math.PI / 2;\n  pipe_p3.position.set(newWidth / 2, newHeight / 4.85, newDepth / 2);\n  sink.add(pipe_p3);\n\n  //tap\n  const cylinderGeometry66 = new Three.CylinderGeometry(1.25, 1.25, 8, 12);\n  const tap_p1 = new Three.Mesh(cylinderGeometry66, grey);\n  tap_p1.position.set(newWidth / 2, newHeight / 1.45, 3);\n  tap_p1.rotation.z -= Math.PI / 2;\n  tap_p1.rotation.y += Math.PI / 2;\n  sink.add(tap_p1);\n\n  const cylinderGeometry5 = new Three.CylinderGeometry(2.7, 3, 5, 12);\n  const tap_p2 = new Three.Mesh(cylinderGeometry5, grey);\n  tap_p2.position.set(newWidth / 2, newHeight / 1.45, 10);\n  tap_p2.rotation.z -= Math.PI / 2;\n  tap_p2.rotation.y += Math.PI / 2;\n  sink.add(tap_p2);\n\n  const cylinderGeometry6 = new Three.CylinderGeometry(2, 2, 5.5, 80);\n  const tap_p3 = new Three.Mesh(cylinderGeometry6, blue);\n  tap_p3.position.set(newWidth / 2, newHeight / 1.45, 10);\n  tap_p3.rotation.z -= Math.PI / 2;\n  tap_p3.rotation.y += Math.PI / 2;\n  sink.add(tap_p3);\n\n  const curve = new Three.CatmullRomCurve3([\n    new Three.Vector3(-12, -10, 0),\n    new Three.Vector3(-12, -5, 0),\n    new Three.Vector3(0, 0, 0),\n    new Three.Vector3(6, 5, 0),\n    new Three.Vector3(6, 10, 0)\n  ]);\n\n  const geometry7 = new Three.TubeGeometry(curve, 32, 1, 16, false);\n  const mesh3 = new Three.Mesh(geometry7, grey);\n  mesh3.position.set(newWidth / 2, newHeight / 1.7, 11);\n  mesh3.rotation.y += Math.PI / 2;\n  mesh3.rotation.z -= Math.PI / 8;\n  sink.add(mesh3);\n\n  //hole\n  const cylinderGeometry7 = new Three.CylinderGeometry(newDepth / 20, newDepth / 20, newHeight / 100, 80);\n  const blackMaterial = new Three.MeshLambertMaterial({ color: 0x000000 });\n  const hole_p1 = new Three.Mesh(cylinderGeometry7, blackMaterial);\n  hole_p1.position.set(newWidth / 2, newHeight / 4, newDepth / 2);\n  sink.add(hole_p1);\n\n  const cylinderGeometry8 = new Three.CylinderGeometry(newDepth / 10, newDepth / 10, newHeight / 200, 80, 80, false, 0, Math.PI);\n  const whiteMaterial = new Three.MeshLambertMaterial({ color: 0xffffff });\n  const hole_p2 = new Three.Mesh(cylinderGeometry8, whiteMaterial);\n  hole_p2.scale.set(.25, .5, .5);\n  hole_p2.rotation.z = Math.PI / 2;\n  hole_p2.position.set(newWidth / 2, newHeight / 4, newDepth / 2);\n  sink.add(hole_p2);\n\n  const hole_p3 = new Three.Mesh(cylinderGeometry8, whiteMaterial);\n  hole_p3.rotation.z = Math.PI / 2;\n  hole_p3.rotation.y = Math.PI / 2;\n  hole_p3.scale.set(.25, .5, .5);\n  hole_p3.position.set(newWidth / 2, newHeight / 4, newDepth / 2);\n  sink.add(hole_p3);\n\n  const hole_p4 = new Three.Mesh(cylinderGeometry8, whiteMaterial);\n  hole_p4.rotation.z = Math.PI / 2;\n  hole_p4.rotation.y = Math.PI / 4;\n  hole_p4.position.set(newWidth / 2, newHeight / 4, newDepth / 2);\n  hole_p4.scale.set(.25, .5, .5);\n  sink.add(hole_p4);\n\n  const hole_p5 = new Three.Mesh(cylinderGeometry8, whiteMaterial);\n  hole_p5.rotation.z = Math.PI / 2;\n  hole_p5.rotation.y = -Math.PI / 4;\n  hole_p5.position.set(newWidth / 2, newHeight / 4, newDepth / 2);\n  hole_p5.scale.set(.25, .5, .5);\n  sink.add(hole_p5);\n\n  return sink\n}\n\nfunction makeObjectMinLOD(newWidth: number, newDepth: number) {\n  const sink = new Three.Mesh();\n\n  const rectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = newWidth;\n  const height = newDepth;\n  const newHeight = HEIGHT;\n  const radius = newDepth / 10;\n\n  rectShape.moveTo(x, y + radius);\n  rectShape.lineTo(x, y + height - radius);\n  rectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  rectShape.lineTo(x + width - radius, y + height);\n  rectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  rectShape.lineTo(x + width, y + radius);\n  rectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  rectShape.lineTo(x + radius, y);\n  rectShape.quadraticCurveTo(x, y, x, y + radius);\n\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: newHeight / 40,\n    bevelEnabled: false,\n    bevelThickness: newHeight,\n    bevelSize: newHeight,\n    bevelSegments: 2\n  };\n\n  const geometry = new Three.ExtrudeGeometry(rectShape, extrudeSettings);\n  const mesh = new Three.Mesh(geometry, steel);\n  mesh.rotation.x += Math.PI / 2;\n  mesh.position.y = newHeight / 4;\n  sink.add(mesh);\n\n  const rectShape2 = new Three.Shape();\n  const hole = new Three.Path();\n\n  rectShape2.moveTo(x, y + radius);\n  rectShape2.lineTo(x, y + height - radius);\n  rectShape2.quadraticCurveTo(x, y + height, x + radius, y + height);\n  rectShape2.lineTo(x + width - radius, y + height);\n  rectShape2.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  rectShape2.lineTo(x + width, y + radius);\n  rectShape2.quadraticCurveTo(x + width, y, x + width - radius, y);\n  rectShape2.lineTo(x + radius, y);\n  rectShape2.quadraticCurveTo(x, y, x, y + radius);\n\n  hole.moveTo(newWidth / 20, newDepth / 20);\n  hole.lineTo(newWidth - newWidth / 20, newDepth / 20);\n  hole.lineTo(newWidth - newWidth / 20, newDepth - newDepth / 20);\n  hole.lineTo(newWidth / 20, newDepth - newDepth / 20);\n  rectShape2.holes.push(hole);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: newHeight / 4,\n    bevelEnabled: false,\n    bevelThickness: newHeight,\n    bevelSize: newHeight,\n    bevelSegments: 2\n  };\n\n  const geometry2 = new Three.ExtrudeGeometry(rectShape2, extrudeSettings2);\n  const mesh2 = new Three.Mesh(geometry2, steel);\n  mesh2.rotation.x += Math.PI / 2;\n  mesh2.position.y += newHeight / 2;\n  sink.add(mesh2);\n\n  //tap\n  const cylinderGeometry66 = new Three.CylinderGeometry(1.25, 1.25, 8, 12);\n  const tap_p1 = new Three.Mesh(cylinderGeometry66, grey);\n  tap_p1.position.set(newWidth / 2, newHeight / 1.45, 3);\n  tap_p1.rotation.z -= Math.PI / 2;\n  tap_p1.rotation.y += Math.PI / 2;\n  sink.add(tap_p1);\n\n  const cylinderGeometry5 = new Three.CylinderGeometry(2.7, 3, 5, 12);\n  const tap_p2 = new Three.Mesh(cylinderGeometry5, grey);\n  tap_p2.position.set(newWidth / 2, newHeight / 1.45, 10);\n  tap_p2.rotation.z -= Math.PI / 2;\n  tap_p2.rotation.y += Math.PI / 2;\n  sink.add(tap_p2);\n\n  const cylinderGeometry6 = new Three.CylinderGeometry(2, 2, 5.5, 80);\n  const tap_p3 = new Three.Mesh(cylinderGeometry6, blue);\n  tap_p3.position.set(newWidth / 2, newHeight / 1.45, 10);\n  tap_p3.rotation.z -= Math.PI / 2;\n  tap_p3.rotation.y += Math.PI / 2;\n  sink.add(tap_p3);\n\n  const curve = new Three.CatmullRomCurve3([\n    new Three.Vector3(-12, -10, 0),\n    new Three.Vector3(-12, -5, 0),\n    new Three.Vector3(0, 0, 0),\n    new Three.Vector3(6, 5, 0),\n    new Three.Vector3(6, 10, 0)\n  ]);\n\n  const geometry7 = new Three.TubeGeometry(curve, 32, 1, 16, false);\n  const mesh3 = new Three.Mesh(geometry7, grey);\n  mesh3.position.set(newWidth / 2, newHeight / 1.7, 11);\n  mesh3.rotation.y += Math.PI / 2;\n  mesh3.rotation.z -= Math.PI / 8;\n  sink.add(mesh3);\n\n  return sink\n}\n\nexport default defineCatalogElement({\n  name: \"sink\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"sink\",\n    description: \"sink\",\n    image: require('./sink.png')\n  },\n\n  properties: {\n    width: {\n      label: \"width\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 50\n      }\n    },\n    depth: {\n      label: \"depth\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 40\n      }\n    },\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 80\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const newWidth = element.properties.width.length;\n    const newDepth = element.properties.depth.length;\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" };\n\n    return (\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={newWidth} height={newDepth} style={rect_style} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newWidth = element.properties.width.length;\n    const newDepth = element.properties.depth.length;\n    const newHeight = HEIGHT;\n    const newAltitude = element.properties.altitude.length;\n\n    /**************** lod max ********************/\n\n    const sinkMaxLOD = new Three.Object3D();\n    sinkMaxLOD.add(makeObjectMaxLOD(newWidth, newDepth).clone());\n\n    const value = new Three.Box3().setFromObject(sinkMaxLOD);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    sinkMaxLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n    sinkMaxLOD.position.y += -newHeight / 5 + newAltitude;\n    sinkMaxLOD.position.z -= newDepth / 4;\n    sinkMaxLOD.position.x -= newWidth / 2;\n\n    /**************** lod min ********************/\n\n    const sinkMinLOD = new Three.Object3D();\n    sinkMinLOD.add(makeObjectMinLOD(newWidth, newDepth).clone());\n    sinkMinLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n    sinkMinLOD.position.y += -newHeight / 5 + newAltitude;\n    sinkMinLOD.position.z -= newDepth / 4;\n    sinkMinLOD.position.x -= newWidth / 2;\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(sinkMaxLOD, 200);\n    lod.addLevel(sinkMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/bookcase/bookTexture1.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/chair/chair.png\";","module.exports = __webpack_public_path__ + \"catalog/items/sofa/sofa.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst newWidth = 90;\nconst newDepth = 90;\nconst newHeight = 220;\n\nconst grey = new Three.MeshLambertMaterial({ color: 0xa6a9ad });\nconst darkGrey = new Three.MeshLambertMaterial({ color: 0x3f454f });\nconst red = new Three.MeshLambertMaterial({ color: 0xff0000 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const metalDetector = new Three.Mesh();\n\n  const textureLoader = new Three.TextureLoader();\n  const display1 = textureLoader.load(require('./display1.png'));\n  const display2 = textureLoader.load(require('./display2.png'));\n\n  const cubeGeometryBase = new Three.BoxGeometry(0.72, 0.2, 0.4);\n  const up = new Three.Mesh(cubeGeometryBase, grey);\n  up.position.set(0, 2, 0);\n  metalDetector.add(up);\n\n  for (let j = -0.2; j <= 0.2; j += 0.4) {\n    const cubeGeometryBorderUp = new Three.BoxGeometry(0.72, 0.03, 0.03);\n    const up_border_down = new Three.Mesh(cubeGeometryBorderUp, darkGrey);\n    up_border_down.position.set(0, 1.9, j);\n    metalDetector.add(up_border_down);\n\n    const up_border_top = new Three.Mesh(cubeGeometryBorderUp, darkGrey);\n    up_border_top.position.set(0, 2.1, j);\n    metalDetector.add(up_border_top);\n  }\n\n  const cubeGeometrySide = new Three.BoxGeometry(0.08, 2.3, 0.6);\n  const left = new Three.Mesh(cubeGeometrySide, grey);\n  left.position.set(-0.4, 1, 0);\n  metalDetector.add(left);\n\n  const right = new Three.Mesh(cubeGeometrySide, grey);\n  right.position.set(0.4, 1, 0);\n  metalDetector.add(right);\n\n  for (let k = -0.165; k <= 2.20; k += 2.32) {\n    const cubeGeometrySide2 = new Three.BoxGeometry(0.09, 0.03, 0.68);\n    const left2 = new Three.Mesh(cubeGeometrySide2, darkGrey);\n    left2.position.set(-0.4, k, 0);\n    metalDetector.add(left2);\n\n    const right2 = new Three.Mesh(cubeGeometrySide2, darkGrey);\n    right2.position.set(0.4, k, 0);\n    metalDetector.add(right2);\n  }\n\n  for (let i = -0.3; i <= 0.3; i += 0.6) {\n    const cubeGeometryBorder = new Three.BoxGeometry(0.09, 2.3, 0.05);\n    const left_border = new Three.Mesh(cubeGeometryBorder, darkGrey);\n    left_border.position.set(-0.4, 1, i);\n    metalDetector.add(left_border);\n\n    const right_border = new Three.Mesh(cubeGeometryBorder, darkGrey);\n    right_border.position.set(0.4, 1, i);\n    metalDetector.add(right_border);\n\n    const cubeGeometryBorderLed = new Three.BoxGeometry(0.02, 2.3, 0.02);\n    const left_borderLed = new Three.Mesh(cubeGeometryBorderLed, red);\n    const right_borderLed = new Three.Mesh(cubeGeometryBorderLed, red);\n\n    if (i < 0) {\n      left_borderLed.position.set(-0.4, 1, i - .02);\n      right_borderLed.position.set(0.4, 1, i - .02);\n    } else {\n      left_borderLed.position.set(-0.4, 1, i + .02);\n      right_borderLed.position.set(0.4, 1, i + .02);\n    }\n    metalDetector.add(left_borderLed);\n    metalDetector.add(right_borderLed);\n\n  }\n\n  const planeDisplay1 = new Three.PlaneGeometry(0.15, 0.15);\n  const planeMaterial1 = new Three.MeshLambertMaterial({ map: display1, transparent: true });\n  const plane1 = new Three.Mesh(planeDisplay1, planeMaterial1);\n  plane1.position.set(-0.15, 2, 0.21);\n\n  const planeDisplay2 = new Three.PlaneGeometry(0.25, 0.15);\n  const planeMaterial2 = new Three.MeshLambertMaterial({ map: display2, transparent: true });\n  const plane2 = new Three.Mesh(planeDisplay2, planeMaterial2);\n  plane2.position.set(0.15, 2, 0.21);\n\n  metalDetector.add(plane1);\n  metalDetector.add(plane2);\n\n  return metalDetector\n}\n\nfunction makeObjectMinLOD() {\n  const metalDetector = new Three.Mesh();\n\n  const cubeGeometryBase = new Three.BoxGeometry(0.72, 0.2, 0.4);\n  const up = new Three.Mesh(cubeGeometryBase, grey);\n  up.position.set(0, 2, 0);\n  metalDetector.add(up);\n\n  for (let j = -0.2; j <= 0.2; j += 0.4) {\n    const cubeGeometryBorderUp = new Three.BoxGeometry(0.72, 0.03, 0.03);\n    const up_border_down = new Three.Mesh(cubeGeometryBorderUp, darkGrey);\n    up_border_down.position.set(0, 1.9, j);\n    metalDetector.add(up_border_down);\n\n    const up_border_top = new Three.Mesh(cubeGeometryBorderUp, darkGrey);\n    up_border_top.position.set(0, 2.1, j);\n    metalDetector.add(up_border_top);\n  }\n\n  const cubeGeometrySide = new Three.BoxGeometry(0.08, 2.3, 0.6);\n  const left = new Three.Mesh(cubeGeometrySide, grey);\n  left.position.set(-0.4, 1, 0);\n  metalDetector.add(left);\n\n  const right = new Three.Mesh(cubeGeometrySide, grey);\n  right.position.set(0.4, 1, 0);\n  metalDetector.add(right);\n\n  for (let k = -0.165; k <= 2.20; k += 2.32) {\n    const cubeGeometrySide2 = new Three.BoxGeometry(0.09, 0.03, 0.68);\n    const left2 = new Three.Mesh(cubeGeometrySide2, darkGrey);\n    left2.position.set(-0.4, k, 0);\n    metalDetector.add(left2);\n\n    const right2 = new Three.Mesh(cubeGeometrySide2, darkGrey);\n    right2.position.set(0.4, k, 0);\n    metalDetector.add(right2);\n  }\n\n  for (let i = -0.3; i <= 0.3; i += 0.6) {\n    const cubeGeometryBorder = new Three.BoxGeometry(0.09, 2.3, 0.05);\n    const left_border = new Three.Mesh(cubeGeometryBorder, darkGrey);\n    left_border.position.set(-0.4, 1, i);\n    metalDetector.add(left_border);\n\n    const right_border = new Three.Mesh(cubeGeometryBorder, darkGrey);\n    right_border.position.set(0.4, 1, i);\n    metalDetector.add(right_border);\n  }\n  return metalDetector\n}\n\nexport default defineCatalogElement({\n  name: \"metal_detector\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"metal detector\",\n    description: \"metal detector\",\n    image: require('./metalDetector.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={newWidth} height={newDepth}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#101010\" }} />\n        <circle key=\"2\" cx=\"0\" cy=\"0\" r=\"45\" stroke=\"black\" style={{ stroke: \"black\", strokeWidth: \"2px\", fill: \"white\" }} transform={'translate(45,45)'} />\n        <text key=\"3\" x=\"0\" y=\"0\" transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    const metalDetectorMaxLOD = new Three.Object3D();\n    metalDetectorMaxLOD.add(objectMaxLOD.clone());\n\n    const value = new Three.Box3().setFromObject(metalDetectorMaxLOD);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    metalDetectorMaxLOD.position.y += newHeight / 11.5 + newAltitude;\n    metalDetectorMaxLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n\n    const metalDetectorMinLOD = new Three.Object3D();\n    metalDetectorMinLOD.add(objectMinLOD.clone());\n    metalDetectorMinLOD.position.y += newHeight / 11.5 + newAltitude;\n    metalDetectorMinLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(metalDetectorMaxLOD, 700);\n    lod.addLevel(metalDetectorMinLOD, 1200);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/cleaningcart/cleaning_cart.png\";","module.exports = __webpack_public_path__ + \"catalog/items/deskoffice/wood.jpg\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 70;\nconst DEPTH = 50;\nconst HEIGHT = 90;\n\nconst CHAIR_WIDTH = 55;\nconst CHAIR_DEPTH = 55;\nconst CHAIR_HEIGHT = 50;\n\nconst CHAIR_TRANSLATION = 30;\n\nconst TOTAL_DEPTH = DEPTH + CHAIR_DEPTH / 2 - (CHAIR_TRANSLATION - CHAIR_DEPTH / 2);\n\nexport default defineCatalogElement({\n  name: \"school-desk\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings'],\n    title: \"School desk\",\n    description: \"School desk\",\n    image: require('./school-desk.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-TOTAL_DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={TOTAL_DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <line key=\"2\" x1={WIDTH / 2} x2={WIDTH / 2} y1={DEPTH + DEPTH / 2} y2={1.5 * DEPTH + DEPTH / 2}\n          style={arrow_style} />\n        <line key=\"3\" x1={.25 * WIDTH} x2={WIDTH / 2} y1={1.2 * DEPTH + DEPTH / 2} y2={1.5 * DEPTH + DEPTH / 2}\n          style={arrow_style} />\n        <line key=\"4\" x1={WIDTH / 2} x2={.75 * WIDTH} y1={1.5 * DEPTH + DEPTH / 2} y2={1.2 * DEPTH + DEPTH / 2}\n          style={arrow_style} />\n        <text key=\"5\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${TOTAL_DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const makeChair = (altitude: number) => {\n      const WIDTH = CHAIR_WIDTH;\n      const DEPTH = CHAIR_DEPTH;\n      const HEIGHT = CHAIR_HEIGHT;\n\n      const chair = new Three.Object3D();\n\n      const geometry = new Three.CylinderGeometry(0.02, 0.02, 0.5, 32);\n      const material = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n\n      const p1 = new Three.Mesh(geometry, material);\n      p1.rotation.x += Math.PI / 2;\n      p1.position.z += 0.5 / 2;\n\n      const p2 = new Three.Mesh(geometry, material);\n      p2.rotation.x += Math.PI / 2;\n      p2.position.z += 0.5 / 2;\n      p2.position.y += 0.4;\n\n      const p3 = new Three.Mesh(geometry, material);\n      p3.rotation.x += Math.PI / 2;\n      p3.position.z += 0.5 / 2;\n      p3.position.x += 0.4;\n\n      const p4 = new Three.Mesh(geometry, material);\n      p4.rotation.x += Math.PI / 2;\n      p4.position.z += 0.5 / 2;\n      p4.position.y += 0.4;\n      p4.position.x += 0.4;\n\n      const p5 = new Three.Mesh(geometry, material);\n      p5.rotation.x += Math.PI / 2;\n      p5.position.z += 0.5 * 3 / 2;\n\n      const p6 = new Three.Mesh(geometry, material);\n      p6.rotation.x += Math.PI / 2;\n      p6.position.z += 0.5 * 3 / 2;\n      p6.position.x += 0.4;\n\n      // material = new Three.MeshLambertMaterial({color: 0x9b8c75});\n      const texture = new Three.TextureLoader().load(require('./wood.jpg'));\n      const materialTexture = new Three.MeshLambertMaterial({ map: texture });\n\n      const roundedRectShape = new Three.Shape();\n\n      const x = 0;\n      const y = 0;\n      const width = .5;\n      const height = .48;\n      const radius = 0.05;\n\n      roundedRectShape.moveTo(x, y + radius);\n      roundedRectShape.lineTo(x, y + height - radius);\n      roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n      roundedRectShape.lineTo(x + width - radius, y + height);\n      roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n      roundedRectShape.lineTo(x + width, y + radius);\n      roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n      roundedRectShape.lineTo(x + radius, y);\n      roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n      const extrudeSettings = {\n        steps: 2,\n        depth: 0.03,\n        bevelEnabled: false,\n        bevelThickness: 1,\n        bevelSize: 1,\n        bevelSegments: 1\n      };\n\n      const geometry50 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n      const plane = new Three.Mesh(geometry50, materialTexture);\n\n      plane.position.x += -0.05;\n      plane.position.y += -0.04;\n      plane.position.z += 0.5;\n\n      const roundedRectShape2 = new Three.Shape();\n\n      const x1 = 0;\n      const y1 = 0;\n      const width1 = .45;\n      const height1 = .25;\n      const radius1 = 0.05;\n\n      roundedRectShape2.moveTo(x1, y1 + radius1);\n      roundedRectShape2.lineTo(x1, y1 + height1 - radius1);\n      roundedRectShape2.quadraticCurveTo(x1, y1 + height1, x1 + radius1, y1 + height1);\n      roundedRectShape2.lineTo(x1 + width1 - radius1, y1 + height1);\n      roundedRectShape2.quadraticCurveTo(x1 + width1, y1 + height1, x1 + width1, y1 + height1 - radius1);\n      roundedRectShape2.lineTo(x1 + width1, y1 + radius1);\n      roundedRectShape2.quadraticCurveTo(x1 + width1, y1, x1 + width1 - radius1, y1);\n      roundedRectShape2.lineTo(x1 + radius1, y1);\n      roundedRectShape2.quadraticCurveTo(x1, y1, x1, y1 + radius1);\n\n      const extrudeSettings2 = {\n        steps: 2,\n        depth: 0.03,\n        bevelEnabled: false,\n        bevelThickness: 1,\n        bevelSize: 1,\n        bevelSegments: 1\n      };\n\n      const geometry22 = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n      const back = new Three.Mesh(geometry22, materialTexture);\n\n      //geometry = new Three.BoxGeometry( 0.38, 0.02, 0.15);\n      //let back = new Three.Mesh( geometry, material );\n      back.rotation.x += Math.PI / 2;\n      back.position.z += 0.5 * 12 / 8;\n      back.position.y += 0.03;\n      back.position.x += -0.025;\n\n      chair.add(back);\n      chair.add(plane);\n      chair.add(p1);\n      chair.add(p2);\n      chair.add(p3);\n      chair.add(p4);\n      chair.add(p5);\n      chair.add(p6);\n\n      const aa = new Three.Box3().setFromObject(chair);\n\n      const deltaX = Math.abs(aa.max.x - aa.min.x);\n      const deltaY = Math.abs(aa.max.y - aa.min.y);\n      const deltaZ = Math.abs(aa.max.z - aa.min.z);\n\n      // if (element.selected) {\n      //   let bbox = new Three.BoxHelper(chair, 0x99c3fb);\n      //   bbox.material.linewidth = 5;\n      //   bbox.renderOrder = 1000;\n      //   bbox.material.depthTest = false;\n      //   chair.add(bbox);\n      // }\n\n      chair.rotation.x += -Math.PI / 2;\n      chair.position.y += altitude;\n      chair.position.x += -WIDTH / 3.5;\n      chair.position.z += DEPTH / 4;\n      chair.scale.set(1.5 * WIDTH / deltaZ, DEPTH / 1.5 / deltaX, HEIGHT / deltaY);\n\n      return chair;\n    };\n\n    const newAltitude: number = element.properties.altitude.length;\n\n    const grey = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n\n    const texture = new Three.TextureLoader().load(require('./wood.jpg'));\n    const materialTexture = new Three.MeshLambertMaterial({ map: texture });\n\n\n    const newDepth = .5;\n    const newWidth = .9;\n    const newHeight = 1;\n    const raggio = .03;\n\n    const banco = new Three.Object3D();\n\n    const geometry = new Three.BoxGeometry(newWidth + newWidth / 6, newHeight / 20, newDepth + newDepth / 4);\n\n    const boxMaterials = [\n      new Three.MeshBasicMaterial({ map: texture }),\n      new Three.MeshBasicMaterial({ map: texture }),\n      new Three.MeshBasicMaterial({ color: 0x669966 }), //top\n      new Three.MeshBasicMaterial({ map: texture }),\n      new Three.MeshBasicMaterial({ map: texture }),\n      new Three.MeshBasicMaterial({ map: texture })\n    ];\n\n    const plane = new Three.Mesh(geometry, boxMaterials);\n    plane.position.y = newHeight;\n    banco.add(plane);\n\n    const geometry_legs = new Three.CylinderGeometry(raggio, raggio, newHeight, 32);\n\n    const geometry2 = new Three.BoxGeometry(newWidth, newHeight / 20, newDepth);\n    const plane2 = new Three.Mesh(geometry2, materialTexture);\n    plane2.position.y = newHeight / 2 + newHeight / 4;\n    banco.add(plane2);\n\n    const geometry3 = new Three.BoxGeometry(newWidth, newHeight / 10, newDepth / 20);\n    const plane3 = new Three.Mesh(geometry3, materialTexture);\n    plane3.position.y = newHeight / 2 + newHeight / 4 + newHeight / 16;\n    plane3.position.z = newDepth / 3 + newDepth / 5;\n    banco.add(plane3);\n\n    const p1 = new Three.Mesh(geometry_legs, grey);\n    p1.position.x = newWidth / 2;\n    p1.position.z = newDepth / 2;\n    p1.position.y = newHeight / 2;\n    banco.add(p1);\n\n    const p2 = new Three.Mesh(geometry_legs, grey);\n    p2.position.x = newWidth / 2;\n    p2.position.z = -newDepth / 2;\n    p2.position.y = newHeight / 2;\n    banco.add(p2);\n\n    const p3 = new Three.Mesh(geometry_legs, grey);\n    p3.position.x = -newWidth / 2;\n    p3.position.z = newDepth / 2;\n    p3.position.y = newHeight / 2;\n    banco.add(p3);\n\n    const p4 = new Three.Mesh(geometry_legs, grey);\n    p4.position.x = -newWidth / 2;\n    p4.position.z = -newDepth / 2;\n    p4.position.y = newHeight / 2;\n    banco.add(p4);\n\n    const valueObject = new Three.Box3().setFromObject(banco);\n\n    const deltaX = Math.abs(valueObject.max.x - valueObject.min.x);\n    const deltaY = Math.abs(valueObject.max.y - valueObject.min.y);\n    const deltaZ = Math.abs(valueObject.max.z - valueObject.min.z);\n\n\n    // if (element.selected) {\n    //   let bbox = new Three.BoxHelper(banco, 0x99c3fb);\n    //   bbox.material.linewidth = 5;\n    //   bbox.renderOrder = 1000;\n    //   bbox.material.depthTest = false;\n    //   banco.add(bbox);\n    // }\n\n    banco.rotation.y += Math.PI;\n    banco.position.y += newAltitude;\n    banco.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    const chair = makeChair(newAltitude);\n    chair.position.z += CHAIR_TRANSLATION;\n\n    const deskAndChair = new Three.Object3D();\n    deskAndChair.add(banco);\n    deskAndChair.add(chair);\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(deskAndChair, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      deskAndChair.add(bbox);\n    }\n\n    deskAndChair.position.z -= (CHAIR_DEPTH / 2 - (CHAIR_TRANSLATION - CHAIR_DEPTH / 2)) / 2;\n\n    const boundingBoxDeskAndChair = new Three.Box3().setFromObject(deskAndChair);\n\n    const deltaZDeskAndChair = Math.abs(boundingBoxDeskAndChair.max.z - boundingBoxDeskAndChair.min.z);\n\n    deskAndChair.scale.set(1, 1, TOTAL_DEPTH / deltaZDeskAndChair); //Fix Depth problem with the chair\n\n    return deskAndChair;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/holes/venetian-blind-window/venetian.mtl\";","module.exports = __webpack_public_path__ + \"catalog/areas/area/textures/grass.jpg\";","module.exports = __webpack_public_path__ + \"catalog/holes/window/window.obj\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 80;\nconst DEPTH = 80;\nconst HEIGHT = 200;\n\nconst textureLoader = new Three.TextureLoader();\nconst woodMaterial = textureLoader.load(require('./wood.jpg'));\nconst bookTexture1 = textureLoader.load(require('./bookTexture1.jpg'));\nconst bookTexture2 = textureLoader.load(require('./bookTexture2.jpg'));\nconst bookTexture3 = textureLoader.load(require('./bookTexture3.jpg'));\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const bookcase = new Three.Mesh();\n\n  //Bookcase\n  const backGeometry = new Three.BoxGeometry(0.03, 2, 0.8);\n  const wood = new Three.MeshPhongMaterial({ map: woodMaterial });\n  const backside = new Three.Mesh(backGeometry, wood);\n  backside.position.set(0, 1, 0);\n  bookcase.add(backside);\n\n  const sideGeometry = new Three.BoxGeometry(0.3, 2, 0.03);\n  const side1 = new Three.Mesh(sideGeometry, wood);\n  side1.position.set(0.15, 1, 0.4);\n  bookcase.add(side1);\n\n  const side2 = new Three.Mesh(sideGeometry, wood);\n  side2.position.set(0.15, 1, -0.4);\n  bookcase.add(side2);\n\n  const bottomGeometry = new Three.BoxGeometry(0.3, 0.03, 0.8);\n  const bottomPanel = new Three.Mesh(bottomGeometry, wood);\n  bottomPanel.position.set(0.15, 2, 0);\n  bookcase.add(bottomPanel);\n\n  const topGeometry = new Three.BoxGeometry(0.3, 0.03, 0.8);\n  const topPanel = new Three.Mesh(topGeometry, wood);\n  topPanel.position.set(0.15, 0.015, 0);\n  bookcase.add(topPanel);\n\n  //shelves\n  for (let i = 1; i < 5; i++) {\n    const shelveGeometry = new Three.BoxGeometry(0.3, 0.03, 0.8);\n    const shelve = new Three.Mesh(shelveGeometry, wood);\n    shelve.position.set(0.15, 0.015 + i * 0.4, 0);\n    bookcase.add(shelve);\n  }\n\n  function choiceTexture() {\n    return (Math.floor(Math.random() * 3))\n  }\n\n  //book\n  const bookGeometry = new Three.BoxGeometry(0.24, 0.32, 0.76);\n\n  const bookMaterial =\n    [new Three.MeshLambertMaterial({ map: bookTexture1 }),\n    new Three.MeshLambertMaterial({ map: bookTexture2 }),\n    new Three.MeshLambertMaterial({ map: bookTexture3 })];\n\n  const book1 = new Three.Mesh(bookGeometry, bookMaterial[choiceTexture()]);\n  book1.position.set(0.15, 0.59, 0);\n  bookcase.add(book1);\n\n  const book2 = new Three.Mesh(bookGeometry, bookMaterial[choiceTexture()]);\n  book2.position.set(0.15, 0.99, 0);\n  bookcase.add(book2);\n\n  const book3 = new Three.Mesh(bookGeometry, bookMaterial[choiceTexture()]);\n  book3.position.set(0.15, 0.19, 0);\n  bookcase.add(book3);\n\n  const book4 = new Three.Mesh(bookGeometry, bookMaterial[choiceTexture()]);\n  book4.position.set(0.15, 1.39, 0);\n  bookcase.add(book4);\n\n  const book5 = new Three.Mesh(bookGeometry, bookMaterial[choiceTexture()]);\n  book5.position.set(0.15, 1.79, 0);\n  bookcase.add(book5);\n\n  return bookcase\n}\n\nfunction makeObjectMinLOD() {\n  const bookcase = new Three.Mesh();\n\n  const textureLoader = new Three.TextureLoader();\n\n  const woodMaterial = textureLoader.load(require('./wood.jpg'));\n\n  //Bookcase\n  const backGeometry = new Three.BoxGeometry(0.03, 2, 0.8);\n  const wood = new Three.MeshPhongMaterial({ map: woodMaterial });\n  const backside = new Three.Mesh(backGeometry, wood);\n  backside.position.set(0, 1, 0);\n  bookcase.add(backside);\n\n  const sideGeometry = new Three.BoxGeometry(0.3, 2, 0.03);\n  const side1 = new Three.Mesh(sideGeometry, wood);\n  side1.position.set(0.15, 1, 0.4);\n  bookcase.add(side1);\n\n  const side2 = new Three.Mesh(sideGeometry, wood);\n  side2.position.set(0.15, 1, -0.4);\n  bookcase.add(side2);\n\n  const bottomGeometry = new Three.BoxGeometry(0.3, 0.03, 0.8);\n  const bottomPanel = new Three.Mesh(bottomGeometry, wood);\n  bottomPanel.position.set(0.15, 2, 0);\n  bookcase.add(bottomPanel);\n\n  const topGeometry = new Three.BoxGeometry(0.3, 0.03, 0.8);\n  const topPanel = new Three.Mesh(topGeometry, wood);\n  topPanel.position.set(0.15, 0.015, 0);\n  bookcase.add(topPanel);\n\n  //shelves\n  for (let i = 1; i < 5; i++) {\n    const shelveGeometry = new Three.BoxGeometry(0.3, 0.03, 0.8);\n    const shelve = new Three.Mesh(shelveGeometry, wood);\n    shelve.position.set(0.15, 0.015 + i * 0.4, 0);\n    bookcase.add(shelve);\n  }\n\n  return bookcase\n}\n\nexport default defineCatalogElement({\n  name: 'bookcase',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'wood'],\n    title: 'bookcase',\n    description: 'bookcase',\n    image: require('./bookcase.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' };\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH} style={rect_style} />\n        <text key='2' x='0' y='0'\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}</text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /**************** lod max ******************/\n\n    const bookcaseMaxLOD = new Three.Object3D();\n    bookcaseMaxLOD.add(objectMaxLOD.clone());\n\n    const value = new Three.Box3().setFromObject(bookcaseMaxLOD);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    bookcaseMaxLOD.rotation.y += Math.PI / 2;\n    bookcaseMaxLOD.position.y += newAltitude;\n    bookcaseMaxLOD.position.z += WIDTH / 2;\n    bookcaseMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**************** lod min ******************/\n\n    const bookcaseMinLOD = new Three.Object3D();\n    bookcaseMinLOD.add(objectMinLOD.clone());\n    bookcaseMinLOD.rotation.y += Math.PI / 2;\n    bookcaseMinLOD.position.y += newAltitude;\n    bookcaseMinLOD.position.z += WIDTH / 2;\n    bookcaseMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(bookcaseMaxLOD, 200);\n    lod.addLevel(bookcaseMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/holes/door-double/door_double.png\";","module.exports = __webpack_public_path__ + \"catalog/items/hanger/hanger.png\";","module.exports = __webpack_public_path__ + \"catalog/holes/sash-window/window.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement, Models } from '@archef2000/react-planner'\n\nfunction buildToiletGeom(\n  width: number,\n  depth: number,\n  seatHeight: number,\n  tankBodyHeight: number,\n  tankBottomOffset: number,\n  color: string,\n  showTank: boolean,\n  lowDetail: boolean,\n  roundLower: number,\n  opening: number,\n  ringWidth: number,\n  seatBackFlat: boolean,\n  roundingStartHeight: number,\n  tankWidthRatio: number,\n  tankDepth: number,\n  seatThicknessValue: number,\n  roundingSmoothness: number\n) {\n  const group = new Three.Object3D();\n\n  const mainColor = new Three.Color(color || '#ffffff');\n  const porcelain = new Three.MeshLambertMaterial({ color: mainColor });\n  const dark = new Three.MeshLambertMaterial({ color: 0x333333 });\n\n  const seatOuterHalfX = width * 0.5;\n  const seatThickness = seatThicknessValue > 0 ? seatThicknessValue : Math.max(1.2, seatHeight * 0.06);\n  const openingWidth = Math.max(10, Math.min(opening, seatOuterHalfX * 1.8));\n  const seatOuterRX = Math.min(openingWidth / 2 + 5, width / 2);\n  let seatInnerRX = Math.max(1, seatOuterRX - ringWidth);\n  seatInnerRX = Math.min(seatInnerRX, openingWidth / 2 - 0.0001);\n  const aspect = depth / width;\n  const seatOuterRZ = Math.min((openingWidth * aspect) / 2 + 5, depth / 2);\n  const seatInnerRZ = seatInnerRX * aspect;\n  const seatOuterHalfZ = depth / 2;\n  const baseOuterR = Math.min(seatOuterHalfX, seatOuterHalfZ);\n  const bowlHeight = seatHeight - seatThickness;\n  const steps = lowDetail ? 20 : 30;\n\n  // bowl\n  const lowerSlider = Math.min(Math.max(roundLower, 0), 100);\n  const lowerIntensity = lowerSlider / 100;\n  const maxReductionFactor = 0.60;\n  const bottomRadius = baseOuterR * (1 - maxReductionFactor * lowerIntensity);\n  const roundingStart = Math.min(Math.max(roundingStartHeight, 0), bowlHeight - 0.01);\n  const bowlProfile: Three.Vector2[] = [];\n  bowlProfile.push(new Three.Vector2(0, 0)); // bottom closed\n\n  const arcSteps = Math.max(8, Math.floor(steps));\n  const smoothSlider = Math.min(Math.max(roundingSmoothness, 0), 100);\n  const easingExponent = (smoothSlider / 100) * (3);\n  if (roundingStart > 0) {\n    for (let i = 0; i <= arcSteps; i++) {\n      const t = i / arcSteps; // 0..1 along rounding height\n      const y = t * roundingStart;\n      const base = Math.sin((t * Math.PI) / 2);\n      const progress = Math.pow(base, easingExponent);\n      const r = bottomRadius + (baseOuterR - bottomRadius) * progress;\n      const prev = bowlProfile[bowlProfile.length - 1];\n      if (!prev || Math.abs(prev.x - r) > 1e-5 || Math.abs(prev.y - y) > 1e-5) {\n        bowlProfile.push(new Three.Vector2(r, y));\n      }\n    }\n  } else {\n    bowlProfile.push(new Three.Vector2(baseOuterR, 0));\n  }\n\n  // Vertical section from roundingStart to bowlHeight (constant radius)\n  if (roundingStart < bowlHeight) {\n    const last = bowlProfile[bowlProfile.length - 1];\n    if (Math.abs(last.x - baseOuterR) > 1e-5 || Math.abs(last.y - roundingStart) > 1e-5) {\n      bowlProfile.push(new Three.Vector2(baseOuterR, roundingStart));\n    }\n    if (Math.abs(bowlHeight - roundingStart) > 1e-5) {\n      bowlProfile.push(new Three.Vector2(baseOuterR, bowlHeight));\n    }\n  }\n\n  const radialSegments = lowDetail ? 16 : 40;\n  const bowlGeom = new Three.LatheGeometry(bowlProfile, radialSegments);\n  bowlGeom.scale(seatOuterHalfX / baseOuterR, 1, seatOuterHalfZ / baseOuterR);\n  bowlGeom.computeVertexNormals();\n  const bowlMesh = new Three.Mesh(bowlGeom, porcelain);\n  bowlMesh.material.side = Three.DoubleSide;\n  group.add(bowlMesh);\n\n  const buildTopRimShape = () => {\n    if (!seatBackFlat) {\n      const shape = new Three.Shape();\n      shape.absellipse(0, 0, seatOuterHalfX, seatOuterHalfZ, 0, Math.PI * 2, false, 0);\n      const hole = new Three.Path();\n      hole.absellipse(0, 0, seatInnerRX, seatInnerRZ, 0, Math.PI * 2, true, 0);\n      shape.holes.push(hole);\n      return shape;\n    }\n    const segs = lowDetail ? 24 : 64;\n    const shape = new Three.Shape();\n    const yBack = seatOuterHalfZ;\n    shape.moveTo(-seatOuterHalfX, yBack);\n    shape.lineTo(seatOuterHalfX, yBack);\n    shape.lineTo(seatOuterHalfX, 0);\n    for (let i = 0; i <= segs; i++) {\n      const a = Math.PI * (i / segs); // 0..PI\n      const x = seatOuterHalfX * Math.cos(a);\n      const z = -seatOuterHalfZ * Math.sin(a);\n      shape.lineTo(x, z);\n    }\n    shape.lineTo(-seatOuterHalfX, 0);\n    shape.lineTo(-seatOuterHalfX, yBack);\n    const hole = new Three.Path();\n    const innerYBack = seatInnerRZ;\n    hole.moveTo(seatInnerRX, innerYBack);\n    hole.lineTo(-seatInnerRX, innerYBack);\n    hole.lineTo(-seatInnerRX, 0);\n    for (let i = 0; i <= segs; i++) {\n      const a = Math.PI - Math.PI * (i / segs); // PI..0\n      const x = seatInnerRX * Math.cos(a);\n      const z = -seatInnerRZ * Math.sin(a);\n      hole.lineTo(x, z);\n    }\n    hole.lineTo(seatInnerRX, 0);\n    hole.lineTo(seatInnerRX, innerYBack);\n    shape.holes.push(hole);\n    return shape;\n  };\n  const rimShape = buildTopRimShape();\n  const rimGeom = new Three.ShapeGeometry(rimShape, lowDetail ? 16 : 48);\n  const rimMesh = new Three.Mesh(rimGeom, porcelain);\n  rimMesh.material.side = Three.DoubleSide;\n  rimMesh.rotation.x = -Math.PI / 2;\n  rimMesh.position.y = bowlHeight + 0.001;\n  group.add(rimMesh);\n\n  if (seatBackFlat) {\n    const tempPos = bowlGeom.attributes.position;\n    let minZ = Infinity;\n    let maxZ = -Infinity;\n    for (let i = 0; i < tempPos.count; i++) {\n      const z = tempPos.getZ(i);\n      if (z < minZ) minZ = z;\n      if (z > maxZ) maxZ = z;\n    }\n    const midZ = (minZ + maxZ) / 2;\n    const planeZ = minZ + 1e-4;\n    for (let i = 0; i < tempPos.count; i++) {\n      if (tempPos.getZ(i) < midZ) tempPos.setZ(i, planeZ);\n    }\n    bowlGeom.computeVertexNormals();\n    if (bowlProfile.length > 1) {\n      const capShape = new Three.Shape();\n      capShape.moveTo(0, 0);\n      for (let i = 1; i < bowlProfile.length; i++) {\n        const p = bowlProfile[i];\n        capShape.lineTo(p.x, p.y);\n      }\n      capShape.lineTo(0, 0);\n      const capGeom = new Three.ShapeGeometry(capShape, lowDetail ? 8 : 24);\n      const sx = seatOuterHalfX / baseOuterR;\n      capGeom.scale(sx, 1, 1);\n      const capMesh = new Three.Mesh(capGeom, porcelain);\n      capMesh.material.side = Three.DoubleSide;\n      capMesh.position.z = planeZ + 1e-5;\n      group.add(capMesh);\n    }\n  }\n\n  // toilet ring start\n  const buildSeatShape = () => {\n    if (!seatBackFlat) {\n      const shape = new Three.Shape();\n      shape.absellipse(0, 0, seatOuterRX, seatOuterRZ, 0, Math.PI * 2, false, 0);\n      const hole = new Three.Path();\n      hole.absellipse(0, 0, seatInnerRX, seatInnerRZ, 0, Math.PI * 2, true, 0);\n      shape.holes.push(hole);\n      return shape;\n    }\n    const segs = lowDetail ? 24 : 64;\n    const shape = new Three.Shape();\n    const yBack = depth / 2;\n    shape.moveTo(-seatOuterRX, yBack);\n    shape.lineTo(seatOuterRX, yBack);\n    shape.lineTo(seatOuterRX, 0);\n    for (let i = 0; i <= segs; i++) {\n      const a = Math.PI * (i / segs);\n      const x = seatOuterRX * Math.cos(a);\n      const y = -seatOuterRZ * Math.sin(a);\n      shape.lineTo(x, y);\n    }\n    shape.lineTo(-seatOuterRX, 0);\n    shape.lineTo(-seatOuterRX, yBack);\n    const hole = new Three.Path();\n    const innerYBack = seatInnerRZ;\n    hole.moveTo(seatInnerRX, innerYBack);\n    hole.lineTo(-seatInnerRX, innerYBack);\n    hole.lineTo(-seatInnerRX, 0);\n    for (let i = 0; i <= segs; i++) {\n      const a = Math.PI - Math.PI * (i / segs);\n      const x = seatInnerRX * Math.cos(a);\n      const y = -seatInnerRZ * Math.sin(a);\n      hole.lineTo(x, y);\n    }\n    hole.lineTo(seatInnerRX, 0);\n    hole.lineTo(seatInnerRX, innerYBack);\n    shape.holes.push(hole);\n    return shape;\n  };\n  const seatShape = buildSeatShape();\n  const seatGeom = new Three.ExtrudeGeometry(seatShape, { depth: seatThickness, bevelEnabled: false, curveSegments: lowDetail ? 24 : 48 });\n  const seatMesh = new Three.Mesh(seatGeom, porcelain);\n  seatMesh.material.side = Three.DoubleSide;\n  seatMesh.rotation.x = -Math.PI / 2;\n  seatMesh.position.y = seatHeight - seatThickness + 0.1;\n  group.add(seatMesh);\n\n  if (showTank && tankBodyHeight > 0) {\n    const tankWidth = width * (tankWidthRatio / 100);\n    const tankHeightLocal = Math.max(0, tankBodyHeight);\n    if (tankHeightLocal > 0) {\n      const tankGeom = new Three.BoxGeometry(tankWidth, tankHeightLocal, tankDepth);\n      const tankMesh = new Three.Mesh(tankGeom, porcelain);\n      tankMesh.position.set(0, seatHeight + tankBottomOffset + tankHeightLocal / 2, -depth / 2 + tankDepth / 2);\n      group.add(tankMesh);\n      const btnGeom = new Three.CylinderGeometry(tankWidth * 0.08, tankWidth * 0.08, 2, 16);\n      const btnMesh = new Three.Mesh(btnGeom, dark);\n      btnMesh.rotation.x = Math.PI / 2;\n      btnMesh.position.set(0, seatHeight + tankBottomOffset + tankHeightLocal + 1, tankMesh.position.z - tankDepth / 4);\n      group.add(btnMesh);\n    }\n  }\n\n  return group;\n}\n\nexport default defineCatalogElement({\n  name: 'toilet',\n  prototype: 'items',\n  info: {\n    tag: ['sanitary', 'bathroom'],\n    title: 'Toilet',\n    description: 'Adjustable toilet (width, depth, seat height, tank body height, color, show/hide tank)',\n    image: require(\"./toilet.png\"),\n  },\n  properties: {\n    width: {\n      label: 'width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 40\n      }\n    },\n    depth: {\n      label: 'depth',\n      type: 'length-measure',\n      defaultValue: {\n        length: 50\n      }\n    },\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 10\n      }\n    },\n    seatHeight: {\n      label: 'seat height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 40\n      }\n    },\n\n    showTank: {\n      label: 'show tank',\n      type: 'toggle',\n      defaultValue: false\n    },\n    tankHeight: {\n      label: 'tank height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 30\n      }\n    },\n    tankBottom: {\n      label: 'tank bottom offset',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    },\n    tankWidthRatio: {\n      label: 'tank width % seat',\n      type: 'number',\n      defaultValue: 90\n    },\n    tankDepth: {\n      label: 'tank depth',\n      type: 'length-measure',\n      defaultValue: {\n        length: 10\n      }\n    },\n\n    color: {\n      label: 'color',\n      type: 'color',\n      defaultValue: '#ffffff'\n    },\n    opening: {\n      label: 'opening width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 28\n      }\n    },\n    seatBackFlat: {\n      label: 'flat back seat',\n      type: 'toggle',\n      defaultValue: true\n    },\n    seatThickness: {\n      label: 'seat thickness',\n      type: 'length-measure',\n      defaultValue: {\n        length: 3\n      }\n    },\n    ringWidth: {\n      label: 'Seat width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 8\n      }\n    },\n\n    roundLower: {\n      label: 'bowl round lower',\n      type: 'number',\n      defaultValue: 80\n    },\n    roundingStartHeight: {\n      label: 'rounding start height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 14\n      }\n    },\n    roundingSmoothness: {\n      label: 'Bottom rounding',\n      type: 'number',\n      defaultValue: 20\n    },\n  },\n  render2D: function (element: Models.Item, layer: Models.Layer, scene: Models.Scene) {\n    const w = element.properties.width.length;\n    const d = element.properties.depth.length;\n    const showTank = element.properties.showTank;\n    const seatBackFlat = element.properties.seatBackFlat === true;\n    const tankWidthRatio = element.properties.tankWidthRatio;\n    const tankDepthValue = element.properties.tankDepth.length;\n\n    const angle = element.rotation + 90;\n    const textRotation = Math.sin(angle * Math.PI / 180) < 0 ? 180 : 0;\n    const selected = element.selected;\n    const fill = selected ? '#99c3fb' : element.properties.color;\n\n    const rx = w / 2;\n    const ry = d / 2;\n    let shapeNode: React.ReactNode;\n    if (!seatBackFlat) {\n      shapeNode = <ellipse cx={w / 2} cy={d / 2} rx={rx} ry={ry} style={{ stroke: selected ? '#0096fd' : '#000', strokeWidth: '2px', fill }} />;\n    } else {\n      const cx = w / 2;\n      const cy = d / 2;\n      const segs = 28;\n      const pts: string[] = [];\n      pts.push(`M ${cx - rx},${cy + ry}`);\n      pts.push(`L ${cx + rx},${cy + ry}`);\n      pts.push(`L ${cx + rx},${cy}`);\n      for (let i = 0; i <= segs; i++) {\n        const a = 2 * Math.PI - (i / segs) * Math.PI; // 2PI .. PI\n        const x = cx + rx * Math.cos(a);\n        const y = cy + ry * Math.sin(a);\n        pts.push(`L ${x},${y}`);\n      }\n      pts.push(`L ${cx - rx},${cy + ry}`);\n      pts.push('Z');\n      const dPath = pts.join(' ');\n      shapeNode = <path d={dPath} style={{ stroke: selected ? '#0096fd' : '#000', strokeWidth: '2px', fill }} />;\n    }\n\n    let tankNode: React.ReactNode = null;\n    if (showTank) {\n      const tankW = Math.min(w, Math.max(2, (w * (tankWidthRatio || 100)) / 100));\n      const tankD = Math.min(d * 0.5, Math.max(2, tankDepthValue));\n      const tankX = (w - tankW) / 2;\n      tankNode = (\n        <rect\n          x={tankX}\n          y={d - tankD}\n          width={tankW}\n          height={tankD}\n          style={{ stroke: selected ? '#0096fd' : '#000', strokeWidth: '1px', fill, fillOpacity: 0.85 }}\n        />\n      );\n    }\n\n    return (\n      <g transform={`translate(${-w / 2},${-d / 2})`}>\n        {shapeNode}\n        {tankNode}\n        <text x=\"0\" y=\"0\" transform={`translate(${w / 2}, ${d / 2 - 5}) scale(1,-1) rotate(${textRotation})`} style={{ textAnchor: 'middle', fontSize: '11px' }}>{element.type}</text>\n      </g>\n    );\n  },\n  async render3D(element: Models.Item, layer: Models.Layer, scene: Models.Scene) {\n    const w = element.properties.width.length;\n    const d = element.properties.depth.length;\n    const seatH = element.properties.seatHeight.length;\n    const tankBodyHeight = element.properties.tankHeight.length;\n    const color = element.properties.color;\n    const altitude = element.properties.altitude.length;\n    const showTank = element.properties.showTank !== false;\n    const tankBottomOffset = element.properties.tankBottom.length;\n    const roundLower = element.properties.roundLower;\n    const opening = element.properties.opening.length;\n    const seatBackFlat = element.properties.seatBackFlat === true;\n    const roundingStartHeight = element.properties.roundingStartHeight.length;\n    const tankWidthRatio = element.properties.tankWidthRatio;\n    const tankDepth = element.properties.tankDepth.length;\n    const seatThicknessValue = element.properties.seatThickness.length;\n    const roundingSmoothness = element.properties.roundingSmoothness;\n    const ringWidthProp = element.properties.ringWidth.length;\n\n    const maxLOD = new Three.Object3D();\n    maxLOD.add(buildToiletGeom(w, d, seatH, tankBodyHeight, tankBottomOffset, color, showTank, false, roundLower, opening, ringWidthProp, seatBackFlat, roundingStartHeight, tankWidthRatio, tankDepth, seatThicknessValue, roundingSmoothness));\n    const minLOD = new Three.Object3D();\n    minLOD.add(buildToiletGeom(w, d, seatH, tankBodyHeight, tankBottomOffset, color, showTank, true, roundLower, opening, ringWidthProp, seatBackFlat, roundingStartHeight, tankWidthRatio, tankDepth, seatThicknessValue, roundingSmoothness));\n\n    const centerAndPlace = (obj: Three.Object3D) => {\n      const box = new Three.Box3().setFromObject(obj);\n      if (isFinite(box.min.x) && isFinite(box.max.x)) {\n        const cx = (box.max.x + box.min.x) / 2;\n        const cz = (box.max.z + box.min.z) / 2;\n        const bottom = box.min.y;\n        obj.position.x -= cx;\n        obj.position.z -= cz;\n        obj.position.y += altitude - bottom;\n      } else {\n        obj.position.y += altitude;\n      }\n    };\n    centerAndPlace(maxLOD);\n    centerAndPlace(minLOD);\n\n    const lod = new Three.LOD();\n    lod.addLevel(maxLOD, 200);\n    lod.addLevel(minLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  },\n\n  async updateRender3D(element: Models.Item, layer: Models.Layer, scene: Models.Scene, mesh: Three.Object3D, oldElement: Models.Item, differences: any, selfDestroy: Function, selfBuild: Function) {\n    const diffs = Array.isArray(differences) ? differences : [differences];\n    if (typeof console !== 'undefined' && console.debug) {\n      console.debug('[toilet] updateRender3D diffs:', diffs, 'element id:', element.id);\n    }\n\n    if (diffs.length === 1 && diffs[0] === 'selected') {\n      let hasBox = false;\n      mesh.traverse(child => {\n        if (child instanceof Three.BoxHelper) {\n          hasBox = true;\n          child.visible = element.selected;\n        }\n      });\n      if (!hasBox && element.selected) {\n        const bbox = new Three.BoxHelper(mesh, 0x99c3fb);\n        bbox.material.depthTest = false;\n        bbox.renderOrder = 1000;\n        mesh.add(bbox);\n      }\n      return mesh;\n    }\n\n    selfDestroy();\n    return selfBuild();\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/tv/tv.obj\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 300;\nconst DEPTH = 20;\nconst HEIGHT = 150;\n\nexport default defineCatalogElement({\n  name: \"blackboard\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings'],\n    title: \"Blackboard\",\n    description: \"Blackboard\",\n    image: require('./blackboard.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH} style={rect_style} />\n        <line key=\"2\" x1={WIDTH / 2} x2={WIDTH / 2} y1={DEPTH} y2={1.8 * DEPTH} style={arrow_style} />\n        <line key=\"3\" x1={.45 * WIDTH} x2={WIDTH / 2} y1={1.2 * DEPTH} y2={1.8 * DEPTH} style={arrow_style} />\n        <line key=\"4\" x1={WIDTH / 2} x2={.55 * WIDTH} y1={1.8 * DEPTH} y2={1.2 * DEPTH} style={arrow_style} />\n        <text key=\"5\" x=\"0\" y=\"0\" transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    //colors\n    const grey = new Three.MeshLambertMaterial({ color: 0xCCCCCC });\n    const grey2 = new Three.MeshLambertMaterial({ color: 0x414449 });\n\n    const lavagna = new Three.Object3D();\n\n    const roundedRectShape = new Three.Shape();\n\n    const x = 0;\n    const y = 0;\n    const width = 8;\n    const height = 4;\n    const radius = 0.25;\n\n    roundedRectShape.moveTo(x, y + radius);\n    roundedRectShape.lineTo(x, y + height - radius);\n    roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n    roundedRectShape.lineTo(x + width - radius, y + height);\n    roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n    roundedRectShape.lineTo(x + width, y + radius);\n    roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n    roundedRectShape.lineTo(x + radius, y);\n    roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n    const extrudeSettings = {\n      steps: 1,\n      depth: 0.2,\n      bevelEnabled: false,\n      bevelThickness: .4,\n      bevelSize: .4,\n      bevelSegments: 1\n    };\n\n    const geometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n    const mesh = new Three.Mesh(geometry, grey);\n    mesh.position.set(0, 1.2, 0);\n    lavagna.add(mesh);\n\n    const geometry2 = new Three.BoxGeometry(width - width / 11, height - height / 8, .2);\n    const mesh2 = new Three.Mesh(geometry2, grey2);\n    mesh2.position.set(4, 3.2, 0.07);\n    lavagna.add(mesh2);\n\n    const geometry3 = new Three.BoxGeometry(width, height / 50, .33);\n    const mesh3 = new Three.Mesh(geometry3, grey);\n    mesh3.position.set(4, 1.0, -0.095);\n    lavagna.add(mesh3);\n\n    const geometry4 = new Three.BoxGeometry(width, height / 50, .25);\n    const mesh4 = new Three.Mesh(geometry4, grey);\n    mesh4.rotation.x += Math.PI / 2;\n    mesh4.position.set(4, 1.1, 0.03);\n    lavagna.add(mesh4);\n\n    const mesh5 = new Three.Mesh(geometry4, grey);\n    mesh5.rotation.x += Math.PI / 2;\n    mesh5.position.set(4, 1.1, -0.22);\n    lavagna.add(mesh5);\n\n    const value = new Three.Box3().setFromObject(lavagna);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lavagna, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lavagna.add(bbox);\n    }\n\n    lavagna.position.y += -HEIGHT / 3.2 + newAltitude;\n    lavagna.position.x += -WIDTH / 2;\n    lavagna.position.z += DEPTH / 4;\n\n    lavagna.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    return lavagna;\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 150;\nconst DEPTH = 50;\nconst HEIGHT = 50;\nconst RADIUS = 10;\n\nconst grey = new Three.MeshLambertMaterial({ color: 0xC0C0C0 });\nconst black = new Three.MeshLambertMaterial({ color: 0x00000 });\nconst textureLoader = new Three.TextureLoader();\nconst woodTexture = textureLoader.load(require('./wood.jpg'));\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const bench = new Three.Mesh();\n\n  // axis\n  const axis1 = new Three.Mesh(new Three.BoxGeometry(10, 0.5, 0.5), grey);\n  axis1.position.set(0, 0, 0);\n  bench.add(axis1);\n\n  const axi2 = new Three.Mesh(new Three.BoxGeometry(10, 0.5, 0.5), grey);\n  axi2.position.set(0, 0, 3);\n  bench.add(axi2);\n\n  //beams\n  for (let lx = -5; lx <= 5; lx += 5) {\n    const beam = new Three.Mesh(new Three.BoxGeometry(0.5, 0.5, 3.5), grey);\n    beam.position.set(lx, 0, 1.5);\n    bench.add(beam);\n  }\n\n  //legs\n  for (let gx = -5; gx <= 5; gx += 5) {\n    for (let gz = 0; gz <= 3; gz += 3) {\n      const leg = new Three.Mesh(new Three.BoxGeometry(3, 0.5, 0.5), grey);\n      leg.rotation.z = 0.5 * Math.PI;\n      leg.position.set(gx, -1.5, gz);\n      bench.add(leg);\n\n      // foot\n      const foot = new Three.Mesh(new Three.BoxGeometry(0.5, 0.25, 0.5), black);\n      foot.rotation.z = 0.5 * Math.PI;\n      foot.position.x = -1.625;\n      leg.add(foot);\n    }\n  }\n\n  // wood axis\n  for (let z = 0; z <= 3; z += 0.75) {\n    const woodAxis = new Three.Mesh(new Three.BoxGeometry(12, 0.25, 0.5), new Three.MeshPhongMaterial({ map: woodTexture }));\n    woodAxis.position.set(0, 0.5, z);\n    bench.add(woodAxis);\n  }\n\n  //nuts\n  for (let z = 0; z <= 3; z += 0.75) {\n    for (let dy = -5; dy <= 5; dy += 5) {\n      const nut = new Three.Mesh(new Three.CylinderGeometry(0.1, 0.1, 0.8, 6), black);\n      nut.position.set(dy, 0.3, z);\n      bench.add(nut);\n    }\n  }\n\n  return bench;\n}\n\nfunction makeObjectMinLOD() {\n  const bench = new Three.Mesh();\n  // axis\n  const axis1 = new Three.Mesh(new Three.BoxGeometry(10, 0.5, 0.5), grey);\n  axis1.position.set(0, 0, 0);\n  bench.add(axis1);\n\n  const axi2 = new Three.Mesh(new Three.BoxGeometry(10, 0.5, 0.5), grey);\n  axi2.position.set(0, 0, 3);\n  bench.add(axi2);\n\n  //beams\n  for (let lx = -5; lx <= 5; lx += 5) {\n    const beam = new Three.Mesh(new Three.BoxGeometry(0.5, 0.5, 3.5), grey);\n    beam.position.set(lx, 0, 1.5);\n    bench.add(beam);\n  }\n\n  //legs\n  for (let gx = -5; gx <= 5; gx += 5) {\n    for (let gz = 0; gz <= 3; gz += 3) {\n      const leg = new Three.Mesh(new Three.BoxGeometry(3, 0.5, 0.5), grey);\n      leg.rotation.z = 0.5 * Math.PI;\n      leg.position.set(gx, -1.5, gz);\n      bench.add(leg);\n\n    }\n  }\n\n  // wood axis\n  for (let z = 0; z <= 3; z += 0.75) {\n    const woodAxis = new Three.Mesh(new Three.BoxGeometry(12, 0.25, 0.5), new Three.MeshPhongMaterial({ map: woodTexture }));\n    woodAxis.position.set(0, 0.5, z);\n    bench.add(woodAxis);\n  }\n\n  return bench;\n}\n\nexport default defineCatalogElement({\n  name: 'bench',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'wood', 'metal'],\n    title: 'bench',\n    description: 'bench',\n    image: require('./bench.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n    const textRotation = Math.sin(angle * Math.PI / 180) < 0 ? 180 : 0;\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' };\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH} style={rect_style} />\n        <text key='2' x='0' y='0' transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /************ lod max *****************/\n    const benchMaxLOD = new Three.Object3D();\n    benchMaxLOD.add(objectMaxLOD.clone());\n\n    const value = new Three.Box3().setFromObject(benchMaxLOD);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    benchMaxLOD.position.y += HEIGHT + newAltitude;\n    benchMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n\n    /************ lod min *****************/\n\n    const benchMinLOD = new Three.Object3D();\n    benchMinLOD.add(objectMinLOD.clone());\n    benchMinLOD.position.y += HEIGHT + newAltitude;\n    benchMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(benchMaxLOD, 200);\n    lod.addLevel(benchMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/kitchen/darksteel.jpg\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 140;\nconst DEPTH = 70;\nconst HEIGHT = 100;\n\nconst CHAIR_WIDTH = 55;\nconst CHAIR_DEPTH = 55;\nconst CHAIR_HEIGHT = 50;\n\nconst CHAIR_TRANSLATION = 30;\n\nconst TOTAL_DEPTH = DEPTH + CHAIR_DEPTH / 2 - (CHAIR_TRANSLATION - CHAIR_DEPTH / 2);\n\nexport default defineCatalogElement({\n  name: \"teaching-post\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings'],\n    title: \"Teaching post\",\n    description: \"Teaching post\",\n    image: require('./teaching-post.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-TOTAL_DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={TOTAL_DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <line key=\"2\" x1={WIDTH / 2} x2={WIDTH / 2} y1={TOTAL_DEPTH} y2={1.5 * TOTAL_DEPTH} style={arrow_style} />\n        <line key=\"3\" x1={.25 * WIDTH} x2={WIDTH / 2} y1={1.2 * TOTAL_DEPTH} y2={1.5 * TOTAL_DEPTH}\n          style={arrow_style} />\n        <line key=\"4\" x1={WIDTH / 2} x2={.75 * WIDTH} y1={1.5 * TOTAL_DEPTH} y2={1.2 * TOTAL_DEPTH}\n          style={arrow_style} />\n        <text key=\"5\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${(TOTAL_DEPTH) / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const makeChair = (altitude: number) => {\n      const WIDTH = CHAIR_WIDTH;\n      const DEPTH = CHAIR_DEPTH;\n      const HEIGHT = CHAIR_HEIGHT;\n\n      const chair = new Three.Object3D();\n\n      const geometry = new Three.CylinderGeometry(0.02, 0.02, 0.5, 32);\n      const material = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n\n      const p1 = new Three.Mesh(geometry, material);\n      p1.rotation.x += Math.PI / 2;\n      p1.position.z += 0.5 / 2;\n\n      const p2 = new Three.Mesh(geometry, material);\n      p2.rotation.x += Math.PI / 2;\n      p2.position.z += 0.5 / 2;\n      p2.position.y += 0.4;\n\n      const p3 = new Three.Mesh(geometry, material);\n      p3.rotation.x += Math.PI / 2;\n      p3.position.z += 0.5 / 2;\n      p3.position.x += 0.4;\n\n      const p4 = new Three.Mesh(geometry, material);\n      p4.rotation.x += Math.PI / 2;\n      p4.position.z += 0.5 / 2;\n      p4.position.y += 0.4;\n      p4.position.x += 0.4;\n\n      const p5 = new Three.Mesh(geometry, material);\n      p5.rotation.x += Math.PI / 2;\n      p5.position.z += 0.5 * 3 / 2;\n\n      const p6 = new Three.Mesh(geometry, material);\n      p6.rotation.x += Math.PI / 2;\n      p6.position.z += 0.5 * 3 / 2;\n      p6.position.x += 0.4;\n\n      const texture = new Three.TextureLoader().load(require('./wood.jpg'));\n      const materialTexture = new Three.MeshLambertMaterial({ map: texture });\n\n      const roundedRectShape = new Three.Shape();\n\n      const x = 0;\n      const y = 0;\n      const width = .5;\n      const height = .48;\n      const radius = 0.05;\n\n      roundedRectShape.moveTo(x, y + radius);\n      roundedRectShape.lineTo(x, y + height - radius);\n      roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n      roundedRectShape.lineTo(x + width - radius, y + height);\n      roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n      roundedRectShape.lineTo(x + width, y + radius);\n      roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n      roundedRectShape.lineTo(x + radius, y);\n      roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n      const extrudeSettings = {\n        steps: 2,\n        depth: 0.03,\n        bevelEnabled: false,\n        bevelThickness: 1,\n        bevelSize: 1,\n        bevelSegments: 1\n      };\n\n      const geometry50 = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n      const plane = new Three.Mesh(geometry50, materialTexture);\n\n\n      plane.position.x += -0.05;\n      plane.position.y += -0.04;\n      plane.position.z += 0.5;\n\n      const roundedRectShape2 = new Three.Shape();\n\n      const x1 = 0;\n      const y1 = 0;\n      const width1 = .45;\n      const height1 = .25;\n      const radius1 = 0.05;\n\n      roundedRectShape2.moveTo(x1, y1 + radius1);\n      roundedRectShape2.lineTo(x1, y1 + height1 - radius1);\n      roundedRectShape2.quadraticCurveTo(x1, y1 + height1, x1 + radius1, y1 + height1);\n      roundedRectShape2.lineTo(x1 + width1 - radius1, y1 + height1);\n      roundedRectShape2.quadraticCurveTo(x1 + width1, y1 + height1, x1 + width1, y1 + height1 - radius1);\n      roundedRectShape2.lineTo(x1 + width1, y1 + radius1);\n      roundedRectShape2.quadraticCurveTo(x1 + width1, y1, x1 + width1 - radius1, y1);\n      roundedRectShape2.lineTo(x1 + radius1, y1);\n      roundedRectShape2.quadraticCurveTo(x1, y1, x1, y1 + radius1);\n\n      const extrudeSettings2 = {\n        steps: 2,\n        depth: 0.03,\n        bevelEnabled: false,\n        bevelThickness: 1,\n        bevelSize: 1,\n        bevelSegments: 1\n      };\n\n      const geometry22 = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n      const back = new Three.Mesh(geometry22, materialTexture);\n\n\n      //geometry = new Three.BoxGeometry( 0.38, 0.02, 0.15);\n      //let back = new Three.Mesh( geometry, material );\n      back.rotation.x += Math.PI / 2;\n      back.position.z += 0.5 * 12 / 8;\n      back.position.y += 0.03;\n      back.position.x += -0.025;\n\n      chair.add(back);\n      chair.add(plane);\n      chair.add(p1);\n      chair.add(p2);\n      chair.add(p3);\n      chair.add(p4);\n      chair.add(p5);\n      chair.add(p6);\n\n\n      const aa = new Three.Box3().setFromObject(chair);\n\n      const deltaX = Math.abs(aa.max.x - aa.min.x);\n      const deltaY = Math.abs(aa.max.y - aa.min.y);\n      const deltaZ = Math.abs(aa.max.z - aa.min.z);\n\n      chair.rotation.x += -Math.PI / 2;\n      chair.position.y += altitude;\n      chair.position.x += -WIDTH / 3.5;\n      chair.position.z += DEPTH / 4;\n      chair.scale.set(1.5 * WIDTH / deltaZ, DEPTH / 1.5 / deltaX, HEIGHT / deltaY);\n\n      return chair;\n    };\n\n    const newAltitude: number = element.properties.altitude.length;\n\n    const texture = new Three.TextureLoader().load(require('./wood.jpg'));\n    const materialTexture = new Three.MeshLambertMaterial({ map: texture });\n    const green = new Three.MeshBasicMaterial({ color: 0x669966 });\n\n    const cattedra = new Three.Object3D();\n\n    const cattedraX = 1.9;\n    const cattedraY = 1.5;\n    const cattedraZ = 1.2;\n\n\n    const p1 = new Three.Mesh(new Three.BoxGeometry(0.06, 0.06, cattedraZ), materialTexture);\n    p1.position.z += cattedraZ / 2;\n    p1.position.x += 0.05;\n    p1.position.y += 0.05;\n\n    const p2 = new Three.Mesh(new Three.BoxGeometry(0.06, 0.06, cattedraZ), materialTexture);\n    p2.position.z += cattedraZ / 2;\n    p2.position.x += cattedraX - 0.05;\n    p2.position.y += 0.05;\n\n    const p3 = new Three.Mesh(new Three.BoxGeometry(0.06, 0.06, cattedraZ), materialTexture);\n    p3.position.z += cattedraZ / 2;\n    p3.position.x += cattedraX - 0.05;\n    p3.position.y += cattedraY - 0.05;\n\n    const p4 = new Three.Mesh(new Three.BoxGeometry(0.06, 0.06, cattedraZ), materialTexture);\n    p4.position.z += cattedraZ / 2;\n    p4.position.x += 0.05;\n    p4.position.y += cattedraY - 0.05;\n\n    const boxMaterials = [materialTexture, materialTexture, materialTexture, materialTexture, green, materialTexture];\n\n    const plane = new Three.Mesh(new Three.BoxGeometry(cattedraX, cattedraY, 0.04), boxMaterials);\n    plane.position.x += cattedraX / 2;\n    plane.position.y += cattedraY / 2;\n    plane.position.z += cattedraZ;\n\n\n    const backPlane = new Three.Mesh(new Three.BoxGeometry(cattedraX, (cattedraY / 2) - 0.1, 0.04), materialTexture);\n    backPlane.rotation.x += Math.PI / 2;\n    backPlane.position.x += cattedraX / 2;\n    backPlane.position.z += cattedraZ - cattedraY / 4;\n\n\n    const downPlane = new Three.Mesh(new Three.BoxGeometry(cattedraX, (cattedraY / 20), 0.04), materialTexture);\n    downPlane.position.x += cattedraX / 2;\n    downPlane.position.y += cattedraY / 2 + 0.4;\n    downPlane.position.z += cattedraZ - 0.6;\n\n\n    const leftPlane = new Three.Mesh(new Three.BoxGeometry(cattedraY, (cattedraY / 2) - 0.1, 0.04), materialTexture);\n    leftPlane.rotation.x += Math.PI / 2;\n    leftPlane.rotation.y += Math.PI / 2;\n    leftPlane.position.x += cattedraX;\n    leftPlane.position.y += cattedraY / 2;\n    leftPlane.position.z += cattedraZ - cattedraY / 4;\n\n\n    const rightPlane = leftPlane.clone();\n    rightPlane.position.x -= cattedraX;\n\n\n    const drawer = new Three.Mesh(new Three.BoxGeometry(cattedraX / 4, cattedraY, 0.4), materialTexture);\n    drawer.position.x += cattedraX / 4;\n    drawer.position.y += cattedraY / 2;\n    drawer.position.z += cattedraZ / 1.55;\n\n\n    const geometry = new Three.BoxGeometry(0.1, 0.04, 0.02);\n    const handle = new Three.Mesh(geometry, materialTexture);\n    handle.position.y += cattedraY / 2 + 0.02;\n\n    const geometry2 = new Three.BoxGeometry(0.5, 0.04, 0.3);\n    const p = new Three.Mesh(geometry2, green);\n    p.position.y += cattedraY / 2;\n\n\n    drawer.add(handle);\n    drawer.add(p);\n    drawer.scale.set(1.5, 1, .7);\n\n    const drawer2 = drawer.clone();\n    drawer2.position.z += (cattedraZ / 4.5);\n\n\n    cattedra.add(p1);\n    cattedra.add(p2);\n    cattedra.add(p3);\n    cattedra.add(p4);\n    cattedra.add(plane);\n    cattedra.add(drawer);\n    cattedra.add(drawer2);\n    cattedra.add(backPlane);\n    cattedra.add(leftPlane);\n    cattedra.add(rightPlane);\n    cattedra.add(downPlane);\n\n\n    const valueObject = new Three.Box3().setFromObject(cattedra);\n\n    const deltaX = Math.abs(valueObject.max.x - valueObject.min.x);\n    const deltaY = Math.abs(valueObject.max.y - valueObject.min.y);\n    const deltaZ = Math.abs(valueObject.max.z - valueObject.min.z);\n\n    cattedra.rotation.x += -Math.PI / 2;\n    cattedra.position.y += newAltitude;\n    cattedra.position.x += -WIDTH / 2;\n    cattedra.position.z += DEPTH / 1.5;\n    cattedra.scale.set(WIDTH / deltaX, DEPTH / deltaZ, HEIGHT / deltaY);\n\n    const chair = makeChair(newAltitude);\n    chair.rotation.z += Math.PI;\n    chair.position.z -= 70;\n    chair.position.x += 60;\n\n    const deskAndChair = new Three.Object3D();\n    deskAndChair.add(cattedra);\n    deskAndChair.add(chair);\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(deskAndChair, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      deskAndChair.add(bbox);\n    }\n\n    deskAndChair.rotation.y += Math.PI;\n\n    deskAndChair.position.z -= (CHAIR_DEPTH / 2 - (CHAIR_TRANSLATION - CHAIR_DEPTH / 2)) / 2;\n\n    const boundingBoxDeskAndChair = new Three.Box3().setFromObject(deskAndChair);\n\n    const deltaZDeskAndChair = Math.abs(boundingBoxDeskAndChair.max.z - boundingBoxDeskAndChair.min.z);\n\n    deskAndChair.scale.set(1, 1, TOTAL_DEPTH / deltaZDeskAndChair); //Fix Depth problem with the chair\n\n    return deskAndChair;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/areas/area/textures/ceramic-tile.jpg\";","module.exports = __webpack_public_path__ + \"catalog/holes/sash-window/texture.png\";","module.exports = __webpack_public_path__ + \"catalog/holes/sliding-door/slidingDoor.png\";","module.exports = __webpack_public_path__ + \"catalog/items/electrical-panel/electricalPanel.png\";","module.exports = __webpack_public_path__ + \"catalog/areas/area/textures/strand-porcelain.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/image/image.png\";","module.exports = __webpack_public_path__ + \"catalog/lines/wall/textures/bricks-normal.jpg\";","module.exports = __webpack_public_path__ + \"catalog/holes/gate/gate.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/kitchen/logo.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/simple-stair/textures/white-paint.jpg\";","module.exports = __webpack_public_path__ + \"catalog/holes/window-curtain/window.obj\";","module.exports = __webpack_public_path__ + \"catalog/items/sofa/sofa.mtl\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst DEPTH = 20;\n\n//colors\nconst grey = new Three.MeshLambertMaterial({ color: 0xeae6ca });\n\nfunction makeObjectMaxLOD(WIDTH: number, HEIGHT: number) {\n  const OldStyleRadiator = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = DEPTH;\n  const height = HEIGHT;\n  const radius = 2.5;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const holePath1 = new Three.Path();\n  holePath1.moveTo(DEPTH / 6, HEIGHT * .16);\n  holePath1.arc(0, HEIGHT * .07, DEPTH / 8, 0, Math.PI, false);\n  holePath1.arc(DEPTH / 8, -HEIGHT * .15, DEPTH / 8, Math.PI, 0, false);\n  roundedRectShape.holes.push(holePath1);\n\n  const holePath4 = new Three.Path();\n  holePath4.moveTo(DEPTH / 6, HEIGHT * .16);\n  holePath4.arc(0, HEIGHT * 0.725, DEPTH / 8, 0, Math.PI, false);\n  holePath4.arc(DEPTH / 8, -HEIGHT * .15, DEPTH / 8, Math.PI, 0, false);\n  roundedRectShape.holes.push(holePath4);\n\n  const holePath7 = new Three.Path();\n  holePath7.moveTo(DEPTH / 6, HEIGHT * .16);\n  holePath7.arc(0, HEIGHT * .4, DEPTH / 8, 0, Math.PI, false);\n  holePath7.arc(DEPTH / 8, -HEIGHT * .15, DEPTH / 8, Math.PI, 0, false);\n  roundedRectShape.holes.push(holePath7);\n\n  ////////////////////////////////////////////////\n\n  const holePath2 = new Three.Path();\n  holePath2.moveTo(DEPTH / 2, HEIGHT * .2);\n  holePath2.arc(0, HEIGHT * .07, DEPTH / 8, 0, Math.PI, false);\n  holePath2.arc(DEPTH / 8, -HEIGHT * .15, DEPTH / 8, Math.PI, 0, false);\n  roundedRectShape.holes.push(holePath2);\n\n  const holePath5 = new Three.Path();\n  holePath5.moveTo(DEPTH / 2, HEIGHT * .5);\n  holePath5.arc(0, HEIGHT * .0725, DEPTH / 8, 0, Math.PI, false);\n  holePath5.arc(DEPTH / 8, -HEIGHT * .15, DEPTH / 8, Math.PI, 0, false);\n  roundedRectShape.holes.push(holePath5);\n\n  const holePath8 = new Three.Path();\n  holePath8.moveTo(DEPTH / 2, HEIGHT * 1.25);\n  holePath8.arc(0, -HEIGHT * .4, DEPTH / 8, 0, Math.PI, false);\n  holePath8.arc(DEPTH / 8, -HEIGHT * .15, DEPTH / 8, Math.PI, 0, false);\n  roundedRectShape.holes.push(holePath8);\n\n  ////////////////////////////////////////////\n\n  const holePath3 = new Three.Path();\n  holePath3.moveTo(0.85 * DEPTH, HEIGHT * .16);\n  holePath3.arc(0, HEIGHT * .07, DEPTH / 8, 0, Math.PI, false);\n  holePath3.arc(DEPTH / 8, -HEIGHT * .15, DEPTH / 8, Math.PI, 0, false);\n  roundedRectShape.holes.push(holePath3);\n\n  const holePath6 = new Three.Path();\n  holePath6.moveTo(0.85 * DEPTH, HEIGHT * .16);\n  holePath6.arc(0, HEIGHT * .4, DEPTH / 8, 0, Math.PI, false);\n  holePath6.arc(DEPTH / 8, -HEIGHT * .15, DEPTH / 8, Math.PI, 0, false);\n  roundedRectShape.holes.push(holePath6);\n\n  const holePath9 = new Three.Path();\n  holePath9.moveTo(0.85 * DEPTH, HEIGHT * .16);\n  holePath9.arc(0, HEIGHT * .725, DEPTH / 8, 0, Math.PI, false);\n  holePath9.arc(DEPTH / 8, -HEIGHT * .15, DEPTH / 8, Math.PI, 0, false);\n  roundedRectShape.holes.push(holePath9);\n\n  const extrudeSettings = {\n    steps: 1,\n    depth: 4.5,\n    bevelEnabled: false,\n    bevelThickness: .4,\n    bevelSize: .4,\n    bevelSegments: 1\n  };\n\n  for (let i = 2.5; i <= WIDTH - 5; i += 5) {\n    const geometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n    const mesh = new Three.Mesh(geometry, grey);\n    mesh.position.set(i, height / 20, DEPTH);\n    mesh.rotation.y += Math.PI / 2;\n    OldStyleRadiator.add(mesh);\n  }\n\n  for (let i = 10; i <= HEIGHT; i += HEIGHT - 10) {\n    const geometry1 = new Three.CylinderGeometry(DEPTH / 12, DEPTH / 12, WIDTH, 32);\n    const tube = new Three.Mesh(geometry1, grey);\n    tube.rotation.x += Math.PI / 2;\n    tube.rotation.z += Math.PI / 2;\n    tube.position.set(WIDTH / 2, i, DEPTH / 2);\n    OldStyleRadiator.add(tube);\n\n    const geometry2 = new Three.CylinderGeometry(DEPTH / 8, DEPTH / 8, WIDTH - 2.5, 6);\n    const tube2 = new Three.Mesh(geometry2, grey);\n    tube2.rotation.x += Math.PI / 2;\n    tube2.rotation.z += Math.PI / 2;\n    tube2.position.set(WIDTH / 2, i, DEPTH / 2);\n    OldStyleRadiator.add(tube2);\n\n    const geometry3 = new Three.CylinderGeometry(DEPTH / 7, DEPTH / 7, WIDTH - 5, 32);\n    const tube3 = new Three.Mesh(geometry3, grey);\n    tube3.rotation.x += Math.PI / 2;\n    tube3.rotation.z += Math.PI / 2;\n    tube3.position.set(WIDTH / 2, i, DEPTH / 2);\n    OldStyleRadiator.add(tube3);\n  }\n  return OldStyleRadiator\n}\n\nfunction makeObjectMinLOD(WIDTH, HEIGHT) {\n  const OldStyleRadiator = new Three.Mesh();\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = DEPTH;\n  const height = HEIGHT;\n  const radius = 2.5;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 1,\n    depth: 4.5,\n    bevelEnabled: false,\n    bevelThickness: .4,\n    bevelSize: .4,\n    bevelSegments: 1\n  };\n\n\n  for (let i = 2.5; i <= WIDTH - 5; i += 5) {\n    const geometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n    const mesh = new Three.Mesh(geometry, grey);\n    mesh.position.set(i, height / 20, DEPTH);\n    mesh.rotation.y += Math.PI / 2;\n    OldStyleRadiator.add(mesh);\n  }\n\n  for (let i = HEIGHT / 10; i <= HEIGHT; i += HEIGHT - 10) {\n    const geometry1 = new Three.CylinderGeometry(DEPTH / 12, DEPTH / 12, WIDTH, 32);\n    const tube = new Three.Mesh(geometry1, grey);\n    tube.rotation.x += Math.PI / 2;\n    tube.rotation.z += Math.PI / 2;\n    tube.position.set(WIDTH / 2, i, DEPTH / 2);\n    OldStyleRadiator.add(tube);\n\n    const geometry2 = new Three.CylinderGeometry(DEPTH / 8, DEPTH / 8, WIDTH - 2.5, 6);\n    const tube2 = new Three.Mesh(geometry2, grey);\n    tube2.rotation.x += Math.PI / 2;\n    tube2.rotation.z += Math.PI / 2;\n    tube2.position.set(WIDTH / 2, i, DEPTH / 2);\n    OldStyleRadiator.add(tube2);\n\n    const geometry3 = new Three.CylinderGeometry(DEPTH / 7, DEPTH / 7, WIDTH - 5, 32);\n    const tube3 = new Three.Mesh(geometry3, grey);\n    tube3.rotation.x += Math.PI / 2;\n    tube3.rotation.z += Math.PI / 2;\n    tube3.position.set(WIDTH / 2, i, DEPTH / 2);\n    OldStyleRadiator.add(tube3);\n  }\n  return OldStyleRadiator\n}\n\nexport default defineCatalogElement({\n  name: \"radiator-old-style\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'cast iron'],\n    title: \"cast iron radiator\",\n    description: \"cast iron radiator\",\n    image: require('./OldStyleRadiator.png')\n  },\n\n  properties: {\n    width: {\n      label: \"width\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    },\n    height: {\n      label: \"height\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    },\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 20\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const WIDTH = element.properties.width.length;\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" };\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH} style={rect_style} />\n        <text key=\"2\" x=\"0\" y=\"0\" transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const WIDTH = element.properties.width.length;\n    const HEIGHT = element.properties.height.length;\n    const newAltitude = element.properties.altitude.length;\n\n    /********* lod max *************/\n\n    const OldStyleRadiatorMaxLOD = new Three.Object3D();\n    OldStyleRadiatorMaxLOD.add(makeObjectMaxLOD(WIDTH, HEIGHT).clone());\n\n    const value = new Three.Box3().setFromObject(OldStyleRadiatorMaxLOD);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    OldStyleRadiatorMaxLOD.position.z -= DEPTH / 2;\n    OldStyleRadiatorMaxLOD.position.x -= WIDTH / 2;\n    OldStyleRadiatorMaxLOD.position.y += -HEIGHT / 20 + newAltitude;\n    OldStyleRadiatorMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /********* lod min *************/\n\n    const OldStyleRadiatorMinLOD = new Three.Object3D();\n    OldStyleRadiatorMinLOD.add(makeObjectMinLOD(WIDTH, HEIGHT).clone());\n    OldStyleRadiatorMinLOD.position.z -= DEPTH / 2;\n    OldStyleRadiatorMinLOD.position.x -= WIDTH / 2;\n    OldStyleRadiatorMinLOD.position.y += -HEIGHT / 20 + newAltitude;\n    OldStyleRadiatorMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(OldStyleRadiatorMaxLOD, 400);\n    lod.addLevel(OldStyleRadiatorMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/canteen-table/canteen_table.png\";","module.exports = __webpack_public_path__ + \"catalog/items/balcony/balcony.png\";","module.exports = __webpack_public_path__ + \"catalog/items/monitor-pc/monitorPC.png\";","module.exports = __webpack_public_path__ + \"catalog/items/balcony/bricks.jpg\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst material = new Three.MeshLambertMaterial({ color: 0xf5f4f4 });\n\nexport default defineCatalogElement({\n  name: 'square column',\n  prototype: 'items',\n\n  info: {\n    tag: ['structure'],\n    title: 'square column',\n    description: 'column',\n    image: require('./square_column.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    },\n    height: {\n      label: 'height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 300\n      }\n    },\n    width: {\n      label: 'width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 50\n      }\n    },\n    depth: {\n      label: 'depth',\n      type: 'length-measure',\n      defaultValue: {\n        length: 50\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const width = element.properties.width.length;\n    const depth = element.properties.depth.length;\n\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const circleStyle = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' };\n\n    return (\n      <g transform={`translate(${-width / 2},${-depth / 2})`}>\n        <rect key='1' x='0' y='0' width={width} height={depth} style={circleStyle} />\n        <text key='2' x='0' y='0' transform={`translate(${width / 2}, ${depth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const HEIGHT: number = element.properties.height.length;\n    const width: number = element.properties.width.length;\n    const depth: number = element.properties.depth.length;\n    const newAltitude: number = element.properties.altitude.length;\n\n    const column = new Three.Object3D();\n\n    const object = new Three.Mesh(new Three.BoxGeometry(width, HEIGHT, depth, 32), material);\n\n    column.add(object);\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(column, 0x99c3fb);\n      bbox.material.linewidth = 10;\n      bbox.renderOrder = 5000;\n      bbox.material.depthTest = false;\n      column.add(bbox);\n    }\n\n    column.position.y += HEIGHT / 2 + newAltitude;\n    column.position.x += width / 2;\n\n    return column;\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst DEPTH = 10;\n\nconst grey = new Three.MeshLambertMaterial({ color: 0xeae6ca });\n\nfunction makeObjectMaxLOD(newWidth: number, newHeight: number, newDepth: number) {\n  const ModernRadiator = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = 9.5;\n  const height = newHeight - 25;\n  const radius = 2.5;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 1,\n    depth: 2.5,\n    bevelEnabled: false,\n    bevelThickness: .4,\n    bevelSize: .4,\n    bevelSegments: 1\n  };\n\n  for (let i = 5; i <= newWidth - 7.5; i += 10) {\n    const geometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n    const mesh = new Three.Mesh(geometry, grey);\n    mesh.position.set(i, 0, 2.5);\n    ModernRadiator.add(mesh);\n\n    const mesh2 = new Three.Mesh(geometry, grey);\n    mesh2.position.set(i, 5, 0);\n    mesh2.scale.set(1, 1, 1);\n    ModernRadiator.add(mesh2);\n\n    const mesh3 = new Three.Mesh(geometry, grey);\n    mesh3.position.set(i, 5, -2.5);\n    mesh3.scale.set(1, 1.05, 1);\n    ModernRadiator.add(mesh3);\n\n    const mesh4 = new Three.Mesh(geometry, grey);\n    mesh4.position.set(i, 6, -4);\n    mesh4.scale.set(1, 1.2, 1);\n    ModernRadiator.add(mesh4);\n\n    const mesh5 = new Three.Mesh(geometry, grey);\n    mesh5.position.set(i + 6, newHeight - 25, -2.5);\n    mesh5.rotation.y -= Math.PI / 2;\n    mesh5.scale.set(.8, .18, .8);\n    ModernRadiator.add(mesh5);\n\n    const mesh6 = new Three.Mesh(geometry, grey);\n    mesh6.position.set(i, newHeight - 5, 5.5);\n    mesh6.rotation.x -= Math.PI / 2;\n    mesh6.scale.set(1, .13, .8);\n    ModernRadiator.add(mesh6);\n\n    const mesh7 = new Three.Mesh(geometry, grey);\n    mesh7.position.set(i, newHeight - 17.5, -2);\n    mesh7.rotation.x += Math.PI / 4;\n    mesh7.scale.set(1, .14, .4);\n    ModernRadiator.add(mesh7);\n\n    const mesh8 = new Three.Mesh(geometry, grey);\n    mesh8.position.set(i, newHeight - 11, 5);\n    mesh8.scale.set(1, .1, .4);\n    ModernRadiator.add(mesh8);\n  }\n\n  for (let i = 5; i <= newHeight; i += newHeight - 12.5) {\n    const geometry1 = new Three.CylinderGeometry(newDepth / 6, newDepth / 6, newWidth, 32);\n    const tube = new Three.Mesh(geometry1, grey);\n    tube.rotation.x += Math.PI / 2;\n    tube.rotation.z += Math.PI / 2;\n    tube.position.set(newWidth / 2, i, newDepth / 6);\n    ModernRadiator.add(tube);\n\n    const geometry2 = new Three.CylinderGeometry(newDepth / 4, newDepth / 4, newWidth - 2.5, 6);\n    const tube2 = new Three.Mesh(geometry2, grey);\n    tube2.rotation.x += Math.PI / 2;\n    tube2.rotation.z += Math.PI / 2;\n    tube2.position.set(newWidth / 2, i, newDepth / 6);\n    ModernRadiator.add(tube2);\n\n    const geometry3 = new Three.CylinderGeometry(newDepth / 3.5, newDepth / 3.5, newWidth - 5, 32);\n    const tube3 = new Three.Mesh(geometry3, grey);\n    tube3.rotation.x += Math.PI / 2;\n    tube3.rotation.z += Math.PI / 2;\n    tube3.position.set(newWidth / 2, i, newDepth / 6);\n    ModernRadiator.add(tube3);\n  }\n  return ModernRadiator\n}\n\nfunction makeObjectMinLOD(newWidth: number, newHeight: number, newDepth: number) {\n  const ModernRadiator = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = 9.5;\n  const height = newHeight - 25;\n  const radius = 0.25;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 1,\n    depth: 2.5,\n    bevelEnabled: false,\n    bevelThickness: .4,\n    bevelSize: .4,\n    bevelSegments: 1\n  };\n\n  for (let i = 5; i <= newWidth - 7.5; i += 10) {\n    const geometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n    const mesh = new Three.Mesh(geometry, grey);\n    mesh.position.set(i, 0, 2.5);\n    ModernRadiator.add(mesh);\n\n    const mesh3 = new Three.Mesh(geometry, grey);\n    mesh3.position.set(i, 5, -2.5);\n    mesh3.scale.set(1, 1.05, 1);\n    ModernRadiator.add(mesh3);\n\n    const mesh4 = new Three.Mesh(geometry, grey);\n    mesh4.position.set(i, 6, -4);\n    mesh4.scale.set(1, 1.2, 1);\n    ModernRadiator.add(mesh4);\n\n    const mesh6 = new Three.Mesh(geometry, grey);\n    mesh6.position.set(i, newHeight - 5, 5.5);\n    mesh6.rotation.x -= Math.PI / 2;\n    mesh6.scale.set(1, .13, .8);\n    ModernRadiator.add(mesh6);\n\n    const mesh7 = new Three.Mesh(geometry, grey);\n    mesh7.position.set(i, newHeight - 17.5, -2);\n    mesh7.rotation.x += Math.PI / 4;\n    mesh7.scale.set(1, .14, .4);\n    ModernRadiator.add(mesh7);\n\n    const mesh8 = new Three.Mesh(geometry, grey);\n    mesh8.position.set(i, newHeight - 11, 5);\n    mesh8.scale.set(1, .1, .4);\n    ModernRadiator.add(mesh8);\n  }\n\n\n  for (let i = newDepth / 6; i <= newHeight; i += newHeight - 10) {\n    const geometry1 = new Three.CylinderGeometry(newDepth / 6, newDepth / 6, newWidth, 8);\n    const tube = new Three.Mesh(geometry1, grey);\n    tube.rotation.x += Math.PI / 2;\n    tube.rotation.z += Math.PI / 2;\n    tube.position.set(newWidth / 2, i, newDepth / 6);\n    ModernRadiator.add(tube);\n  }\n  return ModernRadiator\n}\n\nexport default defineCatalogElement({\n  name: \"termosifone_alluminio\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"aluminum radiator\",\n    description: \"aluminum radiator\",\n    image: require('./ModernStyleRadiator.png')\n  },\n\n  properties: {\n    width: {\n      label: \"width\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    },\n    height: {\n      label: \"height\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    },\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 20\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const WIDTH = element.properties.width.length;\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" };\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH} style={rect_style} />\n        <text key=\"2\" x=\"0\" y=\"0\" transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newWidth = element.properties.width.length;\n    const newDepth = DEPTH;\n    const newHeight = element.properties.height.length;\n    const newAltitude = element.properties.altitude.length;\n\n    /************ lod max **************/\n\n    const ModernRadiatorMaxLOD = new Three.Object3D();\n    ModernRadiatorMaxLOD.add(makeObjectMaxLOD(newWidth, newHeight, newDepth).clone());\n\n    const value = new Three.Box3().setFromObject(ModernRadiatorMaxLOD);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    ModernRadiatorMaxLOD.position.x -= newWidth / 2;\n    ModernRadiatorMaxLOD.position.y += 5 + newAltitude;\n    ModernRadiatorMaxLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n\n    // let bigger = new Three.Object3D();\n    //\n    // bigger.add(ModernRadiator);\n    //\n    // let pivot = new Three.Mesh(new Three.SphereGeometry(10), new Three.MeshBasicMaterial({color:0xff0000}));\n    // bigger.add(pivot);\n\n    /************ lod min **************/\n\n    const ModernRadiatorMinLOD = new Three.Object3D();\n    ModernRadiatorMinLOD.add(makeObjectMinLOD(newWidth, newHeight, newDepth).clone());\n    ModernRadiatorMinLOD.position.x -= newWidth / 2;\n    ModernRadiatorMinLOD.position.y += 5 + newAltitude;\n    ModernRadiatorMinLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(ModernRadiatorMaxLOD, 200);\n    lod.addLevel(ModernRadiatorMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 40;\nconst DEPTH = 40;\nconst HEIGHT = 70;\n\nexport default defineCatalogElement({\n  name: \"recycling-bins\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings'],\n    title: \"recycling bins\",\n    description: \"Recycling-bins\",\n    image: require('./recycling-bins.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n\n    return (\n      <g transform={`translate(${-WIDTH * 3},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH} style={rect_style} />\n        <rect key=\"2\" x=\"50\" y=\"0\" width={WIDTH} height={DEPTH} style={rect_style} />\n        <rect key=\"3\" x=\"100\" y=\"0\" width={WIDTH} height={DEPTH} style={rect_style} />\n        <rect key=\"4\" x=\"150\" y=\"0\" width={WIDTH} height={DEPTH} style={rect_style} />\n        <rect key=\"5\" x=\"200\" y=\"0\" width={WIDTH} height={DEPTH} style={rect_style} />\n        <line key=\"7\" x1={3 * WIDTH} x2={3 * WIDTH} y1={DEPTH} y2={1.5 * DEPTH} style={arrow_style} />\n        <line key=\"8\" x1={2.75 * WIDTH} x2={3 * WIDTH} y1={1.2 * DEPTH} y2={1.5 * DEPTH} style={arrow_style} />\n        <line key=\"9\" x1={3 * WIDTH} x2={3.25 * WIDTH} y1={1.5 * DEPTH} y2={1.2 * DEPTH} style={arrow_style} />\n        <text key=\"10\" x=\"0\" y=\"0\" transform={`translate(${WIDTH * 3}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {this.info.description}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const makeBin = (color: number) => {\n      const cestino_carta = new Three.Object3D();\n\n      const newWidth = 1;\n      const newDepth = 1;\n      const newHeight = 1.5;\n\n      const grey = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n\n      const coloredMaterial = new Three.MeshLambertMaterial({ color: color });\n\n      const plane1Geometry = new Three.BoxGeometry(newWidth, newHeight, newDepth);\n      const plane1 = new Three.Mesh(plane1Geometry, coloredMaterial);\n      plane1.position.y = newHeight / 2;\n      cestino_carta.add(plane1);\n\n      const geometry_legs = new Three.CylinderGeometry(newWidth / 2, newWidth / 2, newWidth, 32);\n      const p1 = new Three.Mesh(geometry_legs, coloredMaterial);\n      p1.rotation.x += Math.PI / 2;\n      p1.position.set(0, .75, 0);\n      plane1.add(p1);\n\n      const points: Three.Vector2[] = [];\n\n      points.push(new Three.Vector2(0.4, -0.3));\n      points.push(new Three.Vector2(0.4, -0.3));\n      points.push(new Three.Vector2(0.4, 0.3));\n      points.push(new Three.Vector2(0.4, 0.3));\n\n      const etichettaGeometry = new Three.LatheGeometry(points, 200, 0, Math.PI / 2);\n      const etichetta = new Three.Mesh(etichettaGeometry, grey);\n      etichetta.rotation.y += Math.PI;\n      etichetta.rotation.x += Math.PI / 2;\n      etichetta.position.set(-.1, .8, 0);\n      plane1.add(etichetta);\n\n      const texture = new Three.TextureLoader().load(require('./recycle.png'));\n\n      const planeGeometry2 = new Three.PlaneGeometry(.5, .5);\n      const planeMaterial2 = new Three.MeshLambertMaterial({ map: texture, transparent: true });\n      const plane2 = new Three.Mesh(planeGeometry2, planeMaterial2);\n      plane2.rotation.y += -Math.PI / 2;\n      plane2.position.set(-.51, .3, 0);\n\n      plane1.add(plane2);\n\n      const value = new Three.Box3().setFromObject(cestino_carta);\n\n      const deltaX = Math.abs(value.max.x - value.min.x);\n      const deltaY = Math.abs(value.max.y - value.min.y);\n      const deltaZ = Math.abs(value.max.z - value.min.z);\n\n\n      const newAltitude = element.properties.altitude.length;\n\n      cestino_carta.position.y += newAltitude;\n      cestino_carta.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n      cestino_carta.rotation.y -= Math.PI / 2;\n\n      return cestino_carta;\n    };\n\n    const bins = new Three.Object3D();\n\n    // I create all trash bins\n\n    const metalBin = makeBin(0x0000ff);\n    const yellowBin = makeBin(0xffff00);\n    const brownBin = makeBin(0xeacb9d);\n    const paperBin = makeBin(0xffffff);\n    const glassBin = makeBin(0x00ff00);\n\n    yellowBin.position.x += 50;\n    brownBin.position.x += 100;\n    paperBin.position.x += 150;\n    glassBin.position.x += 200;\n\n    bins.add(metalBin);\n    bins.add(yellowBin);\n    bins.add(brownBin);\n    bins.add(paperBin);\n    bins.add(glassBin);\n\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(bins, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      bins.add(bbox);\n    }\n\n    bins.position.x -= 100;\n\n    return bins;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/fire-extinguisher/fire-extinguisher.png\";","module.exports = __webpack_public_path__ + \"catalog/items/naspo/naspofront.png\";","import React from 'react';\nimport * as Three from 'three';\nimport { loadObjWithMaterial } from '../../utils/load-obj';\nimport { Group, Object3DEventMap } from 'three';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nlet cached3DWindow: Group<Object3DEventMap>;\n\nexport default defineCatalogElement({\n  name: \"sash window\",\n  prototype: \"holes\",\n\n  info: {\n    title: \"sash window\",\n    tag: ['window'],\n    description: \"Sash window\",\n    image: require('./window.png')\n  },\n\n  properties: {\n    width: {\n      label: \"Width\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 90\n      }\n    },\n    height: {\n      label: \"Height\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    },\n    altitude: {\n      label: \"Altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 90\n      }\n    },\n    thickness: {\n      label: \"Thickness\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 10\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const STYLE_HOLE_BASE = { stroke: \"#000\", strokeWidth: \"3px\", fill: \"#000\" };\n    const STYLE_HOLE_SELECTED = { stroke: \"#0096fd\", strokeWidth: \"3px\", fill: \"#0096fd\", cursor: \"move\" };\n    //let line = layer.lines[hole.line];\n    //let epsilon = line.properties.thickness / 2;\n\n    const epsilon = 3;\n\n    const holeWidth = element.properties.width.length;\n    const holePath = `M${0} ${-epsilon}  L${holeWidth} ${-epsilon}  L${holeWidth} ${epsilon}  L${0} ${epsilon}  z`;\n    const holeStyle = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE;\n    const length = element.properties.width.length;\n    return (\n      <g transform={`translate(${-length / 2}, 0)`}>\n        <path key=\"1\" d={holePath} style={holeStyle} />\n        <line key=\"2\" x1={holeWidth / 2} y1={-10 - epsilon} x2={holeWidth / 2} y2={10 + epsilon} style={holeStyle} />\n      </g>\n    );\n  },\n\n  render3D: async function (element, layer, scene) {\n    const onLoadItem = (object: Three.Group<Three.Object3DEventMap>) => {\n      const boundingBox = new Three.Box3().setFromObject(object);\n\n      const initialWidth = boundingBox.max.x - boundingBox.min.x;\n      const initialHeight = boundingBox.max.y - boundingBox.min.y;\n      const initialThickness = boundingBox.max.z - boundingBox.min.z;\n\n      if (element.selected) {\n        const box = new Three.BoxHelper(object, 0x99c3fb);\n        box.material.linewidth = 2;\n        box.material.depthTest = false;\n        box.renderOrder = 1000;\n        object.add(box);\n      }\n\n      const width = element.properties.width.length;\n      const height = element.properties.height.length;\n      const thickness = element.properties.thickness.length;\n\n      object.scale.set(width / initialWidth, height / initialHeight,\n        thickness / initialThickness);\n\n      return object;\n    };\n\n    if (cached3DWindow) {\n      return onLoadItem(cached3DWindow.clone());\n    }\n\n    // TODO: better scaling for frame and inner grid\n\n    const mtl = require('./sash-window.mtl');\n    const obj = require('./sash-window.obj');\n    const img = require('./texture.png');\n    const resourcePath = img.substr(0, img.lastIndexOf(\"/\")) + \"/\";\n\n    cached3DWindow = await loadObjWithMaterial(mtl, obj, resourcePath);\n    return onLoadItem(cached3DWindow.clone());\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/child-chair-desk/chairDesk.png\";","module.exports = __webpack_public_path__ + \"catalog/items/trash/trash.png\";","module.exports = __webpack_public_path__ + \"catalog/items/bookcase/wood.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/fridge/fridge.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 90;\nconst DEPTH = 40;\nconst HEIGHT = 30;\n\nconst grey = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\ngrey.side = Three.DoubleSide;\nconst darkGrey = new Three.MeshLambertMaterial({ color: 0x808287 });\ndarkGrey.side = Three.DoubleSide;\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nblack.side = Three.DoubleSide;\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const air_conditioner = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = .15;\n  const height = .6;\n  const radius = 0.15;\n\n  roundedRectShape.moveTo(x, y);\n  roundedRectShape.lineTo(x + width, y);\n  roundedRectShape.lineTo(x + width + radius, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width + radius, y + height, x + width / 2, y + height);\n  roundedRectShape.lineTo(x + width / 2, y + height);\n  roundedRectShape.lineTo(x, y + height);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 1,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const bodyGeometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const body = new Three.Mesh(bodyGeometry, grey);\n\n  body.position.set(-.11, 1.2, 0);\n  body.rotation.z += Math.PI;\n  air_conditioner.add(body);\n\n  let j = 1.18;\n\n  for (let i = -.30; i > -.36; i -= .005) {\n\n    const gridHorizontalGeometry = new Three.BoxGeometry(.001, .025, .705);\n    const gridHorizontal = new Three.Mesh(gridHorizontalGeometry, darkGrey);\n    gridHorizontal.position.set(i, j, .5);\n    gridHorizontal.rotation.z += Math.PI / 4;\n    air_conditioner.add(gridHorizontal);\n    j -= .005\n  }\n\n  for (let k = .15; k < .87; k += .05) {\n    const gridVerticalGeometry = new Three.BoxGeometry(.079, .025, .005);\n    const gridVertical = new Three.Mesh(gridVerticalGeometry, darkGrey);\n    gridVertical.position.set(-.324, 1.148, k);\n    gridVertical.rotation.z += Math.PI / 4;\n    air_conditioner.add(gridVertical);\n  }\n\n  const roundedRectShape2 = new Three.Shape();\n\n  const x2 = 0;\n  const y2 = 0;\n  const width2 = .2;\n  const height2 = .4;\n  const radius2 = 0.15;\n\n  roundedRectShape2.moveTo(x2, y2);\n  roundedRectShape2.lineTo(x2 + width2, y2);\n  roundedRectShape2.quadraticCurveTo(x2 + width2 + radius2, y2 + height2, x2 + width2 / 2, y2 + height2);\n  roundedRectShape2.lineTo(x2 + width2 / 2, y2 + height2);\n  roundedRectShape2.quadraticCurveTo(x2 + width2 + radius2, y2 + height2 / 4, x2, y2);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: 1,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const frontCoverGeometry = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n  const frontCover = new Three.Mesh(frontCoverGeometry, grey);\n\n  frontCover.position.set(-.2, 1.1, 0);\n  frontCover.rotation.z += Math.PI;\n  air_conditioner.add(frontCover);\n\n  const roundedRectShape3 = new Three.Shape();\n\n  const x3 = 0;\n  const y3 = 0;\n  const width3 = .1;\n  const height3 = .1;\n  const radius3 = 0.15;\n\n  roundedRectShape3.moveTo(x3, y3);\n  roundedRectShape3.quadraticCurveTo(x3 - width3 / 2 + radius3 / 2, y3 - height3, x3 + width3, y3);\n  roundedRectShape3.lineTo(x3 + width3, y3);\n  roundedRectShape3.quadraticCurveTo(x3 + width3 / 2 + radius3 / 2, y3 + 2 * height3, x3 + width3 / 2, y3 + height3);\n  roundedRectShape3.lineTo(x3 + width3 / 2, y3 + height3);\n  roundedRectShape3.quadraticCurveTo(x3 + width3 / 4, y3 + height3 / 6, x3, y3);\n\n  const extrudeSettings3 = {\n    steps: 2,\n    depth: .1,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const flapSupportGeometry = new Three.ExtrudeGeometry(roundedRectShape3, extrudeSettings3);\n  const flapLeft = new Three.Mesh(flapSupportGeometry, darkGrey);\n\n  flapLeft.position.set(-.27, .62, 0.1);\n  flapLeft.rotation.y += Math.PI;\n  flapLeft.rotation.z -= Math.PI / 9;\n  air_conditioner.add(flapLeft);\n\n  const flapRight = new Three.Mesh(flapSupportGeometry, darkGrey);\n\n  flapRight.position.set(-.27, .62, 1);\n  flapRight.rotation.y += Math.PI;\n  flapRight.rotation.z -= Math.PI / 9;\n  air_conditioner.add(flapRight);\n\n  const points2: Three.Vector2[] = [];\n\n  points2.push(new Three.Vector2(.5, 0));\n  points2.push(new Three.Vector2(.5, 0));\n  points2.push(new Three.Vector2(.5, .8));\n  points2.push(new Three.Vector2(.5, .8));\n\n  const flapGeometry = new Three.LatheGeometry(points2, 200, Math.PI / 2, Math.PI / 16);\n  const flap1 = new Three.Mesh(flapGeometry, darkGrey);\n\n  flap1.position.set(-.4, .18, .9);\n  flap1.rotation.z += Math.PI / 2;\n  flap1.rotation.y += -Math.PI / 2;\n\n  air_conditioner.add(flap1);\n\n  const flap2 = new Three.Mesh(flapGeometry, darkGrey);\n\n  flap2.position.set(-.4, .15, .9);\n  flap2.rotation.z += Math.PI / 2;\n  flap2.rotation.y += -Math.PI / 2;\n\n  air_conditioner.add(flap2);\n\n  return air_conditioner\n}\n\nfunction makeObjectMinLOD() {\n  const air_conditioner = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = .15;\n  const height = .6;\n  const radius = 0.15;\n\n  roundedRectShape.moveTo(x, y);\n  roundedRectShape.lineTo(x + width, y);\n  roundedRectShape.lineTo(x + width + radius, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width + radius, y + height, x + width / 2, y + height);\n  roundedRectShape.lineTo(x + width / 2, y + height);\n  roundedRectShape.lineTo(x, y + height);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 1,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const bodyGeometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const body = new Three.Mesh(bodyGeometry, grey);\n\n  body.position.set(-.11, 1.2, 0);\n  body.rotation.z += Math.PI;\n  air_conditioner.add(body);\n\n  const roundedRectShape2 = new Three.Shape();\n\n  const x2 = 0;\n  const y2 = 0;\n  const width2 = .2;\n  const height2 = .4;\n  const radius2 = 0.15;\n\n  roundedRectShape2.moveTo(x2, y2);\n  roundedRectShape2.lineTo(x2 + width2, y2);\n  roundedRectShape2.quadraticCurveTo(x2 + width2 + radius2, y2 + height2, x2 + width2 / 2, y2 + height2);\n  roundedRectShape2.lineTo(x2 + width2 / 2, y2 + height2);\n  roundedRectShape2.quadraticCurveTo(x2 + width2 + radius2, y2 + height2 / 4, x2, y2);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: 1,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const frontCoverGeometry = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n  const frontCover = new Three.Mesh(frontCoverGeometry, grey);\n\n  frontCover.position.set(-.2, 1.1, 0);\n  frontCover.rotation.z += Math.PI;\n  air_conditioner.add(frontCover);\n\n  return air_conditioner\n}\n\nexport default defineCatalogElement({\n  name: 'conditioner',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: 'air conditioner',\n    description: 'air conditioner',\n    image: require('./air_conditioner.png')\n  },\n  properties: {\n    altitude: {\n      label: 'quota',\n      type: 'length-measure',\n      defaultValue: {\n        length: 220\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' }} />\n        <text key='2' x='0' y='0'\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /*************** lod max *******************/\n\n    const air_conditionerMaxLOD = new Three.Object3D();\n    air_conditionerMaxLOD.add(objectMaxLOD.clone());\n\n    const value = new Three.Box3().setFromObject(air_conditionerMaxLOD);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    air_conditionerMaxLOD.position.x += WIDTH / 2.2;\n    air_conditionerMaxLOD.position.z += DEPTH / 1.2;\n    air_conditionerMaxLOD.position.y += newAltitude;\n    air_conditionerMaxLOD.rotation.y += -Math.PI / 2;\n    air_conditionerMaxLOD.scale.set(WIDTH / deltaZ, HEIGHT / deltaY, DEPTH / deltaX / 1.4);\n\n\n    /*************** lod min *******************/\n\n    const air_conditionerMinLOD = new Three.Object3D();\n    air_conditionerMinLOD.add(objectMinLOD.clone());\n    air_conditionerMinLOD.position.x += WIDTH / 2.2;\n    air_conditionerMinLOD.position.z += DEPTH / 1.2;\n    air_conditionerMinLOD.position.y += newAltitude;\n    air_conditionerMinLOD.rotation.y += -Math.PI / 2;\n    air_conditionerMinLOD.scale.set(WIDTH / deltaZ, HEIGHT / deltaY, DEPTH / deltaX / 1.4);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(air_conditionerMaxLOD, 200);\n    lod.addLevel(air_conditionerMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/schneider/monitor.png\";","module.exports = __webpack_public_path__ + \"catalog/items/monitor-pc/power.jpg\";","module.exports = __webpack_public_path__ + \"catalog/lines/wall/textures/painted-normal.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/school-desk/wood.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/three-phase-panel/threePhasePanel.png\";","module.exports = __webpack_public_path__ + \"catalog/items/coat-hook/wood.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/fire-extinguisher/gage-image.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst white = new Three.MeshLambertMaterial({ color: 0xFFFFFF });\nconst grey = new Three.MeshLambertMaterial({ color: 0xCCCCCC });\n\nfunction makeObjectMaxLOD(newWidth, newHeight, newDepth) {\n  const projector = new Three.Mesh();\n  const radius = 0.5;\n\n  const geometry = new Three.CylinderGeometry(radius, radius, newWidth, 32, 32, false, 0, Math.PI);\n  const mesh = new Three.Mesh(geometry, grey);\n  mesh.position.set(newWidth / 2, newHeight / 2.75, 0);\n  mesh.rotation.z += Math.PI / 2;\n  mesh.rotation.x += Math.PI;\n  projector.add(mesh);\n\n  const g1 = new Three.PlaneGeometry(2 * radius, newWidth);\n  const m1 = new Three.Mesh(g1, grey);\n  m1.rotation.z += Math.PI / 2;\n  m1.rotation.x -= Math.PI / 2;\n  m1.position.set(newWidth / 2, newHeight / 2.75, 0);\n  projector.add(m1);\n\n  const geometry2 = new Three.BoxGeometry(newWidth - newWidth / 20, newHeight - newHeight / 8, newDepth / 20);\n  const mesh2 = new Three.Mesh(geometry2, white);\n  mesh2.position.set(newWidth / 2, 0.8 * newHeight, 0);\n  projector.add(mesh2);\n\n  const geometry3 = new Three.BoxGeometry(newWidth, newHeight / 50, newDepth / 20);\n  const mesh3 = new Three.Mesh(geometry3, grey);\n  mesh3.position.set(newWidth / 2, newHeight + newHeight / 4, 0);\n  projector.add(mesh3);\n\n  const geometry4 = new Three.BoxGeometry(newWidth, newDepth / 20, newHeight / 20);\n  const mesh4 = new Three.Mesh(geometry4, grey);\n  mesh4.rotation.x += Math.PI / 2;\n  mesh4.position.set(newWidth / 2, newHeight + newHeight / 4.25, newDepth / 20);\n  projector.add(mesh4);\n\n  const mesh5 = new Three.Mesh(geometry4, grey);\n  mesh5.rotation.x += Math.PI / 2;\n  mesh5.position.set(newWidth / 2, newHeight + newHeight / 4.25, -newDepth / 20);\n  projector.add(mesh5);\n\n  return projector\n}\n\nfunction makeObjectMinLOD(newWidth, newHeight, newDepth) {\n  const projector = new Three.Mesh();\n\n  const radius = 0.5;\n\n  const geometry = new Three.CylinderGeometry(radius, radius, newWidth, 32, 32, false, 0, Math.PI);\n  const mesh = new Three.Mesh(geometry, grey);\n  mesh.position.set(newWidth / 2, newHeight / 2.75, 0);\n  mesh.rotation.z += Math.PI / 2;\n  mesh.rotation.x += Math.PI;\n  projector.add(mesh);\n\n  const g1 = new Three.PlaneGeometry(2 * radius, newWidth);\n  const m1 = new Three.Mesh(g1, grey);\n  m1.rotation.z += Math.PI / 2;\n  m1.rotation.x -= Math.PI / 2;\n  m1.position.set(newWidth / 2, newHeight / 2.75, 0);\n  projector.add(m1);\n\n  const geometry2 = new Three.BoxGeometry(newWidth - newWidth / 20, newHeight - newHeight / 8, newDepth / 20);\n  const mesh2 = new Three.Mesh(geometry2, white);\n  mesh2.position.set(newWidth / 2, 0.8 * newHeight, 0);\n  projector.add(mesh2);\n\n  const geometry3 = new Three.BoxGeometry(newWidth, newHeight / 50, newDepth / 20);\n  const mesh3 = new Three.Mesh(geometry3, grey);\n  mesh3.position.set(newWidth / 2, newHeight + newHeight / 4, 0);\n  projector.add(mesh3);\n\n  const geometry4 = new Three.BoxGeometry(newWidth, newDepth / 20, newHeight / 20);\n  const mesh4 = new Three.Mesh(geometry4, grey);\n  mesh4.rotation.x += Math.PI / 2;\n  mesh4.position.set(newWidth / 2, newHeight + newHeight / 4.25, newDepth / 20);\n  projector.add(mesh4);\n\n  const mesh5 = new Three.Mesh(geometry4, grey);\n  mesh5.rotation.x += Math.PI / 2;\n  mesh5.position.set(newWidth / 2, newHeight + newHeight / 4.25, -newDepth / 20);\n  projector.add(mesh5);\n\n  return projector\n}\n\nexport default defineCatalogElement({\n  name: \"projector\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'wood', 'metal'],\n    title: \"projector\",\n    description: \"projector\",\n    image: require('./projector.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    },\n    width: {\n      label: \"width\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 300\n      }\n    },\n    height: {\n      label: \"height\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 150\n      }\n    },\n    depth: {\n      label: \"depth\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 10\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const newWidth = element.properties.width.length;\n    const newDepth = element.properties.depth.length;\n\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" };\n\n    return (\n\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={newWidth} height={newDepth} style={rect_style} />\n        <text key=\"2\" x=\"0\" y=\"0\" transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n    const newWidth = element.properties.width.length;\n    const newHeight = element.properties.height.length;\n    const newDepth = element.properties.depth.length;\n\n    /*********** lod max ***************/\n\n    const projectorMaxLOD = new Three.Object3D();\n    projectorMaxLOD.add(makeObjectMaxLOD(newWidth, newHeight, newDepth).clone());\n\n    const value = new Three.Box3().setFromObject(projectorMaxLOD);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    projectorMaxLOD.rotation.y += Math.PI;\n    projectorMaxLOD.position.y += -newHeight / 3.2 + newAltitude;\n    projectorMaxLOD.position.x += newWidth / 2;\n    projectorMaxLOD.position.z += newDepth / 4;\n    projectorMaxLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n\n    /*********** lod min *****************/\n\n    const projectorMinLOD = new Three.Object3D();\n    projectorMinLOD.add(makeObjectMinLOD(newWidth, newHeight, newDepth).clone());\n    projectorMinLOD.rotation.y += Math.PI;\n    projectorMinLOD.position.y += -newHeight / 3.2 + newAltitude;\n    projectorMinLOD.position.x += newWidth / 2;\n    projectorMinLOD.position.z += newDepth / 4;\n    projectorMinLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(projectorMaxLOD, 200);\n    lod.addLevel(projectorMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/desk/desk.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 50;\nconst DEPTH = 50;\nconst HEIGHT = 180;\n\nconst blackMaterial = new Three.MeshLambertMaterial({ color: 0x4B4B4B });\nconst greyMaterial = new Three.MeshLambertMaterial({ color: 0xC0C0C0 });\nconst blueMaterial = new Three.MeshLambertMaterial({ color: 0x3399FF, transparent: true, opacity: 0.8 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const hanger = new Three.Mesh();\n\n  //base\n  const base_geom = new Three.CylinderGeometry(0.09, 0.25, 0.08, 20, 2, true);\n  blackMaterial.side = Three.DoubleSide;\n  const base = new Three.Mesh(base_geom, blackMaterial);\n  base.position.set(0, 0.04, 0);\n\n  const base2_geom = new Three.CylinderGeometry(0.09, 0.01, 0.03, 20, 2, true);\n  const base2 = new Three.Mesh(base2_geom, blackMaterial);\n  base2.position.set(0, 0.015 + 0.05, 0);\n\n  //central body\n  const body_geom = new Three.CylinderGeometry(0.03, 0.03, 2, 32, 32);\n  const body = new Three.Mesh(body_geom, greyMaterial);\n  body.position.set(0, 1, 0);\n\n  //umbrella base\n  const g_umbrella_base = new Three.TorusGeometry(0.045, 0.02, 32, 32);\n\n  const umbrella_base = new Three.Mesh(g_umbrella_base, blueMaterial);\n  umbrella_base.rotation.x = Math.PI / 2;\n  umbrella_base.position.set(0, 0.7, 0);\n\n  const g_umbrella = new Three.TorusGeometry(0.06, 0.015, 32, 32);\n  const umbrella: Three.Mesh[] = [];\n\n  for (let i = 0; i < 4; i++) {\n    umbrella[i] = new Three.Mesh(g_umbrella, blueMaterial);\n    umbrella[i].rotation.x = Math.PI / 2;\n    umbrella[i].position.y = 0.7;\n  }\n\n  umbrella[0].position.x = 0.1;\n  umbrella[1].position.z = 0.1;\n  umbrella[2].position.x = -0.1;\n  umbrella[3].position.z = -0.1;\n\n  //hooks\n  const g_hook_body = new Three.CylinderGeometry(0.015, 0.015, 0.17, 32, 32);\n\n  const g_hook = new Three.CylinderGeometry(0.05, 0.05, 0.02, 32, 32);\n\n  const hooks: Three.Object3D<Three.Object3DEventMap>[] = [];\n\n  for (let i = 0; i < 8; i++) {\n    hooks[i] = new Three.Object3D();\n    hooks[i].rotation.x = Math.PI / 2;\n    hooks[i].position.set(0, 1.7, 0);\n\n    const hook_body = new Three.Mesh(g_hook_body, greyMaterial);\n    hooks[i].add(hook_body);\n\n    const hook = new Three.Mesh(g_hook, blueMaterial);\n    hook_body.add(hook);\n    hook.position.y = 0.085;\n\n    hooks[i].rotation.z = 45 * i * Math.PI / 180;\n    hook_body.position.y = 0.115;\n\n    if ((i % 2) === 1)\n      hooks[i].position.y += 0.2;\n  }\n\n  hanger.add(base);\n  hanger.add(base2);\n  hanger.add(body);\n  hanger.add(umbrella_base);\n\n  for (let i = 0; i < 4; i++) {\n    hanger.add(umbrella[i]);\n  }\n\n  for (let i = 0; i < 8; i++) {\n    hanger.add(hooks[i]);\n  }\n  return hanger;\n}\n\nfunction makeObjectMinLOD() {\n  const hanger = new Three.Mesh();\n\n  //base\n  const base_geom = new Three.CylinderGeometry(0.09, 0.25, 0.08, 20, 2, true);\n  blackMaterial.side = Three.DoubleSide;\n  const base = new Three.Mesh(base_geom, blackMaterial);\n  base.position.set(0, 0.04, 0);\n\n  const base2_geom = new Three.CylinderGeometry(0.09, 0.01, 0.03, 20, 2, true);\n  const base2 = new Three.Mesh(base2_geom, blackMaterial);\n  base2.position.set(0, 0.015 + 0.05, 0);\n\n  //central body\n  const body_geom = new Three.CylinderGeometry(0.03, 0.03, 2, 8, 8);\n  const body = new Three.Mesh(body_geom, greyMaterial);\n  body.position.set(0, 1, 0);\n\n  //umbrella support\n  const g_umbrella_base = new Three.TorusGeometry(0.045, 0.02, 8, 8);\n  const m_umbrella = new Three.MeshLambertMaterial({\n    color: 0x3399FF,\n    transparent: true,\n    opacity: 0.8\n  });\n  const umbrella_base = new Three.Mesh(g_umbrella_base, m_umbrella);\n  umbrella_base.rotation.x = Math.PI / 2;\n  umbrella_base.position.set(0, 0.7, 0);\n\n  const g_umbrella = new Three.TorusGeometry(0.06, 0.015, 8, 8);\n  const umbrella: Three.Mesh[] = [];\n\n  for (let i = 0; i < 4; i++) {\n    umbrella[i] = new Three.Mesh(g_umbrella, m_umbrella);\n    umbrella[i].rotation.x = Math.PI / 2;\n    umbrella[i].position.y = 0.7;\n  }\n\n  umbrella[0].position.x = 0.1;\n  umbrella[1].position.z = 0.1;\n  umbrella[2].position.x = -0.1;\n  umbrella[3].position.z = -0.1;\n\n  //hooks\n  const g_hook_body = new Three.CylinderGeometry(0.015, 0.015, 0.17, 8, 8);\n\n  const g_hook = new Three.CylinderGeometry(0.05, 0.05, 0.02, 8, 8);\n\n  const hooks: Three.Object3D<Three.Object3DEventMap>[] = [];\n\n  for (let i = 0; i < 8; i++) {\n    hooks[i] = new Three.Object3D();\n    hooks[i].rotation.x = Math.PI / 2;\n    hooks[i].position.set(0, 1.7, 0);\n\n    const hook_body = new Three.Mesh(g_hook_body, greyMaterial);\n    hooks[i].add(hook_body);\n\n    const hook = new Three.Mesh(g_hook, m_umbrella);\n    hook_body.add(hook);\n    hook.position.y = 0.085;\n\n    hooks[i].rotation.z = 45 * i * Math.PI / 180;\n    hook_body.position.y = 0.115;\n\n    if (i % 2 === 1)\n      hooks[i].position.y += 0.2;\n  }\n\n  hanger.add(base);\n  hanger.add(base2);\n  hanger.add(body);\n  hanger.add(umbrella_base);\n\n  for (let i = 0; i < 4; i++) {\n    hanger.add(umbrella[i]);\n  }\n\n  for (let i = 0; i < 8; i++) {\n    hanger.add(hooks[i]);\n  }\n\n  return hanger;\n}\n\nexport default defineCatalogElement({\n  name: \"hanger\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metallo', 'plastic'],\n    title: \"hanger\",\n    description: \"hanger\",\n    image: require('./hanger.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /************* lod max ******************/\n    const hangerMaxLOD = new Three.Object3D();\n    hangerMaxLOD.add(objectMaxLOD.clone());\n\n    const aa = new Three.Box3().setFromObject(hangerMaxLOD);\n\n    const deltaX = Math.abs(aa.max.x - aa.min.x);\n    const deltaY = Math.abs(aa.max.y - aa.min.y);\n    const deltaZ = Math.abs(aa.max.z - aa.min.z);\n\n    hangerMaxLOD.position.y += newAltitude;\n    hangerMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /************* lod min ******************/\n    const hangerMinLOD = new Three.Object3D();\n    hangerMinLOD.add(objectMinLOD.clone());\n    hangerMinLOD.position.y += newAltitude;\n    hangerMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(hangerMaxLOD, 200);\n    lod.addLevel(hangerMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/school-desk-double/school-desk-double.png\";","module.exports = __webpack_public_path__ + \"catalog/items/deskoffice/white.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/simple-stair/textures/marble.jpg\";","import * as Three from 'three';\nimport { loadObjWithMaterial } from '../../utils/load-obj';\n\nimport React from 'react';\nimport convert from 'convert-units';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nlet cached3DTV: Three.Group<Three.Object3DEventMap>;\n\nexport default defineCatalogElement({\n  name: \"tv\",\n  prototype: \"items\",\n\n  info: {\n    title: \"tv\",\n    tag: ['furnishing', 'electronics'],\n    description: \"LCD TV\",\n    image: require('./tv.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"Altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const width = { length: 1.60, unit: 'ft' };\n    const depth = { length: 0.59, unit: 'ft' };\n\n    const newWidth = convert(width.length).from(width.unit).to(scene.unit);\n    const newDepth = convert(depth.length).from(depth.unit).to(scene.unit);\n\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    const style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: \"2px\", fill: \"#84e1ce\" } as const;\n\n    return (\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={newWidth} height={newDepth} style={style} />\n        <line key=\"2\" x1={newWidth / 2} x2={newWidth / 2} y1={newDepth} y2={1.5 * newDepth} style={arrow_style} />\n        <line key=\"3\" x1={.35 * newWidth} x2={newWidth / 2} y1={1.2 * newDepth} y2={1.5 * newDepth} style={arrow_style} />\n        <line key=\"4\" x1={newWidth / 2} x2={.65 * newWidth} y1={1.5 * newDepth} y2={1.2 * newDepth} style={arrow_style} />\n        <text key=\"5\" x=\"0\" y=\"0\" transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    );\n  },\n\n  async render3D(element, layer, scene) {\n    const width = { length: 1.60, unit: 'ft' };\n    const depth = { length: 0.59, unit: 'ft' };\n    const height = { length: 1.05, unit: 'ft' };\n\n    const onLoadItem = (object) => {\n\n      const newWidth = convert(width.length).from(width.unit).to(scene.unit);\n      const newHeight = convert(height.length).from(height.unit).to(scene.unit);\n      const newDepth = convert(depth.length).from(depth.unit).to(scene.unit);\n\n      const newAltitude = element.properties.altitude.length;\n\n      if (element.selected) {\n        const box = new Three.BoxHelper(object, 0x99c3fb);\n        box.material.linewidth = 2;\n        box.material.depthTest = false;\n        box.renderOrder = 1000;\n        object.add(box);\n      }\n\n      object.scale.set(newWidth / width.length, newHeight / height.length, newDepth / depth.length);\n\n      // Normalize the origin of the object\n      const boundingBox = new Three.Box3().setFromObject(object);\n\n      const center = [\n        (boundingBox.max.x - boundingBox.min.x) / 2 + boundingBox.min.x,\n        (boundingBox.max.y - boundingBox.min.y) / 2 + boundingBox.min.y,\n        (boundingBox.max.z - boundingBox.min.z) / 2 + boundingBox.min.z];\n\n      object.position.x -= center[0];\n      object.position.y -= center[1] - (boundingBox.max.y - boundingBox.min.y) / 2;\n      object.position.z -= center[2];\n\n      object.position.y += newAltitude;\n\n      object.rotation.y = Math.PI;\n\n      return object;\n    };\n\n\n    if (cached3DTV) {\n      return onLoadItem(cached3DTV.clone());\n    }\n\n    const mtl = require('./tv.mtl');\n    const obj = require('./tv.obj');\n    const img = require('./tv.png');\n    const resourcePath = img.substr(0, img.lastIndexOf(\"/\")) + \"/\";\n\n    return loadObjWithMaterial(mtl, obj, resourcePath)\n      .then(object => {\n        cached3DTV = object;\n        return onLoadItem(cached3DTV.clone())\n      })\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\n// Textures & materials\nconst paintedtexture = require('./painted.jpg');\nconst brickTexture = require('./bricks.jpg');\nconst textureLoader = new Three.TextureLoader();\nconst baseMat = new Three.MeshLambertMaterial({ map: textureLoader.load(paintedtexture) });\nconst wallMat = new Three.MeshLambertMaterial({ map: textureLoader.load(brickTexture) });\n\n// Constant wall/base thickness independent from height property\nconst BASE_THICKNESS = 8;      // vertical thickness of the base slab\nconst WALL_THICKNESS = 10;     // horizontal thickness of side/front walls\nconst TOP_RAIL_THICKNESS = 6;  // thickness of the thin top rails\nconst TEXTURE_TILE_SIZE = 50;   // world units per texture tile for walls\n\nfunction configureWallTexture(mesh: Three.Mesh, sizeX: number, sizeY: number) {\n  const material = mesh.material as Three.MeshLambertMaterial;\n  if (material.map) {\n    material.map.wrapS = material.map.wrapT = Three.RepeatWrapping;\n    material.map.repeat.set(Math.max(1, sizeX / TEXTURE_TILE_SIZE), Math.max(1, sizeY / TEXTURE_TILE_SIZE));\n    material.map.needsUpdate = true;\n  }\n}\n\nfunction createSideWall(name: string, height: number, depth: number, x: number) {\n  // Brick texture for the two large faces (depth x height). Use duplicates so each face can have its own offset if needed later.\n  const brickTex = textureLoader.load(brickTexture);\n  brickTex.wrapS = brickTex.wrapT = Three.RepeatWrapping;\n  brickTex.repeat.set(Math.max(1, depth / TEXTURE_TILE_SIZE), Math.max(1, height / TEXTURE_TILE_SIZE));\n  const brickMatA = new Three.MeshLambertMaterial({ map: brickTex, side: Three.FrontSide });\n  const brickMatB = brickMatA.clone();\n  // Plain materials for thin faces (top, bottom, front, back) to avoid squished bricks on thickness faces\n  const plainMat = baseMat.clone();\n  const materials = [brickMatA, brickMatB, plainMat, plainMat, plainMat, plainMat];\n  const geo = new Three.BoxGeometry(WALL_THICKNESS, height, depth);\n  const wall = new Three.Mesh(geo, materials);\n  wall.position.set(x, BASE_THICKNESS / 2 + height / 2, 0);\n  wall.name = name;\n  return wall;\n}\n\nfunction buildBalcony(width: number, height: number, depth: number) {\n  const group = new Three.Object3D();\n  group.name = 'balcony-root';\n\n  // Width is the total outside width now\n  const base = new Three.Mesh(new Three.BoxGeometry(width, BASE_THICKNESS, depth), baseMat.clone());\n  base.name = 'balcony-base';\n  group.add(base);\n\n  const wallHeight = height; // vertical segment above base\n  // Walls should sit directly on top of the base: base spans [-BASE_THICKNESS/2, +BASE_THICKNESS/2]\n  // so wall bottom y = +BASE_THICKNESS/2 -> center = BASE_THICKNESS/2 + wallHeight/2\n  const yWallCenter = BASE_THICKNESS / 2 + wallHeight / 2;\n\n  // Side walls\n  const leftWall = createSideWall('balcony-wall-left', wallHeight, depth, -width / 2 + WALL_THICKNESS / 2);\n  group.add(leftWall);\n  const rightWall = createSideWall('balcony-wall-right', wallHeight, depth, width / 2 - WALL_THICKNESS / 2);\n  group.add(rightWall);\n\n  // Front wall connects edges\n  const frontWall = new Three.Mesh(new Three.BoxGeometry(width, wallHeight, WALL_THICKNESS), wallMat.clone());\n  frontWall.position.set(0, yWallCenter, depth / 2 - WALL_THICKNESS / 2);\n  frontWall.name = 'balcony-wall-front';\n  configureWallTexture(frontWall, width, wallHeight);\n  group.add(frontWall);\n\n  // Rails at top (optional aesthetic)\n  const yTopRailCenter = BASE_THICKNESS / 2 + wallHeight + TOP_RAIL_THICKNESS / 2;\n  const railMat = baseMat.clone();\n  const leftRail = new Three.Mesh(new Three.BoxGeometry(WALL_THICKNESS, TOP_RAIL_THICKNESS, depth), railMat);\n  leftRail.position.set(-width / 2 + WALL_THICKNESS / 2, yTopRailCenter, 0);\n  leftRail.name = 'balcony-rail-left';\n  group.add(leftRail);\n  const rightRail = new Three.Mesh(new Three.BoxGeometry(WALL_THICKNESS, TOP_RAIL_THICKNESS, depth), railMat.clone());\n  rightRail.position.set(width / 2 - WALL_THICKNESS / 2, yTopRailCenter, 0);\n  rightRail.name = 'balcony-rail-right';\n  group.add(rightRail);\n  const frontRail = new Three.Mesh(new Three.BoxGeometry(width, TOP_RAIL_THICKNESS, WALL_THICKNESS), railMat.clone());\n  frontRail.position.set(0, yTopRailCenter, depth / 2 - WALL_THICKNESS / 2);\n  frontRail.name = 'balcony-rail-front';\n  group.add(frontRail);\n\n  return group;\n}\n\nexport default defineCatalogElement({\n  name: 'balcony',\n  prototype: 'items',\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: 'balcony',\n    description: 'balcony',\n    image: require('./balcony.png')\n  },\n  properties: {\n    width: {\n      label: 'width',\n      type: 'length-measure',\n      defaultValue: { length: 500 }\n    },\n    depth: {\n      label: 'depth',\n      type: 'length-measure',\n      defaultValue: { length: 100 }\n    },\n    height: {\n      label: 'height',\n      type: 'length-measure',\n      defaultValue: { length: 100 }\n    },\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: { length: 0 }\n    },\n    patternColor: {\n      label: '2D color',\n      type: 'color',\n      defaultValue: '#f5f4f4'\n    }\n  },\n  render2D(element) {\n    const newWidth = element.properties.width.length;\n    const newDepth = element.properties.depth.length;\n    const fillValue = element.selected ? '#99c3fb' : element.properties.patternColor;\n    const angle = element.rotation + 90;\n    const textRotation = Math.sin(angle * Math.PI / 180) < 0 ? 180 : 0;\n    return (\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect x='0' y='0' width={newWidth} height={newDepth}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: fillValue }} />\n        <text x='0' y='0'\n          transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.name}\n        </text>\n      </g>\n    );\n  },\n  async render3D(element) {\n    const width = element.properties.width.length;\n    const depth = element.properties.depth.length;\n    const height = element.properties.height.length; // vertical wall extent\n    const altitude = element.properties.altitude.length;\n\n    const balcony = buildBalcony(width, height, depth);\n    // Custom selection anchor to avoid oversized bounding box (exclude outer wall thickness)\n    const totalHeight = BASE_THICKNESS + height + TOP_RAIL_THICKNESS;\n    const selectionAnchorGeo = new Three.BoxGeometry(width, totalHeight, depth);\n    const selectionAnchorMat = new Three.MeshBasicMaterial({ visible: false });\n    const selectionAnchor = new Three.Mesh(selectionAnchorGeo, selectionAnchorMat);\n    selectionAnchor.name = 'balcony-selection-anchor';\n    // Center logic: root origin at base center; selection box bottom should align with base bottom\n    // Center so bottom aligns to base bottom (-BASE_THICKNESS/2) and top to rail top (BASE_THICKNESS/2 + height + TOP_RAIL_THICKNESS)\n    selectionAnchor.position.y = (height + TOP_RAIL_THICKNESS) / 2; // relative to base center\n    balcony.add(selectionAnchor);\n\n    const box = new Three.BoxHelper(selectionAnchor, 0x99c3fb);\n    box.material.linewidth = 2;\n    box.material.depthTest = false;\n    box.renderOrder = 1000;\n    box.visible = !!element.selected;\n    box.name = 'balcony-selection-box';\n    balcony.add(box);\n\n    // Position base so its bottom sits at altitude\n    balcony.position.y = BASE_THICKNESS / 2 + altitude;\n    return balcony;\n  },\n  async updateRender3D(element, _layer, _scene, mesh, oldElement, differences, selfDestroy, selfBuild) {\n    const noPerf = () => { selfDestroy(); return selfBuild(); };\n\n    if (differences.indexOf('selected') !== -1) {\n      const selectionBox = mesh.getObjectByName('balcony-selection-box') as Three.BoxHelper | undefined;\n      if (selectionBox) selectionBox.visible = !!element.selected;\n      return mesh;\n    }\n\n    if (differences.indexOf('rotation') !== -1) {\n      mesh.rotation.y = element.rotation * Math.PI / 180;\n      return mesh;\n    }\n\n    if (differences.indexOf('x') !== -1 || differences.indexOf('y') !== -1) {\n      mesh.position.x = element.x;\n      mesh.position.z = -element.y;\n      return mesh;\n    }\n\n    if (differences.indexOf('properties') !== -1) {\n      const oldWidth = oldElement.properties.width.length;\n      const oldDepth = oldElement.properties.depth.length;\n      const oldHeight = oldElement.properties.height.length;\n      const oldAltitude = oldElement.properties.altitude.length;\n\n      const newWidth = element.properties.width.length;\n      const newDepth = element.properties.depth.length;\n      const newHeight = element.properties.height.length;\n      const newAltitude = element.properties.altitude.length;\n\n      const widthChanged = Math.abs(newWidth - oldWidth) > 1e-6;\n      const depthChanged = Math.abs(newDepth - oldDepth) > 1e-6;\n      const heightChanged = Math.abs(newHeight - oldHeight) > 1e-6;\n      const altitudeChanged = Math.abs(newAltitude - oldAltitude) > 1e-6;\n\n      if (widthChanged || depthChanged || heightChanged) {\n        const replaceGeometry = (name: string, geometry: Three.BufferGeometry) => {\n          const obj = mesh.getObjectByName(name) as Three.Mesh | null;\n          if (obj) { obj.geometry.dispose(); obj.geometry = geometry; }\n        };\n\n        // Base\n        replaceGeometry('balcony-base', new Three.BoxGeometry(newWidth, BASE_THICKNESS, newDepth));\n\n        const wallHeight = newHeight;\n        const yWallCenter = BASE_THICKNESS / 2 + wallHeight / 2;\n        const yTopRailCenter = BASE_THICKNESS / 2 + wallHeight + TOP_RAIL_THICKNESS / 2;\n\n        // Side walls\n        replaceGeometry('balcony-wall-left', new Three.BoxGeometry(WALL_THICKNESS, wallHeight, newDepth));\n        const leftWall = mesh.getObjectByName('balcony-wall-left') as Three.Mesh | null;\n        if (leftWall) {\n          leftWall.position.set(-newWidth / 2 + WALL_THICKNESS / 2, yWallCenter, 0);\n          if (Array.isArray(leftWall.material)) {\n            for (let i = 0; i < 2; i++) {\n              const mat = leftWall.material[i] as Three.MeshLambertMaterial;\n              if (mat.map) {\n                mat.map.wrapS = mat.map.wrapT = Three.RepeatWrapping;\n                mat.map.repeat.set(Math.max(1, newDepth / TEXTURE_TILE_SIZE), Math.max(1, wallHeight / TEXTURE_TILE_SIZE));\n                mat.map.needsUpdate = true;\n              }\n            }\n          }\n        }\n\n        replaceGeometry('balcony-wall-right', new Three.BoxGeometry(WALL_THICKNESS, wallHeight, newDepth));\n        const rightWall = mesh.getObjectByName('balcony-wall-right') as Three.Mesh | null;\n        if (rightWall) {\n          rightWall.position.set(newWidth / 2 - WALL_THICKNESS / 2, yWallCenter, 0);\n          if (Array.isArray(rightWall.material)) {\n            for (let i = 0; i < 2; i++) {\n              const mat = rightWall.material[i] as Three.MeshLambertMaterial;\n              if (mat.map) {\n                mat.map.wrapS = mat.map.wrapT = Three.RepeatWrapping;\n                mat.map.repeat.set(Math.max(1, newDepth / TEXTURE_TILE_SIZE), Math.max(1, wallHeight / TEXTURE_TILE_SIZE));\n                mat.map.needsUpdate = true;\n              }\n            }\n          }\n        }\n\n        // Front wall\n        replaceGeometry('balcony-wall-front', new Three.BoxGeometry(newWidth, wallHeight, WALL_THICKNESS));\n        const frontWall = mesh.getObjectByName('balcony-wall-front') as Three.Mesh | null;\n        if (frontWall) {\n          frontWall.position.set(0, yWallCenter, newDepth / 2 - WALL_THICKNESS / 2);\n          configureWallTexture(frontWall, newWidth, wallHeight);\n        }\n\n        // Rails\n        replaceGeometry('balcony-rail-left', new Three.BoxGeometry(WALL_THICKNESS, TOP_RAIL_THICKNESS, newDepth));\n        const leftRail = mesh.getObjectByName('balcony-rail-left') as Three.Mesh | null;\n        if (leftRail) leftRail.position.set(-newWidth / 2 + WALL_THICKNESS / 2, yTopRailCenter, 0);\n\n        replaceGeometry('balcony-rail-right', new Three.BoxGeometry(WALL_THICKNESS, TOP_RAIL_THICKNESS, newDepth));\n        const rightRail = mesh.getObjectByName('balcony-rail-right') as Three.Mesh | null;\n        if (rightRail) rightRail.position.set(newWidth / 2 - WALL_THICKNESS / 2, yTopRailCenter, 0);\n\n        replaceGeometry('balcony-rail-front', new Three.BoxGeometry(newWidth, TOP_RAIL_THICKNESS, WALL_THICKNESS));\n        const frontRail = mesh.getObjectByName('balcony-rail-front') as Three.Mesh | null;\n        if (frontRail) frontRail.position.set(0, yTopRailCenter, newDepth / 2 - WALL_THICKNESS / 2);\n\n        // Selection anchor\n        const selectionAnchor = mesh.getObjectByName('balcony-selection-anchor') as Three.Mesh | null;\n        const totalHeight = BASE_THICKNESS + newHeight + TOP_RAIL_THICKNESS;\n        if (selectionAnchor) {\n          selectionAnchor.geometry.dispose();\n          selectionAnchor.geometry = new Three.BoxGeometry(newWidth, totalHeight, newDepth);\n          selectionAnchor.position.y = newAltitude + (newHeight + TOP_RAIL_THICKNESS) + BASE_THICKNESS;\n          selectionAnchor.updateMatrixWorld(true);\n        }\n\n        // Refresh selection box if exists\n        const selectionBox = mesh.getObjectByName('balcony-selection-box') as Three.BoxHelper | null;\n        if (selectionBox) selectionBox.update();\n      }\n\n      if (altitudeChanged) {\n        mesh.position.y = BASE_THICKNESS / 2 + newAltitude;\n      }\n\n      return mesh;\n    }\n\n    return noPerf();\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/fire-extinguisher/label-image.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 100;\nconst DEPTH = 80;\nconst HEIGHT = 100;\n\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst grey = new Three.MeshLambertMaterial({ color: 0xC0C0C0 });\nconst red = new Three.MeshLambertMaterial({ color: 0xCC0000 });\nconst blue = new Three.MeshLambertMaterial({ color: 0x000066 });\nconst yellow = new Three.MeshLambertMaterial({ color: 0xF7DA00 });\nconst green = new Three.MeshLambertMaterial({ color: 0x006633 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  //base\n  const cleaning_cart = new Three.Mesh(new Three.BoxGeometry(1, 0.75, 0.05), grey);\n\n  for (let rx = -0.4; rx <= 0.45; rx += 0.85) {\n    for (let rz = -0.3; rz <= 0.3; rz += 0.6) {\n      const tire = new Three.Mesh(new Three.CylinderGeometry(0.08, 0.08, 0.05, 32), black);\n      tire.position.set(rx, rz, 0.15);\n      cleaning_cart.add(tire);\n\n      const bearing = new Three.Mesh(new Three.CylinderGeometry(0.06, 0.06, 0.06, 32), grey);\n      tire.add(bearing);\n\n      const nut = new Three.Mesh(new Three.CylinderGeometry(0.01, 0.01, 0.08, 6), black);\n      nut.position.set(0, 0, 0);\n      tire.add(nut);\n\n      const coverUp = new Three.Mesh(new Three.CylinderGeometry(0.06, 0.06, 0.01, 32), grey);\n      coverUp.rotation.x = 0.5 * Math.PI;\n      coverUp.position.set(-0.03, 0, -0.12);\n      tire.add(coverUp);\n\n      const coverDown = new Three.Mesh(new Three.CylinderGeometry(0.03725, 0.03725, 0.03, 32), black);\n      coverDown.rotation.x = 0.5 * Math.PI;\n      coverDown.position.set(-0.03, 0, -0.1);\n      tire.add(coverDown);\n\n      const p1Geometry = new Three.CylinderGeometry(0.055, 0.055, 0.005, 3);\n      const p1_left = new Three.Mesh(p1Geometry, grey);\n      p1_left.position.set(-0.02, -0.035, -0.06);\n      tire.add(p1_left);\n\n      const p2Geometry = new Three.BoxGeometry(0.055, 0.11, 0.005);\n      const p2_left = new Three.Mesh(p2Geometry, grey);\n      p2_left.rotation.x = 0.5 * Math.PI;\n      p2_left.position.set(0, -0.035, -0.04);\n      tire.add(p2_left);\n\n      const p1_right = new Three.Mesh(p1Geometry, grey);\n      p1_right.position.set(-0.02, 0.035, -0.06);\n      tire.add(p1_right);\n\n      const p2_right = new Three.Mesh(p2Geometry, grey);\n      p2_right.rotation.x = 0.5 * Math.PI;\n      p2_right.position.set(0, 0.035, -0.04);\n      tire.add(p2_right);\n\n      const p3 = new Three.Mesh(new Three.BoxGeometry(0.095, 0.075, 0.01), grey);\n      p3.position.set(-0.02, 0, -0.09);\n      tire.add(p3);\n    }\n  }\n\n  //drawer support\n  const drawerSupportGeometry = new Three.BoxGeometry(0.85, 0.75, 0.05);\n  const drawer_p1 = new Three.Mesh(drawerSupportGeometry, grey);\n  drawer_p1.position.set(0.475, 0, -0.45);\n  drawer_p1.rotation.y = 0.5 * Math.PI;\n  cleaning_cart.add(drawer_p1);\n\n  const drawer_p2 = new Three.Mesh(drawerSupportGeometry, grey);\n  drawer_p2.position.set(0, 0, -0.45);\n  drawer_p2.rotation.y = 0.5 * Math.PI;\n  cleaning_cart.add(drawer_p2);\n\n  //base top\n  const baseTop = new Three.Mesh(new Three.BoxGeometry(0.5, 0.75, 0.05), grey);\n  baseTop.position.set(0.25, 0, -0.8);\n  cleaning_cart.add(baseTop);\n\n  let gz;\n\n  //shelfs guide\n  for (gz = -0.74; gz <= -0.1; gz += 0.25) {\n    const shelfGeometry = new Three.BoxGeometry(0.05, 0.75, 0.02);\n    const shelf_1 = new Three.Mesh(shelfGeometry, grey);\n    shelf_1.position.set(0.45, 0, gz);\n    cleaning_cart.add(shelf_1);\n\n    const shelf_2 = new Three.Mesh(shelfGeometry, grey);\n    shelf_2.position.set(0.025, 0, gz);\n    cleaning_cart.add(shelf_2);\n  }\n\n  let cz: number;\n\n  //lateral drawers\n  for (cz = -0.76; cz <= -0.1; cz += 0.25) {\n    //border\n    const drawerBorderGeometry = new Three.BoxGeometry(0.05, 0.75, 0.015);\n    const drawerBorder_1 = new Three.Mesh(drawerBorderGeometry, blue);\n    drawerBorder_1.position.set(0.42, 0, cz);\n    cleaning_cart.add(drawerBorder_1);\n\n    const drawerBorder_2 = new Three.Mesh(drawerBorderGeometry, blue);\n    drawerBorder_2.position.set(0.055, 0, cz);\n    cleaning_cart.add(drawerBorder_2);\n\n    //long side\n    const longSideGeometry = new Three.BoxGeometry(0.02, 0.20, 0.75);\n    const longSide_1 = new Three.Mesh(longSideGeometry, blue);\n    longSide_1.position.set(0.405, 0, cz + 0.1);\n    longSide_1.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(longSide_1);\n\n    const longSide_2 = new Three.Mesh(longSideGeometry, blue);\n    longSide_2.position.set(0.07, 0, cz + 0.1);\n    longSide_2.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(longSide_2);\n\n    //short side\n    const shortSideGeometry = new Three.BoxGeometry(0.02, 0.34, 0.215);\n    const shortSide_1 = new Three.Mesh(shortSideGeometry, blue);\n    shortSide_1.position.set(0.25, -0.365, cz + 0.1);\n    shortSide_1.rotation.z = 0.5 * Math.PI;\n    cleaning_cart.add(shortSide_1);\n\n    const shortSide_2 = new Three.Mesh(shortSideGeometry, blue);\n    shortSide_2.position.set(0.235, 0.365, cz + 0.1);\n    shortSide_2.rotation.z = 0.5 * Math.PI;\n    cleaning_cart.add(shortSide_2);\n\n    //bottom side\n    const bottomSide = new Three.Mesh(new Three.BoxGeometry(0.355, 0.75, 0.015), blue);\n    bottomSide.position.set(0.2375, 0, cz + 0.205);\n    cleaning_cart.add(bottomSide);\n  }\n\n  //bucket up support\n  const bucket_1 = new Three.Mesh(new Three.BoxGeometry(0.5, 0.05, 0.05), grey);\n  bucket_1.position.set(0.25, -0.35, -0.85);\n  cleaning_cart.add(bucket_1);\n\n  const bucket_2 = bucket_1.clone();\n  bucket_2.position.set(0.25, 0.35, -0.85);\n  cleaning_cart.add(bucket_2);\n\n  //bucket down support\n  const bucket_3 = bucket_1.clone();\n  bucket_3.position.set(-0.25, -0.35, -0.05);\n  cleaning_cart.add(bucket_3);\n\n  const bucket_4 = bucket_1.clone();\n  bucket_4.position.set(-0.25, 0.35, -0.05);\n  cleaning_cart.add(bucket_4);\n\n  const bucket_5 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.65, 0.05), grey);\n  bucket_5.position.set(-0.475, 0, -0.05);\n  cleaning_cart.add(bucket_5);\n\n  //waste basket top support\n  const wasteSupport_1 = new Three.Mesh(new Three.BoxGeometry(0.5, 0.05, 0.05), grey);\n  wasteSupport_1.position.set(0.7, -0.35, -0.05);\n  cleaning_cart.add(wasteSupport_1);\n\n  const wasteSupport_2 = wasteSupport_1.clone();\n  wasteSupport_2.position.set(0.7, 0.35, -0.05);\n  cleaning_cart.add(wasteSupport_2);\n\n  const wasteSupport_3 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.65, 0.05), grey);\n  wasteSupport_3.position.set(0.925, 0, -0.05);\n  cleaning_cart.add(wasteSupport_3);\n\n  //waste basket support down\n  const wasteSupportDown_1 = new Three.Mesh(new Three.BoxGeometry(0.5, 0.05, 0.05), grey);\n  wasteSupportDown_1.position.set(0.7, -0.35, -0.85);\n  cleaning_cart.add(wasteSupportDown_1);\n\n  const wasteSupportDown_2 = wasteSupportDown_1.clone();\n  wasteSupportDown_2.position.set(0.7, 0.35, -0.85);\n  cleaning_cart.add(wasteSupportDown_2);\n\n  const wasteSupportDown_3 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.65, 0.05), grey);\n  wasteSupportDown_3.position.set(0.925, 0, -0.85);\n  cleaning_cart.add(wasteSupportDown_3);\n\n  //waste cover\n  const wasteCover = new Three.Mesh(new Three.BoxGeometry(0.45, 0.775, 0.05), blue);\n  wasteCover.position.set(0.745, 0, -0.9);\n  cleaning_cart.add(wasteCover);\n\n  //sack\n  const sack = new Three.Mesh(new Three.BoxGeometry(0.3, 0.65, 0.7), black);\n  sack.position.set(0.75, 0, -0.5);\n  cleaning_cart.add(sack);\n\n  // cover pivot\n  const coverPivotGeometry = new Three.CylinderGeometry(0.01, 0.01, 0.05, 32);\n  const coverPivot_1 = new Three.Mesh(coverPivotGeometry, black);\n  coverPivot_1.position.set(0.51, -0.35, -0.88);\n  cleaning_cart.add(coverPivot_1);\n\n  const coverPivot_2 = new Three.Mesh(coverPivotGeometry, black);\n  coverPivot_2.position.set(0.51, 0.35, -0.88);\n  cleaning_cart.add(coverPivot_2);\n\n  let color1: Three.MeshLambertMaterial;\n  let delta1: number;\n\n  //bucket on the top\n  for (let sty = -0.3; sty <= 0.3; sty += 0.6) {\n    sty === -0.3 ? color1 = red : color1 = blue;\n    sty === -0.3 ? delta1 = -1 : delta1 = 1;\n\n    const bucketTop_1 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.3, 0.05), color1);\n    bucketTop_1.position.set(0.13, sty - delta1 * 0.14, -0.85);\n    cleaning_cart.add(bucketTop_1);\n\n    const bucketTop_2 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.15, 0.02), color1);\n    bucketTop_2.position.set(0.13, sty - delta1 * 0.29, -0.9);\n    bucketTop_2.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop_2);\n\n    const bucketTop_3 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.15, 0.02), color1);\n    bucketTop_3.position.set(0.13, sty, -0.9);\n    bucketTop_3.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop_3);\n\n    const bucketTop_4 = new Three.Mesh(new Three.BoxGeometry(0.15, 0.3, 0.02), color1);\n    bucketTop_4.position.set(0.04, sty - delta1 * 0.14, -0.9);\n    bucketTop_4.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop_4);\n\n    const bucketTop_5 = new Three.Mesh(new Three.BoxGeometry(0.15, 0.3, 0.02), color1);\n    bucketTop_5.position.set(0.22, sty - delta1 * 0.14, -0.9);\n    bucketTop_5.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop_5);\n  }\n\n  let color2: Three.MeshLambertMaterial;\n  let delta2: number;\n\n  //bucket on the top\n  for (let sty = -0.3; sty <= 0.3; sty += 0.6) {\n    sty === -0.3 ? color2 = yellow : color2 = green;\n    sty === -0.3 ? delta2 = -1 : delta2 = 1;\n\n    const bucketTop2_p1 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.3, 0.05), color2);\n    bucketTop2_p1.position.set(0.35, sty - delta2 * 0.14, -0.85);\n    cleaning_cart.add(bucketTop2_p1);\n\n    const bucketTop2_p2 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.15, 0.02), color2);\n    bucketTop2_p2.position.set(0.35, sty - delta2 * 0.29, -0.9);\n    bucketTop2_p2.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop2_p2);\n\n    const bucketTop2_p3 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.15, 0.02), color2);\n    bucketTop2_p3.position.set(0.35, sty, -0.9);\n    bucketTop2_p3.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop2_p3);\n\n    const bucketTop2_p4 = new Three.Mesh(new Three.BoxGeometry(0.15, 0.3, 0.02), color2);\n    bucketTop2_p4.position.set(0.26, sty - delta2 * 0.14, -0.9);\n    bucketTop2_p4.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop2_p4);\n\n    const bucketTop2_p5 = new Three.Mesh(new Three.BoxGeometry(0.15, 0.3, 0.02), color2);\n    bucketTop2_p5.position.set(0.44, sty - delta2 * 0.14, -0.9);\n    bucketTop2_p5.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop2_p5);\n  }\n\n  let color: Three.MeshLambertMaterial;\n  let delta: number;\n\n  //bucket on the top\n  for (let sdy = -0.3; sdy <= 0.3; sdy += 0.6) {\n    sdy === -0.3 ? color = red : color = blue;\n    sdy === -0.3 ? delta = -1 : delta = 1;\n\n    const bucketTop3_p1 = new Three.Mesh(new Three.BoxGeometry(0.4, 0.3, 0.05), color);\n    bucketTop3_p1.position.set(-0.22, sdy - delta * 0.14, -0.05);\n    cleaning_cart.add(bucketTop3_p1);\n\n    const bucketTop3_p2 = new Three.Mesh(new Three.BoxGeometry(0.4, 0.25, 0.02), color);\n    bucketTop3_p2.position.set(-0.22, sdy - delta * 0.28, -0.2);\n    bucketTop3_p2.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop3_p2);\n\n    const bucketTop3_p3 = new Three.Mesh(new Three.BoxGeometry(0.4, 0.25, 0.02), color);\n    bucketTop3_p3.position.set(-0.22, sdy, -0.2);\n    bucketTop3_p3.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop3_p3);\n\n    const bucketTop3_p4 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.3, 0.02), color);\n    bucketTop3_p4.position.set(-0.41, sdy - delta * 0.14, -0.2);\n    bucketTop3_p4.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop3_p4);\n\n    const bucketTop3_p5 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.3, 0.02), color);\n    bucketTop3_p5.position.set(-0.03, sdy - delta * 0.14, -0.2);\n    bucketTop3_p5.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop3_p5);\n  }\n\n  for (let scy = -0.45; scy <= 0.55; scy += 0.90) {\n    //broom\n    const broom = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06, 32), blue);\n    broom.rotation.x = 0.5 * Math.PI;\n    broom.position.set(0.48, scy, -1.3);\n    cleaning_cart.add(broom);\n\n    const broom_handle = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 1.3, 32), grey);\n    broom_handle.position.set(0, 0.68, 0);\n    broom.add(broom_handle);\n\n    const broom_p2 = new Three.Mesh(new Three.CylinderGeometry(0.025, 0.025, 0.06, 32), blue);\n    broom_p2.rotation.y = 0.5 * Math.PI;\n    broom_p2.position.set(0, 1.32, 0);\n    broom.add(broom_p2);\n\n    const broom_p3 = new Three.Mesh(new Three.BoxGeometry(0.02, 0.15, 0.5), blue);\n    broom_p3.position.set(0, 1.34, 0);\n    broom_p3.rotation.z = 0.5 * Math.PI;\n    broom_p3.rotation.y = 0.5 * Math.PI;\n    broom.add(broom_p3);\n\n    const broom_p4 = new Three.Mesh(new Three.BoxGeometry(0.01, 0.2, 0.55), grey);\n    broom_p4.position.set(0, 1.35, 0);\n    broom_p4.rotation.z = 0.5 * Math.PI;\n    broom_p4.rotation.y = 0.5 * Math.PI;\n    broom.add(broom_p4);\n  }\n\n  //broom hook\n  const hook_p1 = new Three.Mesh(new Three.CylinderGeometry(0.01, 0.01, 0.05, 32), blue);\n  hook_p1.position.set(0.48, -0.39, -0.85);\n  cleaning_cart.add(hook_p1);\n\n  const hook_p2 = new Three.Mesh(new Three.CylinderGeometry(0.025, 0.025, 0.03, 32), blue);\n  hook_p2.position.set(0.48, -0.44, -0.85);\n  hook_p2.rotation.x = 0.5 * Math.PI;\n  cleaning_cart.add(hook_p2);\n\n  const hook_p3 = new Three.Mesh(new Three.CylinderGeometry(0.01, 0.01, 0.05, 32), blue);\n  hook_p3.position.set(0.48, 0.39, -0.85);\n  cleaning_cart.add(hook_p3);\n\n  const hook_p4 = new Three.Mesh(new Three.CylinderGeometry(0.025, 0.025, 0.03, 32), blue);\n  hook_p4.position.set(0.48, 0.44, -0.85);\n  hook_p4.rotation.x = 0.5 * Math.PI;\n  cleaning_cart.add(hook_p4);\n\n  return cleaning_cart\n}\n\nfunction makeObjectMinLOD() {\n  //base\n  const cleaning_cart = new Three.Mesh(new Three.BoxGeometry(1, 0.75, 0.05), grey);\n\n  for (let rx = -0.4; rx <= 0.45; rx += 0.85) {\n    for (let rz = -0.3; rz <= 0.3; rz += 0.6) {\n      const tire = new Three.Mesh(new Three.CylinderGeometry(0.08, 0.08, 0.05, 32), black);\n      tire.position.set(rx, rz, 0.15);\n      cleaning_cart.add(tire);\n\n      const bearing = new Three.Mesh(new Three.CylinderGeometry(0.06, 0.06, 0.06, 32), grey);\n      tire.add(bearing);\n\n      const nut = new Three.Mesh(new Three.CylinderGeometry(0.01, 0.01, 0.08, 6), black);\n      nut.position.set(0, 0, 0);\n      tire.add(nut);\n\n      const coverUp = new Three.Mesh(new Three.CylinderGeometry(0.06, 0.06, 0.01, 32), grey);\n      coverUp.rotation.x = 0.5 * Math.PI;\n      coverUp.position.set(-0.03, 0, -0.12);\n      tire.add(coverUp);\n\n      const coverDown = new Three.Mesh(new Three.CylinderGeometry(0.03725, 0.03725, 0.03, 32), black);\n      coverDown.rotation.x = 0.5 * Math.PI;\n      coverDown.position.set(-0.03, 0, -0.1);\n      tire.add(coverDown);\n\n      const p1Geometry = new Three.CylinderGeometry(0.055, 0.055, 0.005, 3);\n      const p1_left = new Three.Mesh(p1Geometry, grey);\n      p1_left.position.set(-0.02, -0.035, -0.06);\n      tire.add(p1_left);\n\n      const p2Geometry = new Three.BoxGeometry(0.055, 0.11, 0.005);\n      const p2_left = new Three.Mesh(p2Geometry, grey);\n      p2_left.rotation.x = 0.5 * Math.PI;\n      p2_left.position.set(0, -0.035, -0.04);\n      tire.add(p2_left);\n\n      const p1_right = new Three.Mesh(p1Geometry, grey);\n      p1_right.position.set(-0.02, 0.035, -0.06);\n      tire.add(p1_right);\n\n      const p2_right = new Three.Mesh(p2Geometry, grey);\n      p2_right.rotation.x = 0.5 * Math.PI;\n      p2_right.position.set(0, 0.035, -0.04);\n      tire.add(p2_right);\n\n      const p3 = new Three.Mesh(new Three.BoxGeometry(0.095, 0.075, 0.01), grey);\n      p3.position.set(-0.02, 0, -0.09);\n      tire.add(p3);\n    }\n  }\n\n  //drawer support\n  const drawerSupportGeometry = new Three.BoxGeometry(0.85, 0.75, 0.05);\n  const drawer_p1 = new Three.Mesh(drawerSupportGeometry, grey);\n  drawer_p1.position.set(0.475, 0, -0.45);\n  drawer_p1.rotation.y = 0.5 * Math.PI;\n  cleaning_cart.add(drawer_p1);\n\n  const drawer_p2 = new Three.Mesh(drawerSupportGeometry, grey);\n  drawer_p2.position.set(0, 0, -0.45);\n  drawer_p2.rotation.y = 0.5 * Math.PI;\n  cleaning_cart.add(drawer_p2);\n\n  //base top\n  const baseTop = new Three.Mesh(new Three.BoxGeometry(0.5, 0.75, 0.05), grey);\n  baseTop.position.set(0.25, 0, -0.8);\n  cleaning_cart.add(baseTop);\n\n  let gz: number;\n\n  //shelfs guide\n  for (gz = -0.74; gz <= -0.1; gz += 0.25) {\n    const shelfGeometry = new Three.BoxGeometry(0.05, 0.75, 0.02);\n    const shelf_1 = new Three.Mesh(shelfGeometry, grey);\n    shelf_1.position.set(0.45, 0, gz);\n    cleaning_cart.add(shelf_1);\n\n    const shelf_2 = new Three.Mesh(shelfGeometry, grey);\n    shelf_2.position.set(0.025, 0, gz);\n    cleaning_cart.add(shelf_2);\n  }\n\n  let cz: number;\n\n  //lateral drawers\n  for (cz = -0.76; cz <= -0.1; cz += 0.25) {\n    //border\n    const drawerBorderGeometry = new Three.BoxGeometry(0.05, 0.75, 0.015);\n    const drawerBorder_1 = new Three.Mesh(drawerBorderGeometry, blue);\n    drawerBorder_1.position.set(0.42, 0, cz);\n    cleaning_cart.add(drawerBorder_1);\n\n    const drawerBorder_2 = new Three.Mesh(drawerBorderGeometry, blue);\n    drawerBorder_2.position.set(0.055, 0, cz);\n    cleaning_cart.add(drawerBorder_2);\n\n    //long side\n    const longSideGeometry = new Three.BoxGeometry(0.02, 0.20, 0.75);\n    const longSide_1 = new Three.Mesh(longSideGeometry, blue);\n    longSide_1.position.set(0.405, 0, cz + 0.1);\n    longSide_1.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(longSide_1);\n\n    const longSide_2 = new Three.Mesh(longSideGeometry, blue);\n    longSide_2.position.set(0.07, 0, cz + 0.1);\n    longSide_2.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(longSide_2);\n\n    //short side\n    const shortSideGeometry = new Three.BoxGeometry(0.02, 0.34, 0.215);\n    const shortSide_1 = new Three.Mesh(shortSideGeometry, blue);\n    shortSide_1.position.set(0.25, -0.365, cz + 0.1);\n    shortSide_1.rotation.z = 0.5 * Math.PI;\n    cleaning_cart.add(shortSide_1);\n\n    const shortSide_2 = new Three.Mesh(shortSideGeometry, blue);\n    shortSide_2.position.set(0.235, 0.365, cz + 0.1);\n    shortSide_2.rotation.z = 0.5 * Math.PI;\n    cleaning_cart.add(shortSide_2);\n\n    //bottom side\n    const bottomSide = new Three.Mesh(new Three.BoxGeometry(0.355, 0.75, 0.015), blue);\n    bottomSide.position.set(0.2375, 0, cz + 0.205);\n    cleaning_cart.add(bottomSide);\n  }\n\n  //bucket up support\n  const bucket_1 = new Three.Mesh(new Three.BoxGeometry(0.5, 0.05, 0.05), grey);\n  bucket_1.position.set(0.25, -0.35, -0.85);\n  cleaning_cart.add(bucket_1);\n\n  const bucket_2 = bucket_1.clone();\n  bucket_2.position.set(0.25, 0.35, -0.85);\n  cleaning_cart.add(bucket_2);\n\n  //bucket down support\n  const bucket_3 = bucket_1.clone();\n  bucket_3.position.set(-0.25, -0.35, -0.05);\n  cleaning_cart.add(bucket_3);\n\n  const bucket_4 = bucket_1.clone();\n  bucket_4.position.set(-0.25, 0.35, -0.05);\n  cleaning_cart.add(bucket_4);\n\n  const bucket_5 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.65, 0.05), grey);\n  bucket_5.position.set(-0.475, 0, -0.05);\n  cleaning_cart.add(bucket_5);\n\n  //waste basket top support\n  const wasteSupport_1 = new Three.Mesh(new Three.BoxGeometry(0.5, 0.05, 0.05), grey);\n  wasteSupport_1.position.set(0.7, -0.35, -0.05);\n  cleaning_cart.add(wasteSupport_1);\n\n  const wasteSupport_2 = wasteSupport_1.clone();\n  wasteSupport_2.position.set(0.7, 0.35, -0.05);\n  cleaning_cart.add(wasteSupport_2);\n\n  const wasteSupport_3 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.65, 0.05), grey);\n  wasteSupport_3.position.set(0.925, 0, -0.05);\n  cleaning_cart.add(wasteSupport_3);\n\n  //waste basket support down\n  const wasteSupportDown_1 = new Three.Mesh(new Three.BoxGeometry(0.5, 0.05, 0.05), grey);\n  wasteSupportDown_1.position.set(0.7, -0.35, -0.85);\n  cleaning_cart.add(wasteSupportDown_1);\n\n  const wasteSupportDown_2 = wasteSupportDown_1.clone();\n  wasteSupportDown_2.position.set(0.7, 0.35, -0.85);\n  cleaning_cart.add(wasteSupportDown_2);\n\n  const wasteSupportDown_3 = new Three.Mesh(new Three.BoxGeometry(0.05, 0.65, 0.05), grey);\n  wasteSupportDown_3.position.set(0.925, 0, -0.85);\n  cleaning_cart.add(wasteSupportDown_3);\n\n  //waste cover\n  const wasteCover = new Three.Mesh(new Three.BoxGeometry(0.45, 0.775, 0.05), blue);\n  wasteCover.position.set(0.745, 0, -0.9);\n  cleaning_cart.add(wasteCover);\n\n  //sack\n  const sack = new Three.Mesh(new Three.BoxGeometry(0.3, 0.65, 0.7), black);\n  sack.position.set(0.75, 0, -0.5);\n  cleaning_cart.add(sack);\n\n  // cover pivot\n  const coverPivotGeometry = new Three.CylinderGeometry(0.01, 0.01, 0.05, 32);\n  const coverPivot_1 = new Three.Mesh(coverPivotGeometry, black);\n  coverPivot_1.position.set(0.51, -0.35, -0.88);\n  cleaning_cart.add(coverPivot_1);\n\n  const coverPivot_2 = new Three.Mesh(coverPivotGeometry, black);\n  coverPivot_2.position.set(0.51, 0.35, -0.88);\n  cleaning_cart.add(coverPivot_2);\n\n  let color1: Three.MeshLambertMaterial;\n  let delta1: number;\n\n  //bucket on the top\n  for (let sty = -0.3; sty <= 0.3; sty += 0.6) {\n    sty === -0.3 ? color1 = red : color1 = blue;\n    sty === -0.3 ? delta1 = -1 : delta1 = 1;\n\n    const bucketTop_1 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.3, 0.05), color1);\n    bucketTop_1.position.set(0.13, sty - delta1 * 0.14, -0.85);\n    cleaning_cart.add(bucketTop_1);\n\n    const bucketTop_2 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.15, 0.02), color1);\n    bucketTop_2.position.set(0.13, sty - delta1 * 0.29, -0.9);\n    bucketTop_2.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop_2);\n\n    const bucketTop_3 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.15, 0.02), color1);\n    bucketTop_3.position.set(0.13, sty, -0.9);\n    bucketTop_3.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop_3);\n\n    const bucketTop_4 = new Three.Mesh(new Three.BoxGeometry(0.15, 0.3, 0.02), color1);\n    bucketTop_4.position.set(0.04, sty - delta1 * 0.14, -0.9);\n    bucketTop_4.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop_4);\n\n    const bucketTop_5 = new Three.Mesh(new Three.BoxGeometry(0.15, 0.3, 0.02), color1);\n    bucketTop_5.position.set(0.22, sty - delta1 * 0.14, -0.9);\n    bucketTop_5.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop_5);\n  }\n\n  let color2: Three.MeshLambertMaterial;\n  let delta2: number;\n\n  //bucket on the top\n  for (let sty = -0.3; sty <= 0.3; sty += 0.6) {\n    sty === -0.3 ? color2 = yellow : color2 = green;\n    sty === -0.3 ? delta2 = -1 : delta2 = 1;\n\n    const bucketTop2_p1 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.3, 0.05), color2);\n    bucketTop2_p1.position.set(0.35, sty - delta2 * 0.14, -0.85);\n    cleaning_cart.add(bucketTop2_p1);\n\n    const bucketTop2_p2 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.15, 0.02), color2);\n    bucketTop2_p2.position.set(0.35, sty - delta2 * 0.29, -0.9);\n    bucketTop2_p2.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop2_p2);\n\n    const bucketTop2_p3 = new Three.Mesh(new Three.BoxGeometry(0.2, 0.15, 0.02), color2);\n    bucketTop2_p3.position.set(0.35, sty, -0.9);\n    bucketTop2_p3.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop2_p3);\n\n    const bucketTop2_p4 = new Three.Mesh(new Three.BoxGeometry(0.15, 0.3, 0.02), color2);\n    bucketTop2_p4.position.set(0.26, sty - delta2 * 0.14, -0.9);\n    bucketTop2_p4.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop2_p4);\n\n    const bucketTop2_p5 = new Three.Mesh(new Three.BoxGeometry(0.15, 0.3, 0.02), color2);\n    bucketTop2_p5.position.set(0.44, sty - delta2 * 0.14, -0.9);\n    bucketTop2_p5.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop2_p5);\n  }\n\n  let color: Three.MeshLambertMaterial;\n  let delta: number;\n\n  //bucket on the top\n  for (let sdy = -0.3; sdy <= 0.3; sdy += 0.6) {\n    sdy === -0.3 ? color = red : color = blue;\n    sdy === -0.3 ? delta = -1 : delta = 1;\n\n    const bucketTop3_p1 = new Three.Mesh(new Three.BoxGeometry(0.4, 0.3, 0.05), color);\n    bucketTop3_p1.position.set(-0.22, sdy - delta * 0.14, -0.05);\n    cleaning_cart.add(bucketTop3_p1);\n\n    const bucketTop3_p2 = new Three.Mesh(new Three.BoxGeometry(0.4, 0.25, 0.02), color);\n    bucketTop3_p2.position.set(-0.22, sdy - delta * 0.28, -0.2);\n    bucketTop3_p2.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop3_p2);\n\n    const bucketTop3_p3 = new Three.Mesh(new Three.BoxGeometry(0.4, 0.25, 0.02), color);\n    bucketTop3_p3.position.set(-0.22, sdy, -0.2);\n    bucketTop3_p3.rotation.x = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop3_p3);\n\n    const bucketTop3_p4 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.3, 0.02), color);\n    bucketTop3_p4.position.set(-0.41, sdy - delta * 0.14, -0.2);\n    bucketTop3_p4.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop3_p4);\n\n    const bucketTop3_p5 = new Three.Mesh(new Three.BoxGeometry(0.25, 0.3, 0.02), color);\n    bucketTop3_p5.position.set(-0.03, sdy - delta * 0.14, -0.2);\n    bucketTop3_p5.rotation.y = 0.5 * Math.PI;\n    cleaning_cart.add(bucketTop3_p5);\n  }\n\n  for (let scy = -0.45; scy <= 0.55; scy += 0.90) {\n    //broom\n    const broom = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 0.06, 32), blue);\n    broom.rotation.x = 0.5 * Math.PI;\n    broom.position.set(0.48, scy, -1.3);\n    cleaning_cart.add(broom);\n\n    const broom_handle = new Three.Mesh(new Three.CylinderGeometry(0.02, 0.02, 1.3, 32), grey);\n    broom_handle.position.set(0, 0.68, 0);\n    broom.add(broom_handle);\n\n    const broom_p2 = new Three.Mesh(new Three.CylinderGeometry(0.025, 0.025, 0.06, 32), blue);\n    broom_p2.rotation.y = 0.5 * Math.PI;\n    broom_p2.position.set(0, 1.32, 0);\n    broom.add(broom_p2);\n\n    const broom_p3 = new Three.Mesh(new Three.BoxGeometry(0.02, 0.15, 0.5), blue);\n    broom_p3.position.set(0, 1.34, 0);\n    broom_p3.rotation.z = 0.5 * Math.PI;\n    broom_p3.rotation.y = 0.5 * Math.PI;\n    broom.add(broom_p3);\n\n    const broom_p4 = new Three.Mesh(new Three.BoxGeometry(0.01, 0.2, 0.55), grey);\n    broom_p4.position.set(0, 1.35, 0);\n    broom_p4.rotation.z = 0.5 * Math.PI;\n    broom_p4.rotation.y = 0.5 * Math.PI;\n    broom.add(broom_p4);\n  }\n\n\n  //broom hook\n  const hook_p1 = new Three.Mesh(new Three.CylinderGeometry(0.01, 0.01, 0.05, 32), blue);\n  hook_p1.position.set(0.48, -0.39, -0.85);\n  cleaning_cart.add(hook_p1);\n\n  const hook_p2 = new Three.Mesh(new Three.CylinderGeometry(0.025, 0.025, 0.03, 32), blue);\n  hook_p2.position.set(0.48, -0.44, -0.85);\n  hook_p2.rotation.x = 0.5 * Math.PI;\n  cleaning_cart.add(hook_p2);\n\n  const hook_p3 = new Three.Mesh(new Three.CylinderGeometry(0.01, 0.01, 0.05, 32), blue);\n  hook_p3.position.set(0.48, 0.39, -0.85);\n  cleaning_cart.add(hook_p3);\n\n  const hook_p4 = new Three.Mesh(new Three.CylinderGeometry(0.025, 0.025, 0.03, 32), blue);\n  hook_p4.position.set(0.48, 0.44, -0.85);\n  hook_p4.rotation.x = 0.5 * Math.PI;\n  cleaning_cart.add(hook_p4);\n\n  return cleaning_cart\n}\n\nexport default defineCatalogElement({\n  name: 'cleaning cart',\n  prototype: 'items',\n\n  info: {\n    tag: ['metal', 'plastic'],\n    title: 'cleaning cart',\n    description: 'cleaning cart',\n    image: require('./cleaning_cart.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' }} />\n        <text key='2' x='0' y='0'\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /************ lod max ****************/\n\n    const cleaning_cartMaxLOD = new Three.Object3D();\n    cleaning_cartMaxLOD.add(objectMaxLOD.clone());\n\n    const valuePosition = new Three.Box3().setFromObject(cleaning_cartMaxLOD);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    cleaning_cartMaxLOD.rotation.x = 0.5 * Math.PI;\n    cleaning_cartMaxLOD.position.y += HEIGHT / 5 + newAltitude;\n    cleaning_cartMaxLOD.scale.set(WIDTH / deltaX, DEPTH / deltaZ, HEIGHT / deltaY);\n\n    /************ lod min ****************/\n\n    const cleaning_cartMinLOD = new Three.Object3D();\n    cleaning_cartMinLOD.add(objectMinLOD.clone());\n    cleaning_cartMinLOD.rotation.x = 0.5 * Math.PI;\n    cleaning_cartMinLOD.position.y += HEIGHT / 5 + newAltitude;\n    cleaning_cartMinLOD.scale.set(WIDTH / deltaX, DEPTH / deltaZ, HEIGHT / deltaY);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(cleaning_cartMaxLOD, 200);\n    lod.addLevel(cleaning_cartMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/lim/example_lim.png\";","module.exports = __webpack_public_path__ + \"catalog/items/table/table.png\";","module.exports = __webpack_public_path__ + \"catalog/items/tv/tv.png\";","import React from 'react';\nimport * as Three from 'three';\nimport { loadObjWithMaterial } from '../../utils/load-obj';\nimport { Group, Object3DEventMap } from 'three';\nimport { defineCatalogElement, Models } from '@archef2000/react-planner';\n\nlet cached3DWindow: Group<Object3DEventMap>;\n\nexport default defineCatalogElement({\n  name: 'venetian-blind-window',\n  prototype: 'holes',\n\n  info: {\n    tag: ['window'],\n    title: 'Venetian Blind Window',\n    description: 'Venetian Blind Window',\n    image: require('./venetian.jpg')\n  },\n\n  properties: {\n    width: {\n      label: 'Width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 90\n      }\n    },\n    height: {\n      label: 'Height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 100\n      }\n    },\n    altitude: {\n      label: 'Altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 90\n      }\n    },\n    thickness: {\n      label: 'Thickness',\n      type: 'length-measure',\n      defaultValue: {\n        length: 10\n      }\n    },\n    flip: {\n      label: 'Flip',\n      type: 'checkbox',\n      defaultValue: false,\n    },\n  },\n\n  render2D: function (element, layer, scene) {\n    const STYLE_HOLE_BASE = { stroke: '#000', strokeWidth: '3px', fill: '#000' };\n    const STYLE_HOLE_SELECTED = { stroke: '#0096fd', strokeWidth: '3px', fill: '#0096fd', cursor: 'move' };\n\n    const epsilon = 3;\n\n    const holeWidth = element.properties.width.length;\n    const holePath = `M${0} ${-epsilon}  L${holeWidth} ${-epsilon}  L${holeWidth} ${epsilon}  L${0} ${epsilon}  z`;\n    const holeStyle = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE;\n    const length = element.properties.width.length;\n    return (\n      <g transform={`translate(${-length / 2}, 0)`}>\n        <path key='1' d={holePath} style={holeStyle} />\n        <line key='2' x1={holeWidth / 2} y1={-10 - epsilon} x2={holeWidth / 2} y2={10 + epsilon} style={holeStyle} />\n      </g>\n    );\n  },\n\n  render3D: async function (element, layer, scene) {\n    const width = element.properties.width.length;\n    const height = element.properties.height.length;\n    const thickness = element.properties.thickness.length;\n    const flip = element.properties.flip;\n\n    const onLoadItem = (object: Three.Group<Three.Object3DEventMap>) => {\n      const venetian = new Three.Object3D();\n\n      const boundingBox = new Three.Box3().setFromObject(object);\n\n      const initialWidth = boundingBox.max.x - boundingBox.min.x;\n      const initialHeight = boundingBox.max.y - boundingBox.min.y;\n      const initialThickness = boundingBox.max.z - boundingBox.min.z;\n\n      if (element.selected) {\n        const box = new Three.BoxHelper(object, 0x99c3fb);\n        box.material.linewidth = 2;\n        box.material.depthTest = false;\n        box.renderOrder = 1000;\n        object.add(box);\n      }\n\n      const width = element.properties.width.length;\n      const height = element.properties.height.length;\n      const thickness = element.properties.thickness.length;\n\n      object.scale.set(width / initialWidth, height / initialHeight,\n        thickness / 2 / initialThickness);\n\n      venetian.add(object);\n      venetian.add(createTenda());\n\n      if (flip === true)\n        venetian.rotation.y += Math.PI;\n\n      return venetian;\n    };\n\n    if (cached3DWindow) {\n      return onLoadItem(cached3DWindow.clone());;\n    }\n\n    const mtl = require('./venetian.mtl');\n    const obj = require('./venetian.obj');\n    const img = require('./texture.png');\n    const resourcePath = img.substr(0, img.lastIndexOf(\"/\")) + \"/\";\n\n    const object_4 = await loadObjWithMaterial(mtl, obj, resourcePath);\n    cached3DWindow = object_4;\n    return onLoadItem(cached3DWindow.clone());\n\n    function createTenda() {\n      const venetian = new Three.Object3D();\n\n      //colors\n      const white = new Three.MeshLambertMaterial({ color: 0xffffff, opacity: 0.5, transparent: true });\n      const grey = new Three.MeshLambertMaterial({ color: 0xCCCCCC });\n\n      const roundedRectShape = new Three.Shape();\n\n      const x = 0;\n      const y = 0;\n      const width = 1;\n      const height = 18;\n      const radius = 0.25;\n\n      roundedRectShape.moveTo(x, y + radius);\n      roundedRectShape.lineTo(x, y + height - radius);\n      roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n      roundedRectShape.lineTo(x + width - radius, y + height);\n      roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n      roundedRectShape.lineTo(x + width, y + radius);\n      roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n      roundedRectShape.lineTo(x + radius, y);\n      roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n      const holePath1 = new Three.Path();\n      holePath1.moveTo(0.5, 0.6);\n      holePath1.arc(0, .7, .15, 0, Math.PI, false);\n      holePath1.arc(0.15, -.09, .15, Math.PI, 0, false);\n      roundedRectShape.holes.push(holePath1);\n\n      const holePath2 = new Three.Path();\n      holePath2.moveTo(0.5, 4.6);\n      holePath2.arc(0, .7, .15, 0, Math.PI, false);\n      holePath2.arc(0.15, -.09, .15, Math.PI, 0, false);\n      roundedRectShape.holes.push(holePath2);\n\n      const holePath3 = new Three.Path();\n      holePath3.moveTo(0.5, 8.6);\n      holePath3.arc(0, .7, .15, 0, Math.PI, false);\n      holePath3.arc(0.15, -.09, .15, Math.PI, 0, false);\n      roundedRectShape.holes.push(holePath3);\n\n      const holePath4 = new Three.Path();\n      holePath4.moveTo(0.5, 12.6);\n      holePath4.arc(0, .7, .15, 0, Math.PI, false);\n      holePath4.arc(0.15, -.09, .15, Math.PI, 0, false);\n      roundedRectShape.holes.push(holePath4);\n\n      const holePath5 = new Three.Path();\n      holePath5.moveTo(0.5, 16.6);\n      holePath5.arc(0, .7, .15, 0, Math.PI, false);\n      holePath5.arc(0.15, -.09, .15, Math.PI, 0, false);\n      roundedRectShape.holes.push(holePath5);\n\n      const extrudeSettings = {\n        steps: 1,\n        depth: 0.2,\n        bevelEnabled: false,\n        bevelThickness: .4,\n        bevelSize: .4,\n        bevelSegments: 1\n      };\n\n      for (let i = 0; i < 25; i += .7) {\n        const geometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n        const mesh = new Three.Mesh(geometry, grey);\n        mesh.position.set(0, i, 0.86);\n        mesh.rotation.z += Math.PI / 2;\n        mesh.rotation.x += -Math.PI / 2;\n        venetian.add(mesh);\n      }\n\n      for (let j = -1.25; j > -19; j += -4) {\n        const geometry1 = new Three.CylinderGeometry(0.105, 0.105, 26, 32);\n        const tubo = new Three.Mesh(geometry1, white);\n        tubo.position.set(j, 12.5, .35);\n        venetian.add(tubo);\n      }\n\n      const roundedRectShape2 = new Three.Shape();\n\n      const x1 = 0;\n      const y1 = 0;\n      const width1 = 1;\n      const height1 = 18;\n      const radius1 = 0.25;\n\n      roundedRectShape2.moveTo(x1, y1 + radius1);\n      roundedRectShape2.lineTo(x1, y1 + height1 - radius1);\n      roundedRectShape2.quadraticCurveTo(x1, y1 + height1, x1 + radius1, y1 + height1);\n      roundedRectShape2.lineTo(x1 + width1 - radius1, y1 + height1);\n      roundedRectShape2.quadraticCurveTo(x1 + width1, y1 + height1, x1 + width1, y1 + height1 - radius1);\n      roundedRectShape2.lineTo(x1 + width1, y1 + radius1);\n      roundedRectShape2.quadraticCurveTo(x1 + width1, y1, x1 + width1 - radius1, y1);\n      roundedRectShape2.lineTo(x1 + radius1, y1);\n      roundedRectShape2.quadraticCurveTo(x1, y1, x1, y1 + radius1);\n\n      const extrudeSettings2 = {\n        steps: 1,\n        depth: 0.4,\n        bevelEnabled: false,\n        bevelThickness: .4,\n        bevelSize: .4,\n        bevelSegments: 1\n      };\n\n      for (let k = -.5; k < 27; k += 26) {\n        const geometry2 = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n        const mesh2 = new Three.Mesh(geometry2, grey);\n        mesh2.position.set(0, k, 1);\n        mesh2.rotation.z += Math.PI / 2;\n        mesh2.rotation.x += -Math.PI / 2;\n        venetian.add(mesh2);\n      }\n\n      const valueObject = new Three.Box3().setFromObject(venetian);\n\n      const deltaX = Math.abs(valueObject.max.x - valueObject.min.x);\n      const deltaY = Math.abs(valueObject.max.y - valueObject.min.y);\n      const deltaZ = Math.abs(valueObject.max.z - valueObject.min.z);\n\n      venetian.position.x += width1 / .025;\n      venetian.position.y += -height1 / .4;\n      venetian.scale.set(5.2 * width1 / deltaZ, 5.45 * height1 / deltaY, 2.5 * thickness / deltaX);\n\n      return venetian;\n    }\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/lines/wall/textures/bricks.jpg\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 10;\nconst DEPTH = 10;\nconst HEIGHT = 5;\n\nconst red = new Three.MeshLambertMaterial({ color: 0xff0000 });\nconst grey = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const detector = new Three.Mesh();\n\n  const BaseGeometry1 = new Three.CylinderGeometry(.55, .55, .25, 32, 32);\n  const base_p1 = new Three.Mesh(BaseGeometry1, grey);\n  detector.add(base_p1);\n\n  const BaseGeometry2 = new Three.CylinderGeometry(.65, .65, .1, 32, 32);\n  const base_p2 = new Three.Mesh(BaseGeometry2, grey);\n  base_p2.position.y += .125;\n  base_p1.add(base_p2);\n\n  const BaseGeometry3 = new Three.CylinderGeometry(.55, .65, .1, 32, 32);\n  const base_p3 = new Three.Mesh(BaseGeometry3, grey);\n  base_p3.position.y += .22;\n  base_p1.add(base_p3);\n\n  const BaseGeometry4 = new Three.CylinderGeometry(.65, .65, .1, 32, 32);\n  const base_p4 = new Three.Mesh(BaseGeometry4, grey);\n  base_p4.position.y += -.125;\n  base_p1.add(base_p4);\n\n  const geometrySphereUp = new Three.SphereGeometry(0.025, 32, 32, 32);\n  const led = new Three.Mesh(geometrySphereUp, red);\n  led.position.y += .28;\n  led.position.x += .4;\n  led.position.z += -.25;\n  led.scale.set(1, 1.3, 1);\n  base_p1.add(led);\n\n  for (let i = 0; i < Math.PI * 4; i += 4 * Math.PI / 3) {\n    const geometry = new Three.TorusGeometry(.45, .025, 32, 100, Math.PI / 3);\n    const torus = new Three.Mesh(geometry, black);\n    torus.position.y += .028;\n    torus.position.x += .01;\n    torus.rotation.z += i;\n    torus.rotation.x += Math.PI / 2;\n    base_p3.add(torus);\n\n    const geometry2 = new Three.TorusGeometry(.35, .025, 32, 100, Math.PI / 3);\n    const torus2 = new Three.Mesh(geometry2, black);\n    torus2.position.y += .028;\n    torus2.position.x += .01;\n    torus2.rotation.x += Math.PI / 2;\n    torus2.rotation.z += i;\n    base_p3.add(torus2);\n\n    const geometry3 = new Three.TorusGeometry(.25, .025, 32, 100, Math.PI / 3);\n    const torus3 = new Three.Mesh(geometry3, black);\n    torus3.position.y += .028;\n    torus3.position.x += .01;\n    torus3.rotation.x += Math.PI / 2;\n    torus3.rotation.z += i;\n    base_p3.add(torus3);\n  }\n  return detector\n}\n\nfunction makeObjectMinLOD() {\n  const detector = new Three.Mesh();\n\n  const BaseGeometry1 = new Three.CylinderGeometry(.55, .55, .25, 8, 8);\n  const base_p1 = new Three.Mesh(BaseGeometry1, grey);\n  detector.add(base_p1);\n\n  const BaseGeometry2 = new Three.CylinderGeometry(.65, .65, .1, 8, 8);\n  const base_p2 = new Three.Mesh(BaseGeometry2, grey);\n  base_p2.position.y += .125;\n  base_p1.add(base_p2);\n\n  const BaseGeometry3 = new Three.CylinderGeometry(.55, .65, .1, 8, 8);\n  const base_p3 = new Three.Mesh(BaseGeometry3, grey);\n  base_p3.position.y += .22;\n  base_p1.add(base_p3);\n\n  const BaseGeometry4 = new Three.CylinderGeometry(.65, .65, .1, 8, 8);\n  const base_p4 = new Three.Mesh(BaseGeometry4, grey);\n  base_p4.position.y += -.125;\n  base_p1.add(base_p4);\n\n  return detector\n}\n\nexport default defineCatalogElement({\n  name: \"smoke-detector\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"smoke detector\",\n    description: \"smoke detector\",\n    image: require('./smokeDetector.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 250\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#ff0000\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${1.5 * DEPTH}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /************* lod max ****************/\n\n    const detectorMaxLOD = new Three.Object3D();\n    detectorMaxLOD.add(objectMaxLOD.clone());\n\n    const valuePosition = new Three.Box3().setFromObject(detectorMaxLOD);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    detectorMaxLOD.position.z += -DEPTH / 3;\n    detectorMaxLOD.position.y += -HEIGHT / 1.3 + newAltitude;\n    detectorMaxLOD.rotation.x += -Math.PI / 2;\n    detectorMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /************* lod min ****************/\n\n    const detectorMinLOD = new Three.Object3D();\n    detectorMinLOD.add(objectMinLOD.clone());\n    detectorMinLOD.position.z += -DEPTH / 3;\n    detectorMinLOD.position.y += -HEIGHT / 1.3 + newAltitude;\n    detectorMinLOD.rotation.x += -Math.PI / 2;\n    detectorMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(detectorMaxLOD, 200);\n    lod.addLevel(detectorMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","// COLORS\nexport const COLORS = {\n  white: '#FFF',\n  black: '#000'\n} as const;\n\nexport const MATERIAL_COLORS = {\n  500: {\n    amber: '#FFC107',\n    blue_grey: '#607D8B',\n    blue: '#2196F3',\n    brown: '#795548',\n    cyan: '#00BCD4',\n    deep_orange: '#FF5722',\n    deep_purple: '#673AB7',\n    green: '#4CAF50',\n    grey: '#9E9E9E',\n    indigo: '#3F51B5',\n    light_blue: '#03A9F4',\n    light_green: '#8BC34A',\n    lime: '#CDDC39',\n    orange: '#FF9800',\n    pink: '#E91E63',\n    purple: '#9C27B0',\n    red: '#F44336',\n    teal: '#009688',\n    yellow: '#FFEB3B'\n  }\n} as const;\n\nexport const PRIMARY_COLOR = {\n  main: '#28292D',\n  alt: '#2E2F33',\n  icon: '#C2C2C2',\n  border: '1px solid #555',\n  text_main: COLORS.white,\n  text_alt: '#EBEBEB',\n  input: '#55595C'\n} as const;\n\nexport const SECONDARY_COLOR = {\n  main: '#1CA6FC',\n  alt: '#005FAF',\n  icon: '#1CA6FC',\n  border: '1px solid #FFF'\n} as const;\n\nexport const MESH_SELECTED = '#99C3FB';\n\nexport const AREA_MESH_COLOR = {\n  selected: MESH_SELECTED,\n  unselected: '#F5F4F4'\n} as const;\n\nexport const LINE_MESH_COLOR = {\n  selected: MESH_SELECTED,\n  unselected: '#8E9BA2'\n} as const;\n","import React, { Component, CSSProperties, ReactNode, useState } from 'react';\nimport * as SharedStyle from '../../shared-style';\n\nconst BASE_STYLE = {\n  display: \"inline-block\",\n  fontWeight: \"400\",\n  lineHeight: \"1.25\",\n  textAlign: \"center\",\n  whiteSpace: \"nowrap\",\n  verticalAlign: \"middle\",\n  cursor: \"pointer\",\n  WebkitUserSelect: \"none\",\n  MozUserSelect: \"none\",\n  MsUserSelect: \"none\",\n  userSelect: \"none\",\n  padding: \"5px 14px\",\n  fontSize: \"14px\",\n  color: SharedStyle.COLORS.black,\n  fonWeight: \"400px\",\n  transition: \"background-color 175ms ease, border 175ms ease\",\n  outline: \"none\",\n  borderRadius: \"2px\",\n  borderWidth: \"1px\",\n  borderType: \"solid\",\n  width: '100%'\n} as const;\n\nconst BASE_STYLE_SIZE = {\n  small: {\n    fontSize: \"12px\",\n    padding: \"3px 8px\",\n  },\n  normal: {},\n  large: {\n    padding: \"8px 20px\",\n  },\n} as const;\n\ninterface ButtonProps {\n  type?: \"button\" | \"submit\" | \"reset\";\n  style?: CSSProperties;\n  styleHover?: CSSProperties;\n  size?: 'large' | 'normal' | 'small';\n  children?: ReactNode;\n  [key: string]: any;\n}\n\nexport default function Button(props: ButtonProps) {\n  const [state, setState] = useState({ hover: false });\n\n  const { hover } = state;\n  const {\n    type = \"button\",\n    style: customStyle = {\n      backgroundColor: \"#e6e6e6\",\n      borderColor: \"#adadad\",\n    }, styleHover: customStyleHover = {\n      backgroundColor: \"#d4d4d4\",\n      borderColor: \"#8c8c8c\"\n    },\n    size = \"normal\",\n    children,\n    ...rest\n  } = props;\n  const styleMerged = Object.assign({}, BASE_STYLE, BASE_STYLE_SIZE[size], hover ? customStyleHover : customStyle);\n\n  return <button\n    type={type}\n    onMouseEnter={e => setState({ hover: true })}\n    onMouseLeave={e => setState({ hover: false })}\n    style={styleMerged}\n    {...rest}>{children}</button>\n}\n\n","import React from 'react';\nimport Button from './button';\n\nconst STYLE = {\n  borderColor: \"#adadad\",\n  backgroundColor: \"#e6e6e6\"\n};\n\nconst STYLE_HOVER = {\n  backgroundColor: \"#d4d4d4\",\n  borderColor: \"#8c8c8c\"\n};\n\nexport default function CancelButton({ children, ...rest }) {\n  return <Button style={STYLE} styleHover={STYLE_HOVER} {...rest}>{children}</Button>\n}\n","import React from 'react';\n\nconst STYLE = {\n  padding: '0 20px',\n  overflowY: 'auto'\n} as const;\n\ninterface ContentContainerProps {\n  children: React.ReactNode;\n  width: number;\n  height: number;\n  style?: React.CSSProperties;\n}\n\nexport default function ContentContainer({ children, width, height, style = {} }: ContentContainerProps) {\n  return <div style={{ width, height, ...STYLE, ...style }} onWheel={event => event.stopPropagation()}>{children}</div>\n}\n","import React from 'react';\nimport * as SharedStyle from '../../shared-style';\n\nconst STYLE = {\n  color: SharedStyle.PRIMARY_COLOR.alt,\n  fontWeight: 300,\n} as const;\n\ninterface ContentTitleProps {\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n  [key: string]: any;\n}\n\nexport default function ContentTitle({ children, style = {}, ...rest }: ContentTitleProps) {\n  return <h1 style={{ ...STYLE, ...style }} {...rest}>{children}</h1>\n}\n","import React from 'react';\nimport Button from './button';\nimport * as SharedStyle from '../../shared-style';\n\nconst STYLE = {\n  borderColor: \"#c12e2a\",\n  backgroundColor: \"#c9302c\",\n  color: SharedStyle.COLORS.white\n} as const;\n\nconst STYLE_HOVER = {\n  backgroundColor: \"#972726\",\n  borderColor: \"#c12e2a\",\n  color: SharedStyle.COLORS.white\n} as const;\n\nexport default function FormDeleteButton({ children, ...rest }) {\n  return <Button style={STYLE} styleHover={STYLE_HOVER} {...rest}>{children}</Button>\n}\n","import React, { CSSProperties, ReactNode } from 'react';\n\nconst BASE_STYLE = {\n  marginBottom: \"16px\"\n} as const;\n\ninterface FormBlockProps {\n  style?: CSSProperties;\n  children?: ReactNode;\n  [key: string]: any; // Allow other props\n}\n\nexport default function FormBlock({ children, style, ...rest }: FormBlockProps) {\n  return <div style={{ ...BASE_STYLE, ...style }} {...rest}>{children}</div>\n}\n","import React, { Component, CSSProperties, useState } from 'react';\nimport * as SharedStyle from '../../shared-style';\n\nconst STYLE_INPUT = {\n  display: 'block',\n  width: '100%',\n  padding: '0 2px',\n  fontSize: '13px',\n  lineHeight: '1.25',\n  color: SharedStyle.PRIMARY_COLOR.input,\n  backgroundColor: SharedStyle.COLORS.white,\n  backgroundImage: 'none',\n  border: '1px solid rgba(0,0,0,.15)',\n  outline: 'none',\n  height: '30px',\n} as const;\n\ninterface FormTextInputProps {\n  style?: CSSProperties;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  [key: string]: any;\n}\n\nexport default function FormTextInput(props: FormTextInputProps) {\n  const [state, setState] = useState({ focus: false });\n  const { style, ...rest } = props;\n\n  const textInputStyle = { ...STYLE_INPUT, ...style };\n  if (state.focus) textInputStyle.border = `1px solid ${SharedStyle.SECONDARY_COLOR.main}`;\n\n  return <input\n    onFocus={e => setState({ focus: true })}\n    onBlur={e => setState({ focus: false })}\n    style={textInputStyle}\n    type=\"text\"\n    {...rest}\n  />\n}\n","import React from 'react';\nimport FormTextInput from './form-text-input';\n\n\nconst STYLE = {\n  padding: 0,\n  border: 0,\n} as const;\nconst EREG_NUMBER = /^.*$/;\n\nexport default function FormColorInput({ onChange, ...rest }) {\n  const onChangeCustom = event => {\n    const value = event.target.value;\n    if (EREG_NUMBER.test(value)) {\n      onChange(event);\n    }\n  };\n\n  return <FormTextInput type=\"color\" style={STYLE} onChange={onChangeCustom} autoComplete=\"off\" {...rest} />;\n}\n","import React, { CSSProperties, ReactNode } from 'react';\n\nconst BASE_STYLE = {\n  display: \"block\",\n  marginBottom: \"5px\"\n} as const;\n\ninterface FormLabelProps {\n  style?: CSSProperties;\n  children?: ReactNode;\n  [key: string]: any; // Allow other props\n}\n\nexport default function FormLabel({ children, style, ...rest }: FormLabelProps) {\n  return <label style={{ ...BASE_STYLE, ...style }} {...rest}>{children}</label>\n}\n","// ACTIONS project\nexport const NEW_PROJECT = 'NEW_PROJECT';\nexport const LOAD_PROJECT = 'LOAD_PROJECT';\nexport const SAVE_PROJECT = 'SAVE_PROJECT';\nexport const OPEN_CATALOG = 'OPEN_CATALOG';\nexport const SELECT_TOOL_EDIT = 'SELECT_TOOL_EDIT';\nexport const UNSELECT_ALL = 'UNSELECT_ALL';\nexport const SET_PROPERTIES = 'SET_PROPERTIES';\nexport const SET_ITEMS_ATTRIBUTES = 'SET_ITEMS_ATTRIBUTES';\nexport const SET_LINES_ATTRIBUTES = 'SET_LINES_ATTRIBUTES';\nexport const SET_HOLES_ATTRIBUTES = 'SET_HOLES_ATTRIBUTES';\nexport const REMOVE = 'REMOVE';\nexport const UNDO = 'UNDO';\nexport const ROLLBACK = 'ROLLBACK';\nexport const SET_PROJECT_PROPERTIES = 'SET_PROJECT_PROPERTIES';\nexport const OPEN_PROJECT_CONFIGURATOR = 'OPEN_PROJECT_CONFIGURATOR';\nexport const INIT_CATALOG = 'INIT_CATALOG';\nexport const UPDATE_MOUSE_COORDS = 'UPDATE_MOUSE_COORDS';\nexport const UPDATE_ZOOM_SCALE = 'UPDATE_ZOOM_SCALE';\nexport const TOGGLE_SNAP = 'TOGGLE_SNAP';\nexport const CHANGE_CATALOG_PAGE = 'CHANGE_CATALOG_PAGE';\nexport const GO_BACK_TO_CATALOG_PAGE = 'GO_BACK_TO_CATALOG_PAGE';\nexport const THROW_ERROR = 'THROW_ERROR';\nexport const THROW_WARNING = 'THROW_WARNING';\nexport const COPY_PROPERTIES = 'COPY_PROPERTIES';\nexport const PASTE_PROPERTIES = 'PASTE_PROPERTIES';\nexport const PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY = 'PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY';\nexport const ALTERATE_STATE = 'ALTERATE_STATE';\nexport const SET_MODE = 'SET_MODE';\nexport const ADD_HORIZONTAL_GUIDE = 'ADD_HORIZONTAL_GUIDE';\nexport const ADD_VERTICAL_GUIDE = 'ADD_VERTICAL_GUIDE';\nexport const ADD_CIRCULAR_GUIDE = 'ADD_CIRCULAR_GUIDE';\nexport const REMOVE_HORIZONTAL_GUIDE = 'REMOVE_HORIZONTAL_GUIDE';\nexport const REMOVE_VERTICAL_GUIDE = 'REMOVE_VERTICAL_GUIDE';\nexport const REMOVE_CIRCULAR_GUIDE = 'REMOVE_CIRCULAR_GUIDE';\n\n// ACTIONS viewer2D\nexport const SELECT_TOOL_ZOOM_IN = 'SELECT_TOOL_ZOOM_IN';\nexport const SELECT_TOOL_ZOOM_OUT = 'SELECT_TOOL_ZOOM_OUT';\nexport const SELECT_TOOL_PAN = 'SELECT_TOOL_PAN';\nexport const UPDATE_2D_CAMERA = 'UPDATE_2D_CAMERA';\n\n//ACTIONS viewer3D\nexport const SELECT_TOOL_3D_VIEW = 'SELECT_TOOL_3D_VIEW';\nexport const SELECT_TOOL_3D_FIRST_PERSON = 'SELECT_TOOL_3D_FIRST_PERSON';\n\n//ACTIONS items\nexport const SELECT_TOOL_DRAWING_ITEM = 'SELECT_TOOL_DRAWING_ITEM';\nexport const UPDATE_DRAWING_ITEM = 'UPDATE_DRAWING_ITEM';\nexport const END_DRAWING_ITEM = 'END_DRAWING_ITEM';\nexport const BEGIN_DRAGGING_ITEM = 'BEGIN_DRAGGING_ITEM';\nexport const UPDATE_DRAGGING_ITEM = 'UPDATE_DRAGGING_ITEM';\nexport const END_DRAGGING_ITEM = 'END_DRAGGING_ITEM';\nexport const BEGIN_ROTATING_ITEM = 'BEGIN_ROTATING_ITEM';\nexport const UPDATE_ROTATING_ITEM = 'UPDATE_ROTATING_ITEM';\nexport const END_ROTATING_ITEM = 'END_ROTATING_ITEM';\n\n//ACTIONS groups\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const ADD_GROUP_FROM_SELECTED = 'ADD_GROUP_FROM_SELECTED';\nexport const SELECT_GROUP = 'SELECT_GROUP';\nexport const UNSELECT_GROUP = 'UNSELECT_GROUP';\nexport const ADD_TO_GROUP = 'ADD_TO_GROUP';\nexport const REMOVE_FROM_GROUP = 'REMOVE_FROM_GROUP';\nexport const SET_GROUP_PROPERTIES = 'SET_GROUP_PROPERTIES';\nexport const SET_GROUP_ATTRIBUTES = 'SET_GROUP_ATTRIBUTES';\nexport const SET_GROUP_BARYCENTER = 'SET_GROUP_BARYCENTER';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\nexport const REMOVE_GROUP_AND_DELETE_ELEMENTS = 'REMOVE_GROUP_AND_DELETE_ELEMENTS';\nexport const GROUP_TRANSLATE = 'GROUP_TRANSLATE';\nexport const GROUP_ROTATE = 'GROUP_ROTATE';\n\n//ACTION drawings\nexport const SELECT_HOLE = 'SELECT_HOLE';\nexport const SELECT_AREA = 'SELECT_AREA';\nexport const SELECT_ITEM = 'SELECT_ITEM';\nexport const SELECT_LINE = 'SELECT_LINE';\nexport const SELECT_TOOL_DRAWING_LINE = 'SELECT_TOOL_DRAWING_LINE';\nexport const BEGIN_DRAWING_LINE = 'BEGIN_DRAWING_LINE';\nexport const UPDATE_DRAWING_LINE = 'UPDATE_DRAWING_LINE';\nexport const END_DRAWING_LINE = 'END_DRAWING_LINE';\nexport const SELECT_TOOL_DRAWING_HOLE = 'SELECT_TOOL_DRAWING_HOLE';\nexport const UPDATE_DRAWING_HOLE = 'UPDATE_DRAWING_HOLE'; //SHOULD BE SLPITTED IN BEGIN_DRAWING_HOLE AND UPDATE_DRAWING_HOLE\nexport const END_DRAWING_HOLE = 'END_DRAWING_HOLE';\nexport const BEGIN_DRAGGING_LINE = 'BEGIN_DRAGGING_LINE';\nexport const UPDATE_DRAGGING_LINE = 'UPDATE_DRAGGING_LINE';\nexport const END_DRAGGING_LINE = 'END_DRAGGING_LINE';\nexport const SELECT_TOOL_UPLOAD_IMAGE = 'SELECT_TOOL_UPLOAD_IMAGE';\nexport const BEGIN_UPLOADING_IMAGE = 'BEGIN_UPLOADING_IMAGE';\nexport const END_UPLOADING_IMAGE = 'END_UPLOADING_IMAGE';\nexport const BEGIN_FITTING_IMAGE = 'BEGIN_FITTING_IMAGE';\nexport const END_FITTING_IMAGE = 'END_FITTING_IMAGE';\nexport const BEGIN_DRAGGING_HOLE = 'BEGIN_DRAGGING_HOLE';\nexport const UPDATE_DRAGGING_HOLE = 'UPDATE_DRAGGING_HOLE';\nexport const END_DRAGGING_HOLE = 'END_DRAGGING_HOLE';\n\n//ACTIONS vertices\nexport const BEGIN_DRAGGING_VERTEX = 'BEGIN_DRAGGING_VERTEX';\nexport const UPDATE_DRAGGING_VERTEX = 'UPDATE_DRAGGING_VERTEX';\nexport const END_DRAGGING_VERTEX = 'END_DRAGGING_VERTEX';\n\n//ACTIONS scene\nexport const SET_LAYER_PROPERTIES = 'SET_LAYER_PROPERTIES';\nexport const ADD_LAYER = 'ADD_LAYER';\nexport const SELECT_LAYER = 'SELECT_LAYER';\nexport const REMOVE_LAYER = 'REMOVE_LAYER';\n\n//GROUPING ACTIONS\nexport const PROJECT_ACTIONS = {\n  NEW_PROJECT,\n  LOAD_PROJECT,\n  SAVE_PROJECT,\n  OPEN_CATALOG,\n  SELECT_TOOL_EDIT,\n  UNSELECT_ALL,\n  SET_PROPERTIES,\n  SET_ITEMS_ATTRIBUTES,\n  SET_LINES_ATTRIBUTES,\n  SET_HOLES_ATTRIBUTES,\n  REMOVE,\n  UNDO,\n  ROLLBACK,\n  SET_PROJECT_PROPERTIES,\n  OPEN_PROJECT_CONFIGURATOR,\n  INIT_CATALOG,\n  UPDATE_MOUSE_COORDS,\n  UPDATE_ZOOM_SCALE,\n  TOGGLE_SNAP,\n  CHANGE_CATALOG_PAGE,\n  GO_BACK_TO_CATALOG_PAGE,\n  THROW_ERROR,\n  THROW_WARNING,\n  COPY_PROPERTIES,\n  PASTE_PROPERTIES,\n  PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY,\n  ALTERATE_STATE,\n  SET_MODE,\n  ADD_HORIZONTAL_GUIDE,\n  ADD_VERTICAL_GUIDE,\n  ADD_CIRCULAR_GUIDE,\n  REMOVE_HORIZONTAL_GUIDE,\n  REMOVE_VERTICAL_GUIDE,\n  REMOVE_CIRCULAR_GUIDE\n};\n\nexport const VIEWER2D_ACTIONS = {\n  SELECT_TOOL_ZOOM_IN,\n  SELECT_TOOL_ZOOM_OUT,\n  SELECT_TOOL_PAN,\n  UPDATE_2D_CAMERA\n};\n\nexport const VIEWER3D_ACTIONS = {\n  SELECT_TOOL_3D_VIEW,\n  SELECT_TOOL_3D_FIRST_PERSON\n};\n\nexport const ITEMS_ACTIONS = {\n  SELECT_ITEM,\n  SELECT_TOOL_DRAWING_ITEM,\n  UPDATE_DRAWING_ITEM,\n  END_DRAWING_ITEM,\n  BEGIN_DRAGGING_ITEM,\n  UPDATE_DRAGGING_ITEM,\n  END_DRAGGING_ITEM,\n  BEGIN_ROTATING_ITEM,\n  UPDATE_ROTATING_ITEM,\n  END_ROTATING_ITEM\n};\n\nexport const HOLE_ACTIONS = {\n  SELECT_HOLE,\n  SELECT_TOOL_DRAWING_HOLE,\n  UPDATE_DRAWING_HOLE,\n  END_DRAWING_HOLE,\n  BEGIN_DRAGGING_HOLE,\n  UPDATE_DRAGGING_HOLE,\n  END_DRAGGING_HOLE\n};\n\nexport const LINE_ACTIONS = {\n  SELECT_LINE,\n  SELECT_TOOL_DRAWING_LINE,\n  BEGIN_DRAWING_LINE,\n  UPDATE_DRAWING_LINE,\n  END_DRAWING_LINE,\n  BEGIN_DRAGGING_LINE,\n  UPDATE_DRAGGING_LINE,\n  END_DRAGGING_LINE\n};\n\nexport const AREA_ACTIONS = {\n  SELECT_AREA\n};\n\nexport const GROUP_ACTIONS = {\n  ADD_GROUP,\n  ADD_GROUP_FROM_SELECTED,\n  SELECT_GROUP,\n  UNSELECT_GROUP,\n  ADD_TO_GROUP,\n  REMOVE_FROM_GROUP,\n  SET_GROUP_PROPERTIES,\n  SET_GROUP_ATTRIBUTES,\n  SET_GROUP_BARYCENTER,\n  REMOVE_GROUP,\n  REMOVE_GROUP_AND_DELETE_ELEMENTS,\n  GROUP_TRANSLATE,\n  GROUP_ROTATE\n} as const;\n\nexport const SCENE_ACTIONS = {\n  ADD_LAYER,\n  SET_LAYER_PROPERTIES,\n  SELECT_LAYER,\n  REMOVE_LAYER\n};\n\nexport const VERTEX_ACTIONS = {\n  BEGIN_DRAGGING_VERTEX,\n  UPDATE_DRAGGING_VERTEX,\n  END_DRAGGING_VERTEX\n};\n\n//MODES\nexport const MODE_IDLE = 'MODE_IDLE';\nexport const MODE_2D_ZOOM_IN = 'MODE_2D_ZOOM_IN';\nexport const MODE_2D_ZOOM_OUT = 'MODE_2D_ZOOM_OUT';\nexport const MODE_2D_PAN = 'MODE_2D_PAN';\nexport const MODE_3D_VIEW = 'MODE_3D_VIEW';\nexport const MODE_3D_FIRST_PERSON = 'MODE_3D_FIRST_PERSON';\nexport const MODE_WAITING_DRAWING_LINE = 'MODE_WAITING_DRAWING_LINE';\nexport const MODE_DRAGGING_LINE = 'MODE_DRAGGING_LINE';\nexport const MODE_DRAGGING_VERTEX = 'MODE_DRAGGING_VERTEX';\nexport const MODE_DRAGGING_ITEM = 'MODE_DRAGGING_ITEM';\nexport const MODE_DRAGGING_HOLE = 'MODE_DRAGGING_HOLE';\nexport const MODE_DRAWING_LINE = 'MODE_DRAWING_LINE';\nexport const MODE_DRAWING_HOLE = 'MODE_DRAWING_HOLE';\nexport const MODE_DRAWING_ITEM = 'MODE_DRAWING_ITEM';\nexport const MODE_ROTATING_ITEM = 'MODE_ROTATING_ITEM';\nexport const MODE_UPLOADING_IMAGE = 'MODE_UPLOADING_IMAGE';\nexport const MODE_FITTING_IMAGE = 'MODE_FITTING_IMAGE';\nexport const MODE_VIEWING_CATALOG = 'MODE_VIEWING_CATALOG';\nexport const MODE_CONFIGURING_PROJECT = 'MODE_CONFIGURING_PROJECT';\n\nconst MODES = [MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON, MODE_WAITING_DRAWING_LINE, MODE_DRAGGING_LINE, MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_ROTATING_ITEM, MODE_UPLOADING_IMAGE, MODE_FITTING_IMAGE, MODE_VIEWING_CATALOG, MODE_CONFIGURING_PROJECT];\n\nexport type ModeType = typeof MODES[number];\n\n//Thinking about it...\n//https://developer.mozilla.org/it/docs/Web/JavaScript/Reference/Global_Objects/Proxy\n/*\nlet MODE_DEF = [\n  'IDLE',\n  '2D_ZOOM_IN',\n  '2D_ZOOM_OUT',\n  '2D_PAN',\n  '3D_VIEW',\n  '3D_FIRST_PERSON',\n  'WAITING_DRAWING_LINE',\n  'DRAGGING_LINE',\n  'DRAGGING_VERTEX',\n  'DRAGGING_ITEM',\n  'DRAGGING_HOLE',\n  'DRAWING_LINE',\n  'DRAWING_HOLE',\n  'DRAWING_ITEM',\n  'ROTATING_ITEM',\n  'UPLOADING_IMAGE',\n  'FITTING_IMAGE',\n  'VIEWING_CATALOG',\n  'CONFIGURING_PROJECT',\n];\n\nexport const MODE = new Proxy( MODE_DEF, { get: (target, name) => { return target.indexOf(name) !== -1 ? name : null } } );\n*/\n\nexport const MODE_SNAPPING = [\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE,\n  MODE_DRAWING_ITEM, MODE_DRAGGING_LINE, MODE_DRAGGING_VERTEX,\n  MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE,\n  MODE_UPLOADING_IMAGE, MODE_ROTATING_ITEM\n];\n\n//UNITS\nexport const UNIT_MILLIMETER = 'mm';\nexport const UNIT_CENTIMETER = 'cm';\nexport const UNIT_METER = 'm';\nexport const UNIT_INCH = 'in';\nexport const UNIT_FOOT = 'ft';\nexport const UNIT_MILE = 'mi';\n\nexport const UNITS_LENGTH = [\n  UNIT_MILLIMETER,\n  UNIT_CENTIMETER,\n  UNIT_METER,\n  UNIT_INCH,\n  UNIT_FOOT,\n  UNIT_MILE\n] as const;\n\nexport type UnitLengthType = typeof UNITS_LENGTH[number];\n\nexport const EPSILON = 1e-6;\n\nexport const KEYBOARD_BUTTON_CODE = {\n  DELETE: 46,\n  BACKSPACE: 8,\n  ESC: 27,\n  Z: 90,\n  ALT: 18,\n  C: 67,\n  V: 86,\n  CTRL: 17,\n  ENTER: 13,\n  TAB: 9\n};","import React, { createContext } from 'react';\nimport { ProjectActionsType, Viewer3DActionsType, Viewer2DActionsType, AreaActionsType, VerticesActionsType, ItemsActionsType, HolesActionsType, LinesActionsType, GroupsActionsType, SceneActionsType } from './actions/export';\nimport Translator from './translator/translator';\nimport { CatalogJson } from './catalog/catalog';\n\nexport interface ReactPlannerContextProps {\n    projectActions: ProjectActionsType,\n    viewer2DActions: Viewer2DActionsType,\n    viewer3DActions: Viewer3DActionsType,\n    linesActions: LinesActionsType,\n    holesActions: HolesActionsType,\n    itemsActions: ItemsActionsType,\n    sceneActions: SceneActionsType,\n    translator: Translator,\n    catalog: CatalogJson,\n    areaActions: AreaActionsType,\n    verticesActions: VerticesActionsType,\n    groupsActions: GroupsActionsType,\n}\n\nconst ReactPlannerContext = createContext<ReactPlannerContextProps>({} as ReactPlannerContextProps);\n\nexport default ReactPlannerContext;","import React, { Component, CSSProperties } from 'react';\nimport * as SharedStyle from '../../shared-style';\nimport { MdUpdate } from 'react-icons/md';\nimport { KEYBOARD_BUTTON_CODE } from '../../constants';\nimport ReactPlannerContext from '../../react-planner-context';\n\nconst STYLE_INPUT = {\n  display: 'block',\n  width: '100%',\n  padding: '0 2px',\n  fontSize: '13px',\n  lineHeight: '1.25',\n  color: SharedStyle.PRIMARY_COLOR.input,\n  backgroundColor: SharedStyle.COLORS.white,\n  backgroundImage: 'none',\n  border: '1px solid rgba(0,0,0,.15)',\n  outline: 'none',\n  height: '30px',\n} as const;\n\nconst confirmStyle = {\n  position: 'absolute',\n  cursor: 'pointer',\n  width: '2em',\n  height: '2em',\n  right: '0.35em',\n  top: '0.35em',\n  backgroundColor: SharedStyle.SECONDARY_COLOR.main,\n  color: '#FFF',\n  transition: 'all 0.1s linear'\n} as const;\n\ninterface FormNumberInputProps {\n  value: number,\n  style?: CSSProperties,\n  onChange: (update: { target: { value: number } }) => void,\n  onValid?: (update: Event) => void,\n  onInvalid?: (update: Event) => void,\n  min?: number,\n  max?: number,\n  precision?: number,\n  placeholder?: string\n};\n\ninterface FormNumberInputState {\n  focus: boolean,\n  valid: boolean,\n  showedValue: number,\n};\n\nexport default class FormNumberInput extends Component<FormNumberInputProps, FormNumberInputState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      focus: false,\n      valid: true,\n      showedValue: props.value\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.setState({ showedValue: this.props.value });\n    }\n  }\n\n  render() {\n    const { value = 0, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER, precision = 3, onChange, onValid, onInvalid, style, placeholder } = this.props;\n    const numericInputStyle = { ...STYLE_INPUT, ...style };\n\n    if (this.state.focus) numericInputStyle.border = `1px solid ${SharedStyle.SECONDARY_COLOR.main}`;\n\n    const regexp = new RegExp(`^-?([0-9]+)?\\\\.?([0-9]{0,${precision}})?$`);\n\n    const showedValue = this.state.showedValue;\n    if (!isNaN(min) && isFinite(min) && Number(showedValue) < min) this.setState({ showedValue: min }); // value = min;\n    if (!isNaN(max) && isFinite(max) && Number(showedValue) > max) this.setState({ showedValue: max }); // value = max;\n\n    const currValue = regexp.test(String(showedValue)) ? String(showedValue) : parseFloat(String(showedValue)).toFixed(precision);\n\n    const different = parseFloat(String(value)).toFixed(precision) !== parseFloat(String(showedValue)).toFixed(precision);\n\n    const saveFn = (e: React.KeyboardEvent | React.MouseEvent) => {\n      e.stopPropagation();\n      if (this.state.valid) {\n        const savedValue = showedValue || 0;\n        this.setState({ showedValue: savedValue });\n        onChange({ target: { value: savedValue } });\n      }\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        if (this.state.valid) {\n          const newValue = Math.min(Number(showedValue) + 1, max);\n          this.setState({ showedValue: newValue });\n          onChange({ target: { value: newValue } });\n        }\n      } else if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        if (this.state.valid) {\n          const newValue = Math.max(Number(showedValue) - 1, min);\n          this.setState({ showedValue: newValue });\n          onChange({ target: { value: newValue } });\n        }\n      }\n    }\n\n    return (\n      <div style={{ position: 'relative' }}>\n        <input\n          type=\"text\"\n          value={currValue}\n          style={numericInputStyle}\n          onChange={(evt) => {\n            const valid = regexp.test((evt.nativeEvent.target as any).value);\n\n            if (valid) {\n              this.setState({ showedValue: (evt.nativeEvent.target as any).value }); //TODO: better event type\n              if (onValid) onValid(evt.nativeEvent);\n            }\n            else {\n              if (onInvalid) onInvalid(evt.nativeEvent);\n            }\n\n            this.setState({ valid });\n          }}\n          onFocus={e => this.setState({ focus: true })}\n          onBlur={e => this.setState({ focus: false })}\n          onKeyDown={e => {\n            const keyCode = e.keyCode || e.which;\n            if ((keyCode == KEYBOARD_BUTTON_CODE.ENTER || keyCode == KEYBOARD_BUTTON_CODE.TAB) && different) {\n              saveFn(e);\n            } else {\n              handleKeyDown(e);\n            }\n          }}\n          placeholder={placeholder}\n        />\n        <div\n          onClick={e => { if (different) saveFn(e); }}\n          title={this.context.translator.t('Confirm')}\n          style={{ ...confirmStyle, visibility: different ? 'visible' : 'hidden', opacity: different ? '1' : '0' }}\n        >\n          <MdUpdate style={{ width: '100%', height: '100%', padding: '0.2em', color: '#FFF' }} />\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React, { CSSProperties, ReactNode } from 'react';\nimport * as SharedStyle from '../../shared-style';\n\nconst BASE_STYLE = {\n  display: \"block\",\n  width: \"100%\",\n  padding: \"0px 4px\",\n  fontSize: \"13px\",\n  color: SharedStyle.PRIMARY_COLOR.input,\n  backgroundColor: SharedStyle.COLORS.white,\n  backgroundImage: \"none\",\n  border: \"1px solid rgba(0,0,0,.15)\",\n  outline: \"none\",\n  borderRadius: \"0px\",\n  height: \"30px\",\n  WebkitAppearance: \"none\",\n  WebkitBorderRadius: \"0px\",\n  background: `url(\"data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24' height='24' viewBox='0 0 24 24'><path fill='#444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>\") #fff`,\n  backgroundPosition: \"100% 50%\",\n  backgroundRepeat: \"no-repeat\",\n} as const;\n\nexport default function FormSelect({ children, style, ...rest }: React.DetailedHTMLProps<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>) {\n  return <select style={{ ...BASE_STYLE, ...style }} {...rest}>{children}</select>;\n}\n","import React from 'react';\nimport { Range } from 'react-range';\nimport FormTextInput from './form-text-input';\n\nconst sliderContainerStyle = { display: 'inline-block', width: '80%', marginRight: '5%' } as const;\nconst sliderStyle = { display: 'block', width: '100%', height: '30px' } as const;\nconst textContainerStyle = { display: 'inline-block', width: '15%', float: 'right' } as const;\nconst textStyle = { height: '34px', textAlign: 'center' } as const;\n\nexport default function FormNumberInput({ value, onChange, ...rest }) {\n  return (\n    <div>\n      <div style={sliderContainerStyle}>\n        <Range\n          onChange={onChange}\n          values={[value]} {...rest}\n          renderTrack={({ props, children }) => (\n            <div\n              {...props}\n              style={{\n                ...props.style,\n                height: \"6px\",\n                width: \"100%\",\n                backgroundColor: \"#ccc\",\n              }}\n            >\n              {children}\n            </div>\n          )}\n          renderThumb={({ props }) => (\n            <div\n              {...props}\n              key={props.key}\n              style={{\n                ...props.style,\n                height: \"42px\",\n                width: \"42px\",\n                backgroundColor: \"#999\",\n              }}\n            />\n          )}\n        />\n        {/* Test if correct */}\n        { /* TODO: style? */}\n      </div>\n\n      <div style={textContainerStyle}>\n        <FormTextInput value={value} onChange={onChange} style={textStyle} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport Button from './button';\nimport * as SharedStyle from '../../shared-style';\n\nconst STYLE = {\n  borderColor: \"#415375\",\n  backgroundColor: \"#415375\",\n  color: SharedStyle.COLORS.white\n};\n\nconst STYLE_HOVER = {\n  borderColor: \"#1f3149\",\n  backgroundColor: \"#1f3149\",\n  color: SharedStyle.COLORS.white\n};\n\nexport default function FormSubmitButton({ children, ...rest }) {\n  return <Button type=\"submit\" style={STYLE} styleHover={STYLE_HOVER} {...rest}>{children}</Button>\n}\n","import Button from './button';\nimport CancelButton from './cancel-button';\nimport ContentContainer from './content-container';\nimport ContentTitle from './content-title';\nimport DeleteButton from './delete-button';\nimport FormBlock from './form-block';\nimport FormColorInput from './form-color-input';\nimport FormLabel from './form-label';\nimport FormNumberInput from './form-number-input';\nimport FormSelect from './form-select';\nimport FormSlider from './form-slider';\nimport FormSubmitButton from './form-submit-button';\nimport FormTextInput from './form-text-input';\n\nexport {\n  Button,\n  CancelButton,\n  ContentContainer,\n  ContentTitle,\n  DeleteButton,\n  FormBlock,\n  FormColorInput,\n  FormLabel,\n  FormNumberInput,\n  FormSelect,\n  FormSlider,\n  FormSubmitButton,\n  FormTextInput\n};\n\nexport default {\n  Button,\n  CancelButton,\n  ContentContainer,\n  ContentTitle,\n  DeleteButton,\n  FormBlock,\n  FormColorInput,\n  FormLabel,\n  FormNumberInput,\n  FormSelect,\n  FormSlider,\n  FormSubmitButton,\n  FormTextInput\n};\n","const tableStyle = { width: '100%', borderSpacing: '2px 0', marginBottom: '2px' } as const;\nconst firstTdStyle = { width: '6em', textTransform: 'capitalize' } as const;\n\nconst PropertyStyle = {\n  tableStyle,\n  firstTdStyle\n} as const;\n\nexport default PropertyStyle;\n","import React from 'react';\nimport { FormLabel, FormColorInput } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\nimport { State } from '../../models';\n\ninterface PropertyColorProps {\n  value: any;\n  onUpdate: (value: any) => void;\n  configs: any;\n  sourceElement?: any;\n  internalState?: any;\n  state: State;\n}\n\nexport default function PropertyColor({ value, onUpdate, configs, sourceElement, internalState, state }: PropertyColorProps) {\n  const update = (val) => {\n    if (configs.hook) {\n      return configs.hook(val, sourceElement, internalState, state).then(_val => {\n        return onUpdate(_val);\n      });\n    }\n\n    return onUpdate(val);\n  };\n\n  return (\n    <table className=\"PropertyColor\" style={PropertyStyle.tableStyle}>\n      <tbody>\n        <tr>\n          <td style={PropertyStyle.firstTdStyle}>\n            <FormLabel>{configs.label}</FormLabel>\n          </td>\n          <td>\n            <FormColorInput value={value} onChange={event => update(event.target.value)} />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react';\nimport { FormLabel, FormSelect } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\nimport { State } from '../../models';\n\ntype PropertyEnumProps = {\n  value: any;\n  onUpdate: (value: string) => void;\n  configs: {\n    label: string;\n    hook(val: string, sourceElement?: any, internalState?: any, state?: State): Promise<string>;\n    values: Record<string, any>;\n  };\n  sourceElement?: any;\n  internalState?: any;\n  state: State;\n}\n\nexport default function PropertyEnum({ value, onUpdate, configs, sourceElement, internalState, state }: PropertyEnumProps) {\n\n  const update = (val: string) => {\n    if (configs.hook) {\n      return configs.hook(val, sourceElement, internalState, state).then(_val => {\n        return onUpdate(_val);\n      });\n    }\n    return onUpdate(val);\n  };\n\n  return (\n    <table className=\"PropertyEnum\" style={PropertyStyle.tableStyle}>\n      <tbody>\n        <tr>\n          <td style={PropertyStyle.firstTdStyle}><FormLabel>{configs.label}</FormLabel></td>\n          <td>\n            <FormSelect value={value} onChange={event => update(event.target.value)}>\n              {Object.entries(configs.values).map(([key, value]) => (\n                <option key={key} value={key}>{value}</option>\n              ))}\n            </FormSelect>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react';\nimport { FormLabel, FormTextInput } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\nimport { State } from '../../models';\n\nconst tableStyle = { width: \"100%\", borderSpacing: \"2px 0\", marginBottom: \"2px\" } as const;\nconst firstTdStyle = { width: '6em', textTransform: 'capitalize' } as const;\n\ninterface PropertyStringProps {\n  value: string;\n  onUpdate: (value: string) => void;\n  configs: {\n    label: string;\n    hook?: (value: string, sourceElement?: any, internalState?: any, state?: State) => Promise<string>;\n  };\n  sourceElement?: any;\n  internalState?: any;\n  state: State;\n}\n\nexport default function PropertyString({ value, onUpdate, configs, sourceElement, internalState, state }: PropertyStringProps) {\n\n  const update = (val: string) => {\n    if (configs.hook) {\n      return configs.hook(val, sourceElement, internalState, state).then(_val => {\n        return onUpdate(_val);\n      });\n    }\n\n    return onUpdate(val);\n  };\n\n  return (\n    <table className=\"PropertyString\" style={PropertyStyle.tableStyle}>\n      <tbody>\n        <tr>\n          <td style={PropertyStyle.firstTdStyle}><FormLabel>{configs.label}</FormLabel></td>\n          <td>\n            <FormTextInput\n              value={value}\n              onChange={event => update(event.target.value)} />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react'\nimport { FormLabel, FormNumberInput } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\nimport { State } from '../../models';\n\ninterface PropertyNumberProps {\n  value: any;\n  onUpdate: (value: any) => void;\n  onValid?: (event: Event) => void;\n  configs: any;\n  sourceElement?: any;\n  internalState?: any;\n  state: State;\n}\n\nexport default function PropertyNumber({ value, onUpdate, onValid, configs, sourceElement, internalState, state }: PropertyNumberProps) {\n  const update = (val) => {\n    let number = parseFloat(val);\n\n    if (isNaN(number)) {\n      number = 0;\n    }\n\n    if (configs.hook) {\n      return configs.hook(number, sourceElement, internalState, state).then(_val => {\n        return onUpdate(_val);\n      });\n    }\n\n    return onUpdate(number);\n  };\n\n  return (\n    <table className=\"PropertyNumber\" style={PropertyStyle.tableStyle}>\n      <tbody>\n        <tr>\n          <td style={PropertyStyle.firstTdStyle}><FormLabel>{configs.label}</FormLabel></td>\n          <td>\n            <FormNumberInput\n              value={value}\n              onChange={event => update(event.target.value)}\n              onValid={onValid}\n              min={configs.min}\n              max={configs.max} />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n\n}\n","/** @description Return float fixed to desired precision\n *  @param num Float to fix\n *  @param precision Desired precision, or 6 if not specified\n *  @return Fixed float\n*/\nexport function toFixedFloat(num: string | number, precision = 6) {\n  if (num && precision) {\n    return parseFloat(parseFloat((num as string)).toFixed(precision));\n  }\n  return 0;\n}\n\n/** @description Return absolute value of a number\n *  @param {number} n Number of wich get value without sign\n *  @return {number}\n*/\nexport const fAbs = (n: number): number => { let x = n; (x < 0) && (x = ~x + 1); return x; };\n\n/** @description Multiply two matrices\n *  @param {Array} m1 Matrix 1\n *  @param {Array} m2 Matrix 2\n *  @return {Array}\n*/\nexport const multiplyMatrices = (m1, m2) => {\n  const result = [];\n  for (let i = 0; i < m1.length; i++) {\n    result[i] = [];\n    for (let j = 0; j < m2[0].length; j++) {\n      let sum = 0;\n      for (let k = 0; k < m1[0].length; k++) {\n        sum += m1[i][k] * m2[k][j];\n      }\n      result[i][j] = sum;\n    }\n  }\n  return result;\n};\n","import React, { useContext } from 'react';\nimport { UNITS_LENGTH, UNIT_CENTIMETER } from './../../constants';\nimport convert from 'convert-units';\nimport { FormLabel, FormNumberInput, FormSelect } from '../../components/style/export';\nimport { toFixedFloat } from '../../utils/math';\nimport PropertyStyle from './shared-property-style';\nimport { State } from '../../models';\nimport { LengthMeasureValue } from '../../types';\n\nconst internalTableStyle = { borderCollapse: 'collapse' } as const;\nconst secondTdStyle = { padding: 0 } as const;\nconst unitContainerStyle = { width: '5em' } as const;\n\ninterface PropertyLengthMeasureProps {\n  value: LengthMeasureValue;\n  onUpdate: (value: LengthMeasureValue) => void;\n  onValid?: (isValid: boolean) => void,\n  configs: any,\n  sourceElement?: any,\n  internalState?: any,\n  state: State\n}\n\nexport default function PropertyLengthMeasure({ value, onUpdate, onValid, configs, sourceElement, internalState, state }: PropertyLengthMeasureProps) {\n  const length = value.length || 0;\n  const _length = value._length || length;\n  const _unit = value._unit || UNIT_CENTIMETER;\n  const { hook, label, ...configRest } = configs;\n\n  const update = (lengthInput: number, unitInput: string) => {\n    const newLength = toFixedFloat(lengthInput);\n    const merged = {\n      ...value,\n      length: unitInput !== UNIT_CENTIMETER ? convert(newLength).from(unitInput).to(UNIT_CENTIMETER) : newLength,\n      _length: lengthInput,\n      _unit: unitInput\n    };\n\n    if (hook) {\n      return hook(merged, sourceElement, internalState, state).then(val => {\n        return onUpdate(val);\n      });\n    }\n\n    return onUpdate(merged);\n  };\n\n  return (\n    <table className=\"PropertyLengthMeasure\" style={PropertyStyle.tableStyle}>\n      <tbody>\n        <tr>\n          <td style={PropertyStyle.firstTdStyle}><FormLabel>{label}</FormLabel></td>\n          <td style={secondTdStyle}>\n            <table style={internalTableStyle}>\n              <tbody>\n                <tr>\n                  <td>\n                    <FormNumberInput\n                      value={_length}\n                      onChange={event => update(event.target.value, _unit)}\n                      onValid={onValid}\n                      {...configRest}\n                    />\n                  </td>\n                  <td style={unitContainerStyle}>\n                    <FormSelect value={_unit} onChange={event => update(_length, event.target.value)}>\n                      {\n                        UNITS_LENGTH.map(el => <option key={el} value={el}>{el}</option>)\n                      }\n                    </FormSelect>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n\n}\n","import React from 'react';\nimport { FormLabel, Button } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\nimport { State } from '../../models';\n\ninterface PropertyStringProps {\n  value: boolean;\n  onUpdate: (value: boolean) => void;\n  configs: {\n    hook?: (val: boolean, sourceElement, internalState, state: State) => Promise<boolean>;\n    label: string;\n    actionName?: string;\n  };\n  sourceElement?: any;\n  internalState?: any;\n  state: State;\n}\n\nexport default function PropertyToggle({ value, onUpdate, configs, sourceElement, internalState, state }: PropertyStringProps) {\n  const update = (val: boolean) => {\n    if (configs.hook) {\n      return configs.hook(val, sourceElement, internalState, state).then(_val => {\n        return onUpdate(_val);\n      });\n    }\n\n    return onUpdate(val);\n  };\n\n  const buttonStyle = {\n    height: \"30px\",\n    backgroundColor: value ? \"#99C3FB\" : \"#8E9BA2\"\n  } as const;\n\n  return (\n    <table className=\"PropertyToggle\" style={PropertyStyle.tableStyle}>\n      <tbody>\n        <tr>\n          <td style={PropertyStyle.firstTdStyle}><FormLabel>{configs.label}</FormLabel></td>\n          <td>\n            <Button onClick={() => update(!value)} style={buttonStyle} styleHover={buttonStyle} size=\"small\">{configs.actionName}</Button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react';\nimport { FormLabel } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\nimport { State } from '../../models';\n\nconst checkboxStyle = { margin: 0 };\n\ninterface PropertyCheckboxProps {\n  value: any;\n  onUpdate: (value: any) => void;\n  configs: any;\n  sourceElement?: any;\n  internalState?: any;\n  state: State;\n}\n\nexport default function PropertyCheckbox({ value, onUpdate, configs, sourceElement, internalState, state }: PropertyCheckboxProps) {\n  const update = (val) => {\n    if (configs.hook) {\n      return configs.hook(val, sourceElement, internalState, state).then(_val => {\n        return onUpdate(_val);\n      });\n    }\n\n    return onUpdate(val);\n  };\n\n  return (\n    <table className=\"PropertyCheckbox\" style={PropertyStyle.tableStyle}>\n      <tbody>\n        <tr>\n          <td style={PropertyStyle.firstTdStyle}><FormLabel>{configs.label}</FormLabel></td>\n          <td>\n            <input style={checkboxStyle} type=\"checkbox\" checked={value} onChange={e => update(!value)} />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react';\n\ninterface PropertyHiddenProps {\n  value: any;\n  onUpdate: (value: any) => void;\n  configs: object;\n  sourceElement?: object;\n  internalState?: object;\n  state: object;\n}\n\nexport default function PropertyHidden({ value, onUpdate, configs, sourceElement, internalState, state }: PropertyHiddenProps) {\n  return null\n}\n","import React from 'react';\nimport { FormLabel } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\nimport { State } from '../../models';\n\ninterface PropertyReadOnlyProps {\n  value: any;\n  onUpdate: (value: any) => void;\n  configs: any;\n  sourceElement?: any;\n  internalState?: any;\n  state: State;\n}\n\nexport default function PropertyReadOnly({ value, onUpdate, configs, sourceElement, internalState, state }: PropertyReadOnlyProps) {\n  return (\n    <table className=\"PropertyReadOnly\" style={PropertyStyle.tableStyle}>\n      <tbody>\n        <tr>\n          <td style={PropertyStyle.firstTdStyle}><FormLabel>{configs.label}</FormLabel></td>\n          <td>\n            <div>{value}</div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import {\n  PropertyColor,\n  PropertyEnum,\n  PropertyString,\n  PropertyNumber,\n  PropertyLengthMeasure,\n  PropertyToggle,\n  PropertyCheckbox,\n  PropertyHidden,\n  PropertyReadOnly\n} from './properties/export';\n\nimport { UNIT_CENTIMETER, UnitLengthType } from '../constants';\nimport { Layer, Line, Scene, Hole, Area, Item } from '../models';\nimport { ReactNode } from 'react';\nimport { Object3DEventMap, Object3D } from 'three';\nimport { CatalogElementInfo, CatalogElement, CatalogElementBase, PrototypeToElement } from '../types';\n\nexport type CatalogJson = {\n  elements: Record<string, CatalogElement>;\n  categories: {\n    root: {\n      [key: string]: any;\n    };\n    [key: string]: any;\n  };\n  propertyTypes: Record<string, any>;\n  unit: UnitLengthType;\n}\n\nexport const CatalogFn = {\n  /** @description Get catalog's element\n   *  @param catalog Catalog object\n   *  @param type Element's type\n   *  @return Element\n  */\n  getElement: <Name extends keyof CatalogJson['elements']>(catalog: CatalogJson, type: Name): CatalogElementBase<keyof PrototypeToElement> => {\n    const elements = catalog.elements;\n    if (Object.prototype.hasOwnProperty.call(elements, type)) {\n      return elements[type];\n    }\n    throw new Error(`Element ${String(type)} does not exist in catalog`);\n  },\n\n  /** @description Get catalog category\n   *  @param catalog Catalog object\n   *  @param categoryName Name of category\n   *  @return Category\n  */\n  getCategory: (catalog: CatalogJson, categoryName: string) => {\n    if (CatalogFn.hasCategory(catalog, categoryName)) {\n      return catalog.categories[categoryName];\n    }\n    throw new Error(`Category ${categoryName} does not exist in catalog`);\n  },\n\n  /** @description Return type of a specfied property\n   *  @param catalog Catalog object\n   *  @param type Property type\n   *  @return Property\n  */\n  getPropertyType: (catalog: CatalogJson, type: string) => {\n    if (catalog.propertyTypes.hasOwnProperty(type)) {\n      return catalog.propertyTypes[type];\n    }\n    throw new Error(`Element ${type} does not exist in catalog`);\n  },\n\n  /** @description Register a new element\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {object} json Element structure\n   *  @return {void}\n  */\n  registerElement: (catalog: CatalogJson, json: CatalogElement): void => {\n    //json.properties = json.properties || {};\n    if (CatalogFn.validateElement(catalog, json)) {\n      catalog.elements[json.name] = json;\n      catalog.categories.root.elements.push(catalog.elements[json.name]);\n    }\n  },\n\n  /** @description Register multiple elements\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {array} [elementArray] Array of elements\n   *  @return {void}\n  */\n  registerMultipleElements: (catalog: CatalogJson, elementArray: Array<any>): void => {\n    elementArray.forEach(el => CatalogFn.registerElement(catalog, el));\n  },\n\n  /** @description Register a new property\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {string} type Type of property\n   *  @param {object} Viewer Property viewer component\n   *  @param {object} Editor Property editor component\n   *  @return {void}\n  */\n  registerPropertyType: (catalog: CatalogJson, type: string, Viewer: object, Editor: object): void => {\n    catalog.propertyTypes[type] = { type, Viewer, Editor };\n  },\n\n  /** @description Register multiple property\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {array} propertyTypeArray Array of properties\n   *  @return {void}\n  */\n  registerMultiplePropertyType: (catalog: CatalogJson, propertyTypeArray: Array<[string, any, any]>): void => {\n    propertyTypeArray.forEach(el => CatalogFn.registerPropertyType(catalog, ...el));\n  },\n\n  /** @description Validate an element\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {object} json Element's structure\n   *  @return {?boolean}\n  */\n  validateElement: (catalog: CatalogJson, json: CatalogElement): boolean | null => {\n    if (!json.hasOwnProperty('name')) throw new Error('Element not valid');\n\n    const name = json.name;\n    if (!json.hasOwnProperty('prototype')) throw new Error(`Element ${name} doesn't have prototype`);\n\n    if (!json.hasOwnProperty('info')) throw new Error(`Element ${name} doesn't have info`);\n    if (!json.info.hasOwnProperty('tag')) throw new Error(`Element ${name} doesn't have tag`);\n    if (!json.info.hasOwnProperty('description')) throw new Error(`Element ${name} doesn't have description`);\n    if (!json.info.hasOwnProperty('image')) throw new Error(`Element ${name} doesn't have image`);\n\n    if (!json.hasOwnProperty('render2D')) throw new Error(`Element ${name} doesn't have render2D handler`);\n    if (!json.hasOwnProperty('render3D')) throw new Error(`Element ${name} doesn't have render3D handler`);\n    if (!json.hasOwnProperty('properties')) throw new Error(`Element ${name} doesn't have properties`);\n\n    for (const propertyName in json.properties) {\n      const propertyConfigs = json.properties[propertyName];\n      if (!propertyConfigs.hasOwnProperty('type')) throw new Error(`Element ${name}, Property ${propertyName} doesn't have type`);\n      if (!propertyConfigs.hasOwnProperty('defaultValue')) throw new Error(`Element ${name}, Property ${propertyName} doesn't have defaultValue`);\n    }\n\n    return true;\n  },\n\n  /** @description Check if catalog has element\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {string} type Element's type\n   *  @return {boolean}\n  */\n  hasElement: (catalog: CatalogJson, type: string): boolean => {\n    return catalog.elements.hasOwnProperty(type);\n  },\n\n  /** @description Register a new category\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {string} name Name of category\n   *  @param {string} label Label of category\n   *  @param {array} [childs] Category's childs\n   *  @return {?object} Registered category\n  */\n  registerCategory: (catalog: CatalogJson, name: string, label: string, childs: any[]): object | null => {\n    if (CatalogFn.validateCategory(catalog, name, label)) {\n      catalog.categories[name] = { name, label, categories: [], elements: [] };\n      catalog.categories.root.categories.push(catalog.categories[name]);\n\n      if (childs) {\n        childs.forEach(el => CatalogFn.addToCategory(catalog, name, el));\n      }\n\n      return catalog.categories[name];\n    }\n    return null;\n  },\n\n  /** @description Add an element to the specified category\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {string} name Name of category\n   *  @param {object} child Element's structure\n   *  @return {?void}\n  */\n  addToCategory: (catalog: CatalogJson, name: string, child: any): void | null => {\n    if (CatalogFn.hasElement(catalog, child.name)) {\n      catalog.categories[name].elements.push(child);\n      catalog.categories.root.elements.splice(catalog.categories.root.elements.indexOf(child), 1);\n    } else if (CatalogFn.hasCategory(catalog, child.name)) {\n      catalog.categories[name].categories.push(child);\n      catalog.categories.root.categories.splice(catalog.categories.root.categories.indexOf(child), 1);\n    } else {\n      throw new Error(`child ${child} is either category nor element`);\n    }\n  },\n\n  /** @description Check if category contain element\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {string} categoryName Name of category\n   *  @param {string} elementName Name of element\n   *  @return {boolean}\n  */\n  categoryHasElement: (catalog: CatalogJson, categoryName: string, elementName: string): boolean => {\n    return CatalogFn.hasCategory(catalog, categoryName) && catalog.categories[categoryName].elements.some(el => el.name === elementName);\n  },\n\n  /** @description Validate a category\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {string} name Name of category\n   *  @param {string} label Label of category\n   *  @return {?boolean}\n  */\n  validateCategory: (catalog: CatalogJson, name: string, label: string): boolean | null => {\n    if (!name) {\n      throw new Error('Category has undefined name');\n    }\n    if (name === '') {\n      throw new Error('Category has empty name');\n    }\n    if (CatalogFn.hasCategory(catalog, name)) {\n      throw new Error('Category has already been registered');\n    }\n\n    return true;\n  },\n\n  /** @description Verify if catalog already contain a category with specified name\n   *  @param {CatalogJson} catalog Catalog object\n   *  @param {string} categoryName Name of category\n   *  @return {boolean}\n  */\n  hasCategory: (catalog: CatalogJson, categoryName: string): boolean => {\n    return catalog.categories.hasOwnProperty(categoryName);\n  },\n}\n\nexport function CatalogFactory(unit: UnitLengthType = UNIT_CENTIMETER): CatalogJson {\n  const catalog = {\n    unit,\n    elements: {},\n    categories: { root: { name: 'root', label: '/', elements: [], categories: [] } },\n    propertyTypes: {},\n  }\n  CatalogFn.registerMultiplePropertyType(catalog, [\n    ['color', PropertyColor, PropertyColor],\n    ['enum', PropertyEnum, PropertyEnum],\n    ['string', PropertyString, PropertyString],\n    ['number', PropertyNumber, PropertyNumber],\n    ['length-measure', PropertyLengthMeasure, PropertyLengthMeasure],\n    ['toggle', PropertyToggle, PropertyToggle],\n    ['checkbox', PropertyCheckbox, PropertyCheckbox],\n    ['hidden', PropertyHidden, PropertyHidden],\n    ['read-only', PropertyReadOnly, PropertyReadOnly]\n  ])\n  return catalog;\n}\n","export default {\n  \"+ Add Horizontal Giude\": \"+ Add Horizontal Giude\",\n  \"+ Add Vertical Giude\": \"+ Add Vertical Giude\",\n  \"2D View\": \"2D View\",\n  \"3D First Person\": \"3D First Person\",\n  \"3D View\": \"3D View\",\n  \"altitude\": \"altitude\",\n  \"Altitude\": \"Altitude\",\n  \"Areas\": \"Areas\",\n  \"Cancel\": \"Cancel\",\n  \"Catalog\": \"Catalog\",\n  \"Chain selected Elements to Group\": \"Chain selected Elements to Group\",\n  \"Circular\": \"Circular\",\n  \"color\": \"color\",\n  \"Configure layer\": \"Configure layer\",\n  \"Configure project\": \"Configure project\",\n  \"Confirm\": \"Confirm\",\n  \"Copy\": \"Copy\",\n  \"Delete group and all Elements\": \"Delete group and all Elements\",\n  \"Delete layer\": \"Delete layer\",\n  \"Delete\": \"Delete\",\n  \"Elements on layer {0}\": \"Elements on layer {0}\",\n  \"Elements\": \"Elements\",\n  \"Get Screenshot\": \"Get Screenshot\",\n  \"Group [{0}]\": \"Group [{0}]\",\n  \"Group's Barycenter\": \"Group's Barycenter\",\n  \"Group's Elements\": \"Group's Elements\",\n  \"Groups\": \"Groups\",\n  \"Guides\": \"Guides\",\n  \"height\": \"height\",\n  \"Holes\": \"Holes\",\n  \"Horizontal\": \"Horizontal\",\n  \"Items\": \"Items\",\n  \"Last Selected\": \"Last Selected\",\n  \"Layer config\": \"Layer config\",\n  \"Layer\": \"Layer\",\n  \"Layers\": \"Layers\",\n  \"Length\": \"Length\",\n  \"Lines\": \"Lines\",\n  \"Load project\": \"Load project\",\n  \"Mouse X Coordinate\": \"Mouse X Coordinate\",\n  \"Mouse Y Coordinate\": \"Mouse Y Coordinate\",\n  \"Name\": \"Name\",\n  \"New Empty Group\": \"New Empty Group\",\n  \"New Group from selected\": \"New Group from selected\",\n  \"New layer\": \"New layer\",\n  \"New project\": \"New project\",\n  \"opacity\": \"opacity\",\n  \"Open catalog\": \"Open catalog\",\n  \"order\": \"order\",\n  \"Pan\": \"Pan\",\n  \"Paste\": \"Paste\",\n  \"Project config\": \"Project config\",\n  \"Properties: [{0}] {1}\": \"Properties: [{0}] {1}\",\n  \"Prototype\": \"Prototype\",\n  \"Reset\": \"Reset\",\n  \"Rotation\": \"Rotation\",\n  \"Save project\": \"Save project\",\n  \"Save\": \"Save\",\n  \"Scene Zoom Level\": \"Scene Zoom Level\",\n  \"Search Element\": \"Search Element\",\n  \"Snap to Grid\": \"Snap to Grid\",\n  \"Snap to Guide\": \"Snap to Guide\",\n  \"Snap to Line\": \"Snap to Line\",\n  \"Snap to Point\": \"Snap to Point\",\n  \"Snap to Segment\": \"Snap to Segment\",\n  \"texture\": \"texture\",\n  \"thickness\": \"thickness\",\n  \"Toggle Group Visibility\": \"Toggle Group Visibility\",\n  \"Un-chain all Group\\'s Elements and remove Group\": \"Un-chain all Group\\'s Elements and remove Group\",\n  \"Un-chain Element from Group\": \"Un-chain Element from Group\",\n  \"Undo (CTRL-Z)\": \"Undo (CTRL-Z)\",\n  \"Unselect\": \"Unselect\",\n  \"Vertical\": \"Vertical\",\n  \"width\": \"width\",\n  \"Would you want to start a new Project?\": \"Would you want to start a new Project?\",\n  \"Zoom in\": \"Zoom in\",\n  \"Zoom out\": \"Zoom out\"\n};\n","export default {\n  \"+ Add Horizontal Giude\": \"+ Aggiungi Guida Orizzontale\",\n  \"+ Add Vertical Giude\": \"+ Aggiungi Guida Verticale\",\n  \"2D View\": \"Vista 2D\",\n  \"3D First Person\": \"3D Prima persona\",\n  \"3D View\": \"Vista 3D\",\n  \"Altitude\": \"Quota\",\n  \"altitude\": \"Quota\",\n  \"Areas\": \"Aree\",\n  \"Cancel\": \"Annulla\",\n  \"Catalog\": \"Catalogo\",\n  \"Chain selected Elements to Group\": \"Collega l'Elemento selzionato al Gruppo\",\n  \"Circular\": \"Circolare\",\n  \"color\": \"colore\",\n  \"Configure layer\": \"Configura livello\",\n  \"Configure project\": \"Configura progetto\",\n  \"Confirm\": \"Conferma\",\n  \"Copy\": \"Copia\",\n  \"Delete group and all Elements\": \"Elimina Gruppo e tutti i suoi Elementi\",\n  \"Delete layer\": \"Elimina livello\",\n  \"Delete\": \"Elimina\",\n  \"Elements on layer {0}\": \"Elementi nel livello {0}\",\n  \"Elements\": \"Elementi\",\n  \"Get Screenshot\": \"Cattura uno screenshot\",\n  \"Group [{0}]\": \"Gruppo [{0}]\",\n  \"Group's Barycenter\": \"Baricentro del Gruppo\",\n  \"Group's Elements\": \"Elementi del Gruppo\",\n  \"Groups\": \"Gruppi\",\n  \"Guides\": \"Guide\",\n  \"height\": \"Altezza\",\n  \"Holes\": \"Buchi\",\n  \"Horizontal\": \"Orizzontale\",\n  \"Items\": \"Oggetti\",\n  \"Last Selected\": \"Ultimi Selezionati\",\n  \"Layer config\": \"Configurazione livello\",\n  \"Layer\": \"Livello\",\n  \"Layers\": \"Livelli\",\n  \"Length\": \"Lunghezza\",\n  \"Lines\": \"Linee\",\n  \"Load project\": \"Carica progetto\",\n  \"Mouse X Coordinate\": \"Coordinata X del Mouse\",\n  \"Mouse Y Coordinate\": \"Coordinata Y del Mouse\",\n  \"Name\": \"Nome\",\n  \"New Empty Group\": \"Crea Gruppo Vuoto\",\n  \"New Group from selected\": \"Crea Gruppo dai selezionati\",\n  \"New layer\": \"Nuovo livello\",\n  \"New project\": \"Nuovo progetto\",\n  \"opacity\": \"Opacità\",\n  \"Open catalog\": \"Apri catalogo\",\n  \"order\": \"Ordine\",\n  \"Pan\": \"Muovi\",\n  \"Paste\": \"Incolla\",\n  \"Project config\": \"Configurazione progetto\",\n  \"Properties: [{0}] {1}\": \"Proprietà: [{0}] {1}\",\n  \"Prototype\": \"Prototipo\",\n  \"Reset\": \"Annulla\",\n  \"Rotation\": \"Rotazione\",\n  \"Save project\": \"Salva progetto\",\n  \"Save\": \"Salva\",\n  \"Scene Zoom Level\": \"Livello di Zoom della Scena\",\n  \"Search Element\": \"Cerca Elemento\",\n  \"Snap to Grid\": \"Snap alla Griglia\",\n  \"Snap to Guide\": \"Snap alla Guida\",\n  \"Snap to Line\": \"Snap alla Linea\",\n  \"Snap to Point\": \"Snap al Punto\",\n  \"Snap to Segment\": \"Snap al Segmento\",\n  \"texture\": \"texture\",\n  \"thickness\": \"spessore\",\n  \"Toggle Group Visibility\": \"Varia la visibilità del Gruppo\",\n  \"Un-chain all Group\\'s Elements and remove Group\": \"Elimina il Gruppo e scollega tutti gli Elementi appartenenti\",\n  \"Un-chain Element from Group\": \"Scollega l'Elemento dal Gruppo\",\n  \"Undo (CTRL-Z)\": \"Annulla (CTRL-Z)\",\n  \"Unselect\": \"Deseleziona\",\n  \"Vertical\": \"Verticale\",\n  \"width\": \"Larghezza\",\n  \"Would you want to start a new Project?\": \"Vuoi iniziare un nuovo progetto?\",\n  \"Zoom in\": \"Ingrandisci\",\n  \"Zoom out\": \"Riduci\"\n};\n","export default {\n  \"+ Add Horizontal Giude\": \"+ Добавить горизонтальное руководство\",\n  \"+ Add Vertical Giude\": \"+ Добавить вертикальное руководство\",\n  \"2D View\": \"Плоский вид\",\n  \"3D First Person\": \"3D от первого лица\",\n  \"3D View\": \"Объёмный вид\",\n  \"altitude\": \"высота\",\n  \"Altitude\": \"Высота\",\n  \"Areas\": \"Поверхности\",\n  \"Cancel\": \"Отмена\",\n  \"Catalog\": \"Каталог\",\n  \"Chain selected Elements to Group\": \"Цепочка выбранных элементов в группу\",\n  \"Circular\": \"круговой\",\n  \"color\": \"цвет\",\n  \"Configure layer\": \"Настроить слой\",\n  \"Configure project\": \"Настроить проект\",\n  \"Confirm\": \"подтвердить\",\n  \"Copy\": \"Копировать\",\n  \"Delete group and all Elements\": \"Удалить группу и все элементы\",\n  \"Delete layer\": \"Удалить слой\",\n  \"Delete\": \"Удалить\",\n  \"Elements on layer {0}\": \"Элементов на слое {0}\",\n  \"Elements\": \"элементы\",\n  \"Get Screenshot\": \"Сделать снимок экрана\",\n  \"Group [{0}]\": \"группа [{0}]\",\n  \"Group's Barycenter\": \"Барицентр группы\",\n  \"Group's Elements\": \"Элементы группы\",\n  \"Groups\": \"группы\",\n  \"Guides\": \"руководства\",\n  \"height\": \"высота\",\n  \"Holes\": \"Проёмы\",\n  \"Horizontal\": \"горизонтальный\",\n  \"Items\": \"Предметы\",\n  \"Last Selected\": \"Последний выбраный\",\n  \"Layer config\": \"Настройка слоя\",\n  \"Layer\": \"Слой\",\n  \"Layers\": \"Слои\",\n  \"Length\": \"Длинна\",\n  \"Lines\": \"Линии\",\n  \"Load project\": \"Загрузить проект\",\n  \"Mouse X Coordinate\": \"X-координата курсора\",\n  \"Mouse Y Coordinate\": \"Y-координата курсора\",\n  \"Name\": \"Название\",\n  \"New Empty Group\": \"Новая пустая группа\",\n  \"New Group from selected\": \"Новая группа из выбранных\",\n  \"New layer\": \"Новый слой\",\n  \"New project\": \"Новый проект\",\n  \"opacity\": \"непрозрачность\",\n  \"Open catalog\": \"Открыть каталог\",\n  \"order\": \"порядок\",\n  \"Pan\": \"Двигать\",\n  \"Paste\": \"Вставить\",\n  \"Project config\": \"Настройка проекта\",\n  \"Properties: [{0}] {1}\": \"Свойства: [{0}] {1}\",\n  \"Prototype\": \"Опытный образец\",\n  \"Reset\": \"Сброс\",\n  \"Rotation\": \"Вращение\",\n  \"Save project\": \"Сохранить проект\",\n  \"Save\": \"Сохранить\",\n  \"Scene Zoom Level\": \"Уровень приближениия сцены\",\n  \"Search Element\": \"Поиск\",\n  \"Snap to Grid\": \"Привязка к сетке\",\n  \"Snap to Guide\": \"Привязать к руководству\",\n  \"Snap to Line\": \"Привязка к линии\",\n  \"Snap to Point\": \"Привязка к точке\",\n  \"Snap to Segment\": \"Привязка к сегменту\",\n  \"texture\": \"текстура\",\n  \"thickness\": \"толщина\",\n  \"Toggle Group Visibility\": \"Переключить видимость группы\",\n  \"Un-chain all Group\\'s Elements and remove Group\": \"Удалить цепочку элементов группы и удалить группу\",\n  \"Un-chain Element from Group\": \"Unchain Element из группы\",\n  \"Undo (CTRL-Z)\": \"Отменить действие (CTRL-Z)\",\n  \"Unselect\": \"Снять выделене\",\n  \"Vertical\": \"вертикальный\",\n  \"width\": \"ширина\",\n  \"Would you want to start a new Project?\": \"Начать новый проект?\",\n  \"Zoom in\": \"Приблизить\",\n  \"Zoom out\": \"Отдалить\"\n};\n","import EN from './en'\nimport IT from './it'\nimport RU from './ru'\n\nconst DEFAULT_LOCALE = 'en'\n\nexport default class Translator {\n  locale: string\n  translations: { [key: string]: { [key: string]: string } }\n  constructor() {\n    this.locale = null\n    this.translations = {}\n\n    this.registerTranslation('en', EN)\n    this.registerTranslation('it', IT)\n    this.registerTranslation('ru', RU)\n\n    let locale = null\n    const languages = Translator.getBrowserLanguages()\n    for (let i = 0; i < languages.length; i++) {\n      const lang = languages[i]\n      if (this.translations.hasOwnProperty(lang)) {\n        locale = lang\n        break\n      }\n    }\n    locale = locale ? locale : DEFAULT_LOCALE\n\n    this.setLocale(locale)\n  }\n\n  t(phrase, ...params) {\n    return this.translate(phrase, ...params)\n  }\n\n  translate(phrase, ...params) {\n    const locale = this.locale\n\n    const translation = this.translations[locale]\n    if (!translation.hasOwnProperty(phrase)) {\n      console.warn(`translation '${phrase}' not found in language '${locale}'`)\n      return phrase\n    }\n\n    let translatedPhrase = translation[phrase]\n\n    translatedPhrase = translatedPhrase.replace(/{(\\d+)}/g, function (match, number) {\n      return typeof params[number] != 'undefined' ? params[number] : match\n    })\n\n    return translatedPhrase\n  }\n\n  setLocale(locale) {\n    locale = locale.toLowerCase()\n\n    if (this.translations.hasOwnProperty(locale)) {\n      this.locale = locale\n    } else {\n      console.warn(`locale '${locale}' not available, switch to ${DEFAULT_LOCALE}`)\n      this.locale = DEFAULT_LOCALE.toLowerCase()\n    }\n  }\n\n  registerTranslation(locale, translations) {\n    if (!this.translations.hasOwnProperty(locale)) {\n      this.translations[locale] = translations\n    } else {\n      Object.assign(this.translations[locale], translations)\n    }\n  }\n\n  static getBrowserLanguages() {\n    return navigator.languages\n      ? navigator.languages\n      : [navigator.language || (navigator as any).userLanguage]\n  }\n}\n","/** @description Determines the distance between two points\n *  @param {number} x0 Vertex 0 x\n *  @param {number} y0 Vertex 0 y\n *  @param {number} x1 Vertex 1 x\n *  @param {number} y1 Vertex 1 y\n *  @return {number}\n */\nimport { toFixedFloat, fAbs } from './math';\nimport { EPSILON } from '../constants';\nimport { Vertex as VertexModel } from '../models';\n\ntype Vertex = { x: number, y: number };\n\nexport function compareVertices(v0: Vertex, v1: Vertex) {\n  return v0.x === v1.x ? v0.y - v1.y : v0.x - v1.x;\n}\n\nexport function minVertex(v0: Vertex, v1: Vertex) {\n  return compareVertices(v0, v1) > 0 ? v1 : v0;\n}\n\nexport function maxVertex(v0: Vertex, v1: Vertex) {\n  return compareVertices(v0, v1) > 0 ? v0 : v1;\n}\n\nexport function orderVertices<T extends { x: number; y: number }>(vertices: T[]): T[] {\n  return vertices.sort(compareVertices);\n}\n\nexport function pointsDistance(x0: number, y0: number, x1: number, y1: number) {\n  const diff_x = x0 - x1;\n  const diff_y = y0 - y1;\n\n  return Math.sqrt((diff_x * diff_x) + (diff_y * diff_y));\n}\n\nexport function verticesDistance(v1: Vertex, v2: Vertex) {\n  const { x: x0, y: y0 } = v1;\n  const { x: x1, y: y1 } = v2;\n\n  return pointsDistance(x0, y0, x1, y1);\n}\n\nexport function horizontalLine(y: number) {\n  return { a: 0, b: 1, c: -y };\n}\n\nexport function verticalLine(x: number) {\n  return { a: 1, b: 0, c: -x };\n}\n\nexport function linePassingThroughTwoPoints(x1: number, y1: number, x2: number, y2: number) {\n  if (x1 === x2 && y1 == y2) throw new Error('Geometry error');\n  if (x1 === x2) return verticalLine(x1);\n  if (y1 === y2) return horizontalLine(y1);\n\n  return {\n    a: y1 - y2,\n    b: x2 - x1,\n    c: y2 * x1 - x2 * y1\n  };\n}\n\nexport function distancePointFromLine(a: number, b: number, c: number, x: number, y: number) {\n  //https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n  return fAbs(a * x + b * y + c) / Math.sqrt(a * a + b * b);\n}\n\nexport function closestPointFromLine(a: number, b: number, c: number, x: number, y: number) {\n  //https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n  const denom = a * a + b * b;\n  return {\n    x: (b * (b * x - a * y) - a * c) / denom,\n    y: ((a * -b * x + a * y) - b * c) / denom,\n  }\n}\n\n/** @description Get point of intersection between two lines using ax+by+c line's equation\n *  @param {number} a x coefficent of first line\n *  @param {number} b y coefficent of first line\n *  @param {number} c costant of first line\n *  @param {number} j x coefficent of second line\n *  @param {number} k y coefficent of second line\n *  @param {number} l costant of second line\n *  @return {object} {x,y} point's coordinates\n */\nexport function twoLinesIntersection(a: number, b: number, c: number, j: number, k: number, l: number) {\n  const angularCoefficientsDiff = (b * j - a * k);\n\n  if (angularCoefficientsDiff === 0) return undefined; //no intersection\n\n  const y = (a * l - c * j) / angularCoefficientsDiff;\n  const x = (c * k - b * l) / angularCoefficientsDiff;\n  return { x, y };\n}\nexport function twoLineSegmentsIntersection(p1: Vertex, p2: Vertex, p3: Vertex, p4: Vertex): {\n  type: string;\n  point?: Vertex;\n} {\n  //https://github.com/psalaets/line-intersect/blob/master/lib/check-intersection.js\n\n  const { x: x1, y: y1 } = p1;\n  const { x: x2, y: y2 } = p2;\n  const { x: x3, y: y3 } = p3;\n  const { x: x4, y: y4 } = p4;\n\n  const denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n  const numA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n  const numB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n\n  if (fAbs(denom) <= EPSILON) {\n    if (fAbs(numA) <= EPSILON && fAbs(numB) <= EPSILON) {\n\n      const comparator = (pa: Vertex, pb: Vertex) => pa.x === pb.x ? pa.y - pb.y : pa.x - pb.x;\n      const line0 = [p1, p2].sort(comparator);\n      const line1 = [p3, p4].sort(comparator);\n\n      const [lineSX, lineDX] = [line0, line1].sort((lineA, lineB) => comparator(lineA[0], lineB[0]));\n\n      if (lineSX[1].x === lineDX[0].x) {\n        return { type: (lineDX[0].y <= lineSX[1].y) ? 'colinear' : 'none' };\n      } else {\n        return { type: (lineDX[0].x <= lineSX[1].x) ? 'colinear' : 'none' };\n      }\n    }\n    return { type: 'parallel' };\n  }\n\n  const uA = numA / denom;\n  const uB = numB / denom;\n\n  if (uA >= (0 - EPSILON) && uA <= (1 + EPSILON) && uB >= (0 - EPSILON) && uB <= (1 + EPSILON)) {\n    const point = {\n      x: x1 + (uA * (x2 - x1)),\n      y: y1 + (uA * (y2 - y1))\n    };\n    return { type: 'intersecting', point };\n  }\n\n  return { type: 'none' };\n}\n\nexport function distancePointFromLineSegment(x1: number, y1: number, x2: number, y2: number, xp: number, yp: number) {\n  //http://stackoverflow.com/a/6853926/1398836\n\n  const A = xp - x1;\n  const B = yp - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq != 0) //in case of 0 length line\n    param = dot / len_sq;\n\n  let xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  const dx = xp - xx;\n  const dy = yp - yy;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n/**\n *\n * @param x1 {number} x for first vertex of the segment\n * @param y1 {number} y for first vertex of the segment\n * @param x2 {number} x for second vertex of the segment\n * @param y2 {number} y for second vertex of the segment\n * @param xp {number} x for point we want to verify\n * @param yp {number} y for point we want to verify\n * @param maxDistance {number} the epsilon value used for comparisons\n * @returns {boolean} true if the point lies on the line segment false otherwise\n */\nexport function isPointOnLineSegment(x1: number, y1: number, x2: number, y2: number, xp: number, yp: number, maxDistance = EPSILON) {\n  return distancePointFromLineSegment(x1, y1, x2, y2, xp, yp) <= maxDistance;\n}\n\nexport function closestPointFromLineSegment(x1: number, y1: number, x2: number, y2: number, xp: number, yp: number): Vertex {\n  if (x1 === x2) return { x: x1, y: yp };\n  if (y1 === y2) return { x: xp, y: y1 };\n\n  const m = (y2 - y1) / (x2 - x1);\n  const q = y1 - m * x1;\n\n  const mi = -1 / m;\n  const qi = yp - mi * xp;\n\n  const x = (qi - q) / (m - mi);\n  const y = (m * x + q);\n\n  return { x, y };\n}\n\nexport function pointPositionOnLineSegment(x1: number, y1: number, x2: number, y2: number, xp: number, yp: number) {\n  const length = pointsDistance(x1, y1, x2, y2);\n  const distance = pointsDistance(x1, y1, xp, yp);\n\n  let offset = distance / length;\n  if (x1 > x2) offset = mapRange(offset, 0, 1, 1, 0);\n\n  return offset;\n}\n\nexport function mapRange(value: number, low1: number, high1: number, low2: number, high2: number) {\n  return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}\n\nexport function angleBetweenTwoPointsAndOrigin(x1: number, y1: number, x2: number, y2: number) {\n  return -(Math.atan2(y1 - y2, x2 - x1)) * 180 / Math.PI;\n}\n\nexport function angleBetweenTwoPoints(x1: number, y1: number, x2: number, y2: number) {\n  return Math.atan2(y2 - y1, x2 - x1);\n}\n\n/** angle in radians (-π to π) */\nexport function angleBetweenTwoVertices(v1: Vertex, v2: Vertex) {\n  return angleBetweenTwoPoints(v1.x, v1.y, v2.x, v2.y);\n}\n\nexport function absAngleBetweenTwoPoints(x1: number, y1: number, x2: number, y2: number) {\n  return Math.atan2(Math.abs(y2 - y1), Math.abs(x2 - x1));\n}\n\nexport function samePoints({ x: x1, y: y1 }: Vertex, { x: x2, y: y2 }: Vertex) {\n  return fAbs(x1 - x2) <= EPSILON && fAbs(y1 - y2) <= EPSILON;\n}\n\n\n/** @description Extend line based on coordinates and new line length\n *  @param {number} x1 Vertex 1 x\n *  @param {number} y1 Vertex 1 y\n *  @param {number} x2 Vertex 2 x\n *  @param {number} y2 Vertex 2 y\n *  @param {number} newDistance New line length\n *  @return {object}\n */\n\nexport function extendLine(x1: number, y1: number, x2: number, y2: number, newDistance: number, precision = 6) {\n  const rad = angleBetweenTwoPoints(x1, y1, x2, y2);\n\n  return {\n    x: toFixedFloat(x1 + (Math.cos(rad) * newDistance), precision),\n    y: toFixedFloat(y1 + (Math.sin(rad) * newDistance), precision),\n  };\n}\n\nexport function roundVertex(vertex: VertexModel, precision = 6) {\n  vertex.x = toFixedFloat(vertex.x, precision);\n  vertex.y = toFixedFloat(vertex.y, precision);\n\n  return vertex;\n}\n\n\n//https://github.com/MartyWallace/PolyK\nexport type Polygon = number[];\nexport function ContainsPoint(polygon: Polygon, pointX: number, pointY: number) {\n  const n = polygon.length >> 1;\n\n  let ax, lup;\n  let ay = polygon[2 * n - 3] - pointY;\n  let bx = polygon[2 * n - 2] - pointX;\n  let by = polygon[2 * n - 1] - pointY;\n\n  if (bx === 0 && by === 0) return false; // point on edge\n\n  // let lup = by > ay;\n  for (let ii = 0; ii < n; ii++) {\n    ax = bx;\n    ay = by;\n    bx = polygon[2 * ii] - pointX;\n    by = polygon[2 * ii + 1] - pointY;\n    if (bx === 0 && by === 0) return false; // point on edge\n    if (ay === by) continue;\n    lup = by > ay;\n  }\n\n  let depth = 0;\n  for (let i = 0; i < n; i++) {\n    ax = bx;\n    ay = by;\n    bx = polygon[2 * i] - pointX;\n    by = polygon[2 * i + 1] - pointY;\n    if (ay < 0 && by < 0) continue;  // both 'up' or both 'down'\n    if (ay > 0 && by > 0) continue;  // both 'up' or both 'down'\n    if (ax < 0 && bx < 0) continue;   // both points on the left\n\n    if (ay === by && Math.min(ax, bx) < 0) return true;\n    if (ay === by) continue;\n\n    const lx = ax + (bx - ax) * (-ay) / (by - ay);\n    if (lx === 0) return false;      // point on edge\n    if (lx > 0) depth++;\n    if (ay === 0 && lup && by > ay) depth--;  // hit vertex, both up\n    if (ay === 0 && !lup && by < ay) depth--; // hit vertex, both down\n    lup = by > ay;\n  }\n  return (depth & 1) === 1;\n}\n\nexport function cosWithThreshold(alpha: number, threshold: number) {\n  const cos = Math.cos(alpha);\n  return cos < threshold ? 0 : cos;\n}\n\nexport function sinWithThreshold(alpha: number, threshold: number) {\n  const sin = Math.sin(alpha);\n  return sin < threshold ? 0 : sin;\n}\n\nexport function midPoint(x1: number, y1: number, x2: number, y2: number) {\n  return { x: (x1 + x2) / 2, y: (y1 + y2) / 2 };\n}\n\nexport function verticesMidPoint(verticesArray: Vertex[]): Vertex {\n  const res = verticesArray.reduce((incr, vertex) => { return { x: incr.x + vertex.x, y: incr.y + vertex.y } }, { x: 0, y: 0 });\n  return { x: res.x / verticesArray.length, y: res.y / verticesArray.length };\n}\n\nexport function rotatePointAroundPoint(px: number, py: number, ox: number, oy: number, theta: number): Vertex {\n  const thetaRad = theta * Math.PI / 180;\n\n  const cos = Math.cos(thetaRad);\n  const sin = Math.sin(thetaRad);\n\n  const deltaX = px - ox;\n  const deltaY = py - oy;\n\n  return {\n    x: cos * deltaX - sin * deltaY + ox,\n    y: sin * deltaX + cos * deltaY + oy\n  };\n\n}\n","\nimport { current, produce } from 'immer';\nimport * as Geometry from './geometry';\nimport { SnapMaskType } from '../types';\n\nexport const SNAP_POINT = 'SNAP_POINT';\nexport const SNAP_LINE = 'SNAP_LINE';\nexport const SNAP_SEGMENT = 'SNAP_SEGMENT';\nexport const SNAP_GRID = 'SNAP_GRID';\nexport const SNAP_GUIDE = 'SNAP_GUIDE';\n\nexport const SNAP_MASK = {\n  SNAP_POINT: true,\n  SNAP_LINE: true,\n  SNAP_SEGMENT: true,\n  SNAP_GRID: false,\n  SNAP_GUIDE: true\n};\n\ninterface SharedSnapElementJson {\n  radius: number;\n  priority: number;\n  related: string[];\n  nearestPoint(x: number, y: number): { x: number, y: number, distance: number };\n  isNear(x: number, y: number, distance: number): boolean;\n}\n\nexport type SnapElement = SharedSnapElementJson & (PointSnap | LineSnap | LineSegmentSnap | GridSnap);\n\nclass PointSnap {\n  type: 'point' = 'point';\n  x = -1\n  y = -1\n  radius = 1\n  priority = 1\n  related = new Array<any>()\n  constructor({ x, y, radius = 1, priority = 1, related = [] }) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.priority = priority;\n    this.related = related;\n  }\n\n  nearestPoint(x: number, y: number) {\n    return {\n      x: this.x,\n      y: this.y,\n      distance: Geometry.pointsDistance(this.x, this.y, x, y)\n    };\n  }\n  isNear(x: number, y: number, distance: number) { return ~(this.x - x) + 1 < distance && ~(this.y - y) + 1 < distance; }\n}\n\nclass LineSnap {\n  type: 'line' = 'line';\n  a = -1\n  b = -1\n  c = -1\n  radius = 1\n  priority = 1\n  related = new Array<any>()\n\n  constructor({ a, b, c, radius = 1, priority = 1, related = [] }) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.radius = radius;\n    this.priority = priority;\n    this.related = related;\n  }\n  nearestPoint(x: number, y: number) {\n    return {\n      ...Geometry.closestPointFromLine(this.a, this.b, this.c, x, y),\n      distance: Geometry.distancePointFromLine(this.a, this.b, this.c, x, y)\n    };\n  }\n  isNear(x: number, y: number, distance: number) { return true; }\n}\n\nclass LineSegmentSnap {\n  type: 'line-segment' = 'line-segment';\n  x1 = -1\n  y1 = -1\n  x2 = -1\n  y2 = -1\n  radius = 1\n  priority = 1\n  related = new Array<any>()\n\n  constructor({ x1, y1, x2, y2, radius = 1, priority = 1, related = [] }) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.radius = radius;\n    this.priority = priority;\n    this.related = related;\n  }\n\n  nearestPoint(x: number, y: number) {\n    return {\n      ...Geometry.closestPointFromLineSegment(this.x1, this.y1, this.x2, this.y2, x, y),\n      distance: Geometry.distancePointFromLineSegment(this.x1, this.y1, this.x2, this.y2, x, y)\n    };\n  }\n  isNear(x: number, y: number, distance: number) { return true; }\n}\n\nclass GridSnap {\n  type: 'grid' = 'grid';\n  x = -1\n  y = -1\n  radius = 1\n  priority = 1\n  related = new Array<any>()\n\n  constructor({ x, y, radius = 1, priority = 1, related = [] }) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.priority = priority;\n    this.related = related;\n  }\n  nearestPoint(x: number, y: number) {\n    return {\n      x: this.x,\n      y: this.y,\n      distance: Geometry.pointsDistance(this.x, this.y, x, y)\n    };\n  }\n  isNear(x: number, y: number, distance: number) { return ~(this.x - x) + 1 < distance && ~(this.y - y) + 1 < distance; }\n}\n\nexport function nearestSnap(snapElements: SnapElement[], x: number, y: number, snapMask: SnapMaskType) {\n  const filter = {\n    'point': snapMask[SNAP_POINT],\n    'line': snapMask[SNAP_LINE],\n    'line-segment': snapMask[SNAP_SEGMENT],\n    'grid': snapMask[SNAP_GRID]\n  };\n\n  const nearestSnap = snapElements\n    .filter((el) => filter[el.type] && el.isNear(x, y, el.radius))\n    .map(snap => { return { snap, point: snap.nearestPoint(x, y) } })\n    .filter(({ snap: { radius }, point: { distance } }) => distance < radius)\n    .reduce((min, current) => {\n      if (!min) return current;\n      const { snap: { priority: p1 }, point: { distance: d1 } } = min;\n      const { snap: { priority: p2 }, point: { distance: d2 } } = current;\n      if (p1 === p2) {\n        return d1 < d2 ? min : current;\n      }\n      return p1 > p2 ? min : current;\n    },\n      undefined\n    );\n  return nearestSnap;\n}\n\nexport function addPointSnap(snapElements: SnapElement[], x: number, y: number, radius: number, priority: number, relatedId?: string) {\n  const related = new Array(relatedId);\n  snapElements.push(new PointSnap({ x, y, radius, priority, related }));\n  return snapElements;\n}\n\nexport function addLineSnap(snapElements: SnapElement[], a: number, b: number, c: number, radius: number, priority: number, relatedId: any) {\n  const related = [relatedId];\n\n  const alreadyPresent = snapElements.some(lineSnap =>\n    lineSnap.type === 'line' &&\n    a === lineSnap.a &&\n    b === lineSnap.b &&\n    c === lineSnap.c);\n  if (alreadyPresent) return snapElements;\n\n  snapElements\n    .filter(snap => snap.type === 'line')\n    .map(snap => Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, a, b, c))\n    .filter(intersection => intersection !== undefined)\n    .forEach(({ x, y }) => snapElements = addPointSnap(snapElements, x, y, 20, 40, relatedId));\n\n  snapElements.push(new LineSnap({ a, b, c, radius, priority, related }));\n\n  return snapElements;\n}\n\nexport function addLineSegmentSnap(snapElements: SnapElement[], x1: number, y1: number, x2: number, y2: number, radius: number, priority: number, relatedId?: string) {\n  const related = new Array(relatedId);\n  snapElements.push(new LineSegmentSnap({ x1, y1, x2, y2, radius, priority, related }));\n  return snapElements;\n}\n\nexport function addGridSnap(snapElements: SnapElement[], x: number, y: number, radius: number, priority: number, relatedId?: string) {\n  const related = new Array(relatedId);\n  snapElements.push(new GridSnap({ x, y, radius, priority, related }));\n  return snapElements;\n}\n","import { immerable } from 'immer';\nimport { MODE_IDLE, ModeType, UnitLengthType } from './constants';\nimport { ElementPrototypes, ElementTypes, SnapMaskType, CatalogElement } from './types';\nimport { SNAP_MASK, SnapElement } from './utils/snap';\n\nfunction safeLoadMapList<T>(mapList: any, Model: new (json: any) => T, defaultMap?: Record<string, T>): Record<string, T> {\n  if (!mapList || typeof mapList !== 'object' || (Array.isArray(mapList) && mapList.length === 0)) return defaultMap || {};\n  const result: Record<string, T> = {};\n  for (const k in mapList) {\n    result[k] = new Model(mapList[k]);\n  }\n  return result;\n}\n\nexport type Grid = {\n  id: string;\n  type: 'horizontal-streak' | 'vertical-streak' | '';\n  properties: {\n    step: number;\n    colors: string[];\n    [key: string]: any;\n  };\n}\n\nexport function Grid(props: Grid): Grid {\n  const defaults = {\n    id: '',\n    type: '',\n    properties: {}\n  } as const;\n  return { ...defaults, ...props };\n}\n\nexport const DefaultGrids = {\n  'h1': Grid({\n    id: 'h1',\n    type: 'horizontal-streak',\n    properties: {\n      step: 20,\n      colors: ['#808080', '#ddd', '#ddd', '#ddd', '#ddd']\n    }\n  }),\n  'v1': Grid({\n    id: 'v1',\n    type: 'vertical-streak',\n    properties: {\n      step: 20,\n      colors: ['#808080', '#ddd', '#ddd', '#ddd', '#ddd']\n    }\n  })\n};\n\nexport type ElementsSet = {\n  vertices: string[];\n  lines: string[];\n  holes: string[];\n  areas: string[];\n  items: string[];\n}\n\nexport function ElementsSet(props: Partial<ElementsSet> = {}): ElementsSet {\n  const defaults = {\n    vertices: [],\n    lines: [],\n    holes: [],\n    areas: [],\n    items: []\n  }\n  return { ...defaults, ...props };\n}\n\nconst sharedAttributes = {\n  //prototype: '',\n  id: '',\n  type: '',\n  name: '',\n  misc: {} as Record<string, any>,\n  selected: false,\n  properties: {} as Record<string, any>,\n  visible: true\n};\n\nexport type SharedAttributes = typeof sharedAttributes;\n\nexport type Vertex = SharedAttributes & {\n  prototype: 'vertices';\n  x: number;\n  y: number;\n  lines: any[];\n  areas: any[];\n}\n\nexport type VertexPrototypeKeys = keyof Vertex;\n\nexport function Vertex(props: Partial<Vertex> = {}): Vertex {\n  const defaults = {\n    prototype: 'vertices',\n    x: -1,\n    y: -1,\n    lines: [],\n    areas: [],\n  } as Vertex;\n  return { ...sharedAttributes, ...defaults, ...props };\n}\n\nexport type Line = SharedAttributes & {\n  prototype: 'lines';\n  vertices: string[];\n  holes: string[];\n  misc: {\n    _unitLength?: UnitLengthType;\n    [key: string]: any;\n  }\n}\n\nexport function Line(props: Partial<Line>): Line {\n  const defaults = {\n    prototype: 'lines',\n    vertices: [],\n    holes: [],\n  } as Line;\n  return { ...sharedAttributes, ...defaults, ...props };\n}\n\nexport type Hole = SharedAttributes & {\n  prototype: 'holes';\n  offset: number;\n  line: string;\n}\n\nexport function Hole(props: Partial<Hole>): Hole {\n  const defaults = {\n    prototype: 'holes',\n    offset: -1,\n    line: '',\n  } as Hole;\n  return { ...sharedAttributes, ...defaults, ...props };\n}\n\nexport type Area = SharedAttributes & {\n  prototype: 'areas';\n  vertices: string[];\n  holes: string[];\n}\n\nexport function Area(props: Partial<Area>): Area {\n  const defaults = {\n    prototype: 'areas',\n    vertices: [],\n    holes: [],\n  } as Area;\n  return { ...sharedAttributes, ...defaults, ...props };\n}\n\nexport interface Item extends SharedAttributes {\n  prototype: 'items';\n  x: number;\n  y: number;\n  rotation: number;\n}\n\nexport function Item(props: Partial<Item>): Item {\n  const defaults = {\n    prototype: 'items',\n    x: 0,\n    y: 0,\n    rotation: 0,\n  } as Item;\n  return { ...sharedAttributes, ...defaults, ...props };\n}\n\nexport type Layer = {\n  id: string;\n  altitude: number;\n  order: number;\n  opacity: number;\n  name: string;\n  visible: boolean;\n  vertices: { [id: string]: Vertex };\n  lines: { [id: string]: Line };\n  holes: { [id: string]: Hole };\n  areas: { [id: string]: Area };\n  items: { [id: string]: Item };\n  selected: ElementsSet;\n}\n\nexport function Layer(props: Partial<Layer>): Layer {\n  const defaults = {\n    id: '',\n    altitude: 0,\n    order: 0,\n    opacity: 1,\n    name: '',\n    visible: true,\n    vertices: {},\n    lines: {},\n    holes: {},\n    areas: {},\n    items: {},\n    selected: ElementsSet(),\n  };\n  return { ...defaults, ...props };\n}\n\ntype GroupElementPrototypes = \"items\" | \"lines\" | \"holes\" | \"areas\";\n\nexport type GroupElement = Record<GroupElementPrototypes, string[]>;\n\nexport type Group = {\n  prototype: \"groups\";\n  id: string;\n  type: string;\n  name: string;\n  misc: Record<string, any>;\n  selected: boolean;\n  properties: Record<string, any>;\n  visible: boolean;\n  x: number;\n  y: number;\n  rotation: number;\n  elements: Record<string, GroupElement>;\n}\n\nexport function Group(props: Partial<Group>): Group {\n  const defaults = {\n    id: '',\n    type: '',\n    prototype: 'groups',\n    name: '',\n    misc: {},\n    selected: false,\n    properties: {},\n    visible: true,\n    x: 0,\n    y: 0,\n    rotation: 0,\n    elements: {},\n  } as const;\n  return { ...defaults, ...props };\n}\n\nexport const DefaultLayers = {\n  'layer-1': Layer({ id: 'layer-1', name: 'default' })\n};\n\nexport interface SceneJson {\n  unit: UnitLengthType;\n  layers: { [key: string]: Layer };\n  grids: { [key: string]: Grid };\n  selectedLayer: string | null;\n  groups: { [key: string]: Group };\n  width: number;\n  height: number;\n  meta: Record<string, any>;\n  guides: {\n    horizontal: { [key: string]: number };\n    vertical: { [key: string]: number };\n    circular: any;\n  };\n}\n\nexport type Scene = SceneJson;\n\nexport function Scene(props: Partial<SceneJson> = {}): SceneJson {\n  const defaults: SceneJson = {\n    unit: 'cm',\n    layers: DefaultLayers,\n    grids: DefaultGrids,\n    selectedLayer: null,\n    groups: {},\n    width: 3000,\n    height: 2000,\n    meta: {},\n    guides: { horizontal: {}, vertical: {}, circular: {} }\n  };\n  const result = { ...defaults, ...props };\n  if (result.layers && result.selectedLayer === null) {\n    result.selectedLayer = Object.keys(result.layers)[0] || null;\n  }\n  return result;\n}\n\nexport interface CatalogProps {\n  elements: Record<string, CatalogElement>;\n  page?: string;\n  path: string[];\n}\n\nexport interface CatalogJson {\n  elements: Record<string, CatalogElement>;\n  page: string;\n  path: string[];\n  ready: boolean;\n}\n\nexport type Catalog = CatalogJson;\n\nexport function Catalog({ elements, page, path = [] }: CatalogProps = { elements: {}, path: [] }): CatalogJson {\n  return {\n    elements,\n    page: page || 'root',\n    path,\n    ready: Object.keys(elements).length > 0\n  };\n}\n\nexport function catalogElementFactory(catalog: Catalog, type, options?, initialProperties?) {\n  if (!catalog.elements[type]) {\n    const catList = Object.values(catalog.elements).map(element => (element as { name?: string }).name);\n    throw new Error(`Element ${type} does not exist in catalog ${catList}`);\n  }\n\n  const element = catalog.elements[type];\n  const properties = {};\n  for (const key in element.properties) {\n    properties[key] = (initialProperties && initialProperties[key] !== undefined)\n      ? initialProperties[key]\n      : (element.properties[key] as { defaultValue: any }).defaultValue;\n  }\n\n  switch (element.prototype) {\n    case 'lines':\n      return Object.assign(Line(options), { properties });\n    case 'holes':\n      return Object.assign(Hole(options), { properties });\n    case 'areas':\n      return Object.assign(Area(options), { properties });\n    case 'items':\n      return Object.assign(Item(options), { properties });\n    default:\n      throw new Error('prototype not valid');\n  }\n}\n\n\n\nexport class Catalog2 {\n  static [immerable] = true;\n  ready = false;\n  page = 'root';\n  path: string[] = [];\n  elements: Record<string, CatalogElement> = {};\n\n  constructor(json: any = {}) {\n    this.elements = json.elements;\n    this.ready = Object.keys(json.elements).length > 0;\n    this.page = json.page || 'root';\n    this.path = json.path ? [...json.path] : [];\n  }\n\n  factoryElement(type, options?, initialProperties?) {\n    if (!this.elements[type]) {\n      const catList = Object.values(this.elements).map(element => (element as { name?: string }).name);\n      throw new Error(`Element ${type} does not exist in catalog ${catList}`);\n    }\n\n    const element = this.elements[type];\n    const properties = {};\n    for (const key in element.properties) {\n      properties[key] = (initialProperties && initialProperties[key] !== undefined)\n        ? initialProperties[key]\n        : (element.properties[key] as { defaultValue: any }).defaultValue;\n    }\n\n    switch (element.prototype) {\n      case 'lines':\n        return Object.assign(Line(options), { properties });\n      case 'holes':\n        return Object.assign(Hole(options), { properties });\n      case 'areas':\n        return Object.assign(Area(options), { properties });\n      case 'items':\n        return Object.assign(Item(options), { properties });\n      default:\n        throw new Error('prototype not valid');\n    }\n  }\n}\n\nexport interface HistoryStructureProps {\n  list: any[];\n  scene: SceneJson;\n  last: SceneJson;\n}\n\nexport interface HistoryStructureJson {\n  list: any[];\n  first: SceneJson;\n  last: SceneJson;\n}\n\nexport type HistoryStructure = HistoryStructureJson;\n\nexport function HistoryStructure(props: Partial<HistoryStructureProps> = {}): HistoryStructureJson {\n  const resullt = {\n    list: props.list ?? [],\n    first: Scene(props.scene || {}),\n    last: Scene(props.last || props.scene || {}),\n  }\n  return resullt;\n}\n\nexport type DraggingSupportType = {\n  layerID?: string;\n  itemID?: string;\n  startPointX?: number;\n  startPointY?: number;\n  startVertex0X?: number;\n  startVertex0Y?: number;\n  startVertex1X?: number;\n  startVertex1Y?: number;\n  startLineX?: number;\n  previousMode?: ModeType;\n  vertexID?: string;\n  originalItem?: Item;\n  originalX?: number;\n  originalY?: number;\n  holeID?: string;\n  lineID?: string;\n}\n\nexport type StateProps = {\n  mode: ModeType;\n  scene: Scene;\n  sceneHistory: HistoryStructure;\n  catalog: Catalog;\n  viewer2D: Record<string, any>;\n  mouse: { x: number, y: number };\n  zoom: number;\n  snapMask: SnapMaskType;\n  snapElements: SnapElement[];\n  activeSnapElement: any;\n  drawingSupport: Record<string, any>;\n  draggingSupport: DraggingSupportType;\n  rotatingSupport: { layerID: string, itemID: string } | undefined;\n  errors: any[];\n  warnings: any[];\n  clipboardProperties: Record<string, any>;\n  selectedElementsHistory: any[];\n  misc: Record<string, any>;\n  alterate: boolean;\n}\n\nexport type State = StateProps;\n\nexport function State(props: Partial<StateProps> = {}): StateProps {\n  const defaults: StateProps = {\n    mode: MODE_IDLE,\n    scene: Scene(),\n    sceneHistory: HistoryStructure(),\n    catalog: Catalog(),\n    viewer2D: {},\n    mouse: { x: 0, y: 0 },\n    zoom: 0,\n    snapMask: SNAP_MASK,\n    snapElements: [],\n    activeSnapElement: null,\n    drawingSupport: {},\n    draggingSupport: {},\n    rotatingSupport: undefined,\n    errors: [],\n    warnings: [],\n    clipboardProperties: {},\n    selectedElementsHistory: [],\n    misc: {},\n    alterate: false\n  };\n  return { ...defaults, ...props };\n}\n","//JS porting of this code http://www.geeksforgeeks.org/biconnected-components/\n\nfunction create_array(length: number) {\n  const array = [];\n  for (let i = 0; i < length; ++i) {\n    array.push([]);\n  }\n  return array;\n}\n\nexport class Edge {\n  u: number;\n  v: number;\n  constructor(u: number, v: number) {\n    this.u = u;\n    this.v = v;\n  }\n}\n\nexport default class Graph {\n  count: number;\n  subgraphs: Edge[][];\n  time: number;\n  V: number;\n  E: number;\n  adj: number[][];\n  children: number;\n\n  constructor(v: number) {\n    this.count = 0; // count is number of biconnected components\n    this.subgraphs = []; //biconnected components - each subgraph is an array of Edge objects\n    this.time = 0;  // time is used to find discovery times\n\n    this.V = v;     // No. of vertices\n    this.E = 0;     // No. of Edges\n    this.adj = create_array(v);  // Adjacency List\n  }\n\n  //Function to add an edge into the graph\n  addEdge(v: number, w: any) {\n    this.adj[v].push(w);\n    this.E++;\n  }\n\n  // A recursive function that finds and prints strongly connected\n  // components using DFS traversal\n  // u --> The vertex to be visited next\n  // disc[] --> Stores discovery times of visited vertices\n  // low[] -- >> earliest visited vertex (the vertex with minimum\n  //             discovery time) that can be reached from subtree\n  //             rooted with current vertex\n  // *st -- >> To store visited edges\n  // // A recursive function that finds and prints strongly connected\n  // components using DFS traversal\n  // u --> The vertex to be visited next\n  // disc[] --> Stores discovery times of visited vertices\n  // low[] -- >> earliest visited vertex (the vertex with minimum\n  //             discovery time) that can be reached from subtree\n  //             rooted with current vertex\n  // *st -- >> To store visited edges\n  _BCCUtil(u: number, disc: number[], low: number[], st: Edge[], parent: number[]) {\n    // Initialize discovery time and low value\n    disc[u] = low[u] = ++this.time;\n    this.children = 0;\n\n    // Go through all vertices adjacent to this\n    // v is current adjacent of 'u'\n    this.adj[u].forEach(v => {\n      // If v is not visited yet, then recur for it\n      if (disc[v] == -1) {\n        this.children++;\n        parent[v] = u;\n\n        // store the edge in stack\n        st.push(new Edge(u, v));\n        this._BCCUtil(v, disc, low, st, parent);\n\n        // Check if the subtree rooted with 'v' has a\n        // connection to one of the ancestors of 'u'\n        // Case 1 -- per Strongly Connected Components Article\n        if (low[u] > low[v])\n          low[u] = low[v];\n\n        // If u is an articulation point,\n        // pop all edges from stack till u -- v\n        if ((disc[u] == 1 && this.children > 1) || (disc[u] > 1 && low[v] >= disc[u])) {\n          let subgraph = [];\n          while (st[st.length - 1].u != u || st[st.length - 1].v != v) {\n            subgraph.push(st[st.length - 1]);\n            //console.log(st[st.length - 1].u + \"--\" + st[st.length - 1].v + \" \");\n            st.splice(st.length - 1, 1);\n          }\n\n          subgraph.push(st[st.length - 1]);\n          //console.log(st[st.length - 1].u + \"--\" + st[st.length - 1].v + \" \");\n          this.subgraphs.push(subgraph);\n          subgraph = [];\n          //console.log()\n          st.splice(st.length - 1, 1);\n\n          this.count++;\n        }\n      }\n\n      // Update low value of 'u' only of 'v' is still in stack\n      // (i.e. it's a back edge, not cross edge).\n      // Case 2 -- per Strongly Connected Components Article\n      else if (v != parent[u] && disc[v] < low[u]) {\n        if (low[u] > disc[v])\n          low[u] = disc[v];\n        st.push(new Edge(u, v));\n      }\n    })\n  }\n\n  BCC() {\n    const V = this.V;\n    const disc = create_array(V);\n    const low = create_array(V);\n    const parent = create_array(V);\n    const st: Edge[] = [];\n\n    // Initialize disc and low, and parent arrays\n    for (let i = 0; i < V; i++) {\n      disc[i] = -1;\n      low[i] = -1;\n      parent[i] = -1;\n    }\n\n    for (let i = 0; i < V; i++) {\n      if (disc[i] == -1)\n        this._BCCUtil(i, disc, low, st, parent);\n\n      let j = 0;\n\n      // If stack is not empty, pop all edges from stack\n      let subgraph = [];\n      while (st.length > 0) {\n        j = 1;\n        subgraph.push(st[st.length - 1]);\n        //console.log(st[st.length - 1].u + \"--\" + st[st.length - 1].v + \" \");\n        st.splice(st.length - 1, 1);\n      }\n\n      if (j == 1) {\n        this.subgraphs.push(subgraph);\n        subgraph = [];\n        //console.log();\n        this.count++;\n      }\n    }\n  }\n}\n","import Graph, { Edge } from \"./graph\";\n\nfunction getEdgesOfSubgraphs(subgraphs: Edge[][], graph: Graph) {\n    const edges: [number, number][][] = [];\n\n    subgraphs.forEach(component => {\n        edges.push([] as [number, number][]);\n        const vertices = getVerticesFromBiconnectedComponent(component);\n        vertices.forEach(vertex => {\n            const adjacents = graph.adj[vertex];\n            for (const adj of adjacents) {\n                if (vertex <= adj && vertices.has(adj)) {\n                    edges[edges.length - 1].push([vertex, adj]);\n                }\n            }\n        });\n    });\n    return edges;\n}\n\nfunction getVerticesFromBiconnectedComponent(component: Edge[]) {\n    const vertices = new Set<number>();\n    component.forEach(edge => {\n        vertices.add(edge.u);\n        vertices.add(edge.v);\n    });\n    return vertices;\n}\n\nexport default getEdgesOfSubgraphs;\n","\nexport type Vertex = [number, number];\n\n/**\n * UTILS\n */\n\nfunction sub(v1: Vertex, v2: Vertex) {\n  return [v1[0] - v2[0], v1[1] - v2[1]]\n}\n\nfunction mod(n: number, m: number) {\n  return ((n % m) + m) % m\n}\n\n/**\n * CYCLES\n */\n\ntype EvMapping = {\n  ev: Vertex;\n  color: number;\n  direction: number;\n};\n\nfunction compute_ev_mapping(EV: Vertex[]) {\n  const ev_mapping = EV.map((ev) => {\n    return {\n      ev: ev,\n      color: 0,\n      direction: -1\n    } as EvMapping;\n  })\n\n  return ev_mapping\n}\n\nfunction compute_angle(P: Vertex, V: Vertex) {\n  const point = sub(V, P)\n  const angle = Math.atan2(point[1], point[0])\n  return angle\n}\n\ntype Incidence = {\n  index: number;\n  endpoint: number;\n  angle: number;\n  edge: Vertex;\n  position: number;\n};\n\nfunction compute_incidences(V: Vertex[], EV: Vertex[]): Incidence[][] {\n  const incidences = V.map((vertex, i) => {\n    const incidence: Incidence[] = []\n    EV.forEach((edge, j: number) => {\n      let endpoint: number;\n      let position: number;\n\n      if (edge[0] === i) {\n        endpoint = edge[1]\n        position = 1\n      }\n\n      if (edge[1] === i) {\n        endpoint = edge[0]\n        position = 0\n      }\n\n      endpoint !== undefined && incidence.push({\n        index: j,\n        endpoint: endpoint,\n        angle: compute_angle(vertex, V[endpoint]),\n        edge: edge,\n        position: position\n      })\n    })\n\n    incidence.sort(function (i1, i2) {\n      return i2.angle - i1.angle\n    })\n\n    return incidence\n  })\n\n  return incidences\n}\n\nfunction get_starting_edge(incidences: Incidence[][], ev_mapping: EvMapping[]) {\n  for (let e = 0; e < ev_mapping.length; e += 1) {\n    if (ev_mapping[e].color < 2) {\n      const direction = -1 * ev_mapping[e].direction\n      color(ev_mapping, e, direction)\n      return {\n        edge: e,\n        direction: direction,\n        position: direction === -1 ? 0 : 1\n      }\n    }\n  }\n}\n\nfunction get_next_edge(incidences: Incidence[][], edge: number, position: number, EV: Vertex[]) {\n  const items = incidences[EV[edge][position]]\n  //console.log(items, incidences, EV, edge, position);\n  const n_items = items.length\n  for (let j = 0; j < n_items; j += 1) {\n    const item = items[j];\n    if (item.index === edge) {\n      const out = items[mod(j + 1, items.length)]\n      return {\n        edge: out.index,\n        vertex: out.endpoint,\n        position: out.position,\n        direction: out.position ? 1 : -1\n      }\n    }\n  }\n}\n\nfunction color(ev_mapping: EvMapping[], index: number, direction: number) {\n  ev_mapping[index].color += 1\n  ev_mapping[index].direction = direction\n}\n\nfunction find_cycles(V: Vertex[], EV: Vertex[]) {\n  const ev_mapping = compute_ev_mapping(EV)\n  const incidences = compute_incidences(V, EV)\n  const V_cycles: number[][] = []\n  const E_cycles: number[][] = []\n  const dir_E_cycles: number[][] = []\n  const counter = 0\n  let start = get_starting_edge(incidences, ev_mapping)\n\n  while (start !== undefined) {\n    const V_cycle = [EV[start.edge][mod(start.position + 1, 2)], EV[start.edge][start.position]]\n    const E_cycle = [start.edge]\n    const dir_E_cycle = [start.direction]\n    let next = get_next_edge(incidences, start.edge, start.position, EV)\n    while (next.edge !== start.edge) {\n      V_cycle.push(next.vertex)\n      E_cycle.push(next.edge)\n      dir_E_cycle.push(next.direction)\n      color(ev_mapping, next.edge, next.direction)\n      next = get_next_edge(incidences, next.edge, next.position, EV)\n    }\n    E_cycles.push(E_cycle)\n    V_cycles.push(V_cycle)\n    dir_E_cycles.push(dir_E_cycle)\n\n    //console.log('############## CYCLE ', ++counter)\n    //console.log('EDGES:', E_cycle)\n    //console.log('VERTICES:', V_cycle)\n    //console.log('START', 'edge:', start.edge, 'position:', start.position)\n    //console.log('COUNTER:', ev_mapping.map(e => e.color), ev_mapping.map(e => e.color).reduce((a, b) => a + b));\n    //console.log('\\n')\n\n    start = get_starting_edge(incidences, ev_mapping)\n  }\n\n  return {\n    v_cycles: V_cycles,\n    e_cycles: E_cycles,\n    dir_e_cycles: dir_E_cycles,\n    ev_mapping: ev_mapping\n  }\n}\n\nfunction find_short_cycles_indexes(v_cycles: number[][], e_cycles: number[][]) {\n  const indexes: number[] = [];\n\n  for (let i = 0; i < e_cycles.length; i += 1) {\n    const e_cycle = e_cycles[i];\n    const v_cycle = v_cycles[i];\n    if ((e_cycle.length < 3) || (v_cycle[0] !== v_cycle[v_cycle.length - 1])) {\n      indexes.push(i);\n    }\n  }\n\n  return indexes;\n}\n\nfunction find_inner_cycles(V: Vertex[], EV: Vertex[]) {\n  const cycles = find_cycles(V, EV);\n  const v_cycles = cycles.v_cycles;\n  const e_cycles = cycles.e_cycles;\n  const short_cycles_indexes = find_short_cycles_indexes(v_cycles, e_cycles);\n  short_cycles_indexes.forEach(indx => {\n    v_cycles.splice(indx, 1);\n    e_cycles.splice(indx, 1);\n  })\n  const dir_e_cycles = cycles.dir_e_cycles;\n  const rooms_values = cycles.e_cycles.map((cycle, i) => cycle.map((edge, j) => {\n    let v1;\n    let v2;\n\n    const dir = dir_e_cycles[i][j];\n\n    if (dir > 0) {\n      v1 = EV[edge][0];\n      v2 = EV[edge][1];\n    } else {\n      v1 = EV[edge][1];\n      v2 = EV[edge][0];\n    }\n\n    return (V[v2][0] - V[v1][0]) * (V[v2][1] + V[v1][1]);\n  }));\n\n  const rooms_sums = rooms_values.map(room => room.reduce((a, b) => a + b))\n\n  const positive_count = rooms_sums.filter(sum => sum > 0).length;\n  const negative_count = rooms_sums.length - positive_count;\n\n  const rm_neg = positive_count >= negative_count ? 1 : -1;\n\n  return {\n    v_cycles: cycles.v_cycles.filter((v, i) => (rm_neg * rooms_sums[i]) > 0),\n    e_cycles: cycles.e_cycles.filter((v, i) => (rm_neg * rooms_sums[i]) > 0),\n    ev_mapping: cycles.ev_mapping\n  }\n}\n\nexport default find_inner_cycles;\n\n/**\n* DATA\n*/\n\n// let V = [[0.5774, 1.0], [1.0, 1.0], [1.1547, 0.0], [1.0, 0.0], [0.0, 0.0], [0.0, 0.732], [1.0, 0.1547], [0.732, 0.0], [1.0491, 0.183], [-0.317, 0.549], [1.0, 0.268], [0.183, -0.3169], [0.5491, 1.049], [0.4642, 1.0], [0.0, -0.4226], [0.0, 1.0]]\n// let EV = [[0, 1], [2, 3], [5, 4], [7, 6], [2, 8], [3, 6], [4, 9], [0, 10], [9, 5], [8, 10], [7, 11], [12, 13], [6, 8], [6, 10], [4, 7], [4, 11], [4, 14], [5, 15], [11, 14], [0, 12], [13, 15], [0, 13], [1, 10], [3, 7], [5, 13]]\n\n// let V = [[0,0],[10,0],[10,10],[0,10], [100,100],[110,100],[110,110],[100,110], [5,0], [5,10]]\n// let V = [[0,0.5],[12,-0.7],[14,14],[-2,10], [103,106],[117,98],[96,112],[104,109], [5.5,0.8], [4.8,10.5]]\n// let EV = [[3,9],[9,2],[2,1],[1,8],[8,0],[0,3],[8,9]] // IT WORKS\n// let EV = [[3,9],[9,2],[2,1],[1,8],[8,0],[0,3],[8,9], [5,6], [6,7], [2,5]] // IT DOESN'T WORK\n// let EV = [[3,2],[2,1],[1,0],[0,3]] // IT WORKS\n// let EV = [[2,3],[1,2],[0,1],[3,0]] // IT WORKS\n// let EV = [[2,3],[1,2],[0,1],[3,0],[6,7],[5,6],[4,5],[7,4]] // IT WORKS\n// let EV = [[3,2],[2,1],[1,0],[0,3],[7,6],[6,5],[5,4],[4,7]] // IT WORKS\n\n// let V = [[2,5],[5,6],[10,6.8],[23,8],[9.6,11.3],[20,15],[25,16],[29,18],[30,22],[4,11],[6,10],[24,25],[18,20],[27,7]]\n// let EV = [[0,1],[10,0],[9,10],[9,1],[1,2],[4,2],[3,13],[2,3],[4,5],[5,6],[6,7],[12,5],[12,11],[11,6],[11,8],[7,8],[9,4]]\n\n/**\n* MAIN\n*/\n\n// let cycles_data = find_inner_cycles(V, EV)\n// console.log('############## OUTPUT')\n// console.log('EDGES:')\n// console.log(cycles_data.e_cycles)\n// console.log('\\n')\n// console.log('VERTICES:')\n// console.log(cycles_data.v_cycles)\n// console.log('\\n')\n// console.log(cycles_data.ev_mapping.every(m => m.color === 2))\n\n//TODO: Add tests for this function\n","import Graph, { Edge } from './graph';\nimport { Vertex as VertexModel } from '../models';\nimport getEdgesOfSubgraphs from './get-edges-of-subgraphs';\nimport graphCycles, { Vertex } from './graph-cycles';\n\nexport function calculateInnerCycles(verticesArray: Vertex[], edgesArray: number[][]) {\n  const innerCycles: number[][] = [];\n\n  const graph = new Graph(verticesArray.length);\n  edgesArray.forEach(line => {\n    graph.addEdge(line[0], line[1]);\n    graph.addEdge(line[1], line[0]);\n  });\n\n  graph.BCC();\n\n  const subgraphs = graph.subgraphs.filter(subgraph => subgraph.length >= 3);\n  const edgesOfSubgraphsArray = getEdgesOfSubgraphs(subgraphs, graph);\n\n  const edges = [];\n  edgesOfSubgraphsArray.forEach(es => {\n    es.forEach(edge => edges.push(edge))\n  });\n\n  const cycles = graphCycles(verticesArray, edges);\n  cycles.v_cycles.forEach(cycle => {\n    cycle.shift();\n    innerCycles.push(cycle);\n  });\n\n  return innerCycles;\n}\n\nexport function isClockWiseOrder(innerCycleWithCoords: VertexModel[]) {\n  // See: https://stackoverflow.com/a/1165943 and http://blog.element84.com/polygon-winding.html\n\n  let twiceEnclosedArea = 0;\n  const size = innerCycleWithCoords.length;\n\n  for (let i = 0; i < size; i++) {\n    const { x: x1, y: y1 } = innerCycleWithCoords[i];\n    const { x: x2, y: y2 } = innerCycleWithCoords[(i + 1) % size];\n\n    twiceEnclosedArea += (x2 - x1) * (y2 + y1);\n  }\n\n  return twiceEnclosedArea > 0;\n}\n","import {\n  SNAP_POINT,\n  SNAP_LINE,\n  SNAP_SEGMENT,\n  SNAP_GRID,\n  SNAP_GUIDE,\n  addPointSnap,\n  addLineSnap,\n  addLineSegmentSnap,\n  addGridSnap\n} from './snap';\nimport { GeometryUtils } from './export';\nimport { produce } from 'immer';\nimport { Scene } from '../models';\nimport { SnapMaskType } from '../types';\n\nexport function sceneSnapElements(scene: Scene, snapElements, snapMask: SnapMaskType) {\n\n  const { width, height } = scene;\n  Object.values(scene.layers).forEach(layer => {\n\n    const { lines, vertices } = layer;\n\n    Object.values(vertices).forEach(({ id: vertexID, x, y }) => {\n\n      if (snapMask[SNAP_POINT]) {\n        snapElements = addPointSnap(snapElements, x, y, 10, 10, vertexID);\n      }\n\n      if (snapMask[SNAP_LINE]) {\n        let a: number, b: number, c: number;\n        ({ a, b, c } = GeometryUtils.horizontalLine(y));\n        snapElements = addLineSnap(snapElements, a, b, c, 10, 1, vertexID);\n        ({ a, b, c } = GeometryUtils.verticalLine(x));\n        snapElements = addLineSnap(snapElements, a, b, c, 10, 1, vertexID);\n\n      }\n\n    });\n\n    if (snapMask[SNAP_SEGMENT]) {\n      Object.values(lines).forEach(({ id: lineID, vertices: [v0, v1] }) => {\n        const { x: x1, y: y1 } = vertices[v0];\n        const { x: x2, y: y2 } = vertices[v1];\n\n        snapElements = addLineSegmentSnap(snapElements, x1, y1, x2, y2, 20, 1, lineID);\n      });\n    }\n  });\n\n  if (snapMask[SNAP_GRID]) {\n    const divider = 5;\n    const gridCellSize = 100 / divider;\n    const xCycle = width / gridCellSize;\n    const yCycle = height / gridCellSize;\n\n    for (let x = 0; x < xCycle; x++) {\n      const xMul = x * gridCellSize;\n\n      for (let y = 0; y < yCycle; y++) {\n        const yMul = y * gridCellSize;\n\n        const onXCross = !(x % divider) ? true : false;\n        const onYCross = !(y % divider) ? true : false;\n\n        addGridSnap(snapElements, xMul, yMul, 10, onXCross && onYCross ? 15 : 10, null);\n      }\n    }\n  }\n\n  if (snapMask[SNAP_GUIDE]) {\n    const hValues = scene.guides.horizontal;\n    const vValues = scene.guides.vertical;\n\n    Object.values(hValues).forEach(hVal => {\n      Object.values(vValues).forEach(vVal => {\n        addPointSnap(snapElements, vVal, hVal, 10, 10, null);\n      });\n    });\n\n    Object.values(hValues).forEach(hVal => addLineSegmentSnap(snapElements, 0, hVal, width, hVal, 20, 1, null));\n    Object.values(vValues).forEach(vVal => addLineSegmentSnap(snapElements, vVal, 0, vVal, height, 20, 1, null));\n  }\n\n  return snapElements;\n}\n","import { produce } from \"immer\";\nimport { HistoryStructureJson, Scene } from \"../models\";\n\nexport function diff(obj1: any, obj2: any) {\n  const ops: { [k: string]: { op: 'add' | 'remove' | 'replace'; path: string; value?: any } } = {};\n  let idx = 0;\n\n  const isObject = (v: any) => v && typeof v === 'object' && !Array.isArray(v);\n\n  const isEqual = (a: any, b: any): boolean => {\n    if (a === b) return true;\n    if (typeof a !== typeof b) return false;\n    if (a == null || b == null) return false;\n    if (typeof a !== 'object') return false;\n    if (Array.isArray(a) !== Array.isArray(b)) return false;\n    if (Array.isArray(a)) {\n      if (a.length !== b.length) return false;\n      for (let i = 0; i < a.length; i++) if (!isEqual(a[i], b[i])) return false;\n      return true;\n    }\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n    for (const k of aKeys) {\n      if (!isEqual(a[k], b[k])) return false;\n    }\n    return true;\n  };\n\n  const walk = (basePath: string, a: any, b: any) => {\n    if (a === b) return;\n\n    const aIsObj = isObject(a) || Array.isArray(a);\n    const bIsObj = isObject(b) || Array.isArray(b);\n\n    if (aIsObj && bIsObj) {\n      // Keys union\n      const aKeys = new Set<string>(Array.isArray(a) ? a.map((_, i) => String(i)) : Object.keys(a));\n      const bKeys = new Set<string>(Array.isArray(b) ? b.map((_, i) => String(i)) : Object.keys(b));\n\n      // Removed\n      Array.from(aKeys).forEach(k => {\n        if (!bKeys.has(k)) {\n          ops[idx++] = { op: 'remove', path: `${basePath}/${k}` };\n        }\n      });\n      // Added or changed\n      Array.from(bKeys).forEach(k => {\n        const subPath = `${basePath}/${k}`;\n        if (!aKeys.has(k)) {\n          ops[idx++] = { op: 'add', path: subPath, value: b[k] };\n        } else {\n          const av = a[k];\n          const bv = b[k];\n          if (av !== bv) { // skip equal\n            const bothObj = (isObject(av) || Array.isArray(av)) && (isObject(bv) || Array.isArray(bv));\n            if (bothObj && !isEqual(av, bv)) {\n              walk(subPath, av, bv);\n            } else if (!bothObj && av !== bv) {\n              ops[idx++] = { op: 'replace', path: subPath, value: bv };\n            } else if (bothObj && !isEqual(av, bv)) {\n              walk(subPath, av, bv);\n            }\n          }\n        }\n      });\n    } else {\n      ops[idx++] = { op: (a === undefined ? 'add' : b === undefined ? 'remove' : 'replace'), path: basePath || '/', value: b };\n    }\n  };\n\n  walk('', obj1, obj2);\n  return ops;\n};\n\nexport function patch(obj: object, diffObj): object {\n  if (!diffObj || typeof diffObj !== 'object') return obj;\n\n  // Sort numeric-like keys to preserve original generation order\n  const ops = Object.keys(diffObj)\n    .sort((a, b) => Number(a) - Number(b))\n    .map(k => diffObj[k]);\n\n  let result: any = obj;\n\n  const applyOnDraft = (draft: any, path: string, op: 'add' | 'remove' | 'replace', value: any) => {\n    if (!path || path === '/') {\n      // Root handled outside produce (we never mutate root inside this helper)\n      return;\n    }\n    const parts = path.split('/').filter(Boolean); // remove empty caused by leading '/'\n    if (!parts.length) return;\n    const lastKey = parts[parts.length - 1];\n    let parent = draft;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const key = parts[i];\n      if (parent == null) return; // path invalid\n      parent = parent[key];\n    }\n\n    if (parent == null) return; // invalid path, skip\n\n    if (op === 'add' || op === 'replace') {\n      if (Array.isArray(parent)) {\n        const idx = Number(lastKey);\n        if (!Number.isNaN(idx)) {\n          parent[idx] = value;\n        } else {\n          (parent as any)[lastKey] = value;\n        }\n      } else {\n        parent[lastKey] = value;\n      }\n    } else if (op === 'remove') {\n      if (Array.isArray(parent)) {\n        const idx = Number(lastKey);\n        if (!Number.isNaN(idx)) {\n          parent.splice(idx, 1);\n        } else {\n          delete parent[lastKey];\n        }\n      } else {\n        delete parent[lastKey];\n      }\n    }\n  };\n\n  for (const { op, path, value } of ops) {\n    // Handle root-level operations directly (cannot reassign draft root inside produce)\n    if (path === '/' || path === '') {\n      if (op === 'remove') {\n        result = undefined;\n      } else if (op === 'add' || op === 'replace') {\n        result = value;\n      }\n      continue;\n    }\n\n    result = produce(result, draft => {\n      applyOnDraft(draft, path, op, value);\n    });\n  }\n\n  return result;\n};\n\nexport function historyPush(historyStructure: HistoryStructureJson, item: Scene) {\n  if (historyStructure.last) {\n    if (historyStructure.last !== item) {\n      const toPush = {\n        time: Date.now(),\n        diff: diff(historyStructure.last, item)\n      };\n\n      historyStructure = produce(historyStructure, draft => {\n        draft.last = item;\n        draft.list.push(toPush);\n      });\n    }\n  } else {\n    historyStructure = produce(historyStructure, draft => {\n      draft.last = item;\n    });\n  }\n  return historyStructure;\n};\n\nexport function historyPop(historyStructure: HistoryStructureJson) {\n  if (historyStructure.last) {\n    if (historyStructure.list.length) {\n      let last = historyStructure.first;\n      for (let x = 0; x < historyStructure.list.length - 1; x++) {\n        last = patch(last, historyStructure.list[x].diff) as Scene;\n      }\n\n      historyStructure = produce(historyStructure, draft => {\n        draft.last = last;\n        draft.list = draft.list.slice(0, -1);\n      });\n    }\n  }\n  return historyStructure;\n};\n","export function objectsMap(object, func) {\n  const mappedObject = {};\n  for (const key in object) {\n    mappedObject[key] = func(key, mappedObject[key]);\n  }\n  return mappedObject;\n}\n\nexport function objectsCompare(x, y) {\n  if (x === y) return true;\n  if (!(x instanceof Object) || !(y instanceof Object)) return false;\n  if (x.constructor !== y.constructor) return false;\n\n  for (const p in x) {\n    if (!x.hasOwnProperty(p)) continue;\n    if (!y.hasOwnProperty(p)) return false;\n    if (x[p] === y[p]) continue;\n    if (typeof (x[p]) !== 'object') return false;\n    if (!objectsCompare(x[p], y[p])) return false;\n  }\n\n  for (const p in y) {\n    if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) return false;\n  }\n\n  return true;\n}","import shortid from 'shortid';\n\nexport class IDBroker {\n  static acquireID() {\n    return shortid.generate();\n  }\n}\n\nexport default IDBroker;\n","export default class NameGenerator {\n  static generateName(prototype, type) {\n    return type.substr(0, 1).toUpperCase() + type.substr(1);\n  }\n}\n","import {\n  MODE_VIEWING_CATALOG,\n  MODE_CONFIGURING_PROJECT,\n  MODE_IDLE\n} from '../constants';\nimport { State, Catalog, CatalogProps, SceneJson } from '../models';\nimport { history } from '../utils/export';\nimport {\n  Layer,\n  Group,\n  Line,\n  Hole,\n  Item,\n  HorizontalGuide,\n  VerticalGuide\n} from '../class/export';\nimport { produce } from 'immer';\n\nclass Project {\n  static setAlterate(state: State) {\n    return produce(state, draft => {\n      draft.alterate = !draft.alterate;\n    });\n  }\n\n  static openCatalog(state: State) {\n    return this.setMode(state, MODE_VIEWING_CATALOG);\n  }\n\n  static newProject(state: State) {\n    return State({ 'viewer2D': state.viewer2D });\n  }\n\n  static loadProject(state: State, sceneJSON: SceneJson) {\n    return State({ scene: sceneJSON, catalog: state.catalog });\n  }\n\n  static setProperties(state: State, layerID: string, properties: Record<string, any>) {\n    return Layer.setPropertiesOnSelected(state, layerID, properties);\n  }\n\n  static updateProperties(state: State, layerID: string, properties: Record<string, any>) {\n    return Layer.updatePropertiesOnSelected(state, layerID, properties);\n  }\n\n  static setItemsAttributes(state: State, attributes) {\n    //TODO apply only to items\n    return produce(state, draft => {\n      Object.values(draft.scene.layers).forEach((layer) => {\n        draft = Layer.setAttributesOnSelected(draft, layer.id, attributes);\n      });\n      return draft;\n    });\n  }\n\n  static setLinesAttributes(state: State, attributes) {\n    //TODO apply only to lines\n    Object.values(state.scene.layers).forEach((layer) => {\n      state = Layer.setAttributesOnSelected(state, layer.id, attributes);\n    });\n    return state;\n  }\n\n  static setHolesAttributes(state: State, attributes) {\n    //TODO apply only to holes\n    return produce(state, draft => {\n      Object.values(draft.scene.layers).forEach((layer) => {\n        draft = Layer.setAttributesOnSelected(draft, layer.id, attributes);\n      });\n      return draft;\n    });\n  }\n\n  static unselectAll(state: State) {\n    Object.values(state.scene.layers).forEach(layer => {\n      state = Layer.unselectAll(state, layer.id);\n    });\n    Object.values(state.scene.groups).forEach(group => {\n      state = Group.unselect(state, group.id);\n    });\n    return state;\n  }\n\n  static remove(state: State) {\n    const selectedLayer = state.scene.selectedLayer;\n    const {\n      lines: selectedLines,\n      holes: selectedHoles,\n      items: selectedItems\n    } = state.scene.layers[selectedLayer].selected;\n\n    state = Layer.unselectAll(state, selectedLayer);\n\n    selectedLines.forEach(lineID => { state = Line.remove(state, selectedLayer, lineID); });\n    selectedHoles.forEach(holeID => { state = Hole.remove(state, selectedLayer, holeID); });\n    selectedItems.forEach(itemID => { state = Item.remove(state, selectedLayer, itemID); });\n\n    state = Layer.detectAndUpdateAreas(state, selectedLayer);\n    return state;\n  }\n\n  static undo(state: State) {\n    let sceneHistory = state.sceneHistory;\n    if (state.scene === sceneHistory.last && sceneHistory.list.length > 1) {\n      sceneHistory = history.historyPop(sceneHistory);\n    }\n\n    return produce(state, draft => {\n      draft.mode = MODE_IDLE;\n      draft.scene = sceneHistory.last;\n      draft.sceneHistory = history.historyPop(sceneHistory);\n    });\n  }\n\n  static rollback(state: State) {\n    const sceneHistory = state.sceneHistory;\n\n    if (!sceneHistory.last) {\n      return state;\n    }\n\n    state = this.unselectAll(state);\n\n    return produce(state, draft => {\n      draft.mode = MODE_IDLE;\n      draft.scene = sceneHistory.last;\n      draft.sceneHistory = history.historyPush(sceneHistory, sceneHistory.last);\n      draft.snapElements = [];\n      draft.activeSnapElement = null;\n      draft.drawingSupport = {};\n      draft.draggingSupport = {};\n      draft.rotatingSupport = null;\n    });\n  }\n\n  static setProjectProperties(state: State, properties) {\n    return produce(state, draft => {\n      draft.mode = MODE_IDLE;\n      Object.assign(draft.scene, properties);\n    });\n  }\n\n  static openProjectConfigurator(state: State) {\n    return produce(state, draft => {\n      draft.mode = MODE_CONFIGURING_PROJECT;\n    });\n  }\n\n  static initCatalog(state: State, catalog: CatalogProps): State {\n    return State({\n      ...state,\n      catalog: Catalog(catalog)\n    });\n  }\n\n  static updateMouseCoord(state: State, coords: { x: number; y: number }) {\n    return produce(state, draft => {\n      draft.mouse = coords;\n    });\n  }\n\n  static updateZoomScale(state: State, scale) {\n    return produce(state, draft => {\n      draft.zoom = scale;\n    });\n  }\n\n  static toggleSnap(state: State, mask) {\n    return produce(state, draft => {\n      draft.snapMask = mask;\n    });\n  }\n\n  static throwError(state: State, error) {\n    return produce(state, draft => {\n      draft.errors.push({\n        date: Date.now(),\n        error\n      });\n    });\n  }\n\n  static throwWarning(state: State, warning) {\n    return produce(state, draft => {\n      draft.warnings.push({\n        date: Date.now(),\n        warning\n      });\n    });\n  }\n\n  static copyProperties(state: State, properties) {\n    return produce(state, draft => {\n      draft.clipboardProperties = properties;\n    });\n  }\n\n  static pasteProperties(state: State) {\n    return produce(state, draft => {\n      const layerID = draft.scene.selectedLayer;\n      const properties = draft.clipboardProperties;\n      draft = Layer.updatePropertiesOnSelected(draft, layerID, properties);\n      return draft;\n    });\n  }\n\n  static pushLastSelectedCatalogElementToHistory(state: State, element) {\n    let currHistory = state.selectedElementsHistory;\n\n    const previousPosition = currHistory.findIndex(el => el.name === element.name);\n    if (previousPosition !== -1) {\n      currHistory = currHistory.splice(previousPosition, 1);\n    }\n    currHistory = currHistory.splice(0, 0, element);\n\n    return produce(state, draft => {\n      draft.selectedElementsHistory = currHistory;\n    });\n  }\n\n  static changeCatalogPage(state: State, oldPage, newPage) {\n    return produce(state, draft => {\n      draft.catalog.page = newPage;\n      draft.catalog.path.push(oldPage);\n    });\n  }\n\n  static goBackToCatalogPage(state: State, newPage) {\n    const pageIndex = state.catalog.path.findIndex(page => page === newPage);\n    return produce(state, draft => {\n      draft.catalog.page = newPage;\n      draft.catalog.path = draft.catalog.path.slice(0, pageIndex);\n    });\n  }\n\n  static setMode(state: State, mode) {\n    return { ...state, mode };\n  }\n\n  static addHorizontalGuide(state: State, coordinate) {\n    return HorizontalGuide.create(state, coordinate);\n  }\n\n  static addVerticalGuide(state: State, coordinate) {\n    return VerticalGuide.create(state, coordinate);\n  }\n\n  static addCircularGuide(state: State, x: number, y: number, radius: number) {\n    return state;\n  }\n\n  static removeHorizontalGuide(state: State, guideID: string) {\n    return HorizontalGuide.remove(state, guideID);\n  }\n\n  static removeVerticalGuide(state: State, guideID: string) {\n    return VerticalGuide.remove(state, guideID);\n  }\n\n  static removeCircularGuide(state: State, guideID: string) {\n    return state;\n  }\n\n}\n\nexport { Project as default };\n","import {\n  Project,\n  Line,\n  Hole,\n  Item,\n  Area,\n  Layer,\n  Vertex\n} from './export';\nimport { Group as GroupModel, State, GroupElement } from '../models';\nimport { IDBroker, MathUtils, GeometryUtils } from '../utils/export';\nimport { produce } from \"immer\";\n\nclass Group {\n\n  static select(state: State, groupID: string) {\n    return produce(state, draft => {\n      const group = draft.scene.groups[groupID];\n      draft = Project.setAlterate(draft);\n      if (!group) return;\n\n      const layerList = group.elements;\n      for (const [groupLayerID, groupLayerElements] of Object.entries(layerList)) {\n        draft = Layer.unselectAll(draft, groupLayerID);\n        const lines = groupLayerElements.lines;\n        const holes = groupLayerElements.holes;\n        const items = groupLayerElements.items;\n        const areas = groupLayerElements.areas;\n        lines.forEach(lineID => { draft = Line.select(draft, groupLayerID, lineID); });\n        holes.forEach(holeID => { draft = Hole.select(draft, groupLayerID, holeID); });\n        items.forEach(itemID => { draft = Item.select(draft, groupLayerID, itemID); });\n        areas.forEach(areaID => { draft = Area.select(draft, groupLayerID, areaID); });\n      }\n\n      draft = Project.setAlterate(draft);\n\n      const groups = draft.scene.groups;\n      Object.keys(groups).forEach(id => {\n        groups[id].selected = false;\n      });\n\n      Object.keys(groups).forEach(id => {\n        groups[id].selected = false;\n      });\n      groups[groupID].selected = true;\n      return draft;\n    });\n  }\n\n  static unselect(state: State, groupID: string) {\n    return produce(state, draft => {\n      const group = draft.scene.groups[groupID];\n      if (!group) return state;\n      const layerList = group.elements;\n      group.selected = false;\n      for (const layerID of Object.keys(layerList)) {\n        draft = Layer.unselectAll(draft, layerID);\n      }\n      return draft;\n    });\n  }\n\n  static create(state: State) {\n    return produce(state, draft => {\n      const groupID = IDBroker.acquireID();\n      draft.scene.groups[groupID] = GroupModel({ id: groupID, name: groupID });\n    });\n  }\n\n  static createFromSelectedElements(state: State) {\n    return produce(state, draft => {\n      const groupID = IDBroker.acquireID();\n      const newGroup = GroupModel({ id: groupID, name: groupID });\n      draft.scene.groups[groupID] = newGroup;\n\n      Object.values(draft.scene.layers).forEach(layer => {\n        const layerID = layer.id;\n        const elementTypes = ['lines', 'items', 'holes', 'areas'] as const;\n\n        elementTypes.forEach(elementType => {\n          Object.values(layer[elementType]).forEach(el => {\n            if (el.selected) {\n              if (!newGroup.elements[layerID]) {\n                newGroup.elements[layerID] = { lines: [], items: [], holes: [], areas: [] };\n              }\n              if (!newGroup.elements[layerID][elementType].includes(el.id)) {\n                (newGroup.elements[layerID][elementType]).push(el.id);\n              }\n            }\n          });\n        });\n      });\n    });\n  }\n\n  static addElement(state: State, groupID: string, layerID: string, elementPrototype: keyof GroupElement, elementID: string) {\n    return produce(state, draft => {\n      const group = draft.scene.groups[groupID];\n      if (group) {\n        if (!group.elements[layerID]) {\n          group.elements[layerID] = { lines: [], items: [], holes: [], areas: [] };\n        }\n        if (!group.elements[layerID][elementPrototype].includes(elementID)) {\n          (group.elements[layerID][elementPrototype]).push(elementID);\n          draft = this.reloadBaricenter(draft, groupID);\n          return draft;\n        }\n      }\n    });\n  }\n\n  static setBarycenter(state: State, groupID: string, x: number, y: number) {\n    return produce(state, draft => {\n      const group = draft.scene.groups[groupID];\n      if (group) {\n        if (typeof x !== 'undefined') group.x = x;\n        if (typeof y !== 'undefined') group.y = y;\n      }\n    });\n  }\n\n  static reloadBaricenter(state: State, groupID: string) {\n    return produce(state, draft => {\n      const group = draft.scene.groups[groupID];\n      if (!group) return;\n\n      let xBar = 0;\n      let yBar = 0;\n      let elementCount = 0;\n\n      Object.entries(group.elements).forEach(([groupLayerID, groupLayerElements]) => {\n        if (groupLayerElements.lines) {\n          groupLayerElements.lines.forEach(lineID => {\n            const line = draft.scene.layers[groupLayerID]?.lines[lineID];\n            if (line) {\n              const v0 = draft.scene.layers[groupLayerID]?.vertices[line.vertices[0]];\n              const v1 = draft.scene.layers[groupLayerID]?.vertices[line.vertices[1]];\n              if (v0 && v1) {\n                const { x: xM, y: yM } = GeometryUtils.midPoint(v0.x, v0.y, v1.x, v1.y);\n                xBar += xM;\n                yBar += yM;\n                elementCount++;\n              }\n            }\n          });\n        }\n\n        if (groupLayerElements.holes) {\n          groupLayerElements.holes.forEach(holeID => {\n            const hole = draft.scene.layers[groupLayerID]?.holes[holeID];\n            if (hole) {\n              const line = draft.scene.layers[groupLayerID]?.lines[hole.line];\n              if (line) {\n                const v0 = draft.scene.layers[groupLayerID]?.vertices[line.vertices[0]];\n                const v1 = draft.scene.layers[groupLayerID]?.vertices[line.vertices[1]];\n                if (v0 && v1) {\n                  const { x: xM, y: yM } = GeometryUtils.midPoint(v0.x, v0.y, v1.x, v1.y);\n                  xBar += xM;\n                  yBar += yM;\n                  elementCount++;\n                }\n              }\n            }\n          });\n        }\n\n        if (groupLayerElements.items) {\n          groupLayerElements.items.forEach(itemID => {\n            const item = draft.scene.layers[groupLayerID]?.items[itemID];\n            if (item) {\n              xBar += item.x;\n              yBar += item.y;\n              elementCount++;\n            }\n          });\n        }\n\n        if (groupLayerElements.areas) {\n          groupLayerElements.areas.forEach(areaID => {\n            const area = draft.scene.layers[groupLayerID]?.areas[areaID];\n            if (area) {\n              const areaVertices = area.vertices.map(vID => draft.scene.layers[groupLayerID]?.vertices[vID]).filter(v => v);\n              const { x, y } = GeometryUtils.verticesMidPoint(areaVertices);\n              xBar += x;\n              yBar += y;\n              elementCount++;\n            }\n          });\n        }\n      });\n\n      if (elementCount > 0) {\n        group.x = xBar / elementCount;\n        group.y = yBar / elementCount;\n      }\n    });\n  }\n\n  static removeElement(state: State, groupID: string, layerID: string, elementPrototype: keyof GroupElement, elementID: string) {\n    return produce(state, draft => {\n      const group = draft.scene.groups[groupID];\n      if (group?.elements[layerID]?.[elementPrototype]) {\n        const index = group.elements[layerID][elementPrototype].indexOf(elementID);\n        if (index !== -1) {\n          (group.elements[layerID][elementPrototype]).splice(index, 1);\n        }\n      }\n    });\n  }\n\n  static setAttributes(state: State, groupID: string, attributes: Partial<GroupModel>) {\n    return produce(state, draft => {\n      Object.assign(draft.scene.groups[groupID], attributes);\n    });\n  }\n\n  static setProperties(state: State, groupID: string, properties: GroupModel[\"properties\"]) {\n    return produce(state, draft => {\n      const group = draft.scene.groups[groupID];\n      if (group) {\n        Object.assign(group.properties, properties);\n      }\n    });\n  }\n\n  static remove(state: State, groupID: string) {\n    return produce(state, draft => {\n      delete draft.scene.groups[groupID];\n    });\n  }\n\n  static removeAndDeleteElements(state: State, groupID: string) {\n    const group = state.scene.groups[groupID];\n    if (!group) return state;\n    const layerList = group.elements;\n\n    Object.entries(layerList).forEach(([groupLayerID, groupLayerElements]) => {\n      state = Layer.unselectAll(state, groupLayerID);\n\n      const lines = groupLayerElements.lines;\n      const holes = groupLayerElements.holes;\n      const items = groupLayerElements.items;\n      const areas = groupLayerElements.areas; // ( actually ) no effect by area's destruction\n\n      if (lines) {\n        lines.forEach(lineID => {\n          state = Line.remove(state, groupLayerID, lineID);\n          state = Layer.detectAndUpdateAreas(state, groupLayerID);\n        });\n      }\n\n      if (holes) holes.forEach(holeID => { state = Hole.remove(state, groupLayerID, holeID); });\n      if (items) items.forEach(itemID => { state = Item.remove(state, groupLayerID, itemID); });\n    });\n\n    return produce(state, draft => {\n      delete draft.scene.groups[groupID];\n    });\n  }\n\n  static translate(state: State, groupID: string, x: number, y: number) {\n    return produce(state, draft => {\n      const group = draft.scene.groups[groupID];\n      if (!group) return;\n\n      const deltaX = x - group.x;\n      const deltaY = y - group.y;\n\n      group.x = x;\n      group.y = y;\n\n      Object.entries(group.elements).forEach(([layerID, layerElements]) => {\n        const layer = draft.scene.layers[layerID];\n        if (!layer) return;\n\n        const processVertices = (ids: string[], getVertices: (id: string) => string[]) => {\n          const vertexIds = new Set<string>();\n          ids.forEach(id => {\n            getVertices(id).forEach(vId => vertexIds.add(vId));\n          });\n          vertexIds.forEach(vertexID => {\n            const vertex = layer.vertices[vertexID];\n            if (vertex) {\n              vertex.x += deltaX;\n              vertex.y += deltaY;\n            }\n          });\n        };\n\n        if (layerElements.lines) {\n          processVertices(layerElements.lines, lineID => layer.lines[lineID].vertices || []);\n        }\n        if (layerElements.areas) {\n          processVertices(layerElements.areas, areaID => layer.areas[areaID].vertices || []);\n        }\n\n        if (layerElements.items) {\n          layerElements.items.forEach(itemID => {\n            const item = layer.items[itemID];\n            if (item) {\n              item.x += deltaX;\n              item.y += deltaY;\n            }\n          });\n        }\n      });\n    });\n  }\n\n  static rotate(state: State, groupID: string, rotation: number) {\n    return produce(state, draft => {\n      const group = draft.scene.groups[groupID];\n      if (!group) return;\n\n      const { x: barX, y: barY } = group;\n      const newRotation = (group.rotation + rotation) % 360;\n      group.rotation = newRotation;\n\n      Object.entries(group.elements).forEach(([layerID, layerElements]) => {\n        const layer = draft.scene.layers[layerID];\n        if (!layer) return;\n\n        const processVertices = (ids: string[], getVertices: (id: string) => string[]) => {\n          const vertexIds = new Set<string>();\n          ids.forEach(id => {\n            getVertices(id).forEach(vId => vertexIds.add(vId));\n          });\n          vertexIds.forEach(vertexID => {\n            const vertex = layer.vertices[vertexID];\n            if (vertex) {\n              const { x: newX, y: newY } = GeometryUtils.rotatePointAroundPoint(vertex.x, vertex.y, barX, barY, rotation);\n              vertex.x = newX;\n              vertex.y = newY;\n            }\n          });\n        };\n\n        if (layerElements.lines) {\n          processVertices(layerElements.lines, lineID => layer.lines[lineID]?.vertices || []);\n        }\n        if (layerElements.areas) {\n          processVertices(layerElements.areas, areaID => layer.areas[areaID]?.vertices || []);\n        }\n\n        if (layerElements.items) {\n          layerElements.items.forEach(itemID => {\n            const item = layer.items[itemID];\n            if (item) {\n              const { x: newX, y: newY } = GeometryUtils.rotatePointAroundPoint(item.x, item.y, barX, barY, rotation);\n              item.x = newX;\n              item.y = newY;\n              item.rotation = (item.rotation + rotation) % 360;\n            }\n          });\n        }\n      });\n    });\n  }\n}\n\nexport { Group as default };\n","import { Project, Area, Line, Hole, Item, Vertex } from './export';\nimport { Edge } from '../utils/graph';\nimport {\n  GraphInnerCycles,\n  GeometryUtils,\n  IDBroker\n} from '../utils/export';\nimport { Layer as LayerModel, State } from '../models';\nimport { produce } from 'immer';\nimport { ElementPrototypes } from '../types';\n\nconst sameSet = (set1: Set<string>, set2: Set<string>) => set1.size === set2.size && set1.isSupersetOf(set2) && set1.isSupersetOf(set2);\n\nclass Layer {\n\n  static create(state: State, name: string, altitude: number) {\n    return produce(state, draft => {\n      const layerID = IDBroker.acquireID();\n      name = name || `layer ${layerID}`;\n      altitude = altitude || 0;\n\n      const layer = LayerModel({ id: layerID, name, altitude });\n      draft.scene.selectedLayer = layerID;\n      draft.scene.layers[layerID] = layer;\n    });\n  }\n\n  static select(state: State, layerID: string) {\n    return produce(state, draft => {\n      if (!draft.alterate) {\n        draft = Project.unselectAll(draft);\n      }\n      draft.scene.selectedLayer = layerID;\n      return draft;\n    });\n  }\n\n  static selectElement(state: State, layerID: string, elementPrototype: ElementPrototypes, elementID: string) {\n    return produce(state, draft => {\n      const layer = draft.scene.layers[layerID];\n      if (!layer) return;\n      const element = layer[elementPrototype][elementID];\n      if (!element) return;\n      element.selected = true;\n      if (elementID in layer.selected[elementPrototype]) return;\n      layer.selected[elementPrototype].push(elementID);\n    });\n  }\n\n  static unselect(state: State, layerID: string, elementPrototype: ElementPrototypes, elementID: string) {\n    return produce(state, draft => {\n      const layer = draft.scene.layers[layerID];\n      if (!layer) return;\n      const element = layer[elementPrototype][elementID];\n      if (!element) return;\n\n      element.selected = false;\n      layer.selected[elementPrototype] = layer.selected[elementPrototype].filter(el => el !== elementID);\n    });\n  }\n\n  static unselectAll(state: State, layerID: string) {\n    return produce(state, draft => {\n      const layer = draft.scene.layers[layerID];\n      if (!layer) return;\n\n      const { lines, holes, items, areas } = layer;\n\n      Object.values(lines).forEach(line => { draft = Line.unselect(draft, layerID, line.id); });\n      Object.values(holes).forEach(hole => { draft = Hole.unselect(draft, layerID, hole.id); });\n      Object.values(items).forEach(item => { draft = Item.unselect(draft, layerID, item.id); });\n      Object.values(areas).forEach(area => { draft = Area.unselect(draft, layerID, area.id); });\n      return draft;\n    });\n  }\n\n  static setProperties(state: State, layerID: string, properties: any) {\n    return produce(state, draft => {\n      const layer = draft.scene.layers[layerID];\n      if (!layer) return;\n      Object.assign(layer, properties);\n      const sortedLayers = Object.values(draft.scene.layers).sort((a, b) => a.altitude !== b.altitude ? a.altitude - b.altitude : a.order - b.order);\n      draft.scene.layers = sortedLayers.reduce((acc, l) => ({ ...acc, [l.id]: l }), {});\n    });\n  }\n\n  static remove(state: State, layerID: string) {\n    return produce(state, draft => {\n      delete draft.scene.layers[layerID];\n      if (draft.scene.selectedLayer === layerID) {\n        const newSelectedLayer = Object.keys(draft.scene.layers)[0];\n        draft.scene.selectedLayer = newSelectedLayer || null;\n      }\n    });\n  }\n\n  static removeElement(state: State, layerID: string, elementPrototype: string, elementID: string) {\n    return produce(state, draft => {\n      const layer = draft.scene.layers[layerID];\n      if (layer && layer[elementPrototype]) {\n        delete layer[elementPrototype][elementID];\n      }\n    });\n  }\n\n  static detectAndUpdateAreas(state: State, layerID: string) {\n    // Compute cycles from the current state first\n    const layer0 = state.scene.layers[layerID];\n    if (!layer0) return state;\n\n    const verticesArray: Array<[number, number]> = [];\n    const vertexID_to_verticesArrayIndex: Record<string, number> = {};\n    const verticesArrayIndex_to_vertexID: Record<number, string> = {};\n\n    Object.values(layer0.vertices).forEach((vertex, i) => {\n      verticesArray.push([vertex.x, vertex.y]);\n      vertexID_to_verticesArrayIndex[vertex.id] = i;\n      verticesArrayIndex_to_vertexID[i] = vertex.id;\n    });\n\n    const linesArray = Object.values(layer0.lines)\n      .map(line => line.vertices.map(vertexID => vertexID_to_verticesArrayIndex[vertexID]));\n\n    const innerCyclesByVerticesID1 = GraphInnerCycles.calculateInnerCycles(verticesArray, linesArray);\n    const innerCyclesByVerticesID2 = innerCyclesByVerticesID1\n      .map(cycle => cycle.map(vertexIndex => verticesArrayIndex_to_vertexID[vertexIndex]));\n\n    const innerCyclesByVerticesID = innerCyclesByVerticesID2\n      .map(area => GraphInnerCycles.isClockWiseOrder(area.map(vertexID => layer0.vertices[vertexID])) ? area.reverse() : area);\n\n    // Remove old areas\n    Object.values(state.scene.layers[layerID].areas).forEach(area => {\n      if (!innerCyclesByVerticesID.some(vertices => sameSet(new Set(vertices), new Set(area.vertices)))) {\n        state = Area.remove(state, layerID, area.id);\n      }\n    });\n\n    let layer = state.scene.layers[layerID];\n    const areaIDs: string[] = [];\n    const areasToReset: string[] = [];\n\n    // Add new areas or mark reused ones for holes reset\n    innerCyclesByVerticesID.forEach((cycle, ind) => {\n      const areaInUse = Object.values(layer.areas).find(area => sameSet(new Set(area.vertices), new Set(cycle)));\n\n      if (areaInUse) {\n        areaIDs[ind] = areaInUse.id;\n        areasToReset.push(areaInUse.id);\n      } else {\n        const areaVerticesCoords = cycle.map(vertexID => {\n          const vertex = layer.vertices[vertexID];\n          return { x: vertex.x, y: vertex.y };\n        });\n        const resultAdd = Area.add(state, layerID, 'area', areaVerticesCoords, state.catalog);\n        areaIDs[ind] = resultAdd.area.id;\n        state = resultAdd.updatedState;\n        layer = state.scene.layers[layerID];\n      }\n    });\n\n    // Finally, mutate holes in a single produce call\n    state = produce(state, draft => {\n      const lay = draft.scene.layers[layerID];\n\n      // Reset holes on reused areas\n      areasToReset.forEach(id => {\n        if (lay.areas[id]) lay.areas[id].holes = [];\n      });\n\n      // Prepare vertices for containment checks\n      const verticesCoordsForArea = areaIDs.map(id => {\n        const area = lay.areas[id];\n        const vertices = area.vertices.map(vertexID => {\n          const { x, y } = lay.vertices[vertexID];\n          return [x, y] as [number, number];\n        });\n        return { id, vertices };\n      });\n\n      // Update holes lists\n      verticesCoordsForArea.forEach(area1 => {\n        const holesList: string[] = [];\n        verticesCoordsForArea.forEach(area2 => {\n          if (area1.id !== area2.id) {\n            if (GeometryUtils.ContainsPoint(area1.vertices.flat(), area2.vertices[0][0], area2.vertices[0][1])) {\n              holesList.push(area2.id);\n            }\n          }\n        });\n        lay.areas[area1.id].holes = holesList;\n      });\n\n      // Deduplicate holes\n      areaIDs.forEach(areaID => {\n        const doubleHoles = new Set<string>();\n        const areaHoles = lay.areas[areaID].holes;\n        areaHoles.forEach(areaHoleID => {\n          const holesOfholes = lay.areas[areaHoleID].holes;\n          holesOfholes.forEach(holeID => {\n            if (areaHoles.indexOf(holeID) !== -1) {\n              doubleHoles.add(holeID);\n            }\n          });\n        });\n        if (doubleHoles.size) {\n          lay.areas[areaID].holes = areaHoles.filter(holeID => !doubleHoles.has(holeID));\n        }\n      });\n    });\n\n    return state;\n  }\n\n  static removeZeroLengthLines(state: State, layerID: string) {\n    return produce(state, draft => {\n      const layer = draft.scene.layers[layerID];\n      if (!layer) return;\n      Object.values(layer.lines).forEach(line => {\n        const v0 = layer.vertices[line.vertices[0]];\n        const v1 = layer.vertices[line.vertices[1]];\n        if (GeometryUtils.verticesDistance(v0, v1) === 0) {\n          delete layer.lines[line.id];\n        }\n      });\n    });\n  }\n\n  static mergeEqualsVertices(state: State, layerID: string, vertexID: string) {\n    const layer = state.scene.layers[layerID];\n    if (!layer) return;\n    const vertex = layer.vertices[vertexID];\n    if (!vertex) return;\n\n    const doubleVertices = Object.values(layer.vertices).filter(v =>\n      v.id !== vertexID && GeometryUtils.samePoints(vertex, v)\n    );\n\n    doubleVertices.forEach(doubleVertex => {\n      doubleVertex.lines.forEach(lineID => {\n        const line = layer.lines[lineID];\n        if (line) {\n          state = produce(state, draft => {\n            draft.scene.layers[layerID].lines[lineID].vertices = line.vertices.map(v => v === doubleVertex.id ? vertexID : v) as [string, string];\n          });\n          state = Vertex.addElement(state, layerID, vertexID, 'lines', lineID);\n        }\n      });\n\n      doubleVertex.areas.forEach(areaID => {\n        const area = layer.areas[areaID];\n        if (area) {\n          state = produce(state, draft => {\n            draft.scene.layers[layerID].areas[areaID].vertices = area.vertices.map(v => v === doubleVertex.id ? vertexID : v) as [string, string];\n          });\n          state = Vertex.addElement(state, layerID, vertexID, 'areas', areaID);\n        }\n      });\n\n      state = Vertex.remove(state, layerID, doubleVertex.id, null, null, true);\n    });\n    return state;\n  }\n\n  static setPropertiesOnSelected(state: State, layerID: string, properties: Record<string, any>) {\n    return produce(state, draft => {\n      const selected = draft.scene.layers[layerID].selected;\n      selected.lines.forEach(lineID => draft = Line.setProperties(draft, layerID, lineID, properties));\n      selected.holes.forEach(holeID => draft = Hole.setProperties(draft, layerID, holeID, properties));\n      selected.areas.forEach(areaID => draft = Area.setProperties(draft, layerID, areaID, properties));\n      selected.items.forEach(itemID => draft = Item.setProperties(draft, layerID, itemID, properties));\n      return draft;\n    });\n  }\n\n  static updatePropertiesOnSelected(state: State, layerID: string, properties: Record<string, any>) {\n    return produce(state, draft => {\n      const selected = draft.scene.layers[layerID].selected;\n      selected.lines.forEach(lineID => draft = Line.updateProperties(draft, layerID, lineID, properties));\n      selected.holes.forEach(holeID => draft = Hole.updateProperties(draft, layerID, holeID, properties));\n      selected.areas.forEach(areaID => draft = Area.updateProperties(draft, layerID, areaID, properties));\n      selected.items.forEach(itemID => draft = Item.updateProperties(draft, layerID, itemID, properties));\n      return draft;\n    });\n  }\n\n  static setAttributesOnSelected(state: State, layerID: string, attributes: any) {\n    return produce(state, draft => {\n      const selected = draft.scene.layers[layerID].selected;\n      selected.lines.forEach(lineID => draft = Line.setAttributes(draft, layerID, lineID, attributes));\n      selected.holes.forEach(holeID => draft = Hole.setAttributes(draft, layerID, holeID, attributes));\n      selected.items.forEach(itemID => draft = Item.setAttributes(draft, layerID, itemID, attributes));\n      selected.areas.forEach(areaID => draft = Area.setAttributes(draft, layerID, areaID, attributes));\n      return draft;\n    });\n  }\n}\n\nexport { Layer as default };\n","import {\n  Group,\n  Layer,\n  Hole,\n  Vertex\n} from './export';\nimport {\n  IDBroker,\n  NameGenerator,\n  GeometryUtils,\n  SnapUtils,\n  SnapSceneUtils,\n} from '../utils/export';\nimport {\n  MODE_IDLE,\n  MODE_WAITING_DRAWING_LINE,\n  MODE_DRAWING_LINE,\n  MODE_DRAGGING_LINE\n} from '../constants';\nimport { State, Line as LineModel, catalogElementFactory, Hole as HoleModel } from '../models';\nimport { current, produce } from \"immer\";\n\ntype HomeWithOffsetPosition = {\n  hole: HoleModel;\n  offsetPosition: { x: number, y: number };\n};\n\nclass Line {\n  static create(state: State, layerID: string, type, x0: number, y0: number, x1: number, y1: number, properties?) {\n    const lineID = IDBroker.acquireID();\n\n    const { updatedState: stateV0, vertex: v0 } = Vertex.add(state, layerID, x0, y0, 'lines', lineID);\n    const { updatedState: stateV1, vertex: v1 } = Vertex.add(stateV0, layerID, x1, y1, 'lines', lineID);\n    state = stateV1;\n\n    const line = catalogElementFactory(state.catalog, type, {\n      id: lineID,\n      name: NameGenerator.generateName('lines', state.catalog.elements[type].info.title),\n      vertices: [v0.id, v1.id],\n      type\n    }, properties) as LineModel;\n\n    state = produce(state, draft => {\n      draft.scene.layers[layerID].lines[lineID] = line;\n    });\n\n    return { updatedState: state, line };\n  }\n\n  static select(state: State, layerID: string, lineID: string) {\n    state = Layer.select(state, layerID);\n\n    const line = state.scene.layers[layerID].lines[lineID];\n    state = Layer.selectElement(state, layerID, 'lines', lineID);\n    state = Layer.selectElement(state, layerID, 'vertices', line.vertices[0]);\n    state = Layer.selectElement(state, layerID, 'vertices', line.vertices[1]);\n\n    return state;\n  }\n\n  static remove(state: State, layerID: string, lineID: string) {\n    const line = state.scene.layers[layerID].lines[lineID];\n    return produce(state, draft => {\n      if (line) {\n        draft = this.unselect(draft, layerID, lineID);\n        line.holes.forEach(holeID => draft = Hole.remove(draft, layerID, holeID));\n        draft = Layer.removeElement(draft, layerID, 'lines', lineID);\n        line.vertices.forEach(vertexID => draft = Vertex.remove(draft, layerID, vertexID, 'lines', lineID));\n\n        Object.values(draft.scene.groups).forEach(group => {\n          draft = Group.removeElement(draft, group.id, layerID, 'lines', lineID);\n        });\n        return draft;\n      }\n    });\n  }\n\n  static unselect(state: State, layerID: string, lineID: string) {\n    const line = state.scene.layers[layerID].lines[lineID];\n    if (line) {\n      state = produce(state, draft => {\n        draft = Layer.unselect(draft, layerID, 'vertices', line.vertices[0]);\n        draft = Layer.unselect(draft, layerID, 'vertices', line.vertices[1]);\n        draft = Layer.unselect(draft, layerID, 'lines', lineID);\n        return draft;\n      });\n    }\n    return state;\n  }\n\n  static split(state: State, layerID: string, lineID: string, x: number, y: number) {\n    const line = state.scene.layers[layerID].lines[lineID];\n    const layer = state.scene.layers[layerID];\n    const v0 = layer.vertices[line.vertices[0]];\n    const v1 = layer.vertices[line.vertices[1]];\n    const { x: x0, y: y0 } = v0;\n    const { x: x1, y: y1 } = v1;\n\n    const { updatedState: stateL1, line: line0 } = Line.create(state, layerID, line.type, x0, y0, x, y, line.properties);\n    const { updatedState: stateL2, line: line1 } = Line.create(stateL1, layerID, line.type, x1, y1, x, y, line.properties);\n    state = stateL2;\n\n    let splitPointOffset = GeometryUtils.pointPositionOnLineSegment(x0, y0, x1, y1, x, y);\n    const minVertex = GeometryUtils.minVertex(v0, v1);\n\n    line.holes.forEach(holeID => {\n      const hole = layer.holes[holeID];\n      let holeOffset = hole.offset;\n      if (minVertex.x === x1 && minVertex.y === y1) {\n        splitPointOffset = 1 - splitPointOffset;\n        holeOffset = 1 - hole.offset;\n      }\n\n      if (holeOffset < splitPointOffset) {\n        let offset = holeOffset / splitPointOffset;\n        if (minVertex.x === x1 && minVertex.y === y1) {\n          offset = 1 - offset;\n        }\n        const { updatedState } = Hole.create(state, layerID, hole.type, line0.id, offset, hole.properties);\n        state = updatedState;\n      } else {\n        let offset = (holeOffset - splitPointOffset) / (1 - splitPointOffset);\n        if (minVertex.x === x1 && minVertex.y === y1) {\n          offset = 1 - offset;\n        }\n        const { updatedState } = Hole.create(state, layerID, hole.type, line1.id, offset, hole.properties);\n        state = updatedState;\n      }\n    });\n\n    const lineGroups = Object.values(state.scene.groups).filter(group => {\n      const lines = group.elements?.[layerID]?.lines;\n      return lines && lines.includes(lineID);\n    });\n\n    lineGroups.forEach(group => {\n      state = Group.addElement(state, group.id, layerID, 'lines', line0.id);\n      state = Group.addElement(state, group.id, layerID, 'lines', line1.id);\n    });\n\n    state = Line.remove(state, layerID, lineID);\n\n    return { updatedState: state, lines: [line0, line1] };\n  }\n\n  static addFromPoints(state: State, layerID, type, points: { x: number, y: number }[], properties?, holesWithOffsetPosition: HomeWithOffsetPosition[] = []) {\n    points = points\n      .sort(({ x: x1, y: y1 }, { x: x2, y: y2 }) => x1 === x2 ? y1 - y2 : x1 - x2)\n    //.filter((point, idx, arr) => idx === 0 || point.x !== arr[idx - 1].x || point.y !== arr[idx - 1].y);\n\n    const pointsPair = points\n      .slice(0, points.length - 1)\n      .map((point, idx) => [point, points[idx + 1]])\n      .filter(([{ x: x1, y: y1 }, { x: x2, y: y2 }]) => !(x1 === x2 && y1 === y2))\n\n    const lines: LineModel[] = [];\n\n    pointsPair.forEach(([{ x: x1, y: y1 }, { x: x2, y: y2 }]) => {\n      const { updatedState: stateL, line } = this.create(state, layerID, type, x1, y1, x2, y2, properties);\n      state = stateL;\n\n      if (holesWithOffsetPosition) {\n        holesWithOffsetPosition.forEach(holeWithOffsetPoint => {\n          const { x: xp, y: yp } = holeWithOffsetPoint.offsetPosition;\n\n          if (GeometryUtils.isPointOnLineSegment(x1, y1, x2, y2, xp, yp)) {\n            const newOffset = GeometryUtils.pointPositionOnLineSegment(x1, y1, x2, y2, xp, yp);\n            if (newOffset >= 0 && newOffset <= 1) {\n              state = Hole.create(state, layerID, holeWithOffsetPoint.hole.type, line.id, newOffset, holeWithOffsetPoint.hole.properties).updatedState;\n            }\n          }\n        });\n      }\n      lines.push(line);\n    });\n\n    return { updatedState: state, lines };\n  }\n\n  static createAvoidingIntersections(state: State, layerID: string, type: string, x0: number, y0: number, x1: number, y1: number, oldProperties: LineModel['properties'] = {}, oldHoles: HomeWithOffsetPosition[] = []) {\n    const points: { x: number, y: number }[] = [{ x: x0, y: y0 }, { x: x1, y: y1 }];\n\n    state = produce(state, draft => {\n      const linesArr = Object.values(draft.scene.layers[layerID].lines);\n      for (const line of linesArr) {\n        const [v0, v1] = line.vertices.map(vertexID => {\n          return draft.scene.layers[layerID].vertices[vertexID]\n        }\n        );\n        //const v0 = draft.scene.layers[layerID].vertices[line.vertices[0]];\n        //const v1 = draft.scene.layers[layerID].vertices[line.vertices[1]];\n\n        const hasCommonEndpoint =\n          GeometryUtils.samePoints(v0, points[0]) ||\n          GeometryUtils.samePoints(v0, points[1]) ||\n          GeometryUtils.samePoints(v1, points[0]) ||\n          GeometryUtils.samePoints(v1, points[1]);\n\n        const intersection = GeometryUtils.twoLineSegmentsIntersection(points[0], points[1], v0, v1);\n\n        if (intersection.type === 'colinear') {\n          if (!oldHoles) { oldHoles = []; }\n\n          const orderedVertices = GeometryUtils.orderVertices(points);\n\n          for (const holeID of line.holes) {\n            const hole = draft.scene.layers[layerID].holes[holeID];\n            const oldLineLength = GeometryUtils.pointsDistance(v0.x, v0.y, v1.x, v1.y);\n            const offset = GeometryUtils.samePoints(orderedVertices[1], draft.scene.layers[layerID].vertices[line.vertices[1]]) ? (1 - hole.offset) : hole.offset;\n            const offsetPosition = GeometryUtils.extendLine(v0.x, v0.y, v1.x, v1.y, oldLineLength * offset);\n            oldHoles.push({ hole, offsetPosition });\n          }\n\n          draft = Line.remove(draft, layerID, line.id);\n\n          points.push({ ...v0 }, { ...v1 });\n        }\n\n        if (intersection.type === 'intersecting' && (!hasCommonEndpoint)) {\n          draft = Line.split(draft, layerID, line.id, intersection.point.x, intersection.point.y).updatedState;\n          points.push(intersection.point);\n        }\n      }\n      return draft;\n    });\n\n    const { updatedState, lines } = Line.addFromPoints(state, layerID, type, points, oldProperties, oldHoles);\n    return { updatedState, lines };\n  }\n\n  static replaceVertex(state: State, layerID: string, lineID: string, vertexIndex: number, x: number, y: number) {\n    const vertexID = state.scene.layers[layerID].lines[lineID].vertices[vertexIndex];\n\n    state = Vertex.remove(state, layerID, vertexID, 'lines', lineID);\n    const { updatedState: stateV, vertex } = Vertex.add(state, layerID, x, y, 'lines', lineID);\n    state = stateV;\n\n    state = produce(state, draft => {\n      draft.scene.layers[layerID].lines[lineID].vertices[vertexIndex] = vertex.id;\n    });\n\n    return { updatedState: state, line: state.scene.layers[layerID].lines[lineID], vertex };\n  }\n\n  static selectToolDrawingLine(state: State, sceneComponentType) {\n    return produce(state, draft => {\n      draft.mode = MODE_WAITING_DRAWING_LINE;\n      draft.drawingSupport = {\n        type: sceneComponentType\n      };\n    });\n  }\n\n  static beginDrawingLine(state: State, layerID: string, x: number, y: number) {\n    let snapElements = SnapSceneUtils.sceneSnapElements(state.scene, [], state.snapMask);\n    let snap = null;\n\n    if (state.snapMask) {\n      snap = SnapUtils.nearestSnap(snapElements, x, y, state.snapMask);\n      if (snap) ({ x, y } = snap.point);\n\n      let a: number, b: number, c: number;\n      ({ a, b, c } = GeometryUtils.horizontalLine(y));\n      snapElements = SnapUtils.addLineSnap(snapElements, a, b, c, 10, 3, null);\n      ({ a, b, c } = GeometryUtils.verticalLine(x));\n      snapElements = SnapUtils.addLineSnap(snapElements, a, b, c, 10, 3, null);\n    }\n\n    const drawingSupport = { ...state.drawingSupport, layerID } as State[\"drawingSupport\"];\n\n    state = Layer.unselectAll(state, layerID);\n\n    const { updatedState: stateL, line } = Line.create(state, layerID, drawingSupport.type, x, y, x, y);\n    state = Line.select(stateL, layerID, line.id);\n\n    return produce(state, draft => {\n      draft.mode = MODE_DRAWING_LINE;\n      draft.snapElements = snapElements;\n      draft.activeSnapElement = snap ? snap.snap : null;\n      draft.drawingSupport = drawingSupport;\n    });\n  }\n\n  static updateDrawingLine(state: State, x: number, y: number) {\n    let snap = null;\n    if (state.snapMask) {\n      snap = SnapUtils.nearestSnap(state.snapElements, x, y, state.snapMask);\n      if (snap) ({ x, y } = snap.point);\n    }\n    const layerID = state.drawingSupport.layerID;\n    const lineID = state.scene.layers[layerID].selected.lines[0];\n    state = Line.replaceVertex(state, layerID, lineID, 1, x, y).updatedState;\n    state = Line.select(state, layerID, lineID);\n    state = produce(state, draft => {\n      draft.activeSnapElement = snap ? snap.snap : null;\n    });\n    return state;\n  }\n\n  static endDrawingLine(state: State, x: number, y: number) {\n    if (state.snapMask) {\n      const snap = SnapUtils.nearestSnap(state.snapElements, x, y, state.snapMask);\n      if (snap) ({ x, y } = snap.point);\n    }\n\n    const layerID = state.drawingSupport.layerID;\n    const layer = state.scene.layers[layerID];\n    const lineID = layer.selected.lines[0];\n    const line = layer.lines[lineID];\n    const v0 = layer.vertices[line.vertices[0]];\n\n    state = Line.remove(state, layerID, lineID);\n    state = Line.createAvoidingIntersections(state, layerID, line.type, v0.x, v0.y, x, y).updatedState;\n    state = Layer.detectAndUpdateAreas(state, layerID);\n\n    return produce(state, draft => {\n      draft.mode = MODE_WAITING_DRAWING_LINE;\n      draft.snapElements = [];\n      draft.activeSnapElement = null;\n    });\n  }\n\n  static beginDraggingLine(state: State, layerID, lineID, x, y) {\n    return produce(state, draft => {\n      const snapElements = SnapSceneUtils.sceneSnapElements(draft.scene, [], draft.snapMask);\n      const layer = draft.scene.layers[layerID];\n      const line = layer.lines[lineID];\n      const vertex0 = layer.vertices[line.vertices[0]];\n      const vertex1 = layer.vertices[line.vertices[1]];\n\n      draft.mode = MODE_DRAGGING_LINE;\n      draft.snapElements = snapElements;\n      draft.draggingSupport = {\n        layerID,\n        lineID,\n        startPointX: x,\n        startPointY: y,\n        startVertex0X: vertex0.x,\n        startVertex0Y: vertex0.y,\n        startVertex1X: vertex1.x,\n        startVertex1Y: vertex1.y,\n      };\n    });\n  }\n\n  static updateDraggingLine(state: State, x, y) {\n    return produce(state, draft => {\n      const { draggingSupport, snapElements, snapMask } = draft;\n      const layerID = draggingSupport.layerID;\n      const lineID = draggingSupport.lineID;\n      const diffX = x - draggingSupport.startPointX;\n      const diffY = y - draggingSupport.startPointY;\n      let newVertex0X = draggingSupport.startVertex0X + diffX;\n      let newVertex0Y = draggingSupport.startVertex0Y + diffY;\n      let newVertex1X = draggingSupport.startVertex1X + diffX;\n      let newVertex1Y = draggingSupport.startVertex1Y + diffY;\n\n      let activeSnapElement = null;\n      let curSnap0 = null, curSnap1 = null;\n      if (snapMask) {\n        curSnap0 = SnapUtils.nearestSnap(snapElements, newVertex0X, newVertex0Y, snapMask);\n        curSnap1 = SnapUtils.nearestSnap(snapElements, newVertex1X, newVertex1Y, snapMask);\n      }\n\n      let deltaX = 0, deltaY = 0;\n      if (curSnap0 && curSnap1) {\n        if (curSnap0.point.distance < curSnap1.point.distance) {\n          deltaX = curSnap0.point.x - newVertex0X;\n          deltaY = curSnap0.point.y - newVertex0Y;\n          activeSnapElement = curSnap0.snap;\n        } else {\n          deltaX = curSnap1.point.x - newVertex1X;\n          deltaY = curSnap1.point.y - newVertex1Y;\n          activeSnapElement = curSnap1.snap;\n        }\n      } else {\n        if (curSnap0) {\n          deltaX = curSnap0.point.x - newVertex0X;\n          deltaY = curSnap0.point.y - newVertex0Y;\n          activeSnapElement = curSnap0.snap;\n        }\n        if (curSnap1) {\n          deltaX = curSnap1.point.x - newVertex1X;\n          deltaY = curSnap1.point.y - newVertex1Y;\n          activeSnapElement = curSnap1.snap;\n        }\n      }\n\n      newVertex0X += deltaX;\n      newVertex0Y += deltaY;\n      newVertex1X += deltaX;\n      newVertex1Y += deltaY;\n\n      draft.activeSnapElement = activeSnapElement;\n      draft.scene.layers[layerID].vertices[\n        draft.scene.layers[layerID].lines[lineID].vertices[0]\n      ].x = newVertex0X;\n      draft.scene.layers[layerID].vertices[\n        draft.scene.layers[layerID].lines[lineID].vertices[0]\n      ].y = newVertex0Y;\n      draft.scene.layers[layerID].vertices[\n        draft.scene.layers[layerID].lines[lineID].vertices[1]\n      ].x = newVertex1X;\n      draft.scene.layers[layerID].vertices[\n        draft.scene.layers[layerID].lines[lineID].vertices[1]\n      ].y = newVertex1Y;\n    });\n  }\n\n  static endDraggingLine(state: State, x, y) {\n    const { draggingSupport } = state;\n    const layerID = draggingSupport.layerID;\n    const layer = state.scene.layers[layerID];\n    const lineID = draggingSupport.lineID;\n    const line = layer.lines[lineID];\n\n    const vertex0 = layer.vertices[line.vertices[0]];\n    const vertex1 = layer.vertices[line.vertices[1]];\n\n    const maxV = GeometryUtils.maxVertex(vertex0, vertex1);\n    const minV = GeometryUtils.minVertex(vertex0, vertex1);\n\n    const lineLength = GeometryUtils.verticesDistance(minV, maxV);\n    const alpha = Math.atan2(maxV.y - minV.y, maxV.x - minV.x);\n\n    const holesWithOffsetPosition: HomeWithOffsetPosition[] = [];\n    layer.lines[lineID].holes.forEach(holeID => {\n      const hole = layer.holes[holeID];\n      const pointOnLine = lineLength * hole.offset;\n\n      const offsetPosition = {\n        x: pointOnLine * Math.cos(alpha) + minV.x,\n        y: pointOnLine * Math.sin(alpha) + minV.y\n      };\n\n      holesWithOffsetPosition.push({ hole, offsetPosition });\n    });\n\n    const diffX = x - draggingSupport.startPointX;\n    const diffY = y - draggingSupport.startPointY;\n    let newVertex0X = draggingSupport.startVertex0X + diffX;\n    let newVertex0Y = draggingSupport.startVertex0Y + diffY;\n    let newVertex1X = draggingSupport.startVertex1X + diffX;\n    let newVertex1Y = draggingSupport.startVertex1Y + diffY;\n\n    if (state.snapMask) {\n      const curSnap0 = SnapUtils.nearestSnap(state.snapElements, newVertex0X, newVertex0Y, state.snapMask);\n      const curSnap1 = SnapUtils.nearestSnap(state.snapElements, newVertex1X, newVertex1Y, state.snapMask);\n\n      let deltaX = 0, deltaY = 0;\n      if (curSnap0 && curSnap1) {\n        if (curSnap0.point.distance < curSnap1.point.distance) {\n          deltaX = curSnap0.point.x - newVertex0X;\n          deltaY = curSnap0.point.y - newVertex0Y;\n        } else {\n          deltaX = curSnap1.point.x - newVertex1X;\n          deltaY = curSnap1.point.y - newVertex1Y;\n        }\n      } else {\n        if (curSnap0) {\n          deltaX = curSnap0.point.x - newVertex0X;\n          deltaY = curSnap0.point.y - newVertex0Y;\n        }\n        if (curSnap1) {\n          deltaX = curSnap1.point.x - newVertex1X;\n          deltaY = curSnap1.point.y - newVertex1Y;\n        }\n      }\n\n      newVertex0X += deltaX;\n      newVertex0Y += deltaY;\n      newVertex1X += deltaX;\n      newVertex1Y += deltaY;\n    }\n\n    //get groups membership if present\n    const lineGroups = Object.values(state.scene.groups).filter(group => {\n      const lines = group.elements?.[layerID]?.lines;\n      return lines && lines.includes(lineID);\n    });\n\n    state = Layer.mergeEqualsVertices(state, layerID, line.vertices[0]);\n    state = Layer.mergeEqualsVertices(state, layerID, line.vertices[1]);\n\n    state = Line.remove(state, layerID, lineID);\n\n    if (!GeometryUtils.samePoints({ x: newVertex0X, y: newVertex0Y }, { x: newVertex1X, y: newVertex1Y })) {\n      const ret = Line.createAvoidingIntersections(\n        state,\n        layerID,\n        line.type,\n        newVertex0X,\n        newVertex0Y,\n        newVertex1X,\n        newVertex1Y,\n        line.properties,\n        holesWithOffsetPosition\n      );\n\n      state = ret.updatedState;\n\n      //re-add to old line's groups if present\n      ret.lines.forEach(addedLine => {\n        lineGroups.forEach(oldLineGroup => {\n          state = Group.addElement(state, oldLineGroup.id, layerID, 'lines', addedLine.id);\n        });\n      });\n    }\n\n    state = Layer.detectAndUpdateAreas(state, layerID);\n\n    return produce(state, draft => {\n      draft.mode = MODE_IDLE;\n      draft.draggingSupport = null;\n      draft.activeSnapElement = null;\n      draft.snapElements = [];\n    });\n  }\n\n  static setProperties(state: State, layerID: string, lineID: string, properties: any) {\n    return produce(state, draft => {\n      draft.scene.layers[layerID].lines[lineID].properties = properties;\n    });\n  }\n\n  static setJsProperties(state: State, layerID: string, lineID: string, properties) {\n    return this.setProperties(state, layerID, lineID, properties);\n  }\n\n  static updateProperties(state: State, layerID: string, lineID: string, properties: Record<string, any>) {\n    Object.entries(properties).forEach(([k, v]) => {\n      state = produce(state, draft => {\n        if (draft.scene.layers[layerID].lines[lineID].properties.hasOwnProperty(k)) {\n          draft.scene.layers[layerID].lines[lineID].properties[k] = v;\n        }\n      });\n    });\n    return state;\n  }\n\n  static updateJsProperties(state: State, layerID: string, lineID: string, properties) {\n    return this.updateProperties(state, layerID, lineID, properties);\n  }\n\n  static setAttributes(state: State, layerID: string, lineID: string, lineAttributes) {\n    const { vertexOne, vertexTwo, lineLength, name, ...lAttr } = lineAttributes;\n\n    state = produce(state, draft => {\n      const layer = draft.scene.layers[layerID];\n      layer.vertices[vertexOne.id].x = vertexOne.x;\n      layer.vertices[vertexOne.id].y = vertexOne.y;\n      layer.vertices[vertexTwo.id].x = vertexTwo.x;\n      layer.vertices[vertexTwo.id].y = vertexTwo.y;\n      if (!layer.lines[lineID].misc) {\n        layer.lines[lineID].misc = {};\n      }\n      layer.lines[lineID].misc._unitLength = lineLength._unit;\n      layer.lines[lineID].name = name;\n    });\n\n    state = Layer.mergeEqualsVertices(state, layerID, vertexOne.id);\n\n    if (vertexOne.x != vertexTwo.x && vertexOne.y != vertexTwo.y) {\n      state = Layer.mergeEqualsVertices(state, layerID, vertexTwo.id);\n    }\n\n    state = Layer.detectAndUpdateAreas(state, layerID);\n    return state;\n  }\n\n  static setVerticesCoords(state: State, layerID, lineID, x1, y1, x2, y2) {\n    const line = state.scene.layers[layerID].lines[lineID];\n    state = Vertex.setAttributes(state, layerID, line.vertices[0], { x: x1, y: y1 });\n    return Vertex.setAttributes(state, layerID, line.vertices[1], { x: x2, y: y2 });\n  }\n}\n\nexport { Line as default };\n","import { Layer, Group } from './export';\n\nimport {\n  IDBroker,\n  NameGenerator\n} from '../utils/export';\n\nimport {\n  nearestSnap,\n  addLineSegmentSnap,\n} from '../utils/snap';\n\nimport {\n  MODE_IDLE,\n  MODE_DRAWING_HOLE,\n  MODE_DRAGGING_HOLE,\n} from '../constants';\n\nimport {\n  GeometryUtils\n} from '../utils/export';\nimport { State, catalogElementFactory, Hole as HoleModel } from '../models';\nimport { produce } from 'immer';\n\nclass Hole {\n  static create(state: State, layerID: string, type, lineID: string, offset: number, properties?) {\n    const holeID = IDBroker.acquireID();\n\n    const hole = catalogElementFactory(state.catalog, type, {\n      id: holeID,\n      name: NameGenerator.generateName('holes', state.catalog.elements[type].info.title),\n      type,\n      offset,\n      line: lineID\n    }, properties);\n\n    state = produce(state, draft => {\n      if (!draft.scene.layers[layerID].holes) {\n        draft.scene.layers[layerID].holes = {};\n      }\n      draft.scene.layers[layerID].holes[holeID] = hole as HoleModel;\n      if (!draft.scene.layers[layerID].lines[lineID].holes) {\n        draft.scene.layers[layerID].lines[lineID].holes = [];\n      }\n      draft.scene.layers[layerID].lines[lineID].holes.push(holeID);\n    });\n    return { updatedState: state, hole };\n  }\n\n  static select(state: State, layerID: string, holeID: string) {\n    return produce(state, draft => {\n      draft = Layer.select(draft, layerID);\n      draft = Layer.selectElement(draft, layerID, 'holes', holeID);\n      return draft;\n    });\n  }\n\n  static remove(state: State, layerID: string, holeID: string) {\n    return produce(state, draft => {\n      const hole = draft.scene.layers[layerID]?.holes[holeID];\n      if (!hole) return;\n\n      const line = draft.scene.layers[layerID]?.lines[hole.line];\n      if (line?.holes) {\n        const index = line.holes.indexOf(holeID);\n        if (index !== -1) {\n          line.holes.splice(index, 1);\n        }\n      }\n\n      delete draft.scene.layers[layerID].holes[holeID];\n\n      Object.values(draft.scene.groups).forEach(group => {\n        if (group.elements[layerID]?.holes) {\n          const index = group.elements[layerID].holes.indexOf(holeID);\n          if (index !== -1) {\n            group.elements[layerID].holes.splice(index, 1);\n          }\n        }\n      });\n    });\n  }\n\n  static unselect(state: State, layerID: string, holeID: string) {\n    return produce(state, draft => {\n      const layer = draft.scene.layers[layerID];\n      if (layer) {\n        const index = layer.selected.holes.indexOf(holeID);\n        if (index !== -1) {\n          layer.selected.holes.splice(index, 1);\n        }\n        if (layer.holes[holeID]) {\n          layer.holes[holeID].selected = false;\n        }\n      }\n    });\n  }\n\n  static selectToolDrawingHole(state: State, sceneComponentType: string) {\n    return produce(state, draft => {\n      const snapElements = [];\n      const layer = draft.scene.layers[draft.scene.selectedLayer];\n      const { lines, vertices } = layer;\n\n      Object.values(lines).forEach(line => {\n        const v0 = vertices[line.vertices[0]];\n        const v1 = vertices[line.vertices[1]];\n        addLineSegmentSnap(snapElements, v0.x, v0.y, v1.x, v1.y, 20, 1, line.id);\n      });\n\n      draft.mode = MODE_DRAWING_HOLE;\n      draft.snapElements = snapElements;\n      draft.drawingSupport = { type: sceneComponentType };\n    });\n  }\n\n  static updateDrawingHole(state: State, layerID: string, x: number, y: number) {\n    return produce(state, draft => {\n      const snap = nearestSnap(draft.snapElements, x, y, { ...draft.snapMask, SNAP_SEGMENT: true });\n      if (!snap) return;\n\n      ({ x, y } = snap.point);\n\n      const selectedHoleID = draft.scene.layers[layerID].selected.holes[0];\n\n      const lineID = snap.snap.related[0];\n      const line = draft.scene.layers[layerID].lines[lineID];\n      const [v0ID, v1ID] = line.vertices;\n      const v0 = draft.scene.layers[layerID].vertices[v0ID];\n      const v1 = draft.scene.layers[layerID].vertices[v1ID];\n\n      const offset = GeometryUtils.pointPositionOnLineSegment(v0.x, v0.y, v1.x, v1.y, x, y);\n\n      if (selectedHoleID) {\n        const hole = draft.scene.layers[layerID].holes[selectedHoleID];\n        hole.offset = offset;\n        hole.line = lineID;\n      } else {\n        const { updatedState: stateH, hole } = this.create(draft, layerID, draft.drawingSupport.type, lineID, offset);\n        draft = this.select(stateH, layerID, hole.id);\n      }\n      return draft;\n    });\n  }\n\n  static endDrawingHole(state: State, layerID: string, x: number, y: number) {\n    return produce(state, draft => {\n      const updatedState = this.updateDrawingHole(draft, layerID, x, y);\n      Object.assign(draft, updatedState);\n      Layer.unselectAll(draft, layerID);\n      draft.mode = MODE_IDLE;\n      return draft;\n    });\n  }\n\n  static beginDraggingHole(state: State, layerID: string, holeID: string, x: number, y: number) {\n    return produce(state, draft => {\n      const layer = draft.scene.layers[layerID];\n      const hole = layer.holes[holeID];\n      const line = layer.lines[hole.line];\n      const v0 = layer.vertices[line.vertices[0]];\n      const v1 = layer.vertices[line.vertices[1]];\n\n      const snapElements = addLineSegmentSnap([], v0.x, v0.y, v1.x, v1.y, 9999999, 1, null);\n\n      draft.mode = MODE_DRAGGING_HOLE;\n      draft.snapElements = snapElements;\n      draft.draggingSupport = {\n        layerID,\n        holeID,\n        startPointX: x,\n        startPointY: y,\n      };\n    });\n  }\n\n  static updateDraggingHole(state: State, x: number, y: number) {\n    return produce(state, draft => {\n      const snap = nearestSnap(draft.snapElements, x, y, { ...draft.snapMask, SNAP_SEGMENT: true });\n      if (!snap) return;\n\n      ({ x, y } = snap.point);\n\n      const { layerID, holeID } = draft.draggingSupport;\n      const hole = draft.scene.layers[layerID].holes[holeID];\n      const line = draft.scene.layers[layerID].lines[hole.line];\n      const v0 = draft.scene.layers[layerID].vertices[line.vertices[0]];\n      const v1 = draft.scene.layers[layerID].vertices[line.vertices[1]];\n\n      const offset = GeometryUtils.pointPositionOnLineSegment(v0.x, v0.y, v1.x, v1.y, x, y);\n      hole.offset = offset;\n    });\n  }\n\n  static endDraggingHole(state: State, x: number, y: number) {\n    return produce(state, draft => {\n      const updatedState = this.updateDraggingHole(draft, x, y);\n      Object.assign(draft, updatedState);\n      draft.mode = MODE_IDLE;\n    });\n  }\n\n  static setProperties(state: State, layerID: string, holeID: string, properties: any) {\n    return produce(state, draft => {\n      draft.scene.layers[layerID].holes[holeID].properties = properties;\n    });\n  }\n\n  static setJsProperties(state: State, layerID: string, holeID: string, properties: any) {\n    return this.setProperties(state, layerID, holeID, properties);\n  }\n\n  static updateProperties(state: State, layerID: string, holeID: string, properties: Record<string, any>) {\n    return produce(state, draft => {\n      const hole = draft.scene.layers[layerID]?.holes[holeID];\n      if (hole) {\n        Object.entries(properties).forEach(([key, value]) => {\n          if (hole.properties[key] !== undefined) {\n            hole.properties[key] = value;\n          }\n        });\n      }\n    });\n  }\n\n  static updateJsProperties(state: State, layerID: string, holeID: string, properties: any) {\n    return this.updateProperties(state, layerID, holeID, properties);\n  }\n\n  static setAttributes(state: State, layerID: string, holeID: string, holesAttributes: any) {\n    return produce(state, draft => {\n      const hole = draft.scene.layers[layerID]?.holes[holeID];\n      if (hole) {\n        const { offsetA, offsetB, offset, ...rest } = holesAttributes;\n        Object.assign(hole, rest);\n        hole.offset = offset;\n        hole.misc = { _unitA: offsetA._unit, _unitB: offsetB._unit };\n      }\n    });\n  }\n}\n\nexport { Hole as default };\n","import { Vertex as VertexModel, State, VertexPrototypeKeys } from '../models';\nimport {\n  IDBroker,\n  GeometryUtils,\n  SnapSceneUtils,\n  SnapUtils\n} from '../utils/export';\nimport {\n  MODE_DRAGGING_VERTEX,\n  MODE_IDLE\n} from '../constants';\nimport { Layer, Line, Group } from '../class/export';\nimport { current, produce } from \"immer\";\n\nclass Vertex {\n  static add(state: State, layerID: string, x: number, y: number, relatedPrototype: \"lines\" | \"areas\", relatedID: string) {\n    let vertex: VertexModel | undefined = undefined;\n    state = produce(state, draft => {\n      const vertices = draft.scene.layers[layerID].vertices;\n      for (const v of Object.values(vertices)) {\n        if (GeometryUtils.samePoints(v, { x, y })) {\n          vertex = { ...v };\n          break;\n        }\n      }\n\n      if (vertex) {\n        vertex[relatedPrototype].push(relatedID);\n      } else {\n        vertex = VertexModel({\n          id: IDBroker.acquireID(),\n          name: 'Vertex',\n          x, y,\n          [relatedPrototype]: [relatedID]\n        });\n        draft.scene.layers[layerID].vertices[vertex.id] = vertex;\n      }\n    });\n    return { updatedState: state, vertex };\n  }\n\n  static setAttributes(state: State, layerID, vertexID, vertexAttributes) {\n    return produce(state, draft => {\n      Object.assign(\n        draft.scene.layers[layerID].vertices[vertexID],\n        vertexAttributes\n      );\n    });\n  }\n\n  static addElement(state: State, layerID, vertexID, elementPrototype: \"lines\" | \"areas\", elementID: string) {\n    return produce(state, draft => {\n      const list = draft.scene.layers[layerID].vertices[vertexID][elementPrototype];\n      if (!list.includes(elementID)) {\n        list.push(elementID);\n      }\n    });\n  }\n\n  static removeElement(state: State, layerID, vertexID, elementPrototype: \"lines\" | \"areas\", elementID: string) {\n    return produce(state, draft => {\n      const list = draft.scene.layers[layerID].vertices[vertexID][elementPrototype];\n      const elementIndex = list.findIndex(el => el === elementID);\n      if (elementIndex !== -1) {\n        list.splice(elementIndex, 1);\n      }\n    });\n  }\n\n  static select(state: State, layerID: string, vertexID: string) {\n    state = produce(state, draft => {\n      draft.scene.layers[layerID].vertices[vertexID].selected = true;\n      draft.scene.layers[layerID].selected.vertices.push(vertexID);\n    });\n\n    return state;\n  }\n\n  static unselect(state: State, layerID: string, vertexID: string) {\n    state = produce(state, draft => {\n      draft.scene.layers[layerID].vertices[vertexID].selected = false;\n      const selectedVertices = draft.scene.layers[layerID].selected.vertices;\n      const idx = selectedVertices.indexOf(vertexID);\n      if (idx !== -1) selectedVertices.splice(idx, 1);\n    });\n\n    return state;\n  }\n\n  static remove(state: State, layerID: string, vertexID: string, relatedPrototype: \"lines\" | \"areas\" | null, relatedID: string | null, forceRemove = false) {\n    let vertex: VertexModel | undefined = undefined;\n    vertex = state.scene.layers[layerID].vertices[vertexID];\n\n    if (vertex) {\n      state = this.unselect(state, layerID, vertexID);\n      state = produce(state, draft => {\n        if (relatedPrototype && relatedID) {\n          const related = draft.scene.layers[layerID].vertices[vertexID][relatedPrototype];\n          const index = related.findIndex(ID => relatedID === ID);\n          if (index !== -1) {\n            related.splice(index, 1);\n          }\n          vertex = draft.scene.layers[layerID].vertices[vertexID];\n        }\n\n        const inUse = vertex.areas.length || vertex.lines.length;\n\n        if (inUse && !forceRemove) {\n          draft.scene.layers[layerID].vertices[vertexID] = vertex;\n        }\n        else {\n          delete draft.scene.layers[layerID].vertices[vertexID];\n        }\n      });\n    }\n    return state;\n  }\n\n  static beginDraggingVertex(state: State, layerID: string, vertexID: string, x?: number, y?: number) {\n    state = produce(state, draft => {\n      const snapElements = SnapSceneUtils.sceneSnapElements(draft.scene, [], draft.snapMask);\n      draft.snapElements = snapElements;\n      draft.draggingSupport = {\n        layerID,\n        vertexID,\n        previousMode: draft.mode\n      };\n      draft.mode = MODE_DRAGGING_VERTEX;\n    });\n    return state\n  }\n\n  static updateDraggingVertex(state: State, x: number, y: number) {\n    const { draggingSupport, snapElements, snapMask } = state;\n\n    let snap = null;\n    if (Object.keys(snapMask).length) {\n      snap = SnapUtils.nearestSnap(snapElements, x, y, snapMask);\n      if (snap) ({ x, y } = snap.point);\n    }\n\n    const layerID = draggingSupport.layerID;\n    const vertexID = draggingSupport.vertexID;\n    state = produce(state, draft => {\n      draft.activeSnapElement = snap ? snap.snap : null;\n      const vertex = draft.scene.layers[layerID].vertices[vertexID];\n      vertex.x = x;\n      vertex.y = y;\n    });\n\n    return state;\n  }\n\n  static endDraggingVertex(state: State, x?, y?) {\n    state = produce(state, draft => {\n      const { draggingSupport } = draft;\n      const layerID = draggingSupport.layerID;\n      const vertexID = draggingSupport.vertexID;\n      const vertex = draft.scene.layers[layerID].vertices[vertexID];\n      const lines = vertex.lines;\n\n      if (lines) {\n        lines.forEach(lineID => {\n          const line = draft.scene.layers[layerID].lines[lineID];\n          if (!line) return;\n\n          const v_id0 = line.vertices[0];\n          const v_id1 = line.vertices[1];\n          const oldVertexID = v_id0 === vertexID ? v_id1 : v_id0;\n\n          const oldVertex = draft.scene.layers[layerID].vertices[oldVertexID];\n\n          const oldHoles = [];\n          const orderedVertices = GeometryUtils.orderVertices([oldVertex, vertex]);\n\n          line.holes.forEach(holeID => {\n            const hole = draft.scene.layers[layerID].holes[holeID];\n            const oldLineLength = GeometryUtils.pointsDistance(oldVertex.x, oldVertex.y, vertex.x, vertex.y);\n            const vertexId1 = draft.scene.layers[layerID].lines[lineID].vertices[1];\n            const vertexObj1 = draft.scene.layers[layerID].vertices[vertexId1];\n            const offset = GeometryUtils.samePoints(orderedVertices[1], vertexObj1) ? (1 - hole.offset) : hole.offset;\n            const offsetPosition = GeometryUtils.extendLine(oldVertex.x, oldVertex.y, vertex.x, vertex.y, oldLineLength * offset);\n            oldHoles.push({ hole, offsetPosition });\n          });\n\n          const lineType = line.type;\n          const lineProps = line.properties;\n          const lineGroups = Object.values(draft.scene.groups).filter((group: any) => {\n            const lines = group.elements[layerID]?.lines;\n            return lines && lines.includes(lineID);\n          });\n\n          draft = Layer.removeZeroLengthLines(draft, layerID);\n          draft = Layer.mergeEqualsVertices(draft, layerID, vertexID);\n          draft = Line.remove(draft, layerID, lineID);\n\n          if (!GeometryUtils.samePoints(oldVertex, vertex)) {\n            const { lines: newLines, updatedState: stateL } = Line.createAvoidingIntersections(\n              draft,\n              layerID,\n              lineType,\n              oldVertex.x,\n              oldVertex.y,\n              vertex.x,\n              vertex.y,\n              lineProps,\n              oldHoles\n            );\n            draft = stateL;\n\n            newLines.forEach(addedLine => {\n              lineGroups.forEach((oldLineGroup) => {\n                draft = Group.addElement(draft, oldLineGroup.id, layerID, 'lines', addedLine.id);\n              });\n            });\n          }\n        });\n      }\n\n      draft = Layer.detectAndUpdateAreas(draft, layerID);\n\n      draft.mode = draggingSupport.previousMode;\n      draft.draggingSupport = {};\n      draft.activeSnapElement = null;\n      draft.snapElements = [];\n      return draft;\n    });\n\n    return state;\n  }\n}\n\nexport { Vertex as default };\n","import { Layer, Vertex, Group } from './export';\nimport { Area as AreaModel, State, Layer as LayerModel, Catalog, catalogElementFactory } from '../models';\nimport {\n  IDBroker,\n  NameGenerator\n} from '../utils/export';\nimport { produce } from \"immer\";\n\nclass Area {\n  static add(state: State, layerID: string, type: \"area\", verticesCoords: { x: number, y: number }[], catalog: Catalog) {\n    if (!state.scene.layers[layerID]) return;\n\n    const areaID = IDBroker.acquireID();\n    const vertices = verticesCoords.map(v => {\n      const { updatedState, vertex } = Vertex.add(state, layerID, v.x, v.y, 'areas', areaID);\n      state = updatedState;\n      return vertex.id;\n    });\n\n    const area = catalogElementFactory(catalog, type, {\n      id: areaID,\n      name: NameGenerator.generateName('areas', catalog.elements[type].info.title),\n      type,\n      prototype: 'areas',\n      vertices\n    });\n\n    state = produce(state, draft => {\n      draft.scene.layers[layerID].areas[area.id] = area as any;\n    });\n    return { updatedState: state, area };\n  }\n\n  static select(state: State, layerID: string, areaID: string) {\n    state = Layer.select(state, layerID);\n    state = Layer.selectElement(state, layerID, 'areas', areaID);\n    return state\n  }\n\n  static remove(state: State, layerID: string, areaID: string) {\n    return produce(state, draft => {\n      const area = draft.scene.layers[layerID]?.areas[areaID];\n      if (!area) return;\n\n      area.vertices.forEach(vertexID => {\n        Vertex.remove(draft, layerID, vertexID, 'areas', areaID);\n      });\n\n      delete draft.scene.layers[layerID].areas[areaID];\n\n      Object.values(draft.scene.groups).forEach(group => {\n        draft = Group.removeElement(draft, group.id, layerID, 'areas', areaID);\n      });\n      return draft;\n    });\n  }\n\n  static unselect(state: State, layerID: string, areaID: string) {\n    return Layer.unselect(state, layerID, 'areas', areaID);\n  }\n\n  static setProperties(state: State, layerID: string, areaID: string, properties: any) {\n    return produce(state, draft => {\n      const area = draft.scene.layers[layerID]?.areas[areaID];\n      if (area) {\n        Object.assign(area.properties, properties);\n      }\n    });\n  }\n\n  static updateProperties(state: State, layerID: string, areaID: string, properties: Record<string, any>) {\n    return produce(state, draft => {\n      const propsPath = draft.scene?.layers?.[layerID]?.areas?.[areaID]?.properties;\n\n      if (!propsPath) return;\n\n      Object.entries(properties).forEach(([k, v]) => {\n        if (propsPath.hasOwnProperty(k)) {\n          propsPath[k] = {\n            ...propsPath[k],\n            ...v\n          };\n        }\n      });\n    });\n  }\n\n  static updateJsProperties(state: State, layerID: string, areaID: string, properties: any) {\n    return this.updateProperties(state, layerID, areaID, properties);\n  }\n\n  static setAttributes(state: State, layerID: string, areaID: string, areaAttributes: any) {\n    return produce(state, draft => {\n      const area = draft.scene.layers[layerID].areas[areaID];\n      Object.assign(area, areaAttributes);\n    });\n  }\n}\n\nexport { Area as default };\n","import { Layer, Group } from './export';\nimport {\n  IDBroker,\n  NameGenerator\n} from '../utils/export';\n\nimport {\n  MODE_IDLE,\n  MODE_DRAWING_ITEM,\n  MODE_DRAGGING_ITEM,\n  MODE_ROTATING_ITEM\n} from '../constants';\nimport { produce } from 'immer';\nimport { State, Item as ItemModel, catalogElementFactory } from '../models';\n\nclass Item {\n\n  static create(state: State, layerID: string, type: string, x: number, y: number, width: number, height: number, rotation: number) {\n    const itemID = IDBroker.acquireID();\n\n    const item = catalogElementFactory(state.catalog, type, {\n      id: itemID,\n      name: NameGenerator.generateName('items', state.catalog.elements[type].info.title),\n      type,\n      height,\n      width,\n      x,\n      y,\n      rotation\n    }) as ItemModel;\n\n    const updatedState = produce(state, draft => {\n      draft.scene.layers[layerID].items[itemID] = item;\n    });\n\n    return { updatedState, item };\n  }\n\n  static select(state: State, layerID: string, itemID: string) {\n    state = Layer.select(state, layerID);\n    state = Layer.selectElement(state, layerID, 'items', itemID);\n    return state;\n  }\n\n  static remove(state: State, layerID: string, itemID: string) {\n    return produce(state, draft => {\n      draft = this.unselect(draft, layerID, itemID);\n      draft = Layer.removeElement(draft, layerID, 'items', itemID);\n      Object.values(draft.scene.groups).forEach(group => {\n        draft = Group.removeElement(draft, group.id, layerID, 'items', itemID);\n      });\n      return draft;\n    });\n  }\n\n  static unselect(state: State, layerID: string, itemID: string) {\n    return Layer.unselect(state, layerID, 'items', itemID);\n  }\n\n  static selectToolDrawingItem(state: State, sceneComponentType: string) {\n    return produce(state, draft => {\n      draft.mode = MODE_DRAWING_ITEM;\n      draft.drawingSupport = {\n        type: sceneComponentType\n      };\n    });\n  }\n\n  static updateDrawingItem(state: State, layerID: string, x: number, y: number) {\n    if (state.drawingSupport.currentID) {\n      return produce(state, draft => {\n        const item = draft.scene.layers[layerID]?.items[draft.drawingSupport.currentID];\n        if (item) {\n          item.x = x;\n          item.y = y;\n        }\n      });\n    } else {\n      const { updatedState: stateI, item } = this.create(state, layerID, state.drawingSupport.type, x, y, 200, 100, 0);\n      state = Item.select(stateI, layerID, item.id);\n      //draft.drawingSupport.currentID = item.id;\n      //draft = { ...draft, drawingSupport: { ...draft.drawingSupport, currentID: item.id } };\n      return produce(state, draft => {\n        draft.drawingSupport.currentID = item.id;\n      });\n    }\n  }\n\n  static endDrawingItem(state: State, layerID: string, x: number, y: number) {\n    state = this.updateDrawingItem(state, layerID, x, y);\n    state = Layer.unselectAll(state, layerID);\n    return produce(state, draft => {\n      draft.drawingSupport = { type: draft.drawingSupport.type };\n    });;\n  }\n\n  static beginDraggingItem(state: State, layerID: string, itemID: string, x: number, y: number) {\n    return produce(state, draft => {\n      const item = draft.scene.layers[layerID]?.items[itemID];\n      if (item) {\n        draft.mode = MODE_DRAGGING_ITEM;\n        draft.draggingSupport = {\n          layerID,\n          itemID,\n          startPointX: x,\n          startPointY: y,\n          originalX: item.x,\n          originalY: item.y\n        };\n      }\n    });\n  }\n\n  static updateDraggingItem(state: State, x: number, y: number) {\n    return produce(state, draft => {\n      const { layerID, itemID, startPointX, startPointY, originalX, originalY } = draft.draggingSupport;\n      const layer = draft.scene.layers[layerID];\n      const item = layer?.items[itemID];\n      if (layer && item) {\n        const deltaX = x - startPointX;\n        const deltaY = y - startPointY;\n        item.x = originalX + deltaX;\n        item.y = originalY + deltaY;\n      }\n    });\n  }\n\n  static endDraggingItem(state: State, x: number, y: number) {\n    return produce(state, draft => {\n      const { layerID, itemID, startPointX, startPointY, originalX, originalY } = draft.draggingSupport;\n      const layer = draft.scene.layers[layerID];\n      const item = layer?.items[itemID];\n      if (layer && item) {\n        const deltaX = x - startPointX;\n        const deltaY = y - startPointY;\n        item.x = originalX + deltaX;\n        item.y = originalY + deltaY;\n      }\n      draft.mode = MODE_IDLE;\n      draft.draggingSupport = {};\n    });\n  }\n\n  static beginRotatingItem(state: State, layerID: string, itemID: string, x: number, y: number) {\n    return produce(state, draft => {\n      draft.mode = MODE_ROTATING_ITEM;\n      draft.rotatingSupport = {\n        layerID,\n        itemID\n      };\n    });\n  }\n\n  static updateRotatingItem(state: State, x: number, y: number) {\n    return produce(state, draft => {\n      const { rotatingSupport } = draft;\n      const layerID = rotatingSupport.layerID;\n      const itemID = rotatingSupport.itemID;\n      const item = draft.scene.layers[layerID].items[itemID];\n\n      const deltaX = x - item.x;\n      const deltaY = y - item.y;\n      let rotation = Math.atan2(deltaY, deltaX) * 180 / Math.PI - 90;\n\n      if (-5 < rotation && rotation < 5) rotation = 0;\n      if (-95 < rotation && rotation < -85) rotation = -90;\n      if (-185 < rotation && rotation < -175) rotation = -180;\n      if (85 < rotation && rotation < 90) rotation = 90;\n      if (-270 < rotation && rotation < -265) rotation = 90;\n\n      item.rotation = rotation;\n    });\n  }\n\n  static endRotatingItem(state: State, x: number, y: number) {\n    state = this.updateRotatingItem(state, x, y);\n    return produce(state, draft => {\n      draft.mode = MODE_IDLE;\n    });\n  }\n\n  static setProperties(state: State, layerID: string, itemID: string, properties: any) {\n    return produce(state, draft => {\n      draft.scene.layers[layerID].items[itemID].properties = properties;\n    });\n  }\n\n  static setJsProperties(state: State, layerID: string, itemID: string, properties: any) {\n    return this.setProperties(state, layerID, itemID, properties);\n  }\n\n  static updateProperties(state: State, layerID: string, itemID: string, properties: Record<string, any>) {\n    return produce(state, draft => {\n      const item = draft.scene.layers[layerID]?.items[itemID];\n      if (item) {\n        Object.entries(properties).forEach(([key, value]) => {\n          if (item.properties[key] !== undefined) {\n            item.properties[key] = value;\n          }\n        });\n      }\n    });\n  }\n\n  static updateJsProperties(state: State, layerID: string, itemID: string, properties: any) {\n    return this.updateProperties(state, layerID, itemID, properties);\n  }\n\n  static setAttributes(state: State, layerID: string, itemID: string, attributes: any) {\n    return produce(state, draft => {\n      const item = draft.scene.layers[layerID]?.items[itemID];\n      if (item) {\n        Object.assign(item, attributes);\n      }\n    });\n  }\n}\n\nexport { Item as default };\n","import { IDBroker } from '../utils/export';\nimport { produce } from 'immer';\nimport { State } from '../models';\n\nclass HorizontalGuide {\n  static create(state: State, coordinate: number) {\n    return produce(state, draft => {\n      const hGuideID = IDBroker.acquireID();\n      draft.scene.guides.horizontal[hGuideID] = coordinate;\n    });\n  }\n\n  static remove(state: State, hGuideID: string) {\n    return produce(state, draft => {\n      delete draft.scene.guides.horizontal[hGuideID];\n    });\n  }\n}\n\nclass VerticalGuide {\n  static create(state: State, coordinate: number) {\n    return produce(state, draft => {\n      const vGuideID = IDBroker.acquireID();\n      draft.scene.guides.vertical[vGuideID] = coordinate;\n    });\n  }\n\n  static remove(state: State, vGuideID: string) {\n    return produce(state, draft => {\n      delete draft.scene.guides.vertical[vGuideID];\n    });\n  }\n}\n\nclass CircularGuide {\n}\n\nexport {\n  HorizontalGuide,\n  VerticalGuide,\n  CircularGuide\n};\n\nexport default {\n  HorizontalGuide,\n  VerticalGuide,\n  CircularGuide\n};\n","import {\n  PROJECT_ACTIONS,\n  VIEWER2D_ACTIONS,\n  VIEWER3D_ACTIONS,\n  GROUP_ACTIONS,\n  ITEMS_ACTIONS,\n  HOLE_ACTIONS,\n  LINE_ACTIONS,\n  AREA_ACTIONS,\n  SCENE_ACTIONS,\n  VERTEX_ACTIONS\n} from '../constants';\n\nimport {\n  ReactPlannerAreasReducer,\n  ReactPlannerHolesReducer,\n  ReactPlannerItemsReducer,\n  ReactPlannerLinesReducer,\n  ReactPlannerGroupsReducer,\n  ReactPlannerProjectReducer,\n  ReactPlannerSceneReducer,\n  ReactPlannerVerticesReducer,\n  ReactPlannerViewer2dReducer,\n  ReactPlannerViewer3dReducer\n} from './export';\n\nimport { State } from '../models';\n\nexport const initialState = State();\n\nexport default function appReducer(state, action) {\n  if (PROJECT_ACTIONS[action.type]) return ReactPlannerProjectReducer(state, action);\n  if (VIEWER2D_ACTIONS[action.type]) return ReactPlannerViewer2dReducer(state, action);\n  if (VIEWER3D_ACTIONS[action.type]) return ReactPlannerViewer3dReducer(state, action);\n  if (ITEMS_ACTIONS[action.type]) return ReactPlannerItemsReducer(state, action);\n  if (HOLE_ACTIONS[action.type]) return ReactPlannerHolesReducer(state, action);\n  if (LINE_ACTIONS[action.type]) return ReactPlannerLinesReducer(state, action);\n  if (AREA_ACTIONS[action.type]) return ReactPlannerAreasReducer(state, action);\n  if (GROUP_ACTIONS[action.type]) return ReactPlannerGroupsReducer(state, action);\n  if (SCENE_ACTIONS[action.type]) return ReactPlannerSceneReducer(state, action);\n  if (VERTEX_ACTIONS[action.type]) return ReactPlannerVerticesReducer(state, action);\n\n  return state || initialState;\n};\n","import { history } from '../utils/export';\nimport {\n  LOAD_PROJECT,\n  NEW_PROJECT,\n  OPEN_CATALOG,\n  SELECT_TOOL_EDIT,\n  MODE_IDLE,\n  UNSELECT_ALL,\n  SET_PROPERTIES,\n  SET_ITEMS_ATTRIBUTES,\n  SET_LINES_ATTRIBUTES,\n  SET_HOLES_ATTRIBUTES,\n  REMOVE,\n  UNDO,\n  ROLLBACK,\n  SET_PROJECT_PROPERTIES,\n  OPEN_PROJECT_CONFIGURATOR,\n  INIT_CATALOG,\n  UPDATE_MOUSE_COORDS,\n  UPDATE_ZOOM_SCALE,\n  TOGGLE_SNAP,\n  CHANGE_CATALOG_PAGE,\n  GO_BACK_TO_CATALOG_PAGE,\n  THROW_ERROR,\n  THROW_WARNING,\n  COPY_PROPERTIES,\n  PASTE_PROPERTIES,\n  PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY,\n  ALTERATE_STATE,\n  SET_MODE,\n  ADD_HORIZONTAL_GUIDE,\n  ADD_VERTICAL_GUIDE,\n  ADD_CIRCULAR_GUIDE,\n  REMOVE_HORIZONTAL_GUIDE,\n  REMOVE_VERTICAL_GUIDE,\n  REMOVE_CIRCULAR_GUIDE\n} from '../constants';\n\nimport { Project } from '../class/export';\nimport { State } from '../models';\nimport { produce } from 'immer';\n\nexport default function (state: State, action): State {\n  switch (action.type) {\n    case NEW_PROJECT:\n      return Project.newProject(state);\n\n    case LOAD_PROJECT:\n      return Project.loadProject(state, action.sceneJSON);\n\n    case OPEN_CATALOG:\n      return Project.openCatalog(state);\n\n    case CHANGE_CATALOG_PAGE:\n      return Project.changeCatalogPage(state, action.oldPage, action.newPage);\n\n    case GO_BACK_TO_CATALOG_PAGE:\n      return Project.goBackToCatalogPage(state, action.newPage);\n\n    case SELECT_TOOL_EDIT:\n      return Project.setMode(state, MODE_IDLE);\n\n    case UNSELECT_ALL:\n      return Project.unselectAll(state);\n\n    case SET_PROPERTIES:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Project.setProperties(state, state.scene.selectedLayer, action.properties);\n\n    case SET_ITEMS_ATTRIBUTES:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Project.setItemsAttributes(state, action.itemsAttributes);\n\n    case SET_LINES_ATTRIBUTES:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Project.setLinesAttributes(state, action.linesAttributes);\n\n    case SET_HOLES_ATTRIBUTES:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Project.setHolesAttributes(state, action.holesAttributes);\n\n    case REMOVE:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Project.remove(state);\n\n    case UNDO:\n      return Project.undo(state);\n\n    case ROLLBACK:\n      return Project.rollback(state);\n\n    case SET_PROJECT_PROPERTIES:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Project.setProjectProperties(state, action.properties);\n\n    case OPEN_PROJECT_CONFIGURATOR:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Project.openProjectConfigurator(state);\n\n    case INIT_CATALOG:\n      return Project.initCatalog(state, action.catalog);\n\n    case UPDATE_MOUSE_COORDS:\n      return Project.updateMouseCoord(state, action.coords);\n\n    case UPDATE_ZOOM_SCALE:\n      return Project.updateZoomScale(state, action.scale);\n\n    case TOGGLE_SNAP:\n      return Project.toggleSnap(state, action.mask);\n\n    case THROW_ERROR:\n      return Project.throwError(state, action.error);\n\n    case THROW_WARNING:\n      return Project.throwWarning(state, action.warning);\n\n    case COPY_PROPERTIES:\n      return Project.copyProperties(state, action.properties);\n\n    case PASTE_PROPERTIES:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Project.pasteProperties(state);\n\n    case PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY:\n      return Project.pushLastSelectedCatalogElementToHistory(state, action.element);\n\n    case ALTERATE_STATE:\n      return Project.setAlterate(state);\n\n    case SET_MODE:\n      return Project.setMode(state, action.mode);\n\n    case ADD_HORIZONTAL_GUIDE:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Project.addHorizontalGuide(state, action.coordinate);\n\n    case ADD_VERTICAL_GUIDE:\n      return Project.addVerticalGuide(state, action.coordinate);\n\n    case ADD_CIRCULAR_GUIDE:\n      return Project.addCircularGuide(state, action.x, action.y, action.radius);\n\n    case REMOVE_HORIZONTAL_GUIDE:\n      return Project.removeHorizontalGuide(state, action.guideID);\n\n    case REMOVE_VERTICAL_GUIDE:\n      return Project.removeVerticalGuide(state, action.guideID);\n\n    case REMOVE_CIRCULAR_GUIDE:\n      return Project.removeCircularGuide(state, action.guideID);\n\n    default:\n      return state;\n  }\n}\n","import { State } from '../models';\nimport {\n  UPDATE_2D_CAMERA,\n  SELECT_TOOL_PAN,\n  SELECT_TOOL_ZOOM_IN,\n  SELECT_TOOL_ZOOM_OUT,\n  MODE_2D_PAN,\n  MODE_2D_ZOOM_IN,\n  MODE_2D_ZOOM_OUT\n} from '../constants';\n\nexport default function (state: State, action): State {\n  switch (action.type) {\n    case UPDATE_2D_CAMERA:\n      return { ...state, viewer2D: action.value };\n\n    case SELECT_TOOL_PAN:\n      return { ...state, mode: MODE_2D_PAN };\n\n    case SELECT_TOOL_ZOOM_IN:\n      return { ...state, mode: MODE_2D_ZOOM_IN };\n\n    case SELECT_TOOL_ZOOM_OUT:\n      return { ...state, mode: MODE_2D_ZOOM_OUT };\n  }\n}\n","import {\n  MODE_3D_VIEW,\n  MODE_3D_FIRST_PERSON,\n  SELECT_TOOL_3D_VIEW,\n  SELECT_TOOL_3D_FIRST_PERSON\n} from '../constants';\nimport { Project } from '../class/export';\nimport { history } from '../utils/export';\nimport { State } from '../models';\n\nexport default function (state: State, action) {\n\n  state = {\n    ...state,\n    sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n  }\n\n  switch (action.type) {\n    case SELECT_TOOL_3D_VIEW:\n      state = Project.rollback(state);\n      state = Project.setMode(state, MODE_3D_VIEW);\n      return state;\n\n    case SELECT_TOOL_3D_FIRST_PERSON:\n      state = Project.rollback(state);\n      state = Project.setMode(state, MODE_3D_FIRST_PERSON);\n      return state;\n\n    default:\n      return state;\n  }\n}\n","import { Item } from '../class/export';\nimport { history } from '../utils/export';\nimport {\n  SELECT_TOOL_DRAWING_ITEM,\n  UPDATE_DRAWING_ITEM,\n  END_DRAWING_ITEM,\n  BEGIN_DRAGGING_ITEM,\n  UPDATE_DRAGGING_ITEM,\n  END_DRAGGING_ITEM,\n  BEGIN_ROTATING_ITEM,\n  UPDATE_ROTATING_ITEM,\n  END_ROTATING_ITEM,\n  SELECT_ITEM\n} from '../constants';\nimport { State } from '../models';\nimport { produce } from 'immer';\n\nexport default function (state: State, action): State {\n  switch (action.type) {\n    case SELECT_ITEM:\n      return Item.select(state, action.layerID, action.itemID);\n\n    case SELECT_TOOL_DRAWING_ITEM:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Item.selectToolDrawingItem(state, action.sceneComponentType);\n\n    case UPDATE_DRAWING_ITEM:\n      return Item.updateDrawingItem(state, action.layerID, action.x, action.y);\n\n    case END_DRAWING_ITEM:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Item.endDrawingItem(state, action.layerID, action.x, action.y);\n\n    case BEGIN_DRAGGING_ITEM:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Item.beginDraggingItem(state, action.layerID, action.itemID, action.x, action.y);\n\n    case UPDATE_DRAGGING_ITEM:\n      return Item.updateDraggingItem(state, action.x, action.y);\n\n    case END_DRAGGING_ITEM:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Item.endDraggingItem(state, action.x, action.y);\n\n    case BEGIN_ROTATING_ITEM:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Item.beginRotatingItem(state, action.layerID, action.itemID, action.x, action.y);\n\n    case UPDATE_ROTATING_ITEM:\n      return Item.updateRotatingItem(state, action.x, action.y);\n\n    case END_ROTATING_ITEM:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Item.endRotatingItem(state, action.x, action.y);\n\n    default:\n      return state;\n  }\n}\n","import { Hole } from '../class/export';\nimport { history } from '../utils/export';\nimport {\n  SELECT_TOOL_DRAWING_HOLE,\n  UPDATE_DRAWING_HOLE,\n  END_DRAWING_HOLE,\n  BEGIN_DRAGGING_HOLE,\n  UPDATE_DRAGGING_HOLE,\n  END_DRAGGING_HOLE,\n  SELECT_HOLE,\n} from '../constants';\nimport { State } from '../models';\n\nexport default function (state: State, action) {\n  switch (action.type) {\n    case SELECT_TOOL_DRAWING_HOLE:\n      state = { ...state, sceneHistory: history.historyPush(state.sceneHistory, state.scene) };\n      return Hole.selectToolDrawingHole(state, action.sceneComponentType);\n\n    case UPDATE_DRAWING_HOLE:\n      return Hole.updateDrawingHole(state, action.layerID, action.x, action.y);\n\n    case END_DRAWING_HOLE:\n      state = { ...state, sceneHistory: history.historyPush(state.sceneHistory, state.scene) };\n      return Hole.endDrawingHole(state, action.layerID, action.x, action.y);\n\n    case BEGIN_DRAGGING_HOLE:\n      state = { ...state, sceneHistory: history.historyPush(state.sceneHistory, state.scene) };\n      return Hole.beginDraggingHole(state, action.layerID, action.holeID, action.x, action.y);\n\n    case UPDATE_DRAGGING_HOLE:\n      return Hole.updateDraggingHole(state, action.x, action.y);\n\n    case END_DRAGGING_HOLE:\n      state = { ...state, sceneHistory: history.historyPush(state.sceneHistory, state.scene) };\n      return Hole.endDraggingHole(state, action.x, action.y);\n\n    case SELECT_HOLE:\n      return Hole.select(state, action.layerID, action.holeID);\n\n    default:\n      return state;\n  }\n}\n","import { Line } from '../class/export';\nimport { history } from '../utils/export';\nimport {\n  SELECT_TOOL_DRAWING_LINE,\n  BEGIN_DRAWING_LINE,\n  UPDATE_DRAWING_LINE,\n  END_DRAWING_LINE,\n  BEGIN_DRAGGING_LINE,\n  UPDATE_DRAGGING_LINE,\n  END_DRAGGING_LINE,\n  SELECT_LINE\n} from '../constants';\nimport { State } from '../models';\nimport { produce } from 'immer';\n\nexport default function (state: State, action): State {\n  switch (action.type) {\n    case SELECT_TOOL_DRAWING_LINE:\n      return Line.selectToolDrawingLine(state, action.sceneComponentType);\n\n    case BEGIN_DRAWING_LINE:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Line.beginDrawingLine(state, action.layerID, action.x, action.y);\n\n    case UPDATE_DRAWING_LINE:\n      return Line.updateDrawingLine(state, action.x, action.y);\n\n    case END_DRAWING_LINE:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Line.endDrawingLine(state, action.x, action.y);\n\n    case BEGIN_DRAGGING_LINE:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Line.beginDraggingLine(state, action.layerID, action.lineID, action.x, action.y);\n\n    case UPDATE_DRAGGING_LINE:\n      return Line.updateDraggingLine(state, action.x, action.y);\n\n    case END_DRAGGING_LINE:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Line.endDraggingLine(state, action.x, action.y);\n\n    case SELECT_LINE:\n      return Line.select(state, action.layerID, action.lineID);\n\n    default:\n      return state;\n  }\n}\n","import { Area } from '../class/export';\nimport { SELECT_AREA } from '../constants';\n\nexport default function (state, action) {\n  switch (action.type) {\n    case SELECT_AREA:\n      return Area.select(state, action.layerID, action.areaID);\n    default:\n      return state;\n  }\n}\n","import { GROUP_ACTIONS } from '../constants';\nimport { Group } from '../class/export';\nimport { history } from '../utils/export';\nimport { State } from '../models';\n\nexport default function (state: State, action) {\n\n  state = { ...state, sceneHistory: history.historyPush(state.sceneHistory, state.scene) };\n\n  switch (action.type) {\n    case GROUP_ACTIONS.ADD_GROUP:\n      return Group.create(state);\n\n    case GROUP_ACTIONS.ADD_GROUP_FROM_SELECTED:\n      return Group.createFromSelectedElements(state);\n\n    case GROUP_ACTIONS.SELECT_GROUP:\n      return Group.select(state, action.groupID);\n\n    case GROUP_ACTIONS.UNSELECT_GROUP:\n      return Group.unselect(state, action.groupID);\n\n    case GROUP_ACTIONS.ADD_TO_GROUP:\n      return Group.addElement(state, action.groupID, action.layerID, action.elementPrototype, action.elementID);\n\n    case GROUP_ACTIONS.REMOVE_FROM_GROUP:\n      return Group.removeElement(state, action.groupID, action.layerID, action.elementPrototype, action.elementID);\n\n    case GROUP_ACTIONS.SET_GROUP_ATTRIBUTES:\n      return Group.setAttributes(state, action.groupID, action.attributes);\n\n    case GROUP_ACTIONS.SET_GROUP_PROPERTIES:\n      return Group.setProperties(state, action.groupID, action.properties);\n\n    case GROUP_ACTIONS.SET_GROUP_BARYCENTER:\n      return Group.setBarycenter(state, action.groupID, action.barycenter.x, action.barycenter.y);\n\n    case GROUP_ACTIONS.REMOVE_GROUP:\n      return Group.remove(state, action.groupID);\n\n    case GROUP_ACTIONS.REMOVE_GROUP_AND_DELETE_ELEMENTS:\n      return Group.removeAndDeleteElements(state, action.groupID);\n\n    case GROUP_ACTIONS.GROUP_TRANSLATE:\n      return Group.translate(state, action.groupID, action.x, action.y);\n\n    case GROUP_ACTIONS.GROUP_ROTATE:\n      return Group.rotate(state, action.groupID, action.rotation);\n\n    default:\n      return state;\n  }\n}\n\n","import { Layer } from '../class/export';\nimport { history } from '../utils/export';\nimport {\n  ADD_LAYER,\n  SELECT_LAYER,\n  SET_LAYER_PROPERTIES,\n  REMOVE_LAYER\n} from '../constants';\nimport { State } from '../models';\n\nexport default function (state: State, action): State {\n\n  state = { ...state, sceneHistory: history.historyPush(state.sceneHistory, state.scene) };\n\n  switch (action.type) {\n    case ADD_LAYER:\n      return Layer.create(state, action.name, action.altitude);\n\n    case SELECT_LAYER:\n      return Layer.select(state, action.layerID);\n\n    case SET_LAYER_PROPERTIES:\n      return Layer.setProperties(state, action.layerID, action.properties);\n\n    case REMOVE_LAYER:\n      return Layer.remove(state, action.layerID);\n\n    default:\n      return state;\n  }\n}\n","import {\n  BEGIN_DRAGGING_VERTEX,\n  UPDATE_DRAGGING_VERTEX,\n  END_DRAGGING_VERTEX\n} from '../constants';\nimport { Vertex } from '../class/export';\nimport { State } from '../models';\nimport { history } from '../utils/export';\nimport { produce } from 'immer';\n\nexport default function (state: State, action) {\n  switch (action.type) {\n    case BEGIN_DRAGGING_VERTEX:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Vertex.beginDraggingVertex(state, action.layerID, action.vertexID, action.x, action.y);\n\n    case UPDATE_DRAGGING_VERTEX:\n      return Vertex.updateDraggingVertex(state, action.x, action.y);\n\n    case END_DRAGGING_VERTEX:\n      state = produce(state, draft => {\n        draft.sceneHistory = history.historyPush(draft.sceneHistory, draft.scene);\n      });\n      return Vertex.endDraggingVertex(state, action.x, action.y);\n\n    default:\n      return state;\n  }\n}\n","import { produce } from 'immer';\nimport {\n  NEW_PROJECT,\n  LOAD_PROJECT,\n  SAVE_PROJECT,\n  OPEN_CATALOG,\n  SELECT_TOOL_EDIT,\n  UNSELECT_ALL,\n  SET_PROPERTIES,\n  SET_ITEMS_ATTRIBUTES,\n  SET_LINES_ATTRIBUTES,\n  SET_HOLES_ATTRIBUTES,\n  REMOVE,\n  UNDO,\n  ROLLBACK,\n  OPEN_PROJECT_CONFIGURATOR,\n  SET_PROJECT_PROPERTIES,\n  INIT_CATALOG,\n  UPDATE_MOUSE_COORDS,\n  UPDATE_ZOOM_SCALE,\n  TOGGLE_SNAP,\n  CHANGE_CATALOG_PAGE,\n  GO_BACK_TO_CATALOG_PAGE,\n  THROW_ERROR,\n  THROW_WARNING,\n  COPY_PROPERTIES,\n  PASTE_PROPERTIES,\n  PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY,\n  ALTERATE_STATE,\n  SET_MODE,\n  ADD_HORIZONTAL_GUIDE,\n  ADD_VERTICAL_GUIDE,\n  ADD_CIRCULAR_GUIDE,\n  REMOVE_HORIZONTAL_GUIDE,\n  REMOVE_VERTICAL_GUIDE,\n  REMOVE_CIRCULAR_GUIDE\n} from '../constants';\nimport { SnapMaskType } from '../types';\n\nexport function loadProject(sceneJSON) {\n  return {\n    type: LOAD_PROJECT,\n    sceneJSON\n  };\n}\n\nexport function newProject() {\n  return {\n    type: NEW_PROJECT\n  };\n}\n\nexport function saveProject() {\n  return {\n    type: SAVE_PROJECT\n  };\n}\n\nexport function openCatalog() {\n  return {\n    type: OPEN_CATALOG\n  };\n}\n\nexport function changeCatalogPage(newPage, oldPage) {\n  return {\n    type: CHANGE_CATALOG_PAGE,\n    newPage,\n    oldPage\n  };\n}\n\nexport function goBackToCatalogPage(newPage) {\n  return {\n    type: GO_BACK_TO_CATALOG_PAGE,\n    newPage\n  };\n}\n\nexport function selectToolEdit() {\n  return {\n    type: SELECT_TOOL_EDIT\n  };\n}\n\nexport function unselectAll() {\n  return {\n    type: UNSELECT_ALL\n  };\n}\n\n\nexport function setProperties(properties: Record<string, any>) {\n  return {\n    type: SET_PROPERTIES,\n    properties\n  };\n}\n\nexport function setItemsAttributes(itemsAttributes) {\n  itemsAttributes = produce(itemsAttributes, draft => {\n    draft.rotation = parseFloat(draft.rotation);\n  });\n\n  return {\n    type: SET_ITEMS_ATTRIBUTES,\n    itemsAttributes\n  };\n}\n\nexport function setLinesAttributes(linesAttributes) {\n  linesAttributes = produce(linesAttributes, draft => {\n    draft.vertexOne.x = parseFloat(draft.vertexOne.x);\n    draft.vertexOne.y = parseFloat(draft.vertexOne.y);\n    draft.vertexTwo.x = parseFloat(draft.vertexTwo.x);\n    draft.vertexTwo.y = parseFloat(draft.vertexTwo.y);\n  });\n\n  return {\n    type: SET_LINES_ATTRIBUTES,\n    linesAttributes\n  };\n}\n\nexport function setHolesAttributes(holesAttributes) {\n  holesAttributes = produce(holesAttributes, draft => {\n    draft.offset = parseFloat(draft.offset);\n  });\n\n  return {\n    type: SET_HOLES_ATTRIBUTES,\n    holesAttributes\n  };\n}\n\nexport function remove() {\n  return {\n    type: REMOVE\n  };\n}\n\nexport function undo() {\n  return {\n    type: UNDO\n  };\n}\n\nexport function rollback() {\n  return {\n    type: ROLLBACK\n  };\n}\n\nexport function openProjectConfigurator() {\n  return {\n    type: OPEN_PROJECT_CONFIGURATOR\n  };\n}\n\nexport function setProjectProperties(properties) {\n  return {\n    type: SET_PROJECT_PROPERTIES,\n    properties\n  };\n}\n\nexport function initCatalog(catalog) {\n  return {\n    type: INIT_CATALOG,\n    catalog\n  };\n}\n\nexport function updateMouseCoord({ x = 0, y = 0 }: { x: number; y: number }) {\n  return {\n    type: UPDATE_MOUSE_COORDS,\n    coords: { x, y }\n  } as const;\n}\n\nexport function updateZoomScale(scale) {\n  return {\n    type: UPDATE_ZOOM_SCALE,\n    scale\n  };\n}\n\nexport function toggleSnap(mask: SnapMaskType) {\n  return {\n    type: TOGGLE_SNAP,\n    mask\n  };\n}\n\nexport function throwError(error) {\n  return {\n    type: THROW_ERROR,\n    error\n  };\n}\n\nexport function throwWarning(warning) {\n  return {\n    type: THROW_WARNING,\n    warning\n  };\n}\n\nexport function copyProperties(properties) {\n  return {\n    type: COPY_PROPERTIES,\n    properties\n  };\n}\n\nexport function pasteProperties() {\n  return {\n    type: PASTE_PROPERTIES\n  };\n}\n\nexport function pushLastSelectedCatalogElementToHistory(element) {\n  return {\n    type: PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY,\n    element\n  };\n}\n\nexport function setAlterateState() {\n  return {\n    type: ALTERATE_STATE\n  };\n}\n\nexport function setMode(mode) {\n  return {\n    type: SET_MODE,\n    mode\n  };\n}\n\nexport function addHorizontalGuide(coordinate) {\n  return {\n    type: ADD_HORIZONTAL_GUIDE,\n    coordinate\n  };\n}\n\nexport function addVerticalGuide(coordinate) {\n  return {\n    type: ADD_VERTICAL_GUIDE,\n    coordinate\n  };\n}\n\nexport function addCircularGuide(x, y, radius) {\n  return {\n    type: ADD_CIRCULAR_GUIDE,\n    x,\n    y,\n    radius\n  };\n}\nexport function removeHorizontalGuide(guideID) {\n  return {\n    type: REMOVE_HORIZONTAL_GUIDE,\n    guideID\n  };\n}\n\nexport function removeVerticalGuide(guideID) {\n  return {\n    type: REMOVE_VERTICAL_GUIDE,\n    guideID\n  };\n}\n\nexport function removeCircularGuide(guideID) {\n  return {\n    type: REMOVE_CIRCULAR_GUIDE,\n    guideID\n  };\n}\n","import { UPDATE_2D_CAMERA, SELECT_TOOL_PAN, SELECT_TOOL_ZOOM_IN, SELECT_TOOL_ZOOM_OUT } from '../constants';\n\nexport function updateCameraView(value) {\n  return {\n    type: UPDATE_2D_CAMERA,\n    value\n  }\n}\n\nexport function selectToolPan() {\n  return {\n    type: SELECT_TOOL_PAN\n  };\n}\n\nexport function selectToolZoomOut() {\n  return {\n    type: SELECT_TOOL_ZOOM_OUT\n  };\n}\n\nexport function selectToolZoomIn() {\n  return {\n    type: SELECT_TOOL_ZOOM_IN\n  };\n}\n","import { SELECT_TOOL_3D_VIEW, SELECT_TOOL_3D_FIRST_PERSON } from '../constants';\n\nexport function selectTool3DView() {\n  return {\n    type: SELECT_TOOL_3D_VIEW\n  }\n}\n\n\nexport function selectTool3DFirstPerson() {\n  return {\n    type: SELECT_TOOL_3D_FIRST_PERSON\n  }\n}\n\n\n","import { SnapMaskType } from '../types';\nimport {\n  SELECT_LINE,\n  SELECT_TOOL_DRAWING_LINE,\n  BEGIN_DRAWING_LINE,\n  UPDATE_DRAWING_LINE,\n  END_DRAWING_LINE,\n  BEGIN_DRAGGING_LINE,\n  UPDATE_DRAGGING_LINE,\n  END_DRAGGING_LINE\n} from '../constants';\n\nexport function selectLine(layerID: string, lineID: string) {\n  return {\n    type: SELECT_LINE,\n    layerID,\n    lineID\n  }\n}\n\nexport function selectToolDrawingLine(sceneComponentType) {\n  return {\n    type: SELECT_TOOL_DRAWING_LINE,\n    sceneComponentType\n  }\n}\n\nexport function beginDrawingLine(layerID: string, x: number, y: number, snapMask: SnapMaskType) {\n  return {\n    type: BEGIN_DRAWING_LINE,\n    layerID, x, y, snapMask\n  }\n}\n\nexport function updateDrawingLine(x: number, y: number, snapMask: SnapMaskType) {\n  return {\n    type: UPDATE_DRAWING_LINE,\n    x, y, snapMask\n  }\n}\n\nexport function endDrawingLine(x: number, y: number, snapMask: SnapMaskType) {\n  return {\n    type: END_DRAWING_LINE,\n    x, y, snapMask\n  }\n}\n\nexport function beginDraggingLine(layerID: string, lineID: string, x: number, y: number, snapMask: SnapMaskType) {\n  return {\n    type: BEGIN_DRAGGING_LINE,\n    layerID, lineID, x, y, snapMask\n  }\n}\n\nexport function updateDraggingLine(x: number, y: number, snapMask: SnapMaskType) {\n  return {\n    type: UPDATE_DRAGGING_LINE,\n    x, y, snapMask\n  }\n}\n\nexport function endDraggingLine(x: number, y: number, snapMask: SnapMaskType) {\n  return {\n    type: END_DRAGGING_LINE,\n    x, y, snapMask\n  }\n}\n","import {\n  SELECT_HOLE,\n  SELECT_TOOL_DRAWING_HOLE,\n  UPDATE_DRAWING_HOLE,\n  END_DRAWING_HOLE,\n  BEGIN_DRAGGING_HOLE,\n  UPDATE_DRAGGING_HOLE,\n  END_DRAGGING_HOLE\n} from '../constants';\n\nexport function selectHole(layerID, holeID) {\n  return {\n    type: SELECT_HOLE,\n    layerID,\n    holeID\n  }\n}\n\nexport function selectToolDrawingHole(sceneComponentType) {\n  return {\n    type: SELECT_TOOL_DRAWING_HOLE,\n    sceneComponentType\n  }\n}\n\nexport function updateDrawingHole(layerID, x, y) {\n  return {\n    type: UPDATE_DRAWING_HOLE,\n    layerID, x, y\n  }\n}\n\nexport function endDrawingHole(layerID, x, y) {\n  return {\n    type: END_DRAWING_HOLE,\n    layerID, x, y\n  }\n}\n\n\nexport function beginDraggingHole(layerID, holeID, x, y) {\n  return {\n    type: BEGIN_DRAGGING_HOLE,\n    layerID, holeID, x, y\n  };\n}\n\nexport function updateDraggingHole(x, y) {\n  return {\n    type: UPDATE_DRAGGING_HOLE,\n    x, y\n  }\n}\n\nexport function endDraggingHole(x, y) {\n  return {\n    type: END_DRAGGING_HOLE,\n    x, y\n  }\n}\n","import { SELECT_LAYER, ADD_LAYER, SET_LAYER_PROPERTIES, REMOVE_LAYER } from '../constants';\n\nexport function selectLayer(layerID) {\n  return {\n    type: SELECT_LAYER,\n    layerID\n  }\n}\n\nexport function addLayer(name, altitude) {\n  return {\n    type: ADD_LAYER,\n    name, altitude\n  }\n}\n\nexport function setLayerProperties(layerID, properties) {\n  return {\n    type: SET_LAYER_PROPERTIES,\n    layerID,\n    properties\n  }\n}\n\nexport function removeLayer(layerID) {\n  return {\n    type: REMOVE_LAYER,\n    layerID,\n  }\n}\n","import { SnapMaskType } from '../types';\nimport { BEGIN_DRAGGING_VERTEX, UPDATE_DRAGGING_VERTEX, END_DRAGGING_VERTEX } from '../constants'\n\nexport function beginDraggingVertex(layerID: string, vertexID: string, x: number, y: number, snapMask: SnapMaskType) {\n  return {\n    type: BEGIN_DRAGGING_VERTEX,\n    layerID, vertexID, x, y, snapMask\n  };\n}\n\nexport function updateDraggingVertex(x: number, y: number, snapMask: SnapMaskType) {\n  return {\n    type: UPDATE_DRAGGING_VERTEX,\n    x, y, snapMask\n  };\n}\n\nexport function endDraggingVertex(x: number, y: number, snapMask: SnapMaskType) {\n  return {\n    type: END_DRAGGING_VERTEX,\n    x, y, snapMask\n  };\n}\n","import {\n  SELECT_ITEM,\n  SELECT_TOOL_DRAWING_ITEM,\n  UPDATE_DRAWING_ITEM,\n  END_DRAWING_ITEM,\n  BEGIN_DRAGGING_ITEM,\n  UPDATE_DRAGGING_ITEM,\n  END_DRAGGING_ITEM,\n  BEGIN_ROTATING_ITEM,\n  UPDATE_ROTATING_ITEM,\n  END_ROTATING_ITEM\n} from '../constants';\n\nexport function selectItem(layerID: string, itemID: string) {\n  return {\n    type: SELECT_ITEM,\n    layerID,\n    itemID\n  }\n}\n\nexport function selectToolDrawingItem(sceneComponentType) {\n  return {\n    type: SELECT_TOOL_DRAWING_ITEM,\n    sceneComponentType\n  }\n}\n\nexport function updateDrawingItem(layerID, x, y) {\n  return {\n    type: UPDATE_DRAWING_ITEM,\n    layerID, x, y\n  }\n}\n\nexport function endDrawingItem(layerID: string, x: number, y: number) {\n  return {\n    type: END_DRAWING_ITEM,\n    layerID, x, y\n  } as const;\n}\n\nexport function beginDraggingItem(layerID, itemID, x, y) {\n  return {\n    type: BEGIN_DRAGGING_ITEM,\n    layerID, itemID, x, y\n  }\n}\n\nexport function updateDraggingItem(x, y) {\n  return {\n    type: UPDATE_DRAGGING_ITEM,\n    x, y\n  }\n}\n\nexport function endDraggingItem(x, y) {\n  return {\n    type: END_DRAGGING_ITEM,\n    x, y\n  }\n}\n\nexport function beginRotatingItem(layerID, itemID, x, y) {\n  return {\n    type: BEGIN_ROTATING_ITEM,\n    layerID, itemID, x, y\n  }\n}\n\nexport function updateRotatingItem(x, y) {\n  return {\n    type: UPDATE_ROTATING_ITEM,\n    x, y\n  }\n}\n\nexport function endRotatingItem(x, y) {\n  return {\n    type: END_ROTATING_ITEM,\n    x, y\n  }\n}\n","import { SELECT_AREA } from '../constants';\n\nexport function selectArea(layerID, areaID) {\n  return {\n    type: SELECT_AREA,\n    layerID,\n    areaID\n  }\n}\n","import { ElementPrototypes } from '../types';\nimport { GROUP_ACTIONS } from '../constants';\n\nexport function addGroup() {\n  return {\n    type: GROUP_ACTIONS.ADD_GROUP\n  };\n}\n\nexport function addGroupFromSelected() {\n  return {\n    type: GROUP_ACTIONS.ADD_GROUP_FROM_SELECTED\n  };\n}\n\nexport function selectGroup(groupID) {\n  return {\n    type: GROUP_ACTIONS.SELECT_GROUP,\n    groupID\n  };\n}\n\nexport function unselectGroup(groupID) {\n  return {\n    type: GROUP_ACTIONS.UNSELECT_GROUP,\n    groupID\n  };\n}\n\nexport function addToGroup(groupID, layerID, elementPrototype: ElementPrototypes, elementID) {\n  return {\n    type: GROUP_ACTIONS.ADD_TO_GROUP,\n    groupID,\n    layerID,\n    elementPrototype,\n    elementID\n  };\n}\n\nexport function removeFromGroup(groupID, layerID, elementPrototype: ElementPrototypes, elementID) {\n  return {\n    type: GROUP_ACTIONS.REMOVE_FROM_GROUP,\n    groupID,\n    layerID,\n    elementPrototype,\n    elementID\n  };\n}\n\nexport function setGroupAttributes(groupID, attributes) {\n  return {\n    type: GROUP_ACTIONS.SET_GROUP_ATTRIBUTES,\n    groupID,\n    attributes\n  };\n}\n\nexport function setGroupProperties(groupID, properties) {\n  return {\n    type: GROUP_ACTIONS.SET_GROUP_PROPERTIES,\n    groupID,\n    properties\n  };\n}\n\nexport function setGroupBarycenter(groupID, barycenter) {\n  return {\n    type: GROUP_ACTIONS.SET_GROUP_BARYCENTER,\n    groupID,\n    barycenter\n  };\n}\n\nexport function removeGroup(groupID) {\n  return {\n    type: GROUP_ACTIONS.REMOVE_GROUP,\n    groupID\n  };\n}\n\nexport function removeGroupAndDeleteElements(groupID) {\n  return {\n    type: GROUP_ACTIONS.REMOVE_GROUP_AND_DELETE_ELEMENTS,\n    groupID\n  };\n}\n\nexport function groupTranslate(groupID, x, y) {\n  return {\n    type: GROUP_ACTIONS.GROUP_TRANSLATE,\n    groupID,\n    x,\n    y\n  };\n}\n\nexport function groupRotate(groupID, rotation) {\n  return {\n    type: GROUP_ACTIONS.GROUP_ROTATE,\n    groupID,\n    rotation\n  };\n}\n","import * as projectActions from './project-actions';\nimport * as viewer2DActions from './viewer2d-actions';\nimport * as viewer3DActions from './viewer3d-actions';\nimport * as linesActions from './lines-actions';\nimport * as holesActions from './holes-actions';\nimport * as sceneActions from './scene-actions';\nimport * as verticesActions from './vertices-actions';\nimport * as itemsActions from './items-actions';\nimport * as areaActions from './area-actions';\nimport * as groupsActions from './groups-actions';\n\nexport type ProjectActionsType = typeof projectActions;\nexport type Viewer2DActionsType = typeof viewer2DActions;\nexport type Viewer3DActionsType = typeof viewer3DActions;\nexport type LinesActionsType = typeof linesActions;\nexport type HolesActionsType = typeof holesActions;\nexport type SceneActionsType = typeof sceneActions;\nexport type VerticesActionsType = typeof verticesActions;\nexport type ItemsActionsType = typeof itemsActions;\nexport type AreaActionsType = typeof areaActions;\nexport type GroupsActionsType = typeof groupsActions;\n\nexport {\n  projectActions,\n  viewer2DActions,\n  viewer3DActions,\n  linesActions,\n  holesActions,\n  sceneActions,\n  verticesActions,\n  itemsActions,\n  areaActions,\n  groupsActions\n};\n\nexport default {\n  projectActions,\n  viewer2DActions,\n  viewer3DActions,\n  linesActions,\n  holesActions,\n  sceneActions,\n  verticesActions,\n  itemsActions,\n  areaActions,\n  groupsActions\n};\n","import React, { Component, MouseEventHandler, ReactNode, useState } from 'react';\nimport * as SharedStyle from '../../shared-style';\n\n//http://www.cssportal.com/css-tooltip-generator/\n\nconst STYLE = {\n  width: '30px',\n  height: '30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginBottom: '5px',\n  fontSize: '25px',\n  position: 'relative',\n  cursor: 'pointer'\n} as const;\n\nconst STYLE_TOOLTIP = {\n  position: 'absolute',\n  width: '140px',\n  color: SharedStyle.COLORS.white,\n  background: SharedStyle.COLORS.black,\n  height: '30px',\n  lineHeight: '30px',\n  textAlign: 'center',\n  visibility: 'visible',\n  borderRadius: '6px',\n  opacity: '0.8',\n  left: '100%',\n  top: '50%',\n  marginTop: '-15px',\n  marginLeft: '15px',\n  zIndex: '999',\n  fontSize: '12px'\n} as const;\n\nconst STYLE_TOOLTIP_PIN = {\n  position: 'absolute',\n  top: '50%',\n  right: '100%',\n  marginTop: '-8px',\n  width: '0',\n  height: '0',\n  borderRight: '8px solid #000000',\n  borderTop: '8px solid transparent',\n  borderBottom: '8px solid transparent'\n} as const;\n\ninterface ToolbarButtonProps {\n  active: boolean;\n  tooltip: string;\n  onClick: MouseEventHandler<HTMLDivElement>;\n  children: ReactNode;\n}\n\nexport default function ToolbarButton(props: ToolbarButtonProps) {\n  const [state, setState] = useState({ active: false })\n  const color = props.active || state.active ? SharedStyle.SECONDARY_COLOR.icon : SharedStyle.PRIMARY_COLOR.icon;\n\n  return (\n    <div style={STYLE}\n      onMouseOver={event => setState({ active: true })}\n      onMouseOut={event => setState({ active: false })}>\n      <div style={{ color }} onClick={props.onClick}>\n        {props.children}\n      </div>\n      {\n        state.active ?\n          <div style={STYLE_TOOLTIP}>\n            <span style={STYLE_TOOLTIP_PIN} />\n            {props.tooltip}\n          </div>\n          : null\n      }\n    </div>\n  )\n}\n\n","import React, { useContext } from 'react';\nimport { FaSave as IconSave } from 'react-icons/fa';\nimport ToolbarButton from './toolbar-button';\nimport { browserDownload } from '../../utils/browser';\nimport { Project } from '../../class/export';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State } from '../../models';\n\ninterface ToolbarSaveButtonProps {\n  state: State;\n}\n\nexport default function ToolbarSaveButton({ state }: ToolbarSaveButtonProps) {\n  const { translator } = useContext(ReactPlannerContext);\n\n  const saveProjectToFile = e => {\n    e.preventDefault();\n    state = Project.unselectAll(state);\n    browserDownload(state.scene);\n  };\n\n  return (\n    <ToolbarButton active={false} tooltip={translator.t('Save project')} onClick={saveProjectToFile}>\n      <IconSave />\n    </ToolbarButton>\n  );\n}\n","export function browserDownload(json) {\n  const fileOutputLink = document.createElement('a');\n\n  let filename = 'output' + Date.now() + '.json';\n  filename = window.prompt('Insert output filename', filename);\n  if (!filename) return;\n\n  const output = JSON.stringify(json);\n  const data = new Blob([output], { type: 'text/plain' });\n  const url = window.URL.createObjectURL(data);\n  fileOutputLink.setAttribute('download', filename);\n  fileOutputLink.href = url;\n  fileOutputLink.style.display = 'none';\n  document.body.appendChild(fileOutputLink);\n  fileOutputLink.click();\n  document.body.removeChild(fileOutputLink);\n}\n\nexport function browserUpload(): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n\n    fileInput.addEventListener('change', function (event) {\n      const file = (event.target as any).files[0];\n      const reader = new FileReader();\n      reader.addEventListener('load', (fileEvent) => {\n        const loadedData = String(fileEvent.target.result);\n        resolve(loadedData);\n      });\n      reader.readAsText(file);\n    });\n\n    fileInput.click();\n  });\n}\n","import React, { useContext } from 'react';\nimport { FaFolderOpen as IconLoad } from 'react-icons/fa';\nimport ToolbarButton from './toolbar-button';\nimport { browserUpload } from '../../utils/browser';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State } from '../../models';\n\ninterface ToolbarLoadButtonProps {\n  state: State;\n}\n\nexport default function ToolbarLoadButton({ state }: ToolbarLoadButtonProps) {\n  const { projectActions, translator } = useContext(ReactPlannerContext);\n\n  const loadProjectFromFile = event => {\n    event.preventDefault();\n    browserUpload().then((data) => {\n      projectActions.loadProject(JSON.parse(data));\n    });\n  };\n\n  return (\n    <ToolbarButton active={false} tooltip={translator.t(\"Load project\")} onClick={loadProjectFromFile}>\n      <IconLoad />\n    </ToolbarButton>\n  );\n}\n","import React from 'react';\n\ninterface IfProps {\n  condition: boolean;\n  style?: React.CSSProperties;\n  children: React.ReactNode | React.ReactNode[];\n}\n\nexport default function If({ condition, style, children }: IfProps) {\n  return condition ? (Array.isArray(children) ? <div style={style}>{children}</div> : children) : null;\n}\n","import React, { Component, useContext } from 'react';\nimport { MdSettings, MdUndo, MdDirectionsRun } from 'react-icons/md';\nimport { FaFile, FaMousePointer, FaPlus } from 'react-icons/fa';\nimport ToolbarButton from './toolbar-button';\nimport ToolbarSaveButton from './toolbar-save-button';\nimport ToolbarLoadButton from './toolbar-load-button';\nimport { ReactReduxContext } from 'react-redux';\n\nimport If from '../../utils/react-if';\nimport {\n  MODE_IDLE,\n  MODE_3D_VIEW,\n  MODE_3D_FIRST_PERSON,\n  MODE_VIEWING_CATALOG,\n  MODE_CONFIGURING_PROJECT\n} from '../../constants';\nimport * as SharedStyle from '../../shared-style';\nimport { ReactPlannerStore } from '../../types';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State } from '../../models';\n\nconst iconTextStyle = {\n  fontSize: '19px',\n  textDecoration: 'none',\n  fontWeight: 'bold',\n  margin: '0px',\n  userSelect: 'none'\n};\n\nconst Icon2D = ({ style }) => <p style={{ ...iconTextStyle, ...style }}>2D</p>;\nconst Icon3D = ({ style }) => <p style={{ ...iconTextStyle, ...style }}>3D</p>;\n\nconst ASIDE_STYLE = {\n  backgroundColor: SharedStyle.PRIMARY_COLOR.main,\n  padding: '10px'\n};\n\nconst sortButtonsCb = (a, b) => {\n  if (a.index === undefined || a.index === null) {\n    a.index = Number.MAX_SAFE_INTEGER;\n  }\n\n  if (b.index === undefined || b.index === null) {\n    b.index = Number.MAX_SAFE_INTEGER;\n  }\n\n  return a.index - b.index;\n};\n\nconst mapButtonsCb = (el, ind) => {\n  return (\n    <If\n      key={ind}\n      condition={el.condition}\n      style={{ position: 'relative' }}\n    >\n      {el.dom}\n    </If>\n  );\n};\n\ninterface ToolbarProps {\n  state: State,\n  width: number,\n  height: number\n  allowProjectFileSupport: boolean,\n  toolbarButtons: any[],\n}\n\nexport default function Toolbar(props: ToolbarProps) {\n  const { state, allowProjectFileSupport, toolbarButtons, width, height } = props;\n  const { projectActions, viewer3DActions, translator } = useContext(ReactPlannerContext);\n\n  const mode = state.mode;\n  const alterate = state.alterate;\n  const alterateColor = alterate ? SharedStyle.MATERIAL_COLORS[500].orange : '';\n\n  let sorter = [\n    {\n      index: 0, condition: allowProjectFileSupport,\n      dom: <ToolbarButton\n        active={false}\n        tooltip={translator.t('New project')}\n        onClick={event => confirm(translator.t('Would you want to start a new Project?')) ? projectActions.newProject() : null}>\n        <FaFile />\n      </ToolbarButton>\n    },\n    {\n      index: 1, condition: allowProjectFileSupport,\n      dom: <ToolbarSaveButton state={state} />\n    },\n    {\n      index: 2, condition: allowProjectFileSupport,\n      dom: <ToolbarLoadButton state={state} />\n    },\n    {\n      index: 3, condition: true,\n      dom: <ToolbarButton\n        active={[MODE_VIEWING_CATALOG].includes(mode)}\n        tooltip={translator.t('Open catalog')}\n        onClick={event => projectActions.openCatalog()}>\n        <FaPlus />\n      </ToolbarButton>\n    },\n    {\n      index: 4, condition: true,\n      dom: <ToolbarButton\n        active={[MODE_3D_VIEW].includes(mode)}\n        tooltip={translator.t('3D View')}\n        onClick={event => viewer3DActions.selectTool3DView()}>\n        <Icon3D style={{}} />\n      </ToolbarButton>\n    },\n    {\n      index: 5, condition: true,\n      dom: <ToolbarButton\n        active={[MODE_IDLE].includes(mode)}\n        tooltip={translator.t('2D View')}\n        onClick={event => projectActions.setMode(MODE_IDLE)}>\n        {[MODE_3D_FIRST_PERSON, MODE_3D_VIEW].includes(mode) ? <Icon2D style={{ color: alterateColor }} /> : <FaMousePointer style={{ color: alterateColor }} />}\n      </ToolbarButton>\n    },\n    {\n      index: 6, condition: true,\n      dom: <ToolbarButton\n        active={[MODE_3D_FIRST_PERSON].includes(mode)}\n        tooltip={translator.t('3D First Person')}\n        onClick={event => viewer3DActions.selectTool3DFirstPerson()}>\n        <MdDirectionsRun />\n      </ToolbarButton>\n    },\n    {\n      index: 7, condition: true,\n      dom: <ToolbarButton\n        active={false}\n        tooltip={translator.t('Undo (CTRL-Z)')}\n        onClick={event => projectActions.undo()}>\n        <MdUndo />\n      </ToolbarButton>\n    },\n    {\n      index: 8, condition: true,\n      dom: <ToolbarButton\n        active={[MODE_CONFIGURING_PROJECT].includes(mode)}\n        tooltip={translator.t('Configure project')}\n        onClick={event => projectActions.openProjectConfigurator()}>\n        <MdSettings />\n      </ToolbarButton>\n    }\n  ];\n\n  sorter = sorter.concat(toolbarButtons.map((Component, key) => {\n    if (typeof Component === 'function') {\n      return {\n        index: null,\n        condition: true,\n        dom: React.createElement(Component, { mode, state, key }),\n      }\n    } else if (Component.dom) {\n      return {\n        index: Component.index,\n        condition: Component.condition,\n        dom: React.createElement(Component.dom, { mode, state, key })\n      }\n    } else {\n      return {\n        index: Component.index,\n        condition: Component.condition,\n        dom: React.createElement(Component, { mode, state, key })\n      }\n    }\n  }));\n\n  return (\n    <aside style={{ ...ASIDE_STYLE, maxWidth: width, maxHeight: height }} className='toolbar'>\n      {sorter.sort(sortButtonsCb).map(mapButtonsCb)}\n    </aside>\n  )\n}\n","import React, { Component } from 'react';\nimport * as SharedStyle from '../../shared-style';\nimport { FaAngleDown, FaAngleUp } from 'react-icons/fa';\n\nconst STYLE = {\n  borderTop: '1px solid #222',\n  borderBottom: '1px solid #48494E',\n  userSelect: 'none'\n} as const;\nconst STYLE_TITLE = {\n  fontSize: '11px',\n  color: SharedStyle.PRIMARY_COLOR.text_alt,\n  padding: '5px 15px 8px 15px',\n  backgroundColor: SharedStyle.PRIMARY_COLOR.alt,\n  textShadow: '-1px -1px 2px rgba(0, 0, 0, 1)',\n  boxShadow: 'inset 0px -3px 19px 0px rgba(0,0,0,0.5)',\n  margin: '0px',\n  cursor: 'pointer'\n} as const;\nconst STYLE_CONTENT = {\n  fontSize: '11px',\n  color: SharedStyle.PRIMARY_COLOR.text_alt,\n  border: '1px solid #222',\n  padding: '0px',\n  backgroundColor: SharedStyle.PRIMARY_COLOR.alt,\n  textShadow: '-1px -1px 2px rgba(0, 0, 0, 1)'\n} as const;\nconst STYLE_ARROW = {\n  float: 'right'\n} as const;\n\ninterface PanelProps {\n  name: string;\n  headComponents?: React.ReactNode;\n  opened?: boolean;\n  children?: React.ReactNode;\n}\n\ninterface PanelState {\n  opened: boolean;\n  hover: boolean;\n}\n\nexport default class Panel extends Component<PanelProps, PanelState> {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      opened: props.hasOwnProperty('opened') ? props.opened : false,\n      hover: false\n    };\n  }\n\n  toggleOpen() {\n    this.setState({ opened: !this.state.opened });\n  }\n\n  toggleHover() {\n    this.setState({ hover: !this.state.hover });\n  }\n\n  render() {\n\n    const { name, headComponents, children } = this.props;\n    const { opened, hover } = this.state;\n\n    return (\n      <div style={STYLE}>\n        <h3\n          style={{ ...STYLE_TITLE, color: hover ? SharedStyle.SECONDARY_COLOR.main : SharedStyle.PRIMARY_COLOR.text_alt }}\n          onMouseEnter={() => this.toggleHover()}\n          onMouseLeave={() => this.toggleHover()}\n          onClick={() => this.toggleOpen()}\n        >\n          {name}\n          {headComponents}\n          {\n            opened ?\n              <FaAngleUp style={STYLE_ARROW} /> :\n              <FaAngleDown style={STYLE_ARROW} />\n          }\n        </h3>\n\n        <div style={{ ...STYLE_CONTENT, display: opened ? 'block' : 'none' }}>\n          {children}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component, useContext } from 'react';\nimport FormNumberInput from '../../../style/form-number-input';\nimport FormTextInput from '../../../style/form-text-input';\nimport ReactPlannerContext from '../../../../react-planner-context';\nimport { State } from '../../../../models';\n\nconst tableStyle = { width: '100%' } as const;\nconst firstTdStyle = { width: '6em' } as const;\nconst inputStyle = { textAlign: 'left' } as const;\n\ninterface ItemAttributesEditorProps {\n  element: any;\n  onUpdate: (name: string, value: any) => void;\n  attributeFormData: { [key: string]: any };\n  state: State;\n  [key: string]: any;\n}\n\nexport default function ItemAttributesEditor({ element, onUpdate, attributeFormData, state, ...rest }: ItemAttributesEditorProps) {\n  const { translator } = useContext(ReactPlannerContext);\n  const name = attributeFormData.name || element.name;\n  const renderedX = attributeFormData.x || element.x;\n  const renderedY = attributeFormData.y || element.y;\n  const renderedR = attributeFormData.rotation || element.rotation;\n\n  return (\n    <table style={tableStyle}>\n      <tbody>\n        <tr>\n          <td style={firstTdStyle}>{translator.t('Name')}</td>\n          <td>\n            <FormTextInput\n              value={name}\n              onChange={event => onUpdate('name', event.target.value)}\n              style={inputStyle}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td style={firstTdStyle}>X</td>\n          <td>\n            <FormNumberInput\n              value={renderedX}\n              onChange={event => onUpdate('x', event.target.value)}\n              style={inputStyle}\n              precision={2}\n              {...rest}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td style={firstTdStyle}>Y</td>\n          <td>\n            <FormNumberInput\n              value={renderedY}\n              onChange={event => onUpdate('y', event.target.value)}\n              style={inputStyle}\n              precision={2}\n              {...rest}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td style={firstTdStyle}>{translator.t('Rotation')}</td>\n          <td>\n            <FormNumberInput\n              value={renderedR}\n              onChange={event => onUpdate('rotation', event.target.value)}\n              style={inputStyle}\n              precision={2}\n              {...rest}\n            />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import React, { useContext } from 'react';\nimport { FormNumberInput, FormTextInput } from '../../../style/export';\nimport { PropertyLengthMeasure } from '../../../../catalog/properties/export';\nimport ReactPlannerContext from '../../../../react-planner-context';\nimport { State } from '../../../../models';\n\nconst tableStyle = { width: '100%' } as const;\nconst firstTdStyle = { width: '6em' } as const;\nconst inputStyle = { textAlign: 'left' } as const;\n\ninterface LineAttributesEditorProps {\n  element: {\n    name: string;\n    [key: string]: any;\n  };\n  onUpdate: (key: string, value: any) => void;\n  attributeFormData: { [key: string]: any };\n  state: State;\n  [key: string]: any;\n}\n\nexport default function LineAttributesEditor({ element, onUpdate, attributeFormData, state, ...rest }: LineAttributesEditorProps) {\n  const { translator } = useContext(ReactPlannerContext);\n\n  const name = attributeFormData.name || element.name;\n  const vertexOne = attributeFormData.vertexOne || null;\n  const vertexTwo = attributeFormData.vertexTwo || null;\n  const lineLength = attributeFormData.lineLength || null;\n\n  return (\n    <div>\n      <table style={tableStyle}>\n        <tbody>\n          <tr>\n            <td style={firstTdStyle}>{translator.t('Name')}</td>\n            <td>\n              <FormTextInput\n                value={name}\n                onChange={event => onUpdate('name', event.target.value)}\n                style={inputStyle}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td style={firstTdStyle}>X1</td>\n            <td>\n              <FormNumberInput\n                value={vertexOne.x}\n                onChange={event => onUpdate('vertexOne', { 'x': event.target.value })}\n                style={inputStyle}\n                precision={2}\n                {...rest}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td style={firstTdStyle}>Y1</td>\n            <td>\n              <FormNumberInput\n                value={vertexOne.y}\n                onChange={event => onUpdate('vertexOne', { 'y': event.target.value })}\n                style={inputStyle}\n                precision={2}\n                {...rest}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td style={firstTdStyle}>X2</td>\n            <td>\n              <FormNumberInput\n                value={vertexTwo.x}\n                onChange={event => onUpdate('vertexTwo', { 'x': event.target.value })}\n                style={inputStyle}\n                precision={2}\n                {...rest}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td style={firstTdStyle}>Y2</td>\n            <td>\n              <FormNumberInput\n                value={vertexTwo.y}\n                onChange={event => onUpdate('vertexTwo', { 'y': event.target.value })}\n                style={inputStyle}\n                precision={2}\n                {...rest}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <PropertyLengthMeasure\n        value={lineLength}\n        onUpdate={mapped => onUpdate('lineLength', mapped)}\n        configs={{ label: translator.t('Length'), min: 0, max: Infinity, precision: 2 }}\n        state={state}\n      />\n    </div>\n  );\n}\n","import React, { Component, useContext } from 'react';\nimport PropertyLengthMeasure from '../../../../catalog/properties/property-lenght-measure';\nimport PropertyString from '../../../../catalog/properties/property-string';\nimport ReactPlannerContext from '../../../../react-planner-context';\nimport { State } from '../../../../models';\n\ninterface HoleAttributesEditorProps {\n  element: any;\n  onUpdate: (name: string, data: any) => void;\n  attributeFormData: any;\n  state: State;\n  [key: string]: any;\n}\n\nexport default function HoleAttributesEditor({ element, onUpdate, attributeFormData, state, ...rest }: HoleAttributesEditorProps) {\n  const name = attributeFormData.name ?? element.name;\n  const offsetA = attributeFormData.offsetA ?? element.offsetA;\n  const offsetB = attributeFormData.offsetB ?? element.offsetA;\n\n  return <div>\n    <PropertyString\n      value={name}\n      onUpdate={mapped => onUpdate('name', mapped)}\n      configs={{ label: 'Nome' }}\n      state={state}\n      {...rest}\n    />\n    <PropertyLengthMeasure\n      value={offsetA}\n      onUpdate={mapped => onUpdate('offsetA', mapped)}\n      configs={{ label: 'Offset 1', min: 0, max: Infinity, precision: 2 }}\n      state={state}\n      {...rest}\n    />\n    <PropertyLengthMeasure\n      value={offsetB}\n      onUpdate={mapped => onUpdate('offsetB', mapped)}\n      configs={{ label: 'Offset 2', min: 0, max: Infinity, precision: 2 }}\n      state={state}\n      {...rest}\n    />\n  </div>;\n}\n","import React, { Component } from 'react';\nimport ItemAttributesEditor from './item-attributes-editor';\nimport LineAttributesEditor from './line-attributes-editor';\nimport HoleAttributesEditor from './hole-attributes-editor';\nimport { State } from '../../../../models';\n\ninterface AttributesEditorProps {\n  element: any;\n  onUpdate: (name: string, data: any) => void;\n  onValid?: (isValid: boolean) => void;\n  attributeFormData: any;\n  state: State;\n  [key: string]: any;\n}\n\nexport default function AttributesEditor({ element, onUpdate, onValid, attributeFormData, state, ...rest }: AttributesEditorProps) {\n  switch (element.prototype) {\n    case 'items':\n      return <ItemAttributesEditor\n        element={element}\n        onUpdate={onUpdate}\n        onValid={onValid}\n        attributeFormData={attributeFormData}\n        state={state}\n        {...rest}\n      />;\n    case 'lines':\n      return <LineAttributesEditor\n        element={element}\n        onUpdate={onUpdate}\n        onValid={onValid}\n        attributeFormData={attributeFormData}\n        state={state}\n        {...rest}\n      />;\n    case 'holes':\n      return <HoleAttributesEditor\n        element={element}\n        onUpdate={onUpdate}\n        onValid={onValid}\n        attributeFormData={attributeFormData}\n        state={state}\n        {...rest}\n      />;\n    case 'areas':\n      return null;\n\n  }\n\n  return null;\n}\n\n","import React, { Component } from 'react';\nimport AttributesEditor from './attributes-editor/attributes-editor';\nimport { GeometryUtils, MathUtils } from '../../../utils/export';\nimport * as SharedStyle from '../../../shared-style';\nimport convert from 'convert-units';\nimport { MdContentCopy, MdContentPaste } from 'react-icons/md';\nimport ReactPlannerContext, { ReactPlannerContextProps } from '../../../react-planner-context';\nimport { Area, Item, Layer, Line, StateProps, Vertex } from '../../../models';\nimport { CatalogFn } from '../../../catalog/catalog';\nimport { produce } from 'immer';\nimport { ElementType, CatalogElementProperty, CatalogElement } from '../../../types';\n\nconst PRECISION = 2;\n\nconst attrPorpSeparatorStyle = {\n  margin: '0.5em 0.25em 0.5em 0',\n  border: '2px solid ' + SharedStyle.SECONDARY_COLOR.alt,\n  position: 'relative',\n  height: '2.5em',\n  borderRadius: '2px'\n} as const;\n\nconst headActionStyle = {\n  position: 'absolute',\n  right: '0.5em',\n  top: '0.5em'\n} as const;\n\nconst iconHeadStyle = {\n  float: 'right',\n  margin: '-3px 4px 0px 0px',\n  padding: 0,\n  cursor: 'pointer',\n  fontSize: '1.4em'\n} as const;\n\ninterface ElementEditorProps {\n  state: StateProps;\n  element: ElementType;\n  layer: Layer;\n}\n\ntype LineAttributeData = {\n  vertexOne: Vertex;\n  vertexTwo: Vertex;\n  lineLength: { length: number, _length: number, _unit: string };\n};\n\ntype HoleAttributeData = {\n  offset: number;\n  offsetA: { length: number, _length: number, _unit: string };\n  offsetB: { length: number, _length: number, _unit: string };\n};\n\ntype PropertyForm = {\n  currentValue: Record<string, any>;\n  configs: Record<string, any>;\n}\n\ntype ElementEditorState = {\n  attributesFormData: Item | LineAttributeData | HoleAttributeData | {};\n  propertiesFormData: Record<string, PropertyForm>;\n}\n\nexport default class ElementEditor extends Component<ElementEditorProps, ElementEditorState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props: ElementEditorProps, context: ReactPlannerContextProps) {\n    super(props, context);\n\n    this.state = {\n      attributesFormData: this.initAttrData(this.props.element, this.props.layer, context),\n      propertiesFormData: this.initPropData(this.props.element, context)\n    };\n\n    this.updateAttribute = this.updateAttribute.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps: ElementEditorProps, nextState: ElementEditorState) {\n    if (\n      this.state.attributesFormData !== nextState.attributesFormData ||\n      this.state.propertiesFormData !== nextState.propertiesFormData ||\n      this.props.state.clipboardProperties !== nextProps.state.clipboardProperties\n    ) return true;\n\n    return false;\n  }\n\n  componentDidUpdate(prevProps: ElementEditorProps) {\n    const { element, layer, state } = this.props;\n    const { prototype, id } = element;\n    const scene = prevProps.state.scene;\n    const selectedLayer = scene.layers[scene.selectedLayer];\n    const selected = selectedLayer[prototype][id];\n\n    if (selectedLayer !== layer) this.setState({\n      attributesFormData: this.initAttrData(element, layer, this.context),\n      propertiesFormData: this.initPropData(element, this.context)\n    });\n  }\n\n  initAttrData(element: ElementType, layer: Layer, context: ReactPlannerContextProps) {\n    switch (element.prototype) {\n      case 'items': {\n        return element;\n      }\n      case 'lines': {\n        const v_a = layer.vertices[element.vertices[0]];\n        const v_b = layer.vertices[element.vertices[1]];\n\n        const distance = GeometryUtils.pointsDistance(v_a.x, v_a.y, v_b.x, v_b.y);\n        const _unit = element.misc._unitLength || context.catalog.unit;\n        const _length = convert(distance).from(context.catalog.unit).to(_unit);\n\n        return {\n          vertexOne: v_a,\n          vertexTwo: v_b,\n          lineLength: { length: distance, _length, _unit },\n        } as LineAttributeData;\n      }\n      case 'holes': {\n        const line = layer.lines[element.line];\n        const { x: x0, y: y0 } = layer.vertices[line.vertices[0]];\n        const { x: x1, y: y1 } = layer.vertices[line.vertices[1]];\n        const lineLength = GeometryUtils.pointsDistance(x0, y0, x1, y1);\n        const startAt = lineLength * element.offset - element.properties.width.length / 2;\n\n        const _unitA = element.misc._unitA || context.catalog.unit;\n        const _lengthA = convert(startAt).from(context.catalog.unit).to(_unitA);\n\n        const endAt = lineLength - lineLength * element.offset - element.properties.width.length / 2;\n        const _unitB = element.misc._unitB || context.catalog.unit;\n        const _lengthB = convert(endAt).from(context.catalog.unit).to(_unitB);\n\n        return {\n          offset: element.offset,\n          offsetA: {\n            length: MathUtils.toFixedFloat(startAt, PRECISION),\n            _length: MathUtils.toFixedFloat(_lengthA, PRECISION),\n            _unit: _unitA\n          },\n          offsetB: {\n            length: MathUtils.toFixedFloat(endAt, PRECISION),\n            _length: MathUtils.toFixedFloat(_lengthB, PRECISION),\n            _unit: _unitB\n          }\n        } as HoleAttributeData;\n      }\n      case 'areas': {\n        return {};\n      }\n    }\n  }\n\n  initPropData(element: ElementType, context: ReactPlannerContextProps) {\n    const { catalog } = context;\n    const catalogElement = CatalogFn.getElement(catalog, element.type);\n\n    type Result = Record<string, { currentValue: any; configs: CatalogElementProperty }>;\n    const mapped: Result = {};\n\n    for (const name in catalogElement.properties) {\n      const propDef = catalogElement.properties[name];\n      const defVal = (propDef && typeof propDef === 'object' && 'defaultValue' in propDef)\n        ? (propDef as { defaultValue: any }).defaultValue\n        : undefined;\n      mapped[name] = {\n        currentValue: element.properties[name] ?? defVal,\n        configs: propDef\n      };\n    }\n    return mapped;\n  }\n\n  updateAttribute(attributeName: string, value: any) {\n    const { attributesFormData: oldAttributesFormData } = this.state;\n    let newAttributesFormData: ElementEditorState[\"attributesFormData\"];\n\n    switch (this.props.element.prototype) {\n      case 'items': {\n        newAttributesFormData = { ...oldAttributesFormData, [attributeName]: value };\n        break;\n      }\n      case 'lines': {\n        let attributesFormData = oldAttributesFormData as LineAttributeData;\n        switch (attributeName) {\n          case 'lineLength':\n            {\n              const v_0 = attributesFormData.vertexOne;\n              const v_1 = attributesFormData.vertexTwo;\n\n              const [v_a, v_b] = GeometryUtils.orderVertices([v_0, v_1]);\n\n              const v_b_new = GeometryUtils.extendLine(v_a.x, v_a.y, v_b.x, v_b.y, value.length, PRECISION);\n\n              attributesFormData = produce(attributesFormData, attr => {\n                if (v_0 === v_a) {\n                  attr.vertexTwo = { ...v_b, ...v_b_new };\n                } else {\n                  attr.vertexOne = { ...v_b, ...v_b_new };\n                }\n                attr.lineLength = value;\n              });\n              break;\n            }\n          case 'vertexOne':\n          case 'vertexTwo':\n            {\n              attributesFormData = produce(attributesFormData, attr => {\n                attr[attributeName] = {\n                  ...attr[attributeName],\n                  ...value\n                }\n\n                const newDistance = GeometryUtils.verticesDistance(attr.vertexOne, attr.vertexTwo);\n                attr.lineLength = {\n                  ...attr.lineLength,\n                  length: newDistance,\n                  _length: convert(newDistance).from(this.context.catalog.unit).to(attr.lineLength._unit)\n                }\n              });\n              break;\n            }\n          default:\n            {\n              attributesFormData = { ...attributesFormData, [attributeName]: value };\n              break;\n            }\n        }\n        newAttributesFormData = attributesFormData;\n        break;\n      }\n      case 'holes': {\n        let attributesFormData = oldAttributesFormData as HoleAttributeData;\n        switch (attributeName) {\n          case 'offsetA':\n            {\n              const line = this.props.layer.lines[this.props.element.line];\n\n              const orderedVertices = GeometryUtils.orderVertices([\n                this.props.layer.vertices[line.vertices[0]],\n                this.props.layer.vertices[line.vertices[1]]\n              ]);\n\n              const [{ x: x0, y: y0 }, { x: x1, y: y1 }] = orderedVertices;\n\n              const alpha = GeometryUtils.angleBetweenTwoPoints(x0, y0, x1, y1);\n              const lineLength = GeometryUtils.pointsDistance(x0, y0, x1, y1);\n              const widthLength = this.props.element.properties.width.length;\n              const halfWidthLength = widthLength / 2;\n\n              let lengthValue = value.length;\n              lengthValue = Math.max(lengthValue, 0);\n              lengthValue = Math.min(lengthValue, lineLength - widthLength);\n\n              const xp = (lengthValue + halfWidthLength) * Math.cos(alpha) + x0;\n              const yp = (lengthValue + halfWidthLength) * Math.sin(alpha) + y0;\n\n              const offset = GeometryUtils.pointPositionOnLineSegment(x0, y0, x1, y1, xp, yp);\n\n              const endAt = MathUtils.toFixedFloat(lineLength - (lineLength * offset) - halfWidthLength, PRECISION);\n              const offsetUnit = attributesFormData.offsetB._unit;\n\n              const offsetB = {\n                length: endAt,\n                _length: convert(endAt).from(this.context.catalog.unit).to(offsetUnit),\n                _unit: offsetUnit\n              };\n\n              const offsetA = {\n                length: MathUtils.toFixedFloat(lengthValue, PRECISION),\n                _unit: value._unit,\n                _length: MathUtils.toFixedFloat(convert(lengthValue).from(this.context.catalog.unit).to(value._unit), PRECISION)\n              };\n\n              attributesFormData = { ...attributesFormData, offsetB, offset, offsetA };\n              break;\n            }\n          case 'offsetB':\n            {\n              const line = this.props.layer.lines[this.props.element.line];\n\n              const orderedVertices = GeometryUtils.orderVertices([\n                this.props.layer.vertices[line.vertices[0]],\n                this.props.layer.vertices[line.vertices[1]]\n              ]);\n\n              const [{ x: x0, y: y0 }, { x: x1, y: y1 }] = orderedVertices;\n\n              const alpha = GeometryUtils.angleBetweenTwoPoints(x0, y0, x1, y1);\n              const lineLength = GeometryUtils.pointsDistance(x0, y0, x1, y1);\n              const widthLength = this.props.element.properties.width.length;\n              const halfWidthLength = widthLength / 2;\n\n              let lengthValue = value.length;\n              lengthValue = Math.max(lengthValue, 0);\n              lengthValue = Math.min(lengthValue, lineLength - widthLength);\n\n              const xp = x1 - (lengthValue + halfWidthLength) * Math.cos(alpha);\n              const yp = y1 - (lengthValue + halfWidthLength) * Math.sin(alpha);\n\n              const offset = GeometryUtils.pointPositionOnLineSegment(x0, y0, x1, y1, xp, yp);\n\n              const startAt = MathUtils.toFixedFloat((lineLength * offset) - halfWidthLength, PRECISION);\n              const offsetUnit = attributesFormData.offsetA._unit;\n\n              const offsetA = {\n                length: startAt,\n                _length: convert(startAt).from(this.context.catalog.unit).to(offsetUnit),\n                _unit: offsetUnit\n              };\n\n              const offsetB = {\n                length: MathUtils.toFixedFloat(lengthValue, PRECISION),\n                _unit: value._unit,\n                _length: MathUtils.toFixedFloat(convert(lengthValue).from(this.context.catalog.unit).to(value._unit), PRECISION)\n              };\n\n              attributesFormData = { ...attributesFormData, offsetA, offset, offsetB }\n\n              break;\n            }\n          default:\n            {\n              attributesFormData = { ...attributesFormData, [attributeName]: value };\n              break;\n            }\n        };\n        newAttributesFormData = attributesFormData;\n        break;\n      }\n      default:\n        newAttributesFormData = oldAttributesFormData;\n        break;\n    }\n\n    this.setState({ attributesFormData: newAttributesFormData });\n    this.save({ attributesFormData: newAttributesFormData });\n  }\n\n  updateProperty(propertyName: string, value) {\n    let { state: { propertiesFormData } } = this;\n    propertiesFormData = produce(propertiesFormData, draft => {\n      draft[propertyName].currentValue = value;\n    });\n    this.setState({ propertiesFormData });\n    this.save({ propertiesFormData });\n  }\n\n  reset() {\n    this.setState({ propertiesFormData: this.initPropData(this.props.element, this.context) });\n  }\n\n  save({ propertiesFormData, attributesFormData }: { propertiesFormData?: Record<string, any>, attributesFormData?: any }) {\n\n    if (propertiesFormData) {\n      const properties = Object.keys(propertiesFormData).reduce((acc, key) => {\n        const data = propertiesFormData[key];\n        acc[key] = data && data.currentValue !== undefined ? data.currentValue : undefined;\n        return acc;\n      }, {} as Record<string, any>);\n\n      this.context.projectActions.setProperties(properties);\n    }\n\n    if (attributesFormData) {\n      switch (this.props.element.prototype) {\n        case 'items': {\n          this.context.projectActions.setItemsAttributes(attributesFormData);\n          break;\n        }\n        case 'lines': {\n          this.context.projectActions.setLinesAttributes(attributesFormData);\n          break;\n        }\n        case 'holes': {\n          this.context.projectActions.setHolesAttributes(attributesFormData);\n          break;\n        }\n      }\n    }\n  }\n\n  copyProperties(properties) {\n    this.context.projectActions.copyProperties(properties);\n  }\n\n  pasteProperties() {\n    this.context.projectActions.pasteProperties();\n  }\n\n  render() {\n    const {\n      state: { propertiesFormData, attributesFormData },\n      context: { catalog, translator },\n      props: { state: appState, element },\n    } = this;\n\n    return (\n      <div>\n\n        <AttributesEditor\n          element={element}\n          onUpdate={this.updateAttribute}\n          attributeFormData={attributesFormData}\n          state={appState}\n        />\n\n        <div style={attrPorpSeparatorStyle}>\n          <div style={headActionStyle}>\n            <div title={translator.t('Copy')} style={iconHeadStyle} onClick={e => this.copyProperties(element.properties)}><MdContentCopy /></div>\n            {\n              appState.clipboardProperties && appState.clipboardProperties.size ?\n                <div title={translator.t('Paste')} style={iconHeadStyle} onClick={e => this.pasteProperties()}><MdContentPaste /></div> : null\n            }\n          </div>\n        </div>\n\n        {Object.entries(propertiesFormData).map(([propertyName, data]) => {\n\n          const currentValue = data.currentValue, configs = data.configs;\n\n          const { Editor } = CatalogFn.getPropertyType(catalog, configs.type);\n\n          return <Editor\n            key={propertyName}\n            propertyName={propertyName}\n            value={currentValue}\n            configs={configs}\n            onUpdate={value => this.updateProperty(propertyName, value)}\n            state={appState}\n            sourceElement={element}\n            internalState={this.state}\n          />\n        })\n        }\n\n      </div>\n    )\n  }\n}\n","import React, { useContext } from 'react';\nimport Panel from '../panel';\nimport {\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE,\n  MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE,\n  MODE_ROTATING_ITEM\n} from '../../../constants';\nimport ElementEditor from './element-editor';\nimport ReactPlannerContext from '../../../react-planner-context';\nimport { Layer, StateProps } from '../../../models';\nimport { ElementType } from '../../../types';\n\ninterface PanelElementEditorProps {\n  state: StateProps;\n}\n\nexport default function PanelElementEditor({ state }: PanelElementEditorProps) {\n  const { translator } = useContext(ReactPlannerContext);\n\n  const { scene, mode } = state;\n\n  if (![MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN,\n    MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n    MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM,\n    MODE_DRAGGING_LINE, MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE,\n    MODE_ROTATING_ITEM, MODE_UPLOADING_IMAGE, MODE_FITTING_IMAGE].includes(mode)) return null;\n\n  const componentRenderer = (element: ElementType, layer: Layer) =>\n    <Panel key={element.id} name={translator.t('Properties: [{0}] {1}', element.type, element.id)} opened={true}>\n      <div style={{ padding: '5px 15px' }}>\n        <ElementEditor element={element} layer={layer} state={state} />\n      </div>\n    </Panel>;\n\n  const layerRenderer = (layer: Layer) => {\n    const elements = [\n      ...Object.values(layer.lines),\n      ...Object.values(layer.holes),\n      ...Object.values(layer.areas),\n      ...Object.values(layer.items),\n    ];\n    return elements\n      .filter((element) => element.selected)\n      .map(element => componentRenderer(element, layer));\n  };\n\n  return <div>{Object.values(scene.layers).map(layerRenderer)}</div>\n}\n","import React, { Component, useContext, useState } from 'react';\nimport Panel from './panel';\nimport * as SharedStyle from '../../shared-style';\nimport { FormNumberInput, FormTextInput } from '../style/export';\n\nimport { FaUnlink } from 'react-icons/fa';\n\nimport {\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE,\n  MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE,\n  MODE_ROTATING_ITEM\n} from '../../constants';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State } from '../../models';\nimport { ElementPrototypes } from '../../types';\n\nconst VISIBILITY_MODE = {\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE,\n  MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE,\n  MODE_ROTATING_ITEM\n} as const;\n\nconst tableStyle = { width: '100%' } as const;\nconst firstTdStyle = { width: '6em' } as const;\nconst inputStyle = { textAlign: 'left' } as const;\nconst styleEditButton = {\n  marginLeft: '5px',\n  border: '0px',\n  background: 'none',\n  color: SharedStyle.COLORS.white,\n  fontSize: '14px',\n  outline: '0px'\n} as const;\n\nconst tablegroupStyle = {\n  width: '100%',\n  cursor: 'pointer',\n  maxHeight: '20em',\n  marginLeft: '1px',\n  marginTop: '1em'\n} as const;\n\nconst iconColStyle = { width: '2em' };\n\ninterface PanelGroupEditorProps {\n  state: State;\n  groupID?: string;\n}\n\nexport default function PanelGroupEditor(props: PanelGroupEditorProps) {\n  const { groupID, state } = props;\n  const { catalog, translator, itemsActions, linesActions, holesActions, groupsActions, projectActions } = useContext(ReactPlannerContext);\n\n  if (!groupID || !VISIBILITY_MODE[state.mode]) return null;\n\n  const group = state.scene.groups[groupID];\n  const elements = group.elements;\n\n  return (\n    <Panel name={translator.t('Group [{0}]', group.name)} opened={true}>\n      <div style={{ padding: '5px 15px' }}>\n        <table style={tableStyle}>\n          <tbody>\n            <tr>\n              <td style={firstTdStyle}>{translator.t('Name')}</td>\n              <td>\n                <FormTextInput\n                  value={group.name}\n                  onChange={e => groupsActions.setGroupAttributes(groupID, { 'name': e.target.value })}\n                  style={inputStyle}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td style={firstTdStyle}>X</td>\n              <td>\n                <FormNumberInput\n                  value={group.x}\n                  onChange={e => groupsActions.groupTranslate(groupID, e.target.value, group.y)}\n                  style={inputStyle}\n                  precision={2}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td style={firstTdStyle}>Y</td>\n              <td>\n                <FormNumberInput\n                  value={group.y}\n                  onChange={e => groupsActions.groupTranslate(groupID, group.x, e.target.value)}\n                  style={inputStyle}\n                  precision={2}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td style={firstTdStyle}>{translator.t('Rotation')}</td>\n              <td>\n                <FormNumberInput\n                  value={group.rotation}\n                  onChange={e => groupsActions.groupRotate(groupID, e.target.value)}\n                  style={inputStyle}\n                  precision={2}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        {\n          Object.keys(elements).length ?\n            <div>\n              <p style={{ textAlign: 'center', borderBottom: SharedStyle.PRIMARY_COLOR.border, paddingBottom: '1em' }}>{translator.t('Group\\'s Elements')}</p>\n              <table style={tablegroupStyle}>\n                <thead>\n                  <tr>\n                    <th style={iconColStyle}></th>\n                    <th>{translator.t('Layer')}</th>\n                    <th>{translator.t('Prototype')}</th>\n                    <th>{translator.t('Name')}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    Object.entries(elements).map(([layerID, layerElements]) => {\n                      return Object.entries(layerElements).map(([elementPrototype, ElementList]) => {\n                        return ElementList.map(elementID => {\n                          const element = state.scene.layers[layerID][elementPrototype][elementID]\n\n                          return <tr\n                            key={elementID}\n                          >\n                            <td style={iconColStyle} title={translator.t('Un-chain Element from Group')}>\n                              <FaUnlink\n                                onClick={e => groupsActions.removeFromGroup(groupID, layerID, elementPrototype as ElementPrototypes, elementID)}\n                                style={styleEditButton}\n                              />\n                            </td>\n                            <td style={{ textAlign: 'center' }}>\n                              {layerID}\n                            </td>\n                            <td style={{ textAlign: 'center', textTransform: 'capitalize' }}>\n                              {elementPrototype}\n                            </td>\n                            <td style={{ textAlign: 'center' }}>\n                              {element.name}\n                            </td>\n                          </tr>;\n                        });\n                      });\n                    })\n                  }\n                </tbody>\n              </table>\n            </div> :\n            null\n        }\n      </div>\n    </Panel>\n  );\n}\n","import React, { Component } from 'react';\nimport Panel from '../panel';\nimport {\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE,\n  MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE,\n  MODE_ROTATING_ITEM\n} from '../../../constants';\nimport { FormSelect } from '../../../components/style/export';\nimport { Group } from '../../../class/export';\nimport ReactPlannerContext from '../../../react-planner-context';\nimport { State } from '../../../models';\n\nconst tableStyle = { width: '100%' } as const;\nconst firstTdStyle = { width: '6em' } as const;\n\ninterface PanelMultiElementsEditorProps {\n  state: State;\n}\n\ninterface PanelMultiElementsEditorState {\n  selectedGroupID: string;\n}\n\nexport default class PanelMultiElementsEditor extends Component<PanelMultiElementsEditorProps, PanelMultiElementsEditorState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      selectedGroupID: ''\n    };\n  }\n\n  addSelectToGroup(state, groupID, layerID, selecteds) {\n    if (!groupID || groupID === '' || !selecteds || !selecteds.size) return;\n\n    console.log('need to be added to group', groupID, 'elements', selecteds);\n\n    /*let selectedJs = selecteds.toJS();\n\n    for( let lineID in selectedJs.lines ) Group.addElement( state, groupID, layerID, 'lines', lineID );*/\n  }\n\n  render() {\n    const { mode } = this.props.state;\n\n    if (![MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN,\n      MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n      MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM,\n      MODE_DRAGGING_LINE, MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE,\n      MODE_ROTATING_ITEM, MODE_UPLOADING_IMAGE, MODE_FITTING_IMAGE].includes(mode)) return null;\n\n    const groups = this.props.state.scene.groups;\n\n    //TODO change in multi-layer check\n    const selectedLayer = this.props.state.scene.selectedLayer;\n    const selecteds = this.props.state.scene.layers[selectedLayer].selected;\n\n    return (\n      <Panel name={'Multiselected'} opened={true}>\n        <div style={{ padding: '5px 15px' }}>\n          <p>Multiselection tab</p>\n          <table style={tableStyle}>\n            <tbody>\n              <tr>\n                <td style={firstTdStyle}>Add to Group</td>\n                <td>\n                  <FormSelect value={this.state.selectedGroupID} onChange={e => this.setState({ 'selectedGroupID': e.target.value })}>\n                    <option key={0} value={''}></option>\n                    {\n                      Object.entries(groups).map(([groupID, group]) => <option key={groupID} value={groupID}>{group.name}</option>)\n                    }\n                  </FormSelect>\n                </td>\n                <td style={{ cursor: 'pointer', padding: '0.5em 0', textAlign: 'center' }} onClick={e => {\n                  if (!this.state.selectedGroupID || this.state.selectedGroupID === '' || !selecteds) return;\n\n                  for (let x = 0; x < selecteds.lines.length; x++)\n                    this.context.groupsActions.addToGroup(this.state.selectedGroupID, selectedLayer, 'lines', selecteds.lines[x]);\n                }}>+</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Panel>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Panel from './panel';\nimport { TiPlus, TiDelete } from 'react-icons/ti';\nimport { FaPencilAlt, FaTrash, FaEye } from 'react-icons/fa';\nimport {\n  FormTextInput,\n  FormNumberInput,\n  FormSubmitButton,\n  FormSlider,\n  CancelButton\n} from '../style/export';\n\nimport { State } from '../../models';\nimport {\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE,\n  MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE,\n  MODE_ROTATING_ITEM\n} from '../../constants';\nimport * as SharedStyle from '../../shared-style';\nimport ReactPlannerContext from '../../react-planner-context';\n\nconst VISIBILITY_MODE = {\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN,\n  MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM,\n  MODE_DRAGGING_LINE, MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE,\n  MODE_ROTATING_ITEM, MODE_UPLOADING_IMAGE, MODE_FITTING_IMAGE\n};\n\nconst styleEditButton = {\n  cursor: 'pointer',\n  marginLeft: '5px',\n  border: '0px',\n  background: 'none',\n  color: SharedStyle.COLORS.white,\n  fontSize: '14px',\n  outline: '0px'\n} as const;\n\nconst tableLayerStyle = {\n  width: '100%',\n  cursor: 'pointer',\n  overflowY: 'auto',\n  maxHeight: '20em',\n  display: 'block',\n  padding: '0 1em',\n  marginLeft: '1px'\n} as const;\n\nconst iconColStyle = { width: '2em' } as const;\nconst styleHoverColor = { color: SharedStyle.SECONDARY_COLOR.main } as const;\nconst styleEditButtonHover = { ...styleEditButton, ...styleHoverColor } as const;\nconst styleAddLabel = { fontSize: '10px', marginLeft: '5px' } as const;\nconst styleEyeVisible = { fontSize: '1.25em' } as const;\nconst styleEyeHidden = { ...styleEyeVisible, color: '#a5a1a1' } as const;\nconst firstTdStyle = { width: '6em' } as const;\nconst newLayerLableStyle = { margin: '0.5em 0', fontSize: '1.3em', cursor: 'pointer', textAlign: 'center' } as const;\nconst newLayerLableHoverStyle = { ...newLayerLableStyle, ...styleHoverColor } as const;\nconst layerInputTableStyle = { width: '100%', borderSpacing: '2px 0', padding: '5px 15px' } as const;\nconst inputTableButtonStyle = { float: 'right', marginTop: '0.5em', borderSpacing: '0' } as const;\n\ninterface PanelLayersProps {\n  state: State;\n}\n\ninterface PanelLayersState {\n  headHovered: boolean;\n  layerAddUIVisible: boolean;\n  editingLayer: { [key: string]: any };\n}\n\nexport default class PanelLayers extends Component<PanelLayersProps, PanelLayersState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      headHovered: false,\n      layerAddUIVisible: false,\n      editingLayer: {}\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.state.scene.layers.size !== nextProps.state.scene.layers.size ||\n      nextState.layerAddUIVisible != this.state.layerAddUIVisible ||\n      this.state.editingLayer !== nextState.editingLayer ||\n      this.props.state.sceneHistory !== nextProps.state.sceneHistory\n    ) return true;\n\n    return false;\n  }\n\n  addLayer(e) {\n    e.stopPropagation();\n    if (!this.state.layerAddUIVisible) {\n      this.context.sceneActions.addLayer('', 0);\n      this.setState({ layerAddUIVisible: false });\n    }\n    else this.setState({ layerAddUIVisible: !this.state.layerAddUIVisible });\n  }\n\n  resetLayerMod(e) {\n    e.stopPropagation();\n    this.setState({ layerAddUIVisible: false, editingLayer: {} });\n  }\n\n  updateLayer(e, layerData) {\n    e.stopPropagation();\n    let { id, name, opacity, altitude, order } = layerData;\n\n    altitude = parseInt(altitude);\n\n    this.context.sceneActions.setLayerProperties(id, { name, opacity, altitude, order });\n    this.setState({ layerAddUIVisible: false, editingLayer: {} });\n  }\n\n  delLayer(e, layerID) {\n    e.stopPropagation();\n    this.context.sceneActions.removeLayer(layerID);\n    this.setState({ layerAddUIVisible: false, editingLayer: {} });\n  }\n\n  render() {\n    if (!VISIBILITY_MODE[this.props.state.mode]) return null;\n\n    const scene = this.props.state.scene;\n    const isLastLayer = Object.keys(scene.layers).length === 1;\n\n    return (\n      <Panel name={this.context.translator.t('Layers')}>\n        <table style={tableLayerStyle}>\n          <thead>\n            <tr>\n              <th colSpan={3}></th>\n              <th>{this.context.translator.t('Altitude')}</th>\n              <th>{this.context.translator.t('Name')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              Object.entries(scene.layers).map(([layerID, layer]) => {\n\n                const selectClick = e => this.context.sceneActions.selectLayer(layerID);\n                const configureClick = e => this.setState({ editingLayer: layer, layerAddUIVisible: true });\n\n                const swapVisibility = e => {\n                  e.stopPropagation();\n                  this.context.sceneActions.setLayerProperties(layerID, { visible: !layer.visible });\n                };\n\n                const isCurrentLayer = layerID === scene.selectedLayer;\n\n                return (\n                  <tr\n                    key={layerID}\n                    onClick={selectClick}\n                    onDoubleClick={configureClick}\n                    style={!isCurrentLayer ? null : styleHoverColor}\n                  >\n                    <td style={iconColStyle}>\n                      {\n                        !isCurrentLayer ?\n                          <FaEye\n                            onClick={swapVisibility}\n                            style={!layer.visible ? styleEyeHidden : styleEyeVisible}\n                          />\n                          : null\n                      }\n                    </td>\n                    <td style={iconColStyle}>\n                      <FaPencilAlt\n                        onClick={configureClick}\n                        style={!isCurrentLayer ? styleEditButton : styleEditButtonHover}\n                        title={this.context.translator.t('Configure layer')}\n                      />\n                    </td>\n                    <td style={iconColStyle}>\n                      {\n                        !isLastLayer ?\n                          <FaTrash\n                            onClick={e => this.delLayer(e, layerID)}\n                            style={!isCurrentLayer ? styleEditButton : styleEditButtonHover}\n                            title={this.context.translator.t('Delete layer')}\n                          />\n                          : null\n                      }\n                    </td>\n                    <td style={{ width: '6em', textAlign: 'center' }}>\n                      [ h : {layer.altitude} ]\n                    </td>\n                    <td>\n                      {layer.name}\n                    </td>\n                  </tr>\n                );\n\n              })\n            }\n          </tbody>\n        </table>\n        <p\n          style={!this.state.headHovered ? newLayerLableStyle : newLayerLableHoverStyle}\n          onMouseOver={() => this.setState({ headHovered: true })}\n          onMouseOut={() => this.setState({ headHovered: false })}\n          onClick={(e) => this.addLayer(e)}\n        >\n          {!this.state.layerAddUIVisible ? <TiPlus /> : <TiDelete />}\n          <b style={styleAddLabel}>{this.context.translator.t('New layer')}</b>\n        </p>\n\n        {\n          this.state.layerAddUIVisible && this.state.editingLayer ?\n            <table style={layerInputTableStyle}>\n              <tbody>\n                <tr style={{ marginTop: '1em' }}>\n                  <td style={firstTdStyle}>{this.context.translator.t('Name')}:</td>\n                  <td>\n                    <FormTextInput\n                      value={this.state.editingLayer.name}\n                      onChange={e => this.setState({ editingLayer: { ...this.state.editingLayer, name: e.target.value } })}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td style={firstTdStyle}>{this.context.translator.t('opacity')}:</td>\n                  <td>\n                    <FormSlider\n                      min={0}\n                      max={100}\n                      value={Math.round(this.state.editingLayer.opacity * 100)}\n                      onChange={e => this.setState({ editingLayer: { ...this.state.editingLayer, opacity: (e.target.value / 100) } })}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td style={firstTdStyle}>{this.context.translator.t('altitude')}:</td>\n                  <td>\n                    <FormNumberInput\n                      value={this.state.editingLayer.altitude}\n                      onChange={e => this.setState({ editingLayer: { ...this.state.editingLayer, altitude: e.target.value } })}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td style={firstTdStyle}>{this.context.translator.t('order')}:</td>\n                  <td>\n                    <FormNumberInput\n                      value={this.state.editingLayer.order}\n                      onChange={e => this.setState({ editingLayer: { ...this.state.editingLayer, order: e.target.value } })}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td colSpan={2}>\n                    <table style={inputTableButtonStyle}>\n                      <tbody>\n                        <tr>\n                          <td><CancelButton size=\"small\" onClick={e => {\n                            this.resetLayerMod(e);\n                          }}>{this.context.translator.t('Reset')}</CancelButton></td>\n                          <td><FormSubmitButton size=\"small\" onClick={e => {\n                            this.updateLayer(e, this.state.editingLayer);\n                          }}>{this.context.translator.t('Save')}</FormSubmitButton></td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            : null\n        }\n\n      </Panel>\n    )\n  }\n\n}\n","import React, { Component, memo, useContext, useState } from 'react';\nimport Panel from './panel';\nimport * as SharedStyle from '../../shared-style';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { FaTrash, FaTimes } from 'react-icons/fa';\nimport { FormNumberInput } from '../style/export';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State } from '../../models';\n\nconst tabStyle = { margin: '1em' } as const;\n\nconst iconStyle = {\n  fontSize: '14px',\n  margin: '2px',\n  cursor: 'pointer'\n} as const;\n\nconst addGuideStyle = {\n  cursor: 'pointer',\n  height: '2em'\n} as const;\n\nconst tableTabStyle = {\n  width: '100%',\n  textAlign: 'center'\n} as const;\n\nexport interface PanelGuidesProps {\n  state: State;\n}\n\nfunction PanelGuides(props: PanelGuidesProps) {\n  const { state } = props;\n  const { projectActions, translator } = useContext(ReactPlannerContext);\n  const [addHGVisible, setAddHGVisible] = useState(true);\n  const [addVGVisible, setAddVGVisible] = useState(true);\n\n  const { guides } = state.scene;\n\n  return (\n    <Panel name={translator.t('Guides')}>\n      <Tabs id='guidesTabs' style={tabStyle}>\n        <TabList>\n          <Tab>{translator.t('Horizontal')}</Tab>\n          <Tab>{translator.t('Vertical')}</Tab>\n          {/*<Tab>{translator.t('Circular')}</Tab>*/}\n        </TabList>\n\n        <TabPanel>\n          <table style={tableTabStyle}>\n            <tbody>\n              {Object.entries(guides.horizontal)\n                .map(([hgKey, hgVal], ind) => {\n                  return (\n                    <tr key={hgKey}>\n                      <td style={{ width: '2em' }}>{ind + 1}</td>\n                      <td>{hgVal}</td>\n                      <td style={{ width: '5em' }}>\n                        {/*<FaPencil style={iconStyle} />*/}\n                        <FaTrash\n                          style={iconStyle}\n                          onClick={e =>\n                            projectActions.removeHorizontalGuide(hgKey)\n                          }\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              {addHGVisible ? (\n                <tr>\n                  <td\n                    colSpan={3}\n                    style={addGuideStyle}\n                    onClick={e => setAddHGVisible(false)}\n                  >\n                    {translator.t('+ Add Horizontal Giude')}\n                  </td>\n                </tr>\n              ) : (\n                <tr>\n                  <td colSpan={2}>\n                    <FormNumberInput\n                      value={0}\n                      onChange={e => {\n                        projectActions.addHorizontalGuide(e.target.value);\n                        return setAddHGVisible(true);\n                      }}\n                      min={0}\n                      max={state.scene.height}\n                    />\n                  </td>\n                  <td>\n                    <FaTimes\n                      style={iconStyle}\n                      onClick={e => setAddHGVisible(true)}\n                    />\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </TabPanel>\n        <TabPanel>\n          <table style={tableTabStyle}>\n            <tbody>\n              {Object.entries(guides.vertical)\n                .map(([hgKey, hgVal], ind) => {\n                  return (\n                    <tr key={hgKey}>\n                      <td style={{ width: '2em' }}>{ind + 1}</td>\n                      <td>{hgVal}</td>\n                      <td style={{ width: '5em' }}>\n                        {/*<FaPencil style={iconStyle} />*/}\n                        <FaTrash\n                          style={iconStyle}\n                          onClick={e =>\n                            projectActions.removeVerticalGuide(hgKey)\n                          }\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              {addVGVisible ? (\n                <tr>\n                  <td\n                    colSpan={3}\n                    style={addGuideStyle}\n                    onClick={e => setAddVGVisible(false)}\n                  >\n                    {translator.t('+ Add Vertical Giude')}\n                  </td>\n                </tr>\n              ) : (\n                <tr>\n                  <td colSpan={2}>\n                    <FormNumberInput\n                      value={0}\n                      onChange={e => {\n                        projectActions.addVerticalGuide(e.target.value);\n                        return setAddVGVisible(true);\n                      }}\n                      min={0}\n                      max={state.scene.height}\n                    />\n                  </td>\n                  <td>\n                    <FaTimes\n                      style={iconStyle}\n                      onClick={e => setAddVGVisible(true)}\n                    />\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </TabPanel>\n        {/*<TabPanel>\n            <b>TODO Circular Giudes</b>\n          </TabPanel>*/}\n      </Tabs>\n    </Panel>\n  );\n}\n\n\nfunction shouldUpdate(prevProps: PanelGuidesProps, nextProps: PanelGuidesProps) {\n  return (\n    prevProps.state.scene.guides !== nextProps.state.scene.guides\n  );\n}\n\nexport default memo(PanelGuides, shouldUpdate)","import React, { Component, memo, useContext, useState } from 'react';\nimport Panel from './panel';\nimport * as SharedStyle from '../../shared-style';\nimport { TiPlus, TiDelete } from 'react-icons/ti';\nimport { FaTrash, FaEye, FaLink, FaUnlink } from 'react-icons/fa';\nimport ReactPlannerContext from '../../react-planner-context';\n\nimport {\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE,\n  MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE,\n  MODE_ROTATING_ITEM\n} from '../../constants';\nimport { ElementPrototypes } from '../../types';\nimport { Scene, State } from '../../models';\n\nconst VISIBILITY_MODE = {\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE,\n  MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE,\n  MODE_ROTATING_ITEM\n} as const;\n\nconst styleEditButton = {\n  marginLeft: '5px',\n  border: '0px',\n  background: 'none',\n  color: SharedStyle.COLORS.white,\n  fontSize: '14px',\n  outline: '0px'\n} as const;\n\nconst tablegroupStyle = {\n  width: '100%',\n  cursor: 'pointer',\n  maxHeight: '20em',\n  padding: '0 1em',\n  marginLeft: '1px'\n} as const;\n\nconst iconColStyle = { width: '2em', textAlign: 'center' } as const;\nconst styleHoverColor = { color: SharedStyle.SECONDARY_COLOR.main } as const;\nconst styleEditButtonHover = { ...styleEditButton, ...styleHoverColor } as const;\nconst styleAddLabel = { fontSize: '10px', marginLeft: '5px' } as const;\nconst styleEyeVisible = { fontSize: '1.25em' } as const;\nconst styleEyeHidden = { ...styleEyeVisible, color: '#a5a1a1' } as const;\nconst newLayerLableStyle = { fontSize: '1.3em', cursor: 'pointer', textAlign: 'center' } as const;\nconst newLayerLableHoverStyle = { ...newLayerLableStyle, ...styleHoverColor } as const;\n\ninterface PanelGroupsProps {\n  mode: State[\"mode\"];\n  groups: Scene[\"groups\"];\n  layers: Scene[\"layers\"];\n}\n\nfunction PanelGroups(props: PanelGroupsProps) {\n  const { translator, groupsActions } = useContext(ReactPlannerContext);\n  const [newEmptyHover, setNewEmptyHover] = useState(false);\n  const [newSelectedHover, setNewSelectedHover] = useState(false);\n\n  const { mode, groups, layers } = props;\n\n  if (!VISIBILITY_MODE[mode]) return null;\n\n  return (\n    <Panel name={translator.t('Groups')} opened={Object.keys(groups).length > 0}>\n      {Object.keys(groups).length ? <table style={tablegroupStyle}>\n        <thead>\n          <tr>\n            <th colSpan={4}></th>\n            <th>{translator.t('Elements')}</th>\n            <th>{translator.t('Name')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            Object.entries(groups).map(([groupID, group]) => {\n              const selectClick = e => groupsActions.selectGroup(groupID);\n\n              const swapVisibility = e => {\n                e.stopPropagation();\n                groupsActions.setGroupAttributes(groupID, { \"visible\": !group.visible });\n              };\n\n              const chainToGroup = e => {\n                Object.values(layers).forEach((layer) => {\n\n                  const layerID = layer.id;\n                  const layerElements = {\n                    'lines': layer.lines,\n                    'items': layer.items,\n                    'holes': layer.holes,\n                    'areas': layer.areas\n                  } as const;\n\n                  Object.entries(layerElements).forEach(([elementPrototype, ElementList]) => {\n                    Object.values(ElementList).filter(el => el.selected).forEach(element => {\n                      groupsActions.addToGroup(\n                        groupID,\n                        layerID,\n                        elementPrototype as ElementPrototypes,\n                        element.id\n                      );\n                    });\n                  });\n                });\n\n                selectClick(e);\n              };\n\n              const isCurrentgroup = group.selected;\n              const shouldHighlight = isCurrentgroup;\n              const rowStyle = !shouldHighlight ? null : styleHoverColor;\n\n              const dimension = Object.values(group.elements).reduce((sum, layer) => {\n                return sum + Object.values(layer).reduce((lSum, elProt) => lSum + elProt.length, 0);\n              }, 0);\n\n              return (\n                <tr\n                  key={groupID}\n                  style={rowStyle}\n                >\n                  <td style={iconColStyle} title={translator.t('Toggle Group Visibility')}>\n                    <FaEye\n                      onClick={swapVisibility}\n                      style={!group.visible ? styleEyeHidden : styleEyeVisible}\n                    />\n                  </td>\n                  <td style={iconColStyle} title={translator.t('Chain selected Elements to Group')}>\n                    <FaLink\n                      onClick={chainToGroup}\n                      style={!shouldHighlight ? styleEditButton : styleEditButtonHover}\n                    />\n                  </td>\n                  <td style={iconColStyle} title={translator.t('Un-chain all Group\\'s Elements and remove Group')}>\n                    <FaUnlink\n                      onClick={e => groupsActions.removeGroup(groupID)}\n                      style={!shouldHighlight ? styleEditButton : styleEditButtonHover}\n                    />\n                  </td>\n                  <td style={iconColStyle} title={translator.t('Delete group and all Elements')}>\n                    <FaTrash\n                      onClick={e => groupsActions.removeGroupAndDeleteElements(groupID)}\n                      style={!shouldHighlight ? styleEditButton : styleEditButtonHover}\n                    />\n                  </td>\n                  <td onClick={selectClick} style={{ width: '0em', textAlign: 'center' }}>\n                    {dimension}\n                  </td>\n                  <td onClick={selectClick}>\n                    {group.name}\n                  </td>\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </table> : null}\n\n      <table style={{ width: '100%', marginTop: '0.1em' }}>\n        <tbody>\n          <tr>\n            <td\n              style={!newEmptyHover ? newLayerLableStyle : newLayerLableHoverStyle}\n              onMouseOver={() => setNewEmptyHover(true)}\n              onMouseOut={() => setNewEmptyHover(false)}\n              onClick={e => groupsActions.addGroup()}\n            >\n              <TiPlus />\n              <b style={styleAddLabel}>{translator.t('New Empty Group')}</b>\n            </td>\n            <td\n              style={!newSelectedHover ? newLayerLableStyle : newLayerLableHoverStyle}\n              onMouseOver={() => setNewSelectedHover(true)}\n              onMouseOut={() => setNewSelectedHover(false)}\n              onClick={e => groupsActions.addGroupFromSelected()}\n            >\n              <TiPlus />\n              <b style={styleAddLabel}>{translator.t('New Group from selected')}</b>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n    </Panel>\n  )\n}\n\nfunction areEqual(prevProps: PanelGroupsProps, nextProps: PanelGroupsProps) {\n  return (\n    prevProps.groups === nextProps.groups &&\n    prevProps.layers === nextProps.layers &&\n    prevProps.mode === nextProps.mode\n  );\n}\n\nexport default memo(PanelGroups, areEqual);\n","import React, { Component } from 'react';\nimport Panel from './panel';\nimport {\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE,\n  MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE,\n  MODE_ROTATING_ITEM\n} from '../../constants';\nimport * as SharedStyle from '../../shared-style';\nimport { MdSearch } from 'react-icons/md';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { Layer, Scene } from '../../models';\n\nconst VISIBILITY_MODE = {\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE,\n  MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE,\n  MODE_ROTATING_ITEM\n};\n\nconst contentArea = {\n  height: 'auto',\n  maxHeight: '15em',\n  overflowY: 'auto',\n  padding: '0.25em 1.15em',\n  cursor: 'pointer',\n  marginBottom: '1em',\n  userSelect: 'none'\n} as const;\n\nconst elementStyle = {\n  width: 'auto',\n  height: '2.5em',\n  margin: '0.25em 0.25em 0 0',\n  padding: '0.5em',\n  textAlign: 'center',\n  display: 'inline-block',\n  border: '1px solid #CCC',\n  borderRadius: '0.2em'\n} as const;\n\nconst elementSelectedStyle = {\n  ...elementStyle,\n  border: elementStyle.border.replace('#CCC', SharedStyle.SECONDARY_COLOR.main),\n  color: SharedStyle.SECONDARY_COLOR.main,\n} as const;\n\nconst categoryDividerStyle = {\n  paddingBottom: '0.5em',\n  borderBottom: '1px solid #888',\n} as const;\n\nconst tableSearchStyle = { width: '100%', marginTop: '0.8em' } as const;\nconst searchIconStyle = { fontSize: '1.5em' } as const;\nconst searchInputStyle = { fontSize: '1em', width: '100%', height: '1em', padding: '1em 0.5em' } as const;\n\ninterface PanelLayerElementProps {\n  mode: string;\n  layers: Scene[\"layers\"];\n  selectedLayer: any;\n}\n\ninterface ElementsType {\n  lines: Layer[\"lines\"][string][];\n  holes: Layer[\"holes\"][string][];\n  items: Layer[\"items\"][string][];\n}\n\ninterface PanelLayerElementState {\n  elements: ElementsType;\n  matchString: string;\n  matchedElements: ElementsType;\n}\n\nexport default class PanelLayerElement extends Component<PanelLayerElementProps, PanelLayerElementState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props: PanelLayerElementProps, context) {\n    super(props, context);\n\n    const layer = props.layers[props.selectedLayer];\n    const elements = {\n      lines: Object.values(layer.lines),\n      holes: Object.values(layer.holes),\n      items: Object.values(layer.items),\n    } as const;\n\n    this.state = {\n      elements,\n      matchString: '',\n      matchedElements: elements\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState: PanelLayerElementState) {\n    if (this.state.matchString !== nextState.matchString) return true;\n\n    const oldElements = this.state.elements;\n    const newElements = nextState.elements;\n\n    if (\n      oldElements.lines !== newElements.lines ||\n      oldElements.holes !== newElements.holes ||\n      oldElements.items !== newElements.items\n    ) return true;\n\n    return false;\n  }\n\n  componentDidUpdate(prevProps: PanelLayerElementProps) {\n    const layer = this.props.layers[this.props.selectedLayer];\n\n    if (prevProps.layers === this.props.layers) return;\n\n    const elements = {\n      lines: Object.values(layer.lines),\n      holes: Object.values(layer.holes),\n      items: Object.values(layer.items),\n    };\n\n    if (this.state.matchString !== '') {\n      const regexp = new RegExp(this.state.matchString, 'i');\n      const filterCb = el => regexp.test(el.name);\n\n      this.setState({\n        matchedElements: {\n          lines: elements.lines.filter(filterCb),\n          holes: elements.holes.filter(filterCb),\n          items: elements.items.filter(filterCb)\n        }\n      });\n    } else {\n      this.setState({ elements, matchedElements: elements });\n    }\n  }\n\n  matcharray(text) {\n    if (text === '') {\n      this.setState({\n        matchString: '',\n        matchedElements: this.state.elements\n      });\n      return;\n    }\n\n    const regexp = new RegExp(text, 'i');\n    const filterCb = el => regexp.test(el.name);\n\n    this.setState({\n      matchString: text,\n      matchedElements: {\n        lines: Object.values(this.state.elements.lines).filter(filterCb),\n        holes: Object.values(this.state.elements.holes).filter(filterCb),\n        items: Object.values(this.state.elements.items).filter(filterCb)\n      }\n    });\n  }\n\n  render() {\n    if (!VISIBILITY_MODE[this.props.mode]) return null;\n\n    const layer = this.props.layers[this.props.selectedLayer];\n\n    return (\n      <Panel name={this.context.translator.t('Elements on layer {0}', layer.name)}>\n        <div style={contentArea} onWheel={e => e.stopPropagation()}>\n\n          <table style={tableSearchStyle}>\n            <tbody>\n              <tr>\n                <td><MdSearch style={searchIconStyle} /></td>\n                <td><input type=\"text\" style={searchInputStyle} onChange={(e) => {\n                  this.matcharray(e.target.value);\n                }} /></td>\n              </tr>\n            </tbody>\n          </table>\n\n          {\n            this.state.matchedElements.lines.length ?\n              <div>\n                <p style={categoryDividerStyle}>{this.context.translator.t('Lines')}</p>\n                {\n                  this.state.matchedElements.lines.map((line) => {\n                    return (\n                      <div\n                        key={line.id}\n                        onClick={e => this.context.linesActions.selectLine(layer.id, line.id)}\n                        style={line.selected ? elementSelectedStyle : elementStyle}\n                      >\n                        {line.name}\n                      </div>\n                    )\n                  })\n                }\n              </div>\n              : null\n          }\n\n          {\n            this.state.matchedElements.holes.length ?\n              <div>\n                <p style={categoryDividerStyle}>{this.context.translator.t('Holes')}</p>\n                {\n                  this.state.matchedElements.holes.map((hole) => {\n                    return (\n                      <div\n                        key={hole.id}\n                        onClick={e => this.context.holesActions.selectHole(layer.id, hole.id)}\n                        style={hole.selected ? elementSelectedStyle : elementStyle}\n                      >\n                        {hole.name}\n                      </div>\n                    )\n                  })\n                }\n              </div>\n              : null\n          }\n\n          {\n            this.state.matchedElements.items.length ?\n              <div>\n                <p style={categoryDividerStyle}>{this.context.translator.t('Items')}</p>\n                {\n                  this.state.matchedElements.items.map((item) => {\n                    return (\n                      <div\n                        key={item.id}\n                        onClick={e => this.context.itemsActions.selectItem(layer.id, item.id)}\n                        style={item.selected ? elementSelectedStyle : elementStyle}\n                      >\n                        {item.name}\n                      </div>\n                    )\n                  })\n                }\n              </div>\n              : null\n          }\n\n        </div>\n      </Panel>\n    );\n  }\n\n}\n","import React from 'react';\nimport PanelElementEditor from './panel-element-editor/panel-element-editor';\nimport PanelGroupEditor from './panel-group-editor';\nimport PanelMultiElementsEditor from './panel-element-editor/panel-multi-elements-editor';\nimport PanelLayers from './panel-layers';\nimport PanelGuides from './panel-guides';\nimport PanelGroups from './panel-groups';\nimport PanelLayerElements from './panel-layer-elements';\nimport * as SharedStyle from '../../shared-style';\nimport If from '../../utils/react-if';\nimport { ComponentType, StructuredComponentType } from '../../types';\nimport { State } from '../../models';\n\nconst STYLE = {\n  backgroundColor: SharedStyle.PRIMARY_COLOR.main,\n  display: 'block',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  paddingBottom: '20px'\n} as const;\n\nconst sortButtonsCb = (a: StructuredComponentType, b: StructuredComponentType) => {\n  if (a.index === undefined || a.index === null) {\n    a.index = Number.MAX_SAFE_INTEGER;\n  }\n\n  if (b.index === undefined || b.index === null) {\n    b.index = Number.MAX_SAFE_INTEGER;\n  }\n\n  return a.index - b.index;\n};\n\nconst mapButtonsCb = (el: StructuredComponentType, ind: number) => <If key={ind} condition={el.condition} style={{ position: 'relative' }}>{el.dom}</If>;\n\ninterface SidebarProps {\n  state: State,\n  width: number;\n  height: number;\n  sidebarComponents: ComponentType[];\n}\n\nexport default function Sidebar({ state, width, height, sidebarComponents }: SidebarProps) {\n  const selectedLayer = state.scene.selectedLayer;\n\n  //TODO change in multi-layer check\n  const selected = state.scene.layers[selectedLayer].selected;\n\n  const multiselected =\n    selected.lines.length > 1 ||\n    selected.items.length > 1 ||\n    selected.holes.length > 1 ||\n    selected.areas.length > 1 ||\n    selected.lines.length + selected.items.length + selected.holes.length + selected.areas.length > 1;\n\n  const selectedGroup = Object.values(state.scene.groups).find(g => g.selected);\n\n  let sorter: ComponentType[] = [\n    { index: 0, condition: true, dom: <PanelGuides state={state} /> },\n    { index: 1, condition: true, dom: <PanelLayers state={state} /> },\n    { index: 2, condition: true, dom: <PanelLayerElements mode={state.mode} layers={state.scene.layers} selectedLayer={state.scene.selectedLayer} /> },\n    { index: 3, condition: true, dom: <PanelGroups mode={state.mode} groups={state.scene.groups} layers={state.scene.layers} /> },\n    { index: 4, condition: !multiselected, dom: <PanelElementEditor state={state} /> },\n    { index: 5, condition: multiselected, dom: <PanelMultiElementsEditor state={state} /> },\n    { index: 6, condition: !!selectedGroup, dom: <PanelGroupEditor state={state} groupID={selectedGroup ? selectedGroup[0] : null} /> }\n  ];\n\n  sorter = sorter.concat(sidebarComponents.map((Component, key) => {\n    if (typeof Component === 'function') {\n      return {\n        condition: true,\n        dom: React.createElement(Component, { state, key })\n      }\n    } else { //else is a sortable toolbar button\n      return {\n        index: Component.index,\n        condition: Component.condition,\n        dom: typeof Component.dom === 'function'\n          ? React.createElement(Component.dom, { state, key })\n          : Component.dom\n      };\n    }\n  }));\n\n  return (\n    <aside\n      style={{ width, height, ...STYLE }}\n      onKeyDown={event => event.stopPropagation()}\n      onKeyUp={event => event.stopPropagation()}\n      className=\"sidebar\"\n    >\n      {sorter.sort(sortButtonsCb).map(mapButtonsCb)}\n    </aside>\n  );\n}\n","import React from 'react';\nimport * as SharedStyle from '../../shared-style';\n\nconst STYLE = { fill: \"#0096fd\", stroke: SharedStyle.COLORS.white, cursor: \"move\" };\n\ninterface VertexProps {\n  vertex: any, // object\n  layer: any, // object\n}\n\nexport default function Vertex({ vertex, layer }: VertexProps) {\n\n  const { x, y } = vertex;\n\n  return (\n    <g\n      transform={`translate(${x}, ${y})`}\n      data-element-root\n      data-prototype={vertex.prototype}\n      data-id={vertex.id}\n      data-selected={vertex.selected}\n      data-layer={layer.id}\n    >\n      <circle cx=\"0\" cy=\"0\" r=\"7\" style={STYLE} />\n    </g>\n  );\n}\n","import React from 'react';\nimport * as Geometry from '../../utils/geometry';\n\nconst STYLE = {\n  stroke: '#D32F2F',\n  strokeWidth: \"1px\"\n};\n\ninterface ActiveDrawingHelperProps {\n  snap: any, // object\n  width: number,\n  height: number\n}\n\nexport default function ActiveDrawingHelper({ snap, width, height }: ActiveDrawingHelperProps) {\n  switch (snap.type) {\n    case 'point':\n      return (\n        <g transform={`translate(${snap.x} ${snap.y})`}>\n          <line x1=\"0\" y1=\"-70\" x2=\"0\" y2=\"70\" style={STYLE} />\n          <line x1=\"-70\" y1=\"0\" x2=\"70\" y2=\"0\" style={STYLE} />\n        </g>);\n\n    case 'line':\n      const h0 = Geometry.horizontalLine(0);\n      const h1 = Geometry.horizontalLine(height);\n      const pointH0 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, h0.a, h0.b, h0.c);\n      const pointH1 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, h1.a, h1.b, h1.c);\n\n      const v0 = Geometry.verticalLine(0);\n      const v1 = Geometry.verticalLine(width);\n      const pointV0 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, v0.a, v0.b, v0.c);\n      const pointV1 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, v1.a, v1.b, v1.c);\n\n      if (pointH0 && pointH1)\n        return <line x1={pointH0.x} y1={pointH0.y} x2={pointH1.x} y2={pointH1.y} style={STYLE} />;\n      if (pointV0 && pointV1)\n        return <line x1={pointV0.x} y1={pointV0.y} x2={pointV1.x} y2={pointV1.y} style={STYLE} />;\n      return null;\n\n    case 'line-segment':\n      return <line x1={snap.x1} y1={snap.y1} x2={snap.x2} y2={snap.y2} style={STYLE} />;\n\n    default:\n      return null;\n  }\n}\n","import React from 'react';\n\nconst STYLE = {\n  stroke: \"#0096fd\",\n  strokeWidth: \"1px\"\n};\n\nconst STYLE_TEXT = {\n  textAnchor: \"middle\",\n  fontSize: \"12px\",\n  fontFamily: \"'Courier New', Courier, monospace\",\n  pointerEvents: \"none\",\n  fontWeight: \"bold\",\n\n  //http://stackoverflow.com/questions/826782/how-to-disable-text-selection-highlighting-using-css\n  WebkitTouchCallout: \"none\", /* iOS Safari */\n  WebkitUserSelect: \"none\",   /* Chrome/Safari/Opera */\n  MozUserSelect: \"none\",      /* Firefox */\n  MsUserSelect: \"none\",       /* Internet Explorer/Edge */\n  userSelect: \"none\"\n} as const;\n\ninterface RulerProps {\n  length: number;\n  unit: string;\n  transform?: string;\n}\n\nexport default function Ruler({ length, unit, transform }: RulerProps) {\n  const distanceText = `${length.toFixed(2)} ${unit}`;\n\n  return (\n    <g transform={transform}>\n      <text x={length / 2} y=\"-3\" transform={`scale(1, -1)`} style={STYLE_TEXT}>{distanceText}</text>\n      <line x1=\"0\" y1=\"-5\" x2=\"0\" y2=\"5\" style={STYLE} />\n      <line x1={length} y1=\"-5\" x2={length} y2=\"5\" style={STYLE} />\n      <line x1=\"0\" y1=\"0\" x2={length} y2=\"0\" style={STYLE} />\n    </g>\n  );\n\n}\n","import React from 'react';\nimport { GeometryUtils } from '../../utils/export';\nimport Ruler from './ruler';\nimport { CatalogJson, CatalogFn } from '../../catalog/catalog';\nimport { Line as LineModel, Layer, Scene } from '../../models'\n\ninterface LineProps {\n  line: LineModel;\n  layer: Layer;\n  scene: Scene;\n  catalog: CatalogJson;\n}\n\nexport default function Line({ line, layer, scene, catalog }: LineProps) {\n\n  const vertex0 = layer.vertices[line.vertices[0]];\n  const vertex1 = layer.vertices[line.vertices[1]];\n\n  if (vertex0.id === vertex1.id || GeometryUtils.samePoints(vertex0, vertex1)) return null; //avoid 0-length lines\n\n  let { x: x1, y: y1 } = vertex0;\n  let { x: x2, y: y2 } = vertex1;\n\n  if (x1 > x2) {\n    ({ x: x1, y: y1 } = vertex1);\n    ({ x: x2, y: y2 } = vertex0);\n  }\n\n  const length = GeometryUtils.pointsDistance(x1, y1, x2, y2);\n  const angle = GeometryUtils.angleBetweenTwoPointsAndOrigin(x1, y1, x2, y2);\n\n  const renderedHoles = line.holes.map(holeID => {\n    const hole = layer.holes[holeID];\n    const startAt = length * hole.offset;\n    const renderedHole = CatalogFn.getElement(catalog, hole.type).render2D(hole, layer, scene);\n\n    return (\n      <g\n        key={holeID}\n        transform={`translate(${startAt}, 0)`}\n        data-element-root\n        data-prototype={hole.prototype}\n        data-id={hole.id}\n        data-selected={hole.selected}\n        data-layer={layer.id}\n      >\n        {renderedHole}\n      </g>\n    );\n  });\n\n  const thickness = line.properties.thickness.length;\n  const half_thickness = thickness / 2;\n\n  const renderedLine = CatalogFn.getElement(catalog, line.type).render2D(line, layer, scene);\n  const renderedRuler = line.selected ?\n    <Ruler unit={scene.unit} length={length} transform={`translate(0, ${half_thickness + 10} )`} /> : null;\n\n  return (\n    <g\n      transform={`translate(${x1}, ${y1}) rotate(${angle}, 0, 0)`}\n      data-element-root\n      data-prototype={line.prototype}\n      data-id={line.id}\n      data-selected={line.selected}\n      data-layer={layer.id}\n      style={line.selected ? { cursor: 'move' } : {}}\n    >\n      {renderedRuler}\n      {renderedLine}\n      {renderedHoles}\n    </g>\n  );\n\n}\n","import React from 'react';\nimport {\n  Line,\n  Area,\n  Vertex,\n  Item,\n  Group\n} from './export';\nimport { CatalogJson } from '../../catalog/catalog';\nimport { Layer as LayerModel, Scene } from '../../models';\n\ninterface LayerProps {\n  layer: LayerModel;\n  scene: Scene;\n  catalog: CatalogJson;\n}\n\nexport default function Layer({ layer, scene, catalog }: LayerProps) {\n\n  const { unit, groups } = scene;\n  const { lines, areas, vertices, holes, id: layerID, items, opacity } = layer;\n\n  return (\n    <g opacity={opacity}>\n      {\n        Object.values(areas).map(area =>\n          <Area key={area.id} layer={layer} area={area} scene={scene} unit={unit} catalog={catalog} />)\n      }\n      {\n        Object.values(lines).map(line =>\n          <Line key={line.id} layer={layer} line={line} scene={scene} catalog={catalog} />)\n      }\n      {\n        Object.values(items).map(item =>\n          <Item key={item.id} layer={layer} item={item} scene={scene} catalog={catalog} />)\n      }\n      {\n        Object.values(vertices)\n          .filter(v => v.selected)\n          .map(vertex => <Vertex key={vertex.id} layer={layer} vertex={vertex} />)\n      }\n      {\n        Object.values(groups)\n          .filter(g => g.elements[layerID] && g.selected)\n          .map(group => <Group key={group.id} layer={layer} group={group} scene={scene} catalog={catalog} />)\n      }\n    </g>\n  );\n\n}\n","import React from 'react';\nimport If from '../../utils/react-if';\nimport { CatalogFn, CatalogJson } from '../../catalog/catalog';\n\nconst STYLE_LINE = {\n  fill: \"#0096fd\",\n  stroke: \"#0096fd\"\n};\n\nconst STYLE_CIRCLE = {\n  fill: \"#0096fd\",\n  stroke: \"#0096fd\",\n  cursor: \"ew-resize\"\n};\n\nconst STYLE_CIRCLE2 = {\n  fill: \"none\",\n  stroke: \"#0096fd\",\n  cursor: \"ew-resize\"\n};\n\ninterface ItemProps {\n  layer: any;\n  item: any;\n  scene: any;\n  catalog: CatalogJson;\n}\n\nexport default function Item({ layer, item, scene, catalog }: ItemProps) {\n\n  const { x, y, rotation } = item;\n\n  const renderedItem = CatalogFn.getElement(catalog, item.type).render2D(item, layer, scene);\n\n  return (\n    <g\n      data-element-root\n      data-prototype={item.prototype}\n      data-id={item.id}\n      data-selected={item.selected}\n      data-layer={layer.id}\n      style={item.selected ? { cursor: \"move\" } : {}}\n      transform={`translate(${x},${y}) rotate(${rotation})`}>\n\n      {renderedItem}\n      <If condition={item.selected} style={{}}>\n        <g data-element-root\n          data-prototype={item.prototype}\n          data-id={item.id}\n          data-selected={item.selected}\n          data-layer={layer.id}\n          data-part=\"rotation-anchor\"\n        >\n          <circle cx=\"0\" cy=\"150\" r=\"10\" style={STYLE_CIRCLE} />\n          <circle cx=\"0\" cy=\"0\" r=\"150\" style={STYLE_CIRCLE2} />\n        </g>\n      </If>\n    </g>\n  )\n}\n","import React from 'react';\nimport polylabel from 'polylabel';\nimport areapolygon from 'area-polygon';\nimport { CatalogFn, CatalogJson } from '../../catalog/catalog';\nimport { Layer, Area as AreaModel, Scene } from '../../models';\n\nconst STYLE_TEXT = {\n  textAnchor: 'middle',\n  fontSize: '12px',\n  fontFamily: '\"Courier New\", Courier, monospace',\n  pointerEvents: 'none',\n  fontWeight: 'bold',\n\n  //http://stackoverflow.com/questions/826782/how-to-disable-text-selection-highlighting-using-css\n  WebkitTouchCallout: 'none', /* iOS Safari */\n  WebkitUserSelect: 'none', /* Chrome/Safari/Opera */\n  MozUserSelect: 'none', /* Firefox */\n  MsUserSelect: 'none', /* Internet Explorer/Edge */\n  userSelect: 'none'\n} as const;\n\ninterface AreaProps {\n  area: AreaModel;\n  layer: Layer;\n  scene: Scene;\n  catalog: CatalogJson;\n  unit?: string;\n}\n\nexport default function Area({ layer, area, scene, catalog, unit }: AreaProps) {\n\n  const rendered = CatalogFn.getElement(catalog, area.type).render2D(area, layer, scene);\n\n  let renderedAreaSize = null;\n\n  if (area.selected) {\n    const polygon = area.vertices.map(vertexID => {\n      const { x, y } = layer.vertices[vertexID];\n      return [x, y];\n    });\n\n    let polygonWithHoles = polygon;\n\n    area.holes.forEach(holeID => {\n\n      const polygonHole = layer.areas[holeID].vertices.map(vertexID => {\n        const { x, y } = layer.vertices[vertexID];\n        return [x, y];\n      });\n\n      polygonWithHoles = polygonWithHoles.concat(polygonHole.reverse());\n    });\n\n    const center = polylabel([polygonWithHoles], 1.0);\n    let areaSize = areapolygon(polygon, false);\n\n    //subtract holes area\n    area.holes.forEach(areaID => {\n      const hole = layer.areas[areaID];\n      const holePolygon = hole.vertices.map(vertexID => {\n        const { x, y } = layer.vertices[vertexID];\n        return [x, y];\n      });\n      areaSize -= areapolygon(holePolygon, false);\n    });\n\n    renderedAreaSize = (\n      <text x=\"0\" y=\"0\" transform={`translate(${center[0]} ${center[1]}) scale(1, -1)`} style={STYLE_TEXT}>\n        {(areaSize / 10000).toFixed(2)} m{String.fromCharCode(0xb2)}\n      </text>\n    )\n  }\n\n  return (\n    <g\n      data-element-root\n      data-prototype={area.prototype}\n      data-id={area.id}\n      data-selected={area.selected}\n      data-layer={layer.id}\n    >\n      {rendered}\n      {renderedAreaSize}\n    </g>\n  )\n\n}\n","import React from 'react';\nimport { Grid } from '../../../models';\n\ninterface GridHorizontalStreakProps {\n  width: number;\n  height: number;\n  grid: Grid\n}\n\nexport default function GridHorizontalStreak({ width, height, grid }: GridHorizontalStreakProps) {\n  const step = grid.properties.step;\n  let colors: string[];\n\n  if (grid.properties.color) {\n    colors = [grid.properties.color];\n  } else {\n    colors = grid.properties.colors;\n  }\n\n  const rendered = [];\n  let i = 0;\n  for (let y = 0; y <= height; y += step) {\n    const color = colors[i % colors.length];\n    i++;\n    rendered.push(<line key={y} x1=\"0\" y1={y} x2={width} y2={y} strokeWidth=\"1\" stroke={color} />);\n  }\n\n  return (<g>{rendered}</g>);\n}\n","import React from 'react';\nimport { Grid } from '../../../models';\n\ninterface GridVerticalStreakProps {\n  width: number;\n  height: number;\n  grid: Grid;\n}\n\nexport default function GridVerticalStreak({ width, height, grid }: GridVerticalStreakProps) {\n  const step = grid.properties.step;\n  let colors: string[];\n\n  if (grid.properties.color) {\n    colors = [grid.properties.color];\n  } else {\n    colors = grid.properties.colors;\n  }\n\n  const rendered = [];\n  let i = 0;\n  for (let x = 0; x <= width; x += step) {\n    const color = colors[i % colors.length];\n    i++;\n    rendered.push(<line key={x} x1={x} y1=\"0\" x2={x} y2={height} strokeWidth=\"1\" stroke={color} />);\n  }\n\n  return (<g>{rendered}</g>);\n}\n","import React from 'react';\nimport GridHorizontalStreak from './grid-horizontal-streak';\nimport GridVerticalStreak from './grid-vertical-streak';\nimport { SceneJson } from '../../../models';\n\ninterface GridsProps {\n  scene: SceneJson;\n}\n\nexport default function Grids({ scene }: GridsProps) {\n  const { width, height, grids } = scene;\n\n  const renderedGrids = Object.entries(grids).map(([gridID, grid]) => {\n    switch (grid.type) {\n      case 'horizontal-streak':\n        return (<GridHorizontalStreak key={gridID} width={width} height={height} grid={grid} />);\n\n      case 'vertical-streak':\n        return (<GridVerticalStreak key={gridID} width={width} height={height} grid={grid} />);\n\n      default:\n        console.warn(`grid ${grid.type} not allowed`);\n    }\n  });\n\n  return (<g>{renderedGrids}</g>);\n}\n","import React, { useContext } from 'react';\nimport If from '../../utils/react-if';\nimport * as sharedStyles from '../../shared-style';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { CatalogJson, CatalogFn } from '../../catalog/catalog';\n\nconst cx = 0;\nconst cy = 0;\nconst radius = 5;\n\nconst STYLE_CIRCLE = {\n  fill: sharedStyles.MATERIAL_COLORS[500].orange,\n  stroke: sharedStyles.MATERIAL_COLORS[500].orange,\n  cursor: 'default'\n};\n\ninterface GroupProps {\n  layer: any;\n  group: any;\n  scene: any;\n  catalog: CatalogJson\n}\n\nexport default function Group({ layer, group, scene, catalog }: GroupProps) {\n  const { translator } = useContext(ReactPlannerContext);\n  return (\n    <g\n      data-element-root\n      data-prototype={group.prototype}\n      data-id={group.id}\n      data-selected={group.selected}\n      data-layer={layer.id}\n      style={group.selected ? { cursor: 'move' } : {}}\n      transform={`translate(${group.x},${group.y}) rotate(${group.rotation})`}\n    >\n      <If condition={group.selected} style={{}}>\n        <g\n          data-element-root\n          data-prototype={group.prototype}\n          data-id={group.id}\n          data-selected={group.selected}\n          data-layer={layer.id}\n          data-part=\"rotation-anchor\"\n        >\n          <circle cx={cx} cy={cy} r={radius} style={STYLE_CIRCLE}>\n            <title>{translator.t('Group\\'s Barycenter')}</title>\n          </circle>\n        </g>\n      </If>\n    </g>\n  )\n}\n","import React, { Component, useContext } from 'react';\nimport * as SharedStyle from '../../shared-style';\nimport ReactPlannerContext from '../../react-planner-context';\n\ninterface RulerXProps {\n  unitPixelSize: number;\n  positiveUnitsNumber?: number;\n  negativeUnitsNumber?: number;\n  zoom: number;\n  mouseX: number;\n  width: number;\n  zeroLeftPosition: number;\n  backgroundColor?: string;\n  fontColor?: string;\n  markerColor?: string;\n}\n\nexport default function RulerX({ unitPixelSize, positiveUnitsNumber = 50, negativeUnitsNumber = 50, mouseX = 0, zoom, width, zeroLeftPosition, backgroundColor = SharedStyle.PRIMARY_COLOR.main, fontColor = SharedStyle.COLORS.white, markerColor = SharedStyle.SECONDARY_COLOR.main }: RulerXProps) {\n  const elementW = unitPixelSize * zoom;\n\n  const elementStyle = {\n    display: 'inline-block',\n    width: elementW,\n    position: 'relative',\n    borderLeft: '1px solid ' + fontColor,\n    paddingLeft: '0.2em',\n    fontSize: '10px',\n    height: '100%'\n  } as const;\n\n  const insideElementsStyle = {\n    width: '20%',\n    display: 'inline-block',\n    margin: 0,\n    padding: 0\n  } as const;\n\n  const rulerStyle = {\n    backgroundColor: backgroundColor,\n    position: 'relative',\n    width: width,\n    height: '100%',\n    color: fontColor\n  } as const;\n\n  const markerStyle = {\n    position: 'absolute',\n    left: zeroLeftPosition + (mouseX * zoom) - 6.5,\n    top: 8,\n    width: 0,\n    height: 0,\n    borderLeft: '5px solid transparent',\n    borderRight: '5px solid transparent',\n    borderTop: '8px solid ' + markerColor,\n    zIndex: 9001\n  } as const;\n\n  const rulerContainer = {\n    position: 'absolute',\n    height: '10px',\n    top: '4px',\n    display: 'grid',\n    gridRowGap: '0',\n    gridColumnGap: '0',\n    gridTemplateRows: '100%',\n    grdAutoColumns: `${elementW}px`\n  } as const;\n\n  const positiveRulerContainer = {\n    ...rulerContainer,\n    width: (positiveUnitsNumber * elementW),\n    left: zeroLeftPosition\n  };\n\n  const negativeRulerContainer = {\n    ...rulerContainer,\n    width: (negativeUnitsNumber * elementW),\n    left: zeroLeftPosition - (negativeUnitsNumber * elementW)\n  };\n\n  const positiveDomElements = [];\n\n  if (elementW <= 200) {\n    for (let x = 0; x < positiveUnitsNumber; x++) {\n      positiveDomElements.push(\n        <div key={x} style={{ ...elementStyle, gridColumn: (x + 1), gridRow: 1 }}>\n          {elementW > 30 ? (x * 100) : ''}\n        </div>\n      );\n    }\n  }\n  else if (elementW > 200) {\n    for (let x = 0; x < positiveUnitsNumber; x++) {\n      const val = x * 100;\n      positiveDomElements.push(\n        <div key={x} style={{ ...elementStyle, gridColumn: (x + 1), gridRow: 1 }}>\n          <div style={insideElementsStyle}>{val}</div>\n          <div style={insideElementsStyle}>{val + (1 * 20)}</div>\n          <div style={insideElementsStyle}>{val + (2 * 20)}</div>\n          <div style={insideElementsStyle}>{val + (3 * 20)}</div>\n          <div style={insideElementsStyle}>{val + (4 * 20)}</div>\n        </div>\n      );\n    }\n  }\n\n  return <div style={rulerStyle}>\n    <div id=\"horizontalMarker\" style={markerStyle}></div>\n    <div id=\"negativeRuler\" style={negativeRulerContainer}></div>\n    <div id=\"positiveRuler\" style={positiveRulerContainer}>{positiveDomElements}</div>\n  </div>;\n}\n","import React from 'react';\nimport * as SharedStyle from '../../shared-style';\n\ninterface RulerXProps {\n  unitPixelSize: number,\n  positiveUnitsNumber?: number,\n  negativeUnitsNumber?: number,\n  zoom: number,\n  mouseY: number,\n  height: number,\n  zeroTopPosition: number,\n  backgroundColor?: string,\n  fontColor?: string,\n  markerColor?: string\n};\n\nexport default function RulerY({ unitPixelSize, positiveUnitsNumber = 50, negativeUnitsNumber = 50, zoom, mouseY, height, zeroTopPosition, backgroundColor = SharedStyle.PRIMARY_COLOR.main, fontColor = SharedStyle.COLORS.white, markerColor = SharedStyle.SECONDARY_COLOR.main }: RulerXProps) {\n\n  const elementH = unitPixelSize * zoom;\n\n  const elementStyle = {\n    width: '8px',\n    borderBottom: '1px solid ' + fontColor,\n    paddingBottom: '0.2em',\n    fontSize: '10px',\n    height: elementH,\n    textOrientation: 'upright',\n    writingMode: 'vertical-lr',\n    letterSpacing: '-2px',\n    textAlign: 'right'\n  } as const;\n\n  const insideElementsStyle = {\n    height: '20%',\n    width: '100%',\n    textOrientation: 'upright',\n    writingMode: 'vertical-lr',\n    display: 'inline-block',\n    letterSpacing: '-2px',\n    textAlign: 'right'\n  } as const;\n\n  const rulerStyle = {\n    backgroundColor: backgroundColor,\n    height: height,\n    width: '100%',\n    color: fontColor\n  } as const;\n\n  const markerStyle = {\n    position: 'absolute',\n    top: zeroTopPosition - (mouseY * zoom) - 6.5,\n    left: 8,\n    width: 0,\n    height: 0,\n    borderTop: '5px solid transparent',\n    borderBottom: '5px solid transparent',\n    borderLeft: '8px solid ' + markerColor,\n    zIndex: 9001\n  } as const;\n\n  const rulerContainer = {\n    position: 'absolute',\n    width: '100%',\n    display: 'grid',\n    gridRowGap: '0',\n    gridColumnGap: '0',\n    gridTemplateColumns: '100%',\n    grdAutoRows: `${elementH}px`,\n    paddingLeft: '5px'\n  } as const;\n\n  const positiveRulerContainer = {\n    ...rulerContainer,\n    top: zeroTopPosition - (positiveUnitsNumber * elementH),\n    height: (positiveUnitsNumber * elementH)\n  } as const;\n\n  const negativeRulerContainer = {\n    ...rulerContainer,\n    top: zeroTopPosition + (negativeUnitsNumber * elementH),\n    height: (negativeUnitsNumber * elementH)\n  } as const;\n\n  const positiveDomElements = [];\n\n  if (elementH <= 200) {\n    for (let x = 1; x <= positiveUnitsNumber; x++) {\n      positiveDomElements.push(\n        <div key={x} style={{ ...elementStyle, gridColumn: 1, gridRow: x }}>\n          {elementH > 30 ? ((positiveUnitsNumber - x) * 100) : ''}\n        </div>\n      );\n    }\n  }\n  else if (elementH > 200) {\n    for (let x = 1; x <= positiveUnitsNumber; x++) {\n      const val = (positiveUnitsNumber - x) * 100;\n      positiveDomElements.push(\n        <div key={x} style={{ ...elementStyle, gridColumn: 1, gridRow: x }}>\n          <div style={insideElementsStyle}>{val + (4 * 20)}</div>\n          <div style={insideElementsStyle}>{val + (3 * 20)}</div>\n          <div style={insideElementsStyle}>{val + (2 * 20)}</div>\n          <div style={insideElementsStyle}>{val + (1 * 20)}</div>\n          <div style={insideElementsStyle}>{val}</div>\n        </div>\n      );\n    }\n  }\n\n  return <div style={rulerStyle}>\n    <div id=\"verticalMarker\" style={markerStyle}></div>\n    <div id=\"negativeRuler\" style={negativeRulerContainer}></div>\n    <div id=\"positiveRuler\" style={positiveRulerContainer}>{positiveDomElements}</div>\n  </div>;\n}\n","import Viewer2D from './viewer2d';\nimport Vertex from './vertex';\nimport State from './state';\nimport Snap from './snap';\nimport Scene from './scene';\nimport Ruler from './ruler';\nimport Line from './line';\nimport Layer from './layer';\nimport Item from './item';\nimport Area from './area';\nimport Grids from './grids/grids';\nimport Group from './group';\nimport RulerX from './rulerX';\nimport RulerY from './rulerY';\n\nexport {\n  Viewer2D,\n  Vertex,\n  State,\n  Snap,\n  Scene,\n  Ruler,\n  Line,\n  Layer,\n  Item,\n  Area,\n  Grids,\n  Group,\n  RulerX,\n  RulerY\n};\n\nexport default {\n  Viewer2D,\n  Vertex,\n  State,\n  Snap,\n  Scene,\n  Ruler,\n  Line,\n  Layer,\n  Item,\n  Area,\n  Grids,\n  Group,\n  RulerX,\n  RulerY\n};\n","import React, { Component } from 'react';\nimport { Layer, Grids } from './export';\nimport { CatalogJson } from '../../catalog/catalog';\nimport { SceneJson } from '../../models';\n\ninterface SceneProps {\n  scene: SceneJson,\n  catalog: CatalogJson,\n}\n\nexport default function Scene({ scene, catalog }: SceneProps) {\n  const { height, layers } = scene;\n  const selectedLayer = layers[scene.selectedLayer];\n\n  return (\n    <g>\n      <Grids scene={scene} />\n\n      <g style={{ pointerEvents: 'none' }}>\n        {\n          Object.entries(layers)\n            .filter(([layerID, layer]) => layerID !== scene.selectedLayer && layer.visible)\n            .map(([layerID, layer]) => <Layer key={layerID} layer={layer} scene={scene} catalog={catalog} />)\n        }\n      </g>\n\n      <Layer key={selectedLayer.id} layer={selectedLayer} scene={scene} catalog={catalog} />\n    </g>\n  );\n}\n\n","import React from 'react';\nimport Scene from './scene';\nimport Snap from './snap';\nimport * as SharedStyle from '../../shared-style';\nimport { State as StateClass } from '../../models';\n\nconst guideStyle = {\n  stroke: SharedStyle.SECONDARY_COLOR.main,\n  strokewidth: '2.5px'\n};\n\ninterface StateProps {\n  state: StateClass, // object\n  catalog: any, // object\n}\n\nexport default function State({ state, catalog }: StateProps) {\n\n  let { activeSnapElement, snapElements, scene } = state;\n  const { width, height } = scene;\n\n  activeSnapElement = activeSnapElement ?\n    <Snap snap={activeSnapElement} width={scene.width} height={scene.height} /> : null;\n  // snapElements = snapElements.map((snap,id) => <Snap key={id} snap={snap} width={scene.width} height={scene.height}/>);\n  snapElements = null; //only for debug purpose\n\n  return (\n    <g>\n      <rect x=\"0\" y=\"0\" width={width} height={height} fill={SharedStyle.COLORS.white} />\n      <g transform={`translate(0, ${scene.height}) scale(1, -1)`} id=\"svg-drawing-paper\">\n        <Scene scene={scene} catalog={catalog} />\n        {Object.entries(scene.guides.horizontal).map(([hgKey, hgVal]) => <line id={'hGuide' + hgKey} key={hgKey} x1={0} y1={hgVal} x2={width} y2={hgVal} style={guideStyle} />)}\n        {Object.entries(scene.guides.vertical).map(([vgKey, vgVal]) => <line key={vgKey} x1={vgVal} y1={0} x2={vgVal} y2={height} style={guideStyle} />)}\n        {activeSnapElement}\n        {snapElements}\n\n      </g>\n    </g>\n  )\n}\n","import React, { CSSProperties, useContext } from 'react';\n\nimport { ReactSVGPanZoom, TOOL_NONE, TOOL_PAN, TOOL_ZOOM_IN, TOOL_ZOOM_OUT, TOOL_AUTO, ViewerMouseEvent, Value as ReactSVGPanZoomValue } from 'react-svg-pan-zoom';\nimport * as constants from '../../constants';\nimport State from './state';\nimport * as SharedStyle from '../../shared-style';\nimport { RulerX, RulerY } from './export';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State as StateClass } from '../../models';\n\nfunction mode2Tool(mode) {\n  switch (mode) {\n    case constants.MODE_2D_PAN:\n      return TOOL_PAN;\n    case constants.MODE_2D_ZOOM_IN:\n      return TOOL_ZOOM_IN;\n    case constants.MODE_2D_ZOOM_OUT:\n      return TOOL_ZOOM_OUT;\n    case constants.MODE_IDLE:\n      return TOOL_AUTO;\n    default:\n      return TOOL_NONE;\n  }\n}\n\nfunction mode2PointerEvents(mode) {\n  switch (mode) {\n    case constants.MODE_DRAWING_LINE:\n    case constants.MODE_DRAWING_HOLE:\n    case constants.MODE_DRAWING_ITEM:\n    case constants.MODE_DRAGGING_HOLE:\n    case constants.MODE_DRAGGING_ITEM:\n    case constants.MODE_DRAGGING_LINE:\n    case constants.MODE_DRAGGING_VERTEX:\n      return { pointerEvents: 'none' };\n\n    default:\n      return {};\n  }\n}\n\nfunction mode2Cursor(mode) {\n  switch (mode) {\n    case constants.MODE_DRAGGING_HOLE:\n    case constants.MODE_DRAGGING_LINE:\n    case constants.MODE_DRAGGING_VERTEX:\n    case constants.MODE_DRAGGING_ITEM:\n      return { cursor: 'move' };\n\n    case constants.MODE_ROTATING_ITEM:\n      return { cursor: 'ew-resize' };\n\n    case constants.MODE_WAITING_DRAWING_LINE:\n    case constants.MODE_DRAWING_LINE:\n      return { cursor: 'crosshair' };\n    default:\n      return { cursor: 'default' };\n  }\n}\n\nfunction mode2DetectAutopan(mode) {\n  switch (mode) {\n    case constants.MODE_DRAWING_LINE:\n    case constants.MODE_DRAGGING_LINE:\n    case constants.MODE_DRAGGING_VERTEX:\n    case constants.MODE_DRAGGING_HOLE:\n    case constants.MODE_DRAGGING_ITEM:\n    case constants.MODE_DRAWING_HOLE:\n    case constants.MODE_DRAWING_ITEM:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction extractElementData(node) {\n  while (!node.attributes.getNamedItem('data-element-root') && node.tagName !== 'svg') {\n    node = node.parentNode;\n  }\n  if (node.tagName === 'svg') return null;\n\n  return {\n    part: node.attributes.getNamedItem('data-part') ? node.attributes.getNamedItem('data-part').value : undefined,\n    layer: node.attributes.getNamedItem('data-layer').value,\n    prototype: node.attributes.getNamedItem('data-prototype').value,\n    selected: node.attributes.getNamedItem('data-selected').value === 'true',\n    id: node.attributes.getNamedItem('data-id').value\n  }\n}\n\ninterface Viewer2DProps {\n  state: StateClass;\n  width: number;\n  height: number;\n}\n\nexport default function Viewer2D({ state, width, height }: Viewer2DProps) {\n  const { viewer2DActions, linesActions, holesActions, verticesActions, itemsActions, areaActions, projectActions, catalog } = useContext(ReactPlannerContext);\n\n  const { viewer2D, mode, scene } = state;\n\n  const layerID = scene.selectedLayer;\n\n  const mapCursorPosition = <T,>({ x, y }: ViewerMouseEvent<T>) => {\n    return { x, y: -y + scene.height }\n  };\n\n  const onMouseMove = <T,>(viewerEvent: ViewerMouseEvent<T>) => {\n    //workaround that allow imageful component to work\n    const evt = new Event('mousemove-planner-event');\n    (evt as any).viewerEvent = viewerEvent;\n    document.dispatchEvent(evt);\n\n    const { x, y } = mapCursorPosition(viewerEvent);\n\n    projectActions.updateMouseCoord({ x, y });\n\n    switch (mode) {\n      case constants.MODE_DRAWING_LINE:\n        linesActions.updateDrawingLine(x, y, state.snapMask);\n        break;\n\n      case constants.MODE_DRAWING_HOLE:\n        holesActions.updateDrawingHole(layerID, x, y);\n        break;\n\n      case constants.MODE_DRAWING_ITEM:\n        itemsActions.updateDrawingItem(layerID, x, y);\n        break;\n\n      case constants.MODE_DRAGGING_HOLE:\n        holesActions.updateDraggingHole(x, y);\n        break;\n\n      case constants.MODE_DRAGGING_LINE:\n        linesActions.updateDraggingLine(x, y, state.snapMask);\n        break;\n\n      case constants.MODE_DRAGGING_VERTEX:\n        verticesActions.updateDraggingVertex(x, y, state.snapMask);\n        break;\n\n      case constants.MODE_DRAGGING_ITEM:\n        itemsActions.updateDraggingItem(x, y);\n        break;\n\n      case constants.MODE_ROTATING_ITEM:\n        itemsActions.updateRotatingItem(x, y);\n        break;\n    }\n\n    (viewerEvent as any).originalEvent.stopPropagation();\n  };\n\n  const onMouseDown = viewerEvent => {\n    const event = viewerEvent.originalEvent;\n\n    //workaround that allow imageful component to work\n    const evt = new Event('mousedown-planner-event');\n    (evt as any).viewerEvent = viewerEvent;\n    document.dispatchEvent(evt);\n\n    const { x, y } = mapCursorPosition(viewerEvent);\n\n    if (mode === constants.MODE_IDLE) {\n      const elementData = extractElementData(event.target);\n      if (!elementData || !elementData.selected) return;\n\n      switch (elementData.prototype) {\n        case 'lines':\n          linesActions.beginDraggingLine(elementData.layer, elementData.id, x, y, state.snapMask);\n          break;\n\n        case 'vertices':\n          verticesActions.beginDraggingVertex(elementData.layer, elementData.id, x, y, state.snapMask);\n          break;\n\n        case 'items':\n          if (elementData.part === 'rotation-anchor')\n            itemsActions.beginRotatingItem(elementData.layer, elementData.id, x, y);\n          else\n            itemsActions.beginDraggingItem(elementData.layer, elementData.id, x, y);\n          break;\n\n        case 'holes':\n          holesActions.beginDraggingHole(elementData.layer, elementData.id, x, y);\n          break;\n\n        default: break;\n      }\n    }\n    event.stopPropagation();\n  };\n\n  const onMouseUp = viewerEvent => {\n    const event = viewerEvent.originalEvent;\n\n    const evt = new Event('mouseup-planner-event');\n    (evt as any).viewerEvent = viewerEvent;\n    document.dispatchEvent(evt);\n\n    const { x, y } = mapCursorPosition(viewerEvent);\n\n    switch (mode) {\n\n      case constants.MODE_IDLE:\n        const elementData = extractElementData(event.target);\n\n        if (elementData && elementData.selected) return;\n\n        switch (elementData ? elementData.prototype : 'none') {\n          case 'areas':\n            areaActions.selectArea(elementData.layer, elementData.id);\n            break;\n\n          case 'lines':\n            linesActions.selectLine(elementData.layer, elementData.id);\n            break;\n\n          case 'holes':\n            holesActions.selectHole(elementData.layer, elementData.id);\n            break;\n\n          case 'items':\n            itemsActions.selectItem(elementData.layer, elementData.id);\n            break;\n\n          case 'none':\n            projectActions.unselectAll();\n            break;\n        }\n        break;\n\n      case constants.MODE_WAITING_DRAWING_LINE:\n        linesActions.beginDrawingLine(layerID, x, y, state.snapMask);\n        break;\n\n      case constants.MODE_DRAWING_LINE:\n        linesActions.endDrawingLine(x, y, state.snapMask);\n        linesActions.beginDrawingLine(layerID, x, y, state.snapMask);\n        break;\n\n      case constants.MODE_DRAWING_HOLE:\n        holesActions.endDrawingHole(layerID, x, y);\n        break;\n\n      case constants.MODE_DRAWING_ITEM:\n        itemsActions.endDrawingItem(layerID, x, y);\n        break;\n\n      case constants.MODE_DRAGGING_LINE:\n        linesActions.endDraggingLine(x, y, state.snapMask);\n        break;\n\n      case constants.MODE_DRAGGING_VERTEX:\n        verticesActions.endDraggingVertex(x, y, state.snapMask);\n        break;\n\n      case constants.MODE_DRAGGING_ITEM:\n        itemsActions.endDraggingItem(x, y);\n        break;\n\n      case constants.MODE_DRAGGING_HOLE:\n        holesActions.endDraggingHole(x, y);\n        break;\n\n      case constants.MODE_ROTATING_ITEM:\n        itemsActions.endRotatingItem(x, y);\n        break;\n    }\n\n    event.stopPropagation();\n  };\n\n  const onChangeValue = (value) => {\n    projectActions.updateZoomScale(value.a);\n    viewer2DActions.updateCameraView(value);\n  };\n\n  const onChangeTool = (tool) => {\n    switch (tool) {\n      case TOOL_NONE:\n        projectActions.selectToolEdit();\n        break;\n\n      case TOOL_PAN:\n        viewer2DActions.selectToolPan();\n        break;\n\n      case TOOL_ZOOM_IN:\n        viewer2DActions.selectToolZoomIn();\n        break;\n\n      case TOOL_ZOOM_OUT:\n        viewer2DActions.selectToolZoomOut();\n        break;\n    }\n  };\n\n  const { e, f, SVGWidth, SVGHeight } = state.viewer2D;\n\n  const rulerSize = 15; //px\n  const rulerUnitPixelSize = 100;\n  const rulerBgColor = SharedStyle.PRIMARY_COLOR.main;\n  const rulerFnColor = SharedStyle.COLORS.white;\n  const rulerMkColor = SharedStyle.SECONDARY_COLOR.main;\n  const sceneWidth = SVGWidth || state.scene.width;\n  const sceneHeight = SVGHeight || state.scene.height;\n  const sceneZoom = state.zoom || 1;\n  const rulerXElements = Math.ceil(sceneWidth / rulerUnitPixelSize) + 1;\n  const rulerYElements = Math.ceil(sceneHeight / rulerUnitPixelSize) + 1;\n\n  const miniatureProps = {\n    position: \"none\",\n    background: \"#fff\",\n    //width: 0,\n    //height: 0,\n    width: 100,\n    height: 80\n  } as const;\n  const toolbarProps = {\n    position: \"none\",\n  } as const;\n\n  return (\n    <div style={{\n      margin: 0,\n      padding: 0,\n      display: 'grid',\n      gridRowGap: '0',\n      gridColumnGap: '0',\n      gridTemplateColumns: `${rulerSize}px ${width - rulerSize}px`,\n      gridTemplateRows: `${rulerSize}px ${height - rulerSize}px`,\n      position: 'relative'\n    }}>\n      <div style={{ gridColumn: 1, gridRow: 1, backgroundColor: rulerBgColor }}></div>\n      <div style={{ gridRow: 1, gridColumn: 2, position: 'relative', overflow: 'hidden' }} id=\"rulerX\">\n        {sceneWidth ? <RulerX\n          unitPixelSize={rulerUnitPixelSize}\n          zoom={sceneZoom}\n          mouseX={state.mouse.x}\n          width={width - rulerSize}\n          zeroLeftPosition={e || 0}\n          backgroundColor={rulerBgColor}\n          fontColor={rulerFnColor}\n          markerColor={rulerMkColor}\n          positiveUnitsNumber={rulerXElements}\n          negativeUnitsNumber={0}\n        /> : null}\n      </div>\n      <div style={{ gridColumn: 1, gridRow: 2, position: 'relative', overflow: 'hidden' }} id=\"rulerY\">\n        {sceneHeight ? <RulerY\n          unitPixelSize={rulerUnitPixelSize}\n          zoom={sceneZoom}\n          mouseY={state.mouse.y}\n          height={height - rulerSize}\n          zeroTopPosition={((sceneHeight * sceneZoom) + f) || 0}\n          backgroundColor={rulerBgColor}\n          fontColor={rulerFnColor}\n          markerColor={rulerMkColor}\n          positiveUnitsNumber={rulerYElements}\n          negativeUnitsNumber={0}\n        /> : null}\n      </div>\n      <ReactSVGPanZoom\n        style={{ gridColumn: 2, gridRow: 2 }}\n        width={width - rulerSize}\n        height={height - rulerSize}\n        value={viewer2D as any as ReactSVGPanZoomValue}\n        onChangeValue={onChangeValue}\n        tool={mode2Tool(mode)}\n        onChangeTool={onChangeTool}\n        detectAutoPan={mode2DetectAutopan(mode)}\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        miniatureProps={miniatureProps}\n        toolbarProps={toolbarProps}\n      >\n        <svg width={scene.width} height={scene.height}>\n          <defs>\n            <pattern id=\"diagonalFill\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\" fill=\"#FFF\">\n              <rect x=\"0\" y=\"0\" width=\"4\" height=\"4\" fill=\"#FFF\" />\n              <path d=\"M-1,1 l2,-2 M0,4 l4,-4 M3,5 l2,-2\" style={{ stroke: '#8E9BA2', strokeWidth: 1 }} />\n            </pattern>\n          </defs>\n          <g style={Object.assign(mode2Cursor(mode), mode2PointerEvents(mode)) as CSSProperties}>\n            <State state={state} catalog={catalog} />\n          </g>\n        </svg>\n      </ReactSVGPanZoom>\n    </div>\n  );\n}\n","export const HELVETIKER = { \"glyphs\": { \"ο\": { \"x_min\": 0, \"x_max\": 712, \"ha\": 815, \"o\": \"m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 \" }, \"S\": { \"x_min\": 0, \"x_max\": 788, \"ha\": 890, \"o\": \"m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 \" }, \"¦\": { \"x_min\": 343, \"x_max\": 449, \"ha\": 792, \"o\": \"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 \" }, \"/\": { \"x_min\": 183.25, \"x_max\": 608.328125, \"ha\": 792, \"o\": \"m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 \" }, \"Τ\": { \"x_min\": -0.4375, \"x_max\": 777.453125, \"ha\": 839, \"o\": \"m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 \" }, \"y\": { \"x_min\": 0, \"x_max\": 684.78125, \"ha\": 771, \"o\": \"m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 \" }, \"Π\": { \"x_min\": 0, \"x_max\": 803, \"ha\": 917, \"o\": \"m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 \" }, \"ΐ\": { \"x_min\": -111, \"x_max\": 339, \"ha\": 361, \"o\": \"m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 \" }, \"g\": { \"x_min\": 0, \"x_max\": 686, \"ha\": 838, \"o\": \"m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 \" }, \"²\": { \"x_min\": 0, \"x_max\": 442, \"ha\": 539, \"o\": \"m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 \" }, \"–\": { \"x_min\": 0, \"x_max\": 705.5625, \"ha\": 803, \"o\": \"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 \" }, \"Κ\": { \"x_min\": 0, \"x_max\": 819.5625, \"ha\": 893, \"o\": \"m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 \" }, \"ƒ\": { \"x_min\": -46.265625, \"x_max\": 392, \"ha\": 513, \"o\": \"m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 \" }, \"e\": { \"x_min\": 0, \"x_max\": 714, \"ha\": 813, \"o\": \"m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 \" }, \"ό\": { \"x_min\": 0, \"x_max\": 712, \"ha\": 815, \"o\": \"m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 \" }, \"J\": { \"x_min\": 0, \"x_max\": 588, \"ha\": 699, \"o\": \"m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 \" }, \"»\": { \"x_min\": -1, \"x_max\": 503, \"ha\": 601, \"o\": \"m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 \" }, \"©\": { \"x_min\": -3, \"x_max\": 1008, \"ha\": 1106, \"o\": \"m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 \" }, \"ώ\": { \"x_min\": 0, \"x_max\": 922, \"ha\": 1030, \"o\": \"m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 \" }, \"^\": { \"x_min\": 193.0625, \"x_max\": 598.609375, \"ha\": 792, \"o\": \"m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 \" }, \"«\": { \"x_min\": 0, \"x_max\": 507.203125, \"ha\": 604, \"o\": \"m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 \" }, \"D\": { \"x_min\": 0, \"x_max\": 828, \"ha\": 935, \"o\": \"m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 \" }, \"∙\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 \" }, \"ÿ\": { \"x_min\": 0, \"x_max\": 47, \"ha\": 125, \"o\": \"m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 \" }, \"w\": { \"x_min\": 0, \"x_max\": 1009.71875, \"ha\": 1100, \"o\": \"m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 \" }, \"$\": { \"x_min\": 0, \"x_max\": 700, \"ha\": 793, \"o\": \"m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 \" }, \"\\\\\": { \"x_min\": -0.015625, \"x_max\": 425.0625, \"ha\": 522, \"o\": \"m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 \" }, \"µ\": { \"x_min\": 0, \"x_max\": 697.21875, \"ha\": 747, \"o\": \"m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 \" }, \"Ι\": { \"x_min\": 42, \"x_max\": 181, \"ha\": 297, \"o\": \"m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 \" }, \"Ύ\": { \"x_min\": 0, \"x_max\": 1144.5, \"ha\": 1214, \"o\": \"m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \" }, \"’\": { \"x_min\": 0, \"x_max\": 139, \"ha\": 236, \"o\": \"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 \" }, \"Ν\": { \"x_min\": 0, \"x_max\": 801, \"ha\": 915, \"o\": \"m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 \" }, \"-\": { \"x_min\": 8.71875, \"x_max\": 350.390625, \"ha\": 478, \"o\": \"m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 \" }, \"Q\": { \"x_min\": 0, \"x_max\": 968, \"ha\": 1072, \"o\": \"m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 \" }, \"ς\": { \"x_min\": 1, \"x_max\": 676.28125, \"ha\": 740, \"o\": \"m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 \" }, \"M\": { \"x_min\": 0, \"x_max\": 954, \"ha\": 1067, \"o\": \"m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 \" }, \"Ψ\": { \"x_min\": 0, \"x_max\": 1006, \"ha\": 1094, \"o\": \"m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 \" }, \"C\": { \"x_min\": 0, \"x_max\": 886, \"ha\": 944, \"o\": \"m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 \" }, \"!\": { \"x_min\": 0, \"x_max\": 138, \"ha\": 236, \"o\": \"m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 \" }, \"{\": { \"x_min\": 0, \"x_max\": 480.5625, \"ha\": 578, \"o\": \"m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 \" }, \"X\": { \"x_min\": -0.015625, \"x_max\": 854.15625, \"ha\": 940, \"o\": \"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 \" }, \"#\": { \"x_min\": 0, \"x_max\": 963.890625, \"ha\": 1061, \"o\": \"m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 \" }, \"ι\": { \"x_min\": 42, \"x_max\": 284, \"ha\": 361, \"o\": \"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 \" }, \"Ά\": { \"x_min\": 0, \"x_max\": 906.953125, \"ha\": 982, \"o\": \"m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 \" }, \")\": { \"x_min\": 0, \"x_max\": 318, \"ha\": 415, \"o\": \"m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 \" }, \"ε\": { \"x_min\": 0, \"x_max\": 634.71875, \"ha\": 714, \"o\": \"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 \" }, \"Δ\": { \"x_min\": 0, \"x_max\": 952.78125, \"ha\": 1028, \"o\": \"m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 \" }, \"}\": { \"x_min\": 0, \"x_max\": 481, \"ha\": 578, \"o\": \"m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 \" }, \"‰\": { \"x_min\": -3, \"x_max\": 1672, \"ha\": 1821, \"o\": \"m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 \" }, \"a\": { \"x_min\": 0, \"x_max\": 698.609375, \"ha\": 794, \"o\": \"m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 \" }, \"—\": { \"x_min\": 0, \"x_max\": 941.671875, \"ha\": 1039, \"o\": \"m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 \" }, \"=\": { \"x_min\": 8.71875, \"x_max\": 780.953125, \"ha\": 792, \"o\": \"m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 \" }, \"N\": { \"x_min\": 0, \"x_max\": 801, \"ha\": 914, \"o\": \"m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 \" }, \"ρ\": { \"x_min\": 0, \"x_max\": 712, \"ha\": 797, \"o\": \"m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 \" }, \"2\": { \"x_min\": 59, \"x_max\": 731, \"ha\": 792, \"o\": \"m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 \" }, \"¯\": { \"x_min\": 0, \"x_max\": 941.671875, \"ha\": 938, \"o\": \"m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 \" }, \"Z\": { \"x_min\": 0, \"x_max\": 779, \"ha\": 849, \"o\": \"m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 \" }, \"u\": { \"x_min\": 0, \"x_max\": 617, \"ha\": 729, \"o\": \"m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 \" }, \"k\": { \"x_min\": 0, \"x_max\": 612.484375, \"ha\": 697, \"o\": \"m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 \" }, \"Η\": { \"x_min\": 0, \"x_max\": 803, \"ha\": 917, \"o\": \"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 \" }, \"Α\": { \"x_min\": 0, \"x_max\": 906.953125, \"ha\": 985, \"o\": \"m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 \" }, \"s\": { \"x_min\": 0, \"x_max\": 604, \"ha\": 697, \"o\": \"m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 \" }, \"B\": { \"x_min\": 0, \"x_max\": 778, \"ha\": 876, \"o\": \"m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 \" }, \"…\": { \"x_min\": 0, \"x_max\": 614, \"ha\": 708, \"o\": \"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 \" }, \"?\": { \"x_min\": 0, \"x_max\": 607, \"ha\": 704, \"o\": \"m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 \" }, \"H\": { \"x_min\": 0, \"x_max\": 803, \"ha\": 915, \"o\": \"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 \" }, \"ν\": { \"x_min\": 0, \"x_max\": 675, \"ha\": 761, \"o\": \"m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 \" }, \"c\": { \"x_min\": 1, \"x_max\": 701.390625, \"ha\": 775, \"o\": \"m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 \" }, \"¶\": { \"x_min\": 0, \"x_max\": 566.671875, \"ha\": 678, \"o\": \"m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 \" }, \"β\": { \"x_min\": 0, \"x_max\": 660, \"ha\": 745, \"o\": \"m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 \" }, \"Μ\": { \"x_min\": 0, \"x_max\": 954, \"ha\": 1068, \"o\": \"m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 \" }, \"Ό\": { \"x_min\": 0.109375, \"x_max\": 1120, \"ha\": 1217, \"o\": \"m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \" }, \"Ή\": { \"x_min\": 0, \"x_max\": 1158, \"ha\": 1275, \"o\": \"m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \" }, \"•\": { \"x_min\": 0, \"x_max\": 663.890625, \"ha\": 775, \"o\": \"m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 \" }, \"¥\": { \"x_min\": 0.1875, \"x_max\": 819.546875, \"ha\": 886, \"o\": \"m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 \" }, \"(\": { \"x_min\": 0, \"x_max\": 318.0625, \"ha\": 415, \"o\": \"m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 \" }, \"U\": { \"x_min\": 0, \"x_max\": 796, \"ha\": 904, \"o\": \"m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 \" }, \"γ\": { \"x_min\": 0.5, \"x_max\": 744.953125, \"ha\": 822, \"o\": \"m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 \" }, \"α\": { \"x_min\": 0, \"x_max\": 765.5625, \"ha\": 809, \"o\": \"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 \" }, \"F\": { \"x_min\": 0, \"x_max\": 683.328125, \"ha\": 717, \"o\": \"m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 \" }, \"­\": { \"x_min\": 0, \"x_max\": 705.5625, \"ha\": 803, \"o\": \"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 \" }, \":\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 \" }, \"Χ\": { \"x_min\": 0, \"x_max\": 854.171875, \"ha\": 935, \"o\": \"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 \" }, \"*\": { \"x_min\": 116, \"x_max\": 674, \"ha\": 792, \"o\": \"m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 \" }, \"†\": { \"x_min\": 0, \"x_max\": 777, \"ha\": 835, \"o\": \"m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 \" }, \"°\": { \"x_min\": 0, \"x_max\": 347, \"ha\": 444, \"o\": \"m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 \" }, \"V\": { \"x_min\": 0, \"x_max\": 862.71875, \"ha\": 940, \"o\": \"m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 \" }, \"Ξ\": { \"x_min\": 0, \"x_max\": 734.71875, \"ha\": 763, \"o\": \"m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 \" }, \" \": { \"x_min\": 0, \"x_max\": 0, \"ha\": 853 }, \"Ϋ\": { \"x_min\": 0.328125, \"x_max\": 819.515625, \"ha\": 889, \"o\": \"m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 \" }, \"0\": { \"x_min\": 73, \"x_max\": 715, \"ha\": 792, \"o\": \"m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 \" }, \"”\": { \"x_min\": 0, \"x_max\": 347, \"ha\": 454, \"o\": \"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 \" }, \"@\": { \"x_min\": 0, \"x_max\": 1260, \"ha\": 1357, \"o\": \"m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 \" }, \"Ί\": { \"x_min\": 0, \"x_max\": 499, \"ha\": 613, \"o\": \"m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 \" }, \"i\": { \"x_min\": 14, \"x_max\": 136, \"ha\": 275, \"o\": \"m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 \" }, \"Β\": { \"x_min\": 0, \"x_max\": 778, \"ha\": 877, \"o\": \"m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 \" }, \"υ\": { \"x_min\": 0, \"x_max\": 617, \"ha\": 725, \"o\": \"m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 \" }, \"]\": { \"x_min\": 0, \"x_max\": 275, \"ha\": 372, \"o\": \"m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 \" }, \"m\": { \"x_min\": 0, \"x_max\": 1019, \"ha\": 1128, \"o\": \"m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 \" }, \"χ\": { \"x_min\": 8.328125, \"x_max\": 780.5625, \"ha\": 815, \"o\": \"m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 \" }, \"8\": { \"x_min\": 55, \"x_max\": 736, \"ha\": 792, \"o\": \"m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 \" }, \"ί\": { \"x_min\": 42, \"x_max\": 326.71875, \"ha\": 361, \"o\": \"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 \" }, \"Ζ\": { \"x_min\": 0, \"x_max\": 779.171875, \"ha\": 850, \"o\": \"m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 \" }, \"R\": { \"x_min\": 0, \"x_max\": 781.953125, \"ha\": 907, \"o\": \"m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 \" }, \"o\": { \"x_min\": 0, \"x_max\": 713, \"ha\": 821, \"o\": \"m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 \" }, \"5\": { \"x_min\": 54.171875, \"x_max\": 738, \"ha\": 792, \"o\": \"m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 \" }, \"7\": { \"x_min\": 58.71875, \"x_max\": 730.953125, \"ha\": 792, \"o\": \"m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 \" }, \"K\": { \"x_min\": 0, \"x_max\": 819.46875, \"ha\": 906, \"o\": \"m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 \" }, \",\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 \" }, \"d\": { \"x_min\": 0, \"x_max\": 683, \"ha\": 796, \"o\": \"m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 \" }, \"¨\": { \"x_min\": -109, \"x_max\": 247, \"ha\": 232, \"o\": \"m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 \" }, \"E\": { \"x_min\": 0, \"x_max\": 736.109375, \"ha\": 789, \"o\": \"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 \" }, \"Y\": { \"x_min\": 0, \"x_max\": 820, \"ha\": 886, \"o\": \"m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 \" }, \"\\\"\": { \"x_min\": 0, \"x_max\": 299, \"ha\": 396, \"o\": \"m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 \" }, \"‹\": { \"x_min\": 17.984375, \"x_max\": 773.609375, \"ha\": 792, \"o\": \"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 \" }, \"„\": { \"x_min\": 0, \"x_max\": 364, \"ha\": 467, \"o\": \"m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 \" }, \"δ\": { \"x_min\": 1, \"x_max\": 710, \"ha\": 810, \"o\": \"m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 \" }, \"έ\": { \"x_min\": 0, \"x_max\": 634.71875, \"ha\": 714, \"o\": \"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 \" }, \"ω\": { \"x_min\": 0, \"x_max\": 922, \"ha\": 1031, \"o\": \"m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 \" }, \"´\": { \"x_min\": 0, \"x_max\": 96, \"ha\": 251, \"o\": \"m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 \" }, \"±\": { \"x_min\": 11, \"x_max\": 781, \"ha\": 792, \"o\": \"m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 \" }, \"|\": { \"x_min\": 343, \"x_max\": 449, \"ha\": 792, \"o\": \"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 \" }, \"ϋ\": { \"x_min\": 0, \"x_max\": 617, \"ha\": 725, \"o\": \"m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 \" }, \"§\": { \"x_min\": 0, \"x_max\": 593, \"ha\": 690, \"o\": \"m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 \" }, \"b\": { \"x_min\": 0, \"x_max\": 685, \"ha\": 783, \"o\": \"m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 \" }, \"q\": { \"x_min\": 0, \"x_max\": 683, \"ha\": 876, \"o\": \"m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 \" }, \"Ω\": { \"x_min\": -0.171875, \"x_max\": 969.5625, \"ha\": 1068, \"o\": \"m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 \" }, \"ύ\": { \"x_min\": 0, \"x_max\": 617, \"ha\": 725, \"o\": \"m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 \" }, \"z\": { \"x_min\": -0.015625, \"x_max\": 613.890625, \"ha\": 697, \"o\": \"m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 \" }, \"™\": { \"x_min\": 0, \"x_max\": 894, \"ha\": 1000, \"o\": \"m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 \" }, \"ή\": { \"x_min\": 0.78125, \"x_max\": 697, \"ha\": 810, \"o\": \"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 \" }, \"Θ\": { \"x_min\": 0, \"x_max\": 960, \"ha\": 1056, \"o\": \"m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 \" }, \"®\": { \"x_min\": -3, \"x_max\": 1008, \"ha\": 1106, \"o\": \"m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 \" }, \"~\": { \"x_min\": 0, \"x_max\": 833, \"ha\": 931, \"o\": \"m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 \" }, \"Ε\": { \"x_min\": 0, \"x_max\": 736.21875, \"ha\": 778, \"o\": \"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 \" }, \"³\": { \"x_min\": 0, \"x_max\": 450, \"ha\": 547, \"o\": \"m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 \" }, \"[\": { \"x_min\": 0, \"x_max\": 273.609375, \"ha\": 371, \"o\": \"m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 \" }, \"L\": { \"x_min\": 0, \"x_max\": 645.828125, \"ha\": 696, \"o\": \"m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 \" }, \"σ\": { \"x_min\": 0, \"x_max\": 803.390625, \"ha\": 894, \"o\": \"m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 \" }, \"ζ\": { \"x_min\": 0, \"x_max\": 573, \"ha\": 642, \"o\": \"m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 \" }, \"θ\": { \"x_min\": 0, \"x_max\": 674, \"ha\": 778, \"o\": \"m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 \" }, \"Ο\": { \"x_min\": 0, \"x_max\": 958, \"ha\": 1054, \"o\": \"m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 \" }, \"Γ\": { \"x_min\": 0, \"x_max\": 705.28125, \"ha\": 749, \"o\": \"m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 \" }, \" \": { \"x_min\": 0, \"x_max\": 0, \"ha\": 375 }, \"%\": { \"x_min\": -3, \"x_max\": 1089, \"ha\": 1186, \"o\": \"m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 \" }, \"P\": { \"x_min\": 0, \"x_max\": 726, \"ha\": 806, \"o\": \"m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 \" }, \"Έ\": { \"x_min\": 0, \"x_max\": 1078.21875, \"ha\": 1118, \"o\": \"m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \" }, \"Ώ\": { \"x_min\": 0.125, \"x_max\": 1136.546875, \"ha\": 1235, \"o\": \"m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 \" }, \"_\": { \"x_min\": 0, \"x_max\": 705.5625, \"ha\": 803, \"o\": \"m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 \" }, \"Ϊ\": { \"x_min\": -110, \"x_max\": 246, \"ha\": 275, \"o\": \"m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 \" }, \"+\": { \"x_min\": 23, \"x_max\": 768, \"ha\": 792, \"o\": \"m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 \" }, \"½\": { \"x_min\": 0, \"x_max\": 1050, \"ha\": 1149, \"o\": \"m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 \" }, \"Ρ\": { \"x_min\": 0, \"x_max\": 720, \"ha\": 783, \"o\": \"m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 \" }, \"'\": { \"x_min\": 0, \"x_max\": 139, \"ha\": 236, \"o\": \"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 \" }, \"ª\": { \"x_min\": 0, \"x_max\": 350, \"ha\": 397, \"o\": \"m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 \" }, \"΅\": { \"x_min\": 0, \"x_max\": 450, \"ha\": 553, \"o\": \"m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 \" }, \"T\": { \"x_min\": 0, \"x_max\": 777, \"ha\": 835, \"o\": \"m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 \" }, \"Φ\": { \"x_min\": 0, \"x_max\": 915, \"ha\": 997, \"o\": \"m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 \" }, \"⁋\": { \"x_min\": 0, \"x_max\": 0, \"ha\": 694 }, \"j\": { \"x_min\": -77.78125, \"x_max\": 167, \"ha\": 349, \"o\": \"m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 \" }, \"Σ\": { \"x_min\": 0, \"x_max\": 756.953125, \"ha\": 819, \"o\": \"m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 \" }, \"1\": { \"x_min\": 215.671875, \"x_max\": 574, \"ha\": 792, \"o\": \"m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 \" }, \"›\": { \"x_min\": 18.0625, \"x_max\": 774, \"ha\": 792, \"o\": \"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 \" }, \"<\": { \"x_min\": 17.984375, \"x_max\": 773.609375, \"ha\": 792, \"o\": \"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 \" }, \"£\": { \"x_min\": 0, \"x_max\": 704.484375, \"ha\": 801, \"o\": \"m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 \" }, \"t\": { \"x_min\": 0, \"x_max\": 367, \"ha\": 458, \"o\": \"m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 \" }, \"¬\": { \"x_min\": 0, \"x_max\": 706, \"ha\": 803, \"o\": \"m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 \" }, \"λ\": { \"x_min\": 0, \"x_max\": 750, \"ha\": 803, \"o\": \"m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 \" }, \"W\": { \"x_min\": 0, \"x_max\": 1263.890625, \"ha\": 1351, \"o\": \"m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 \" }, \">\": { \"x_min\": 18.0625, \"x_max\": 774, \"ha\": 792, \"o\": \"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 \" }, \"v\": { \"x_min\": 0, \"x_max\": 675.15625, \"ha\": 761, \"o\": \"m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 \" }, \"τ\": { \"x_min\": 0.28125, \"x_max\": 644.5, \"ha\": 703, \"o\": \"m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 \" }, \"ξ\": { \"x_min\": 0, \"x_max\": 624.9375, \"ha\": 699, \"o\": \"m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 \" }, \"&\": { \"x_min\": -3, \"x_max\": 894.25, \"ha\": 992, \"o\": \"m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 \" }, \"Λ\": { \"x_min\": 0, \"x_max\": 862.5, \"ha\": 942, \"o\": \"m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 \" }, \"I\": { \"x_min\": 41, \"x_max\": 180, \"ha\": 293, \"o\": \"m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 \" }, \"G\": { \"x_min\": 0, \"x_max\": 921, \"ha\": 1011, \"o\": \"m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 \" }, \"ΰ\": { \"x_min\": 0, \"x_max\": 617, \"ha\": 725, \"o\": \"m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 \" }, \"`\": { \"x_min\": 0, \"x_max\": 138.890625, \"ha\": 236, \"o\": \"m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 \" }, \"·\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 \" }, \"Υ\": { \"x_min\": 0.328125, \"x_max\": 819.515625, \"ha\": 889, \"o\": \"m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 \" }, \"r\": { \"x_min\": 0, \"x_max\": 355.5625, \"ha\": 432, \"o\": \"m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 \" }, \"x\": { \"x_min\": 0, \"x_max\": 675, \"ha\": 764, \"o\": \"m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 \" }, \"μ\": { \"x_min\": 0, \"x_max\": 696.609375, \"ha\": 747, \"o\": \"m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 \" }, \"h\": { \"x_min\": 0, \"x_max\": 615, \"ha\": 724, \"o\": \"m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 \" }, \".\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 \" }, \"φ\": { \"x_min\": -2, \"x_max\": 878, \"ha\": 974, \"o\": \"m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 \" }, \";\": { \"x_min\": 0, \"x_max\": 142, \"ha\": 239, \"o\": \"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 \" }, \"f\": { \"x_min\": 0, \"x_max\": 378, \"ha\": 472, \"o\": \"m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 \" }, \"“\": { \"x_min\": 1, \"x_max\": 348.21875, \"ha\": 454, \"o\": \"m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 \" }, \"A\": { \"x_min\": 0.03125, \"x_max\": 906.953125, \"ha\": 1008, \"o\": \"m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 \" }, \"6\": { \"x_min\": 53, \"x_max\": 739, \"ha\": 792, \"o\": \"m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 \" }, \"‘\": { \"x_min\": 1, \"x_max\": 139.890625, \"ha\": 236, \"o\": \"m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 \" }, \"ϊ\": { \"x_min\": -70, \"x_max\": 283, \"ha\": 361, \"o\": \"m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 \" }, \"π\": { \"x_min\": -0.21875, \"x_max\": 773.21875, \"ha\": 857, \"o\": \"m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 \" }, \"ά\": { \"x_min\": 0, \"x_max\": 765.5625, \"ha\": 809, \"o\": \"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 \" }, \"O\": { \"x_min\": 0, \"x_max\": 958, \"ha\": 1057, \"o\": \"m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 \" }, \"n\": { \"x_min\": 0, \"x_max\": 615, \"ha\": 724, \"o\": \"m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 \" }, \"3\": { \"x_min\": 54, \"x_max\": 737, \"ha\": 792, \"o\": \"m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 \" }, \"9\": { \"x_min\": 53, \"x_max\": 739, \"ha\": 792, \"o\": \"m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 \" }, \"l\": { \"x_min\": 41, \"x_max\": 166, \"ha\": 279, \"o\": \"m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 \" }, \"¤\": { \"x_min\": 40.09375, \"x_max\": 728.796875, \"ha\": 825, \"o\": \"m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 \" }, \"κ\": { \"x_min\": 0, \"x_max\": 632.328125, \"ha\": 679, \"o\": \"m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 \" }, \"4\": { \"x_min\": 48, \"x_max\": 742.453125, \"ha\": 792, \"o\": \"m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 \" }, \"p\": { \"x_min\": 0, \"x_max\": 685, \"ha\": 786, \"o\": \"m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 \" }, \"‡\": { \"x_min\": 0, \"x_max\": 777, \"ha\": 835, \"o\": \"m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 \" }, \"ψ\": { \"x_min\": 0, \"x_max\": 808, \"ha\": 907, \"o\": \"m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 \" }, \"η\": { \"x_min\": 0.78125, \"x_max\": 697, \"ha\": 810, \"o\": \"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 \" } }, \"cssFontWeight\": \"normal\", \"ascender\": 1189, \"underlinePosition\": -100, \"cssFontStyle\": \"normal\", \"boundingBox\": { \"yMin\": -334, \"xMin\": -111, \"yMax\": 1189, \"xMax\": 1672 }, \"resolution\": 1000, \"original_font_information\": { \"postscript_name\": \"Helvetiker-Regular\", \"version_string\": \"Version 1.00 2004 initial release\", \"vendor_url\": \"http://www.magenta.gr/\", \"full_font_name\": \"Helvetiker\", \"font_family_name\": \"Helvetiker\", \"copyright\": \"Copyright (c) Μagenta ltd, 2004\", \"description\": \"\", \"trademark\": \"\", \"designer\": \"\", \"designer_url\": \"\", \"unique_font_identifier\": \"Μagenta ltd:Helvetiker:22-10-104\", \"license_url\": \"http://www.ellak.gr/fonts/MgOpen/license.html\", \"license_description\": \"Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\\r\\n\\r\\nPermission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license (\\\"Fonts\\\") and associated documentation files (the \\\"Font Software\\\"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \\r\\n\\r\\nThe above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\\r\\n\\r\\nThe Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word \\\"MgOpen\\\", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\\r\\n\\r\\nThis License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the \\\"MgOpen\\\" name.\\r\\n\\r\\nThe Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \\r\\n\\r\\nTHE FONT SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.\", \"manufacturer_name\": \"Μagenta ltd\", \"font_sub_family_name\": \"Regular\" }, \"descender\": -334, \"familyName\": \"Helvetiker\", \"lineHeight\": 1522, \"underlineThickness\": 50 }\n","import * as Three from 'three';\n\nfunction disposeGeometry(geometry) {\n  geometry.dispose();\n}\n\nfunction disposeTexture(texture) {\n  if (!texture) {\n    return;\n  }\n  texture.dispose();\n}\n\nfunction disposeMultimaterial(materials: Three.Material | Three.Material[]) {\n  if (!(Array.isArray(materials))) {\n    return;\n  }\n  materials.forEach(material => {\n    disposeMaterial(material);\n  });\n\n}\n\nfunction disposeMaterial(material: Three.Material | Three.Material[]) {\n  if (Array.isArray(material)) {\n    return;\n  }\n  material.dispose();\n}\n\nfunction disposeMesh(mesh) {\n  if (!(mesh instanceof Three.Mesh || mesh instanceof Three.BoxHelper || mesh instanceof Three.LineSegments)) {\n    return;\n  }\n  disposeGeometry(mesh.geometry);\n  disposeMultimaterial(mesh.material);\n  disposeMaterial(mesh.material);\n\n  mesh.geometry = null;\n  mesh.material = null;\n}\n\nexport function disposeScene(scene3D) {\n  scene3D.traverse(child => {\n    disposeMesh(child);\n    child = null;\n  });\n}\n\nexport function disposeObject(object) {\n  object.traverse(child => {\n    disposeMesh(child);\n    child = null;\n  });\n}\n","import * as Three from 'three';\nimport createGrid from './grid-creator';\nimport { disposeObject } from './three-memory-cleaner';\nimport { Layer, Scene } from '../../models';\nimport { CatalogFn, CatalogJson } from '../../catalog/catalog';\n\n/**\n * Structures used by parseData to build the 3D scene graph.\n */\nexport interface BusyResourcesLayer {\n  id: string;\n  lines: Record<string, boolean>;\n  holes: Record<string, boolean>;\n  areas: Record<string, boolean>;\n  items: Record<string, boolean>;\n}\n\nexport interface SceneGraphLayer {\n  id: string;\n  lines: Record<string, Three.Object3D>; // pivot objects containing meshes\n  holes: Record<string, Three.Object3D>;\n  areas: Record<string, Three.Object3D>;\n  items: Record<string, Three.Object3D>;\n  visible: boolean;\n  altitude: number; // layer altitude\n}\n\nexport interface SceneGraphData {\n  unit: Scene['unit'];\n  layers: Record<string, SceneGraphLayer>;\n  busyResources: { layers: Record<string, BusyResourcesLayer> };\n  width: number;\n  height: number;\n  /** Map of element id -> LOD object used for camera dependent switching */\n  LODs: Record<string, Three.LOD>;\n}\n\nexport interface PlanData {\n  sceneGraph: SceneGraphData;\n  plan: Three.Object3D;     // root container for all scene objects\n  grid: Three.Object3D;     // visual reference grid\n  boundingBox: Three.Box3;  // axis-aligned bounding box centered at origin\n}\n\nexport function parseData(sceneData: Scene, actions, catalog): PlanData {\n\n  const planRoot = new Three.Object3D();\n  planRoot.name = 'plan';\n  const grid = createGrid(sceneData);\n  grid.name = 'grid';\n\n  const sceneGraph: SceneGraphData = {\n    unit: sceneData.unit,\n    layers: {},\n    busyResources: { layers: {} },\n    width: sceneData.width,\n    height: sceneData.height,\n    LODs: {}\n  };\n\n  const boundingBox = new Three.Box3().setFromObject(grid);\n  (boundingBox as any).name = 'boundingBox';\n\n  const planData: PlanData = {\n    sceneGraph,\n    plan: planRoot,\n    grid,\n    boundingBox\n  };\n\n  let promises = [];\n\n  Object.values(sceneData.layers).forEach(layer => {\n\n    if (layer.id === sceneData.selectedLayer || layer.visible) {\n      promises = promises.concat(createLayerObjects(layer, planData, sceneData, actions, catalog));\n    }\n  });\n\n  Promise.all(promises).then(value => updateBoundingBox(planData));\n\n  return planData;\n}\n\nfunction createLayerObjects(layer: Layer, planData: PlanData, sceneData, actions, catalog) {\n\n  const promises = [];\n\n  planData.sceneGraph.layers[layer.id] = {\n    id: layer.id,\n    lines: {},\n    holes: {},\n    areas: {},\n    items: {},\n    visible: layer.visible,\n    altitude: layer.altitude\n  };\n\n  planData.sceneGraph.busyResources.layers[layer.id] = {\n    id: layer.id,\n    lines: {},\n    holes: {},\n    areas: {},\n    items: {}\n  };\n\n  // Import lines\n  Object.values(layer.lines).forEach(line => {\n    promises.push(addLine(sceneData, planData, layer, line.id, catalog, actions.linesActions));\n    line.holes.forEach(holeID => {\n      promises.push(addHole(sceneData, planData, layer, holeID, catalog, actions.holesActions));\n    });\n  });\n\n  // Import areas\n  Object.values(layer.areas).forEach(area => {\n    promises.push(addArea(sceneData, planData, layer, area.id, catalog, actions.areaActions));\n  });\n\n  // Import items\n  Object.values(layer.items).forEach(item => {\n    promises.push(addItem(sceneData, planData, layer, item.id, catalog, actions.itemsActions));\n  });\n\n  return promises;\n}\n\nexport function updateScene(planData: PlanData, sceneData: Scene, oldSceneData: Scene, diffArray: { [key: string]: any }, actions, catalog: CatalogJson) {\n\n  const splitted = Object.values(diffArray).map(el => { return { op: el.op, path: el.path.split('/'), value: el.value }; });\n  let filteredDiffs = filterDiffs(splitted, sceneData, oldSceneData);\n\n  //***testing additional filter***\n  filteredDiffs = filteredDiffs.filter(({ path }) => path[3] !== 'selected');\n  filteredDiffs = filteredDiffs.filter(({ path }) => path[1] !== 'groups');\n  //*******************************\n\n  filteredDiffs.forEach(({ op, path, value }) => {\n    /* First of all I need to find the object I need to update */\n    if (path[1] === 'layers') {\n\n      const layer = sceneData.layers[path[2]];\n\n      if (path.length === 3 && op === 'remove') {\n        removeLayer(path[2], planData);\n      } else if (path.length > 3) {\n        switch (op) {\n          case 'replace':\n            replaceObject(path, layer, planData, actions, sceneData, oldSceneData, catalog);\n            break;\n          case 'add':\n            addObject(path, layer, planData, actions, sceneData, oldSceneData, catalog);\n            break;\n          case 'remove':\n            removeObject(path, layer, planData, actions, sceneData, oldSceneData, catalog);\n            break;\n        }\n      }\n    } else if (path[1] === 'selectedLayer') {\n      const layerSelectedID = value;\n      const layerSelected = sceneData.layers[layerSelectedID];\n      // First of all I check if the new selected layer is not visible\n      if (!layerSelected.visible) {\n        // I need to create the objects for this layer\n        const promises = createLayerObjects(layerSelected, planData, sceneData, actions, catalog);\n        Promise.all(promises).then(() => updateBoundingBox(planData));\n      }\n\n      const layerGraph = planData.sceneGraph.layers[oldSceneData.selectedLayer];\n\n      if (layerGraph) {\n        if (!layerGraph.visible) {\n          // I need to remove the objects for this layer\n          for (const lineID in layerGraph.lines) removeLine(planData, layerGraph.id, lineID);\n          for (const areaID in layerGraph.areas) removeArea(planData, layerGraph.id, areaID);\n          for (const itemID in layerGraph.items) removeItem(planData, layerGraph.id, itemID);\n          for (const holeID in layerGraph.holes) removeHole(planData, layerGraph.id, holeID);\n        }\n      }\n    }\n  });\n  return planData;\n}\n\nfunction replaceObject(modifiedPath, layer: Layer, planData: PlanData, actions, sceneData: Scene, oldSceneData: Scene, catalog: CatalogJson) {\n  let promises = [];\n\n  switch (modifiedPath[3]) {\n    case 'vertices':\n      if (modifiedPath[5] !== 'selected') {\n        const vertex = layer.vertices[modifiedPath[4]];\n\n        if (modifiedPath[5] === 'x' || modifiedPath[5] === 'y') {\n          vertex.lines.forEach(lineID => {\n            const lineHoles = oldSceneData.layers[layer.id].lines[lineID].holes;\n            if (lineHoles) lineHoles.forEach(holeID => { replaceObject([0, 0, 0, 'holes', holeID, 'selected'], layer, planData, actions, sceneData, oldSceneData, catalog); });\n            return replaceObject([0, 0, 0, 'lines', lineID], layer, planData, actions, sceneData, oldSceneData, catalog);\n          });\n          vertex.areas.forEach(areaID => replaceObject([0, 0, 0, 'areas', areaID], layer, planData, actions, sceneData, oldSceneData, catalog));\n        }\n\n        if (modifiedPath[5] === 'areas') {\n          const areaID = vertex.areas[~~modifiedPath[6]];\n          replaceObject([0, 0, 0, 'areas', areaID], layer, planData, actions, sceneData, oldSceneData, catalog);\n        }\n      }\n      break;\n    case 'holes':\n      const newHoleData = layer.holes[modifiedPath[4]];\n\n      if (CatalogFn.getElement(catalog, newHoleData.type).updateRender3D) {\n        promises.push(\n          updateHole(\n            sceneData,\n            oldSceneData,\n            planData,\n            layer,\n            modifiedPath[4],\n            modifiedPath.slice(5),\n            catalog,\n            actions.holesActions,\n            () => removeHole(planData, layer.id, newHoleData.id),\n            () => addHole(sceneData, planData, layer, newHoleData.id, catalog, actions.holesActions)\n          )\n        );\n      }\n      else {\n        const lineID = newHoleData.line;\n        if (modifiedPath[5] === 'selected') {\n          // I remove only the hole without removing the wall\n          removeHole(planData, layer.id, newHoleData.id);\n          promises.push(addHole(sceneData, planData, layer, newHoleData.id, catalog, actions.holesActions));\n        }\n        else {\n          layer.lines[lineID].holes.forEach(holeID => {\n            removeHole(planData, layer.id, holeID);\n          });\n          removeLine(planData, layer.id, lineID);\n          promises.push(addLine(sceneData, planData, layer, lineID, catalog, actions.linesActions));\n          layer.lines[lineID].holes.forEach(holeID => {\n            promises.push(addHole(sceneData, planData, layer, holeID, catalog, actions.holesActions));\n          });\n        }\n      }\n      break;\n    case 'lines':\n      const line = layer.lines[modifiedPath[4]];\n\n      if (CatalogFn.getElement(catalog, line.type).updateRender3D) {\n        promises.push(\n          updateLine(\n            sceneData,\n            oldSceneData,\n            planData,\n            layer,\n            modifiedPath[4],\n            modifiedPath.slice(5),\n            catalog,\n            actions.linesActions,\n            () => removeLine(planData, layer.id, modifiedPath[4]),\n            () => addLine(sceneData, planData, layer, modifiedPath[4], catalog, actions.linesActions)\n          )\n        );\n        // If wall thickness/height changed, rebuild adjacent connected walls to recalc shared edge geometry\n        if (modifiedPath[5] === 'properties' && (modifiedPath[6] === 'thickness' || modifiedPath[6] === 'height')) {\n          const currentLineID = modifiedPath[4];\n          const vertices = line.vertices || [];\n          vertices.forEach(vID => {\n            const v = layer.vertices[vID];\n            if (!v) return;\n            (v.lines || []).forEach(adjLineID => {\n              if (adjLineID !== currentLineID && layer.lines[adjLineID]) {\n                // Full rebuild of adjacent line\n                removeLine(planData, layer.id, adjLineID);\n                promises.push(addLine(sceneData, planData, layer, adjLineID, catalog, actions.linesActions));\n              }\n            });\n          });\n        }\n      }\n      else {\n        removeLine(planData, layer.id, modifiedPath[4]);\n        promises.push(addLine(sceneData, planData, layer, modifiedPath[4], catalog, actions.linesActions));\n      }\n      break;\n    case 'areas':\n      const area = layer.areas[modifiedPath[4]];\n\n      if (CatalogFn.getElement(catalog, area.type).updateRender3D) {\n        promises.push(\n          updateArea(\n            sceneData,\n            oldSceneData,\n            planData,\n            layer,\n            modifiedPath[4],\n            modifiedPath.slice(5),\n            catalog,\n            actions.areaActions,\n            () => removeArea(planData, layer.id, modifiedPath[4]),\n            () => addArea(sceneData, planData, layer, modifiedPath[4], catalog, actions.areaActions)\n          )\n        );\n      }\n      else {\n        if (planData.sceneGraph.layers[layer.id].areas[modifiedPath[4]]) {\n          removeArea(planData, layer.id, modifiedPath[4]);\n        }\n        promises.push(addArea(sceneData, planData, layer, modifiedPath[4], catalog, actions.areaActions));\n      }\n      break;\n    case 'items':\n      const item = layer.items[modifiedPath[4]];\n\n      if (CatalogFn.getElement(catalog, item.type).updateRender3D) {\n        promises.push(\n          updateItem(\n            sceneData,\n            oldSceneData,\n            planData,\n            layer,\n            modifiedPath[4],\n            modifiedPath.slice(5),\n            catalog,\n            actions.itemsActions,\n            () => removeItem(planData, layer.id, modifiedPath[4]),\n            () => addItem(sceneData, planData, layer, modifiedPath[4], catalog, actions.itemsActions)\n          )\n        );\n      }\n      else {\n        removeItem(planData, layer.id, modifiedPath[4]);\n        promises.push(addItem(sceneData, planData, layer, modifiedPath[4], catalog, actions.itemsActions));\n      }\n      break;\n\n    case 'visible':\n      if (!layer.visible) {\n        const layerGraph = planData.sceneGraph.layers[layer.id];\n\n        for (const lineID in layerGraph.lines) removeLine(planData, layer.id, lineID);\n        for (const areaID in layerGraph.areas) removeArea(planData, layer.id, areaID);\n        for (const itemID in layerGraph.items) removeItem(planData, layer.id, itemID);\n        for (const holeID in layerGraph.holes) removeHole(planData, layer.id, holeID);\n\n      } else {\n        promises = promises.concat(createLayerObjects(layer, planData, sceneData, actions, catalog));\n      }\n\n      break;\n\n    case 'opacity':\n    case 'altitude':\n      const layerGraph = planData.sceneGraph.layers[layer.id];\n      for (const lineID in layerGraph.lines) removeLine(planData, layer.id, lineID);\n      for (const areaID in layerGraph.areas) removeArea(planData, layer.id, areaID);\n      for (const itemID in layerGraph.items) removeItem(planData, layer.id, itemID);\n      for (const holeID in layerGraph.holes) removeHole(planData, layer.id, holeID);\n\n      promises = promises.concat(createLayerObjects(layer, planData, sceneData, actions, catalog));\n\n  }\n  Promise.all(promises).then(values => updateBoundingBox(planData));\n}\n\nfunction removeObject(modifiedPath, layer: Layer, planData: PlanData, actions, sceneData: Scene, oldSceneData: Scene, catalog: CatalogJson) {\n  const promises = [];\n  switch (modifiedPath[3]) {\n    case 'lines':\n      // Here I remove the line with all its holes\n      const lineID = modifiedPath[4];\n      oldSceneData.layers[layer.id].lines[lineID].holes.forEach(holeID => {\n        removeHole(planData, layer.id, holeID);\n      });\n      removeLine(planData, layer.id, lineID);\n      if (modifiedPath.length > 5) {\n        // I removed an hole, so I should add the new line\n        promises.push(addLine(sceneData, planData, layer, lineID, catalog, actions.linesActions));\n        layer.lines[lineID].holes.forEach(holeID => {\n          promises.push(addHole(sceneData, planData, layer, holeID, catalog, actions.holesActions));\n        });\n      }\n      break;\n    case 'areas':\n      if (modifiedPath.length === 5) {\n        // I am removing an entire area\n        removeArea(planData, layer.id, modifiedPath[4]);\n      }\n      break;\n    case 'items':\n      if (modifiedPath.length === 5) {\n        // I am removing an item\n        removeItem(planData, layer.id, modifiedPath[4]);\n      }\n      break;\n  }\n\n  Promise.all(promises).then(values => updateBoundingBox(planData));\n}\n\nfunction removeLayer(layerId: string, planData: PlanData) {\n  const layerGraph = planData.sceneGraph.layers[layerId];\n\n  for (const lineID in layerGraph.lines) removeLine(planData, layerId, lineID);\n  for (const areaID in layerGraph.areas) removeArea(planData, layerId, areaID);\n  for (const itemID in layerGraph.items) removeItem(planData, layerId, itemID);\n  for (const holeID in layerGraph.holes) removeHole(planData, layerId, holeID);\n\n  delete planData.sceneGraph.layers[layerId];\n}\n\nfunction removeHole(planData: PlanData, layerId: string, holeID: string) {\n\n  if (planData.sceneGraph.busyResources.layers[layerId].holes[holeID]) {\n    setTimeout(() => removeHole(planData, layerId, holeID), 100);\n    return;\n  }\n\n  planData.sceneGraph.busyResources.layers[layerId].holes[holeID] = true;\n\n  let hole3D = planData.sceneGraph.layers[layerId].holes[holeID];\n\n  if (hole3D) {\n    planData.plan.remove(hole3D);\n    disposeObject(hole3D);\n    delete planData.sceneGraph.layers[layerId].holes[holeID];\n    delete planData.sceneGraph.LODs[holeID];\n    hole3D = null;\n    updateBoundingBox(planData);\n  }\n\n  planData.sceneGraph.busyResources.layers[layerId].holes[holeID] = false;\n}\n\nfunction removeLine(planData: PlanData, layerId: string, lineID: string) {\n\n  if (planData.sceneGraph.busyResources.layers[layerId].lines[lineID]) {\n    setTimeout(() => removeLine(planData, layerId, lineID), 100);\n    return;\n  }\n\n  planData.sceneGraph.busyResources.layers[layerId].lines[lineID] = true;\n\n  let line3D = planData.sceneGraph.layers[layerId].lines[lineID];\n\n  if (line3D) {\n    planData.plan.remove(line3D);\n    disposeObject(line3D);\n    delete planData.sceneGraph.layers[layerId].lines[lineID];\n    delete planData.sceneGraph.LODs[lineID];\n    line3D = null;\n    updateBoundingBox(planData);\n  }\n\n  planData.sceneGraph.busyResources.layers[layerId].lines[lineID] = false;\n}\n\nfunction removeArea(planData: PlanData, layerId: string, areaID: string) {\n\n  if (planData.sceneGraph.busyResources.layers[layerId].areas[areaID]) {\n    setTimeout(() => removeArea(planData, layerId, areaID), 100);\n    return;\n  }\n\n  planData.sceneGraph.busyResources.layers[layerId].areas[areaID] = true;\n\n  let area3D = planData.sceneGraph.layers[layerId].areas[areaID];\n\n  if (area3D) {\n    planData.plan.remove(area3D);\n    disposeObject(area3D);\n    delete planData.sceneGraph.layers[layerId].areas[areaID];\n    delete planData.sceneGraph.LODs[areaID];\n    area3D = null;\n    updateBoundingBox(planData);\n  }\n\n  planData.sceneGraph.busyResources.layers[layerId].areas[areaID] = false;\n}\n\nfunction removeItem(planData: PlanData, layerId: string, itemID: string) {\n  if (planData.sceneGraph.busyResources.layers[layerId].items[itemID]) {\n    setTimeout(() => removeItem(planData, layerId, itemID), 100);\n    return;\n  }\n\n  planData.sceneGraph.busyResources.layers[layerId].items[itemID] = true;\n\n  let item3D = planData.sceneGraph.layers[layerId].items[itemID];\n\n  if (item3D) {\n    planData.plan.remove(item3D);\n    disposeObject(item3D);\n    delete planData.sceneGraph.layers[layerId].items[itemID];\n    delete planData.sceneGraph.LODs[itemID];\n    item3D = null;\n    updateBoundingBox(planData);\n  }\n\n  planData.sceneGraph.busyResources.layers[layerId].items[itemID] = false;\n}\n\n//TODO generate an area's replace if vertex has been changed\nfunction addObject(modifiedPath, layer: Layer, planData: PlanData, actions, sceneData: Scene, oldSceneData: Scene, catalog: CatalogJson) {\n  if (modifiedPath.length === 5) {\n    let addPromise = null, addAction = null;\n\n    switch (modifiedPath[3]) {\n      case 'lines': addPromise = addLine; addAction = actions.linesActions; break;\n      case 'areas': addPromise = addArea; addAction = actions.areaActions; break;\n      case 'items': addPromise = addItem; addAction = actions.itemsActions; break;\n      case 'holes': addPromise = addHole; addAction = actions.holesActions; break;\n    }\n\n    if (addPromise) addPromise(sceneData, planData, layer, modifiedPath[4], catalog, addAction).then(() => updateBoundingBox(planData));\n  }\n}\n\nasync function addHole(sceneData: Scene, planData: PlanData, layer: Layer, holeID: string, catalog: CatalogJson, holesActions) {\n  const holeData = layer.holes[holeID];\n\n  // Create the hole object\n  const object = await CatalogFn.getElement(catalog, holeData.type).render3D(holeData, layer, sceneData);\n  if (object instanceof Three.LOD) {\n    planData.sceneGraph.LODs[holeID] = object;\n  }\n  const pivot = new Three.Object3D();\n  pivot.name = 'pivot';\n  pivot.add(object);\n  const line_1 = layer.lines[holeData.line];\n  // First of all I need to find the vertices of this line\n  let vertex0 = layer.vertices[line_1.vertices[0]];\n  let vertex1 = layer.vertices[line_1.vertices[1]];\n  let offset = holeData.offset;\n  if (vertex0.x > vertex1.x) {\n    const tmp = vertex0;\n    vertex0 = vertex1;\n    vertex1 = tmp;\n    offset = 1 - offset;\n  }\n  const distance = Math.sqrt(Math.pow(vertex0.x - vertex1.x, 2) + Math.pow(vertex0.y - vertex1.y, 2));\n  const alpha = Math.asin((vertex1.y - vertex0.y) / distance);\n  const boundingBox = new Three.Box3().setFromObject(pivot);\n  const center = [\n    (boundingBox.max.x - boundingBox.min.x) / 2 + boundingBox.min.x,\n    (boundingBox.max.y - boundingBox.min.y) / 2 + boundingBox.min.y,\n    (boundingBox.max.z - boundingBox.min.z) / 2 + boundingBox.min.z\n  ];\n  const holeAltitude = holeData.properties.altitude.length;\n  const holeHeight = holeData.properties.height.length;\n  pivot.rotation.y = alpha;\n  pivot.position.x = vertex0.x + distance * offset * Math.cos(alpha) - center[2] * Math.sin(alpha);\n  pivot.position.y = holeAltitude + holeHeight / 2 - center[1] + layer.altitude;\n  pivot.position.z = -vertex0.y - distance * offset * Math.sin(alpha) - center[2] * Math.cos(alpha);\n  planData.plan.add(pivot);\n  planData.sceneGraph.layers[layer.id].holes[holeData.id] = pivot;\n  applyInteract(pivot, () => {\n    return holesActions.selectHole(layer.id, holeData.id);\n  });\n  let opacity = layer.opacity;\n  if (holeData.selected) {\n    opacity = 1;\n  }\n  applyOpacity(pivot, opacity);\n}\n\nfunction updateHole(sceneData: Scene, oldSceneData: Scene, planData: PlanData, layer: Layer, holeID: string, differences, catalog: CatalogJson, holesActions, selfDestroy, selfBuild) {\n  const hole = layer.holes[holeID];\n  const oldHole = oldSceneData.layers[layer.id].holes[holeID];\n  const mesh = planData.sceneGraph.layers[layer.id].holes[holeID];\n\n  if (!mesh) return null;\n\n  return CatalogFn.getElement(catalog, hole.type).updateRender3D(hole, layer, sceneData, mesh, oldHole, differences, selfDestroy, selfBuild);\n}\n\nasync function addLine(sceneData: Scene, planData: PlanData, layer: Layer, lineID: string, catalog: CatalogJson, linesActions) {\n\n  if (planData.sceneGraph.busyResources.layers[layer.id].lines[lineID]) {\n    setTimeout(() => addLine(sceneData, planData, layer, lineID, catalog, linesActions), 100);\n    return;\n  }\n\n  planData.sceneGraph.busyResources.layers[layer.id].lines[lineID] = true;\n\n  const line = layer.lines[lineID];\n\n  // First of all I need to find the vertices of this line\n  let vertex0 = layer.vertices[line.vertices[0]];\n  let vertex1 = layer.vertices[line.vertices[1]];\n\n  if (vertex0.x > vertex1.x) {\n    const tmp = vertex0;\n    vertex0 = vertex1;\n    vertex1 = tmp;\n  }\n\n  const line3D = await CatalogFn.getElement(catalog, line.type).render3D(line, layer, sceneData);\n  if (line3D instanceof Three.LOD) {\n    planData.sceneGraph.LODs[line.id] = line3D;\n  }\n  const pivot = new Three.Object3D();\n  pivot.name = 'pivot';\n  pivot.add(line3D);\n  pivot.position.x = vertex0.x;\n  pivot.position.y = layer.altitude;\n  pivot.position.z = -vertex0.y;\n  planData.plan.add(pivot);\n  planData.sceneGraph.layers[layer.id].lines[lineID] = pivot;\n  applyInteract(pivot, () => {\n    return linesActions.selectLine(layer.id, line.id);\n  });\n  let opacity = layer.opacity;\n  if (line.selected) {\n    opacity = 1;\n  }\n  applyOpacity(pivot, opacity);\n  planData.sceneGraph.busyResources.layers[layer.id].lines[lineID] = false;\n}\n\nfunction updateLine(sceneData: Scene, oldSceneData: Scene, planData: PlanData, layer: Layer, lineID: string, differences, catalog: CatalogJson, linesActions, selfDestroy, selfBuild) {\n  const line = layer.lines[lineID];\n  const oldLine = oldSceneData.layers[layer.id].lines[lineID];\n  const mesh = planData.sceneGraph.layers[layer.id].lines[lineID];\n\n  if (!mesh) return null;\n\n  return CatalogFn.getElement(catalog, line.type).updateRender3D(line, layer, sceneData, mesh, oldLine, differences, selfDestroy, selfBuild);\n}\n\nasync function addArea(sceneData: Scene, planData: PlanData, layer: Layer, areaID: string, catalog: CatalogJson, areaActions) {\n\n  if (planData.sceneGraph.busyResources.layers[layer.id].areas[areaID]) {\n    setTimeout(() => addArea(sceneData, planData, layer, areaID, catalog, areaActions), 100);\n    return;\n  }\n\n  planData.sceneGraph.busyResources.layers[layer.id].areas[areaID] = true;\n\n  const area = layer.areas[areaID];\n  const interactFunction = () => areaActions.selectArea(layer.id, areaID);\n\n  const area3D = await CatalogFn.getElement(catalog, area.type).render3D(area, layer, sceneData);\n  if (area3D instanceof Three.LOD) {\n    planData.sceneGraph.LODs[areaID] = area3D;\n  }\n  const pivot = new Three.Object3D();\n  pivot.name = 'pivot';\n  pivot.add(area3D);\n  pivot.position.y = layer.altitude;\n  planData.plan.add(pivot);\n  planData.sceneGraph.layers[layer.id].areas[areaID] = pivot;\n  applyInteract(pivot, interactFunction);\n  let opacity = layer.opacity;\n  if (area.selected) {\n    opacity = 1;\n  }\n  applyOpacity(pivot, opacity);\n  planData.sceneGraph.busyResources.layers[layer.id].areas[areaID] = false;\n}\n\nfunction updateArea(sceneData: Scene, oldSceneData: Scene, planData: PlanData, layer: Layer, areaID: string, differences, catalog: CatalogJson, areaActions, selfDestroy, selfBuild) {\n  const area = layer.areas[areaID];\n  const oldArea = oldSceneData.layers[layer.id].areas[areaID];\n  const mesh = planData.sceneGraph.layers[layer.id].areas[areaID];\n\n  if (!mesh) return null;\n\n  return CatalogFn.getElement(catalog, area.type).updateRender3D(area, layer, sceneData, mesh, oldArea, differences, selfDestroy, selfBuild);\n}\n\nasync function addItem(sceneData: Scene, planData: PlanData, layer: Layer, itemID: string, catalog: CatalogJson, itemsActions) {\n  const item = layer.items[itemID];\n\n  const item3D = await CatalogFn.getElement(catalog, item.type).render3D(item, layer, sceneData);\n  if (item3D instanceof Three.LOD) {\n    planData.sceneGraph.LODs[itemID] = item3D;\n  }\n  const pivot = new Three.Object3D();\n  pivot.name = 'pivot';\n  pivot.add(item3D);\n  pivot.rotation.y = item.rotation * Math.PI / 180;\n  pivot.position.x = item.x;\n  pivot.position.y = layer.altitude;\n  pivot.position.z = -item.y;\n  applyInteract(item3D, () => {\n    itemsActions.selectItem(layer.id, item.id);\n  }\n  );\n  let opacity = layer.opacity;\n  if (item.selected) {\n    opacity = 1;\n  }\n  applyOpacity(pivot, opacity);\n  planData.plan.add(pivot);\n  planData.sceneGraph.layers[layer.id].items[item.id] = pivot;\n}\n\nfunction updateItem(sceneData: Scene, oldSceneData: Scene, planData: PlanData, layer: Layer, itemID: string, differences, catalog: CatalogJson, itemsActions, selfDestroy, selfBuild) {\n  const item = layer.items[itemID];\n  const oldItem = oldSceneData.layers[layer.id].items[itemID];\n  const mesh = planData.sceneGraph.layers[layer.id].items[itemID];\n\n  if (!mesh) return null;\n\n  return CatalogFn.getElement(catalog, item.type).updateRender3D(item, layer, sceneData, mesh, oldItem, differences, selfDestroy, selfBuild);\n}\n\n// Apply interact function to children of an Object3D\nfunction applyInteract(object: Three.Object3D<Three.Object3DEventMap>, interactFunction) {\n  object.traverse((child) => {\n    if (child instanceof Three.Mesh) {\n      (child as any).interact = interactFunction; //TODO\n    }\n  });\n}\n\n// Apply opacity to children of an Object3D\nfunction applyOpacity(object: Three.Object3D<Three.Object3DEventMap>, opacity: number) {\n  object.traverse((child) => {\n    if (child instanceof Three.Mesh) {\n      if (Array.isArray(child.material)) {\n        child.material.forEach(material => {\n          material.transparent = true;\n          if (material.maxOpacity) {\n            material.opacity = Math.min(material.maxOpacity, opacity);\n          } else if (material.opacity && material.opacity > opacity) {\n            material.maxOpacity = material.opacity;\n            material.opacity = opacity;\n          }\n        });\n      } else if (child.material) {\n        child.material.transparent = true;\n        if (child.material.maxOpacity) {\n          child.material.opacity = Math.min(child.material.maxOpacity, opacity);\n        } else if (child.material.opacity && child.material.opacity > opacity) {\n          child.material.maxOpacity = child.material.opacity;\n          child.material.opacity = opacity;\n        }\n      }\n    }\n  });\n}\n\n\nfunction updateBoundingBox(planData: PlanData) {\n  const newBoundingBox = new Three.Box3().setFromObject(planData.plan);\n  if (isFinite(newBoundingBox.max.x)\n    && isFinite(newBoundingBox.min.x)\n    && isFinite(newBoundingBox.max.y)\n    && isFinite(newBoundingBox.min.y)\n    && isFinite(newBoundingBox.max.z)\n    && isFinite(newBoundingBox.min.z)) {\n\n    const newCenter = new Three.Vector3(\n      (newBoundingBox.max.x - newBoundingBox.min.x) / 2 + newBoundingBox.min.x,\n      (newBoundingBox.max.y - newBoundingBox.min.y) / 2 + newBoundingBox.min.y,\n      (newBoundingBox.max.z - newBoundingBox.min.z) / 2 + newBoundingBox.min.z\n    );\n\n    planData.plan.position.sub(newCenter);\n    planData.grid.position.sub(newCenter);\n\n    newBoundingBox.min.sub(newCenter);\n    newBoundingBox.max.sub(newCenter);\n\n    planData.boundingBox = newBoundingBox;\n  }\n}\n\n/**\n * Filter the array of diffs\n * @param diffArray\n * @param sceneData\n * @param oldSceneData\n */\nfunction filterDiffs(diffArray, sceneData: Scene, oldSceneData: Scene) {\n  return minimizeRemoveDiffsWhenSwitchingLayers(\n    minimizeChangePropertiesAfterSelectionsDiffs(\n      minimizeChangePropertiesDiffs(diffArray, sceneData, oldSceneData), sceneData, oldSceneData),\n    sceneData, oldSceneData);\n}\n\n/**\n * Reduces the number of remove diffs when switching an hidden layer\n * @param diffArray the array of the diffs\n * @param sceneData\n * @param oldSceneData\n * @returns {Array}\n */\nfunction minimizeRemoveDiffsWhenSwitchingLayers(diffArray, sceneData: Scene, oldSceneData: Scene) {\n  let foundDiff;\n  for (let i = 0; i < diffArray.length && !foundDiff; i++) {\n    if (diffArray[i].path[1] === 'selectedLayer') {\n      foundDiff = diffArray[i];\n    }\n  }\n\n  if (foundDiff) {\n    if (!sceneData.layers[oldSceneData.selectedLayer].visible) {\n      return diffArray.filter(({ op, path }) => {\n\n        return (\n          !(path[path.length - 1] === 'selected' && (path[1] === 'layers' && path[2] === oldSceneData.selectedLayer)) &&\n          !(op === 'remove' && path.indexOf(oldSceneData.selectedLayer) !== -1)\n        );\n\n      });\n    }\n  }\n\n  return diffArray;\n}\n\n/**\n * Reduces the number of change properties diffs for selected elements\n * @param diffArray the array of the diffs\n * @param sceneData\n * @param oldSceneData\n */\nfunction minimizeChangePropertiesAfterSelectionsDiffs(diffArray, sceneData: Scene, oldSceneData: Scene) {\n  const idsFound = {};\n  diffArray.forEach(({ path }) => {\n    if (path[5] === 'selected') {\n      idsFound[path[4]] = path[4];\n    }\n  });\n\n  return diffArray.filter(({ path }) => {\n    if (path[5] === 'properties') {\n      return idsFound[path[4]] ? false : true;\n    }\n    return true;\n  });\n}\n\n/**\n * Reduces the number of change properties diffs\n * @param diffArray the array of the diffs\n * @param sceneData\n * @param oldSceneData\n */\nfunction minimizeChangePropertiesDiffs(diffArray, sceneData: Scene, oldSceneData: Scene) {\n  const idsFound = {};\n  return diffArray.filter(({ path }) => {\n    if (path[5] === 'properties') {\n      return idsFound[path[4]] ? false : (idsFound[path[4]] = true);\n    } else if (path[5] === 'misc') {\n      // Remove misc changes\n      return false;\n    }\n    return true;\n  });\n}\n","import * as Three from 'three';\nimport { HELVETIKER } from './libs/helvetiker_regular.typeface';\nimport gridHorizontalStreak from './grids/grid-horizontal-streak';\nimport gridVerticalStreak from './grids/grid-vertical-streak';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { Scene } from '../../models';\n\nexport default function createGrid(scene: Scene) {\n\n  const gridMesh = new Three.Object3D();\n  gridMesh.name = 'grid';\n  const fontLoader = new FontLoader();\n  const font = fontLoader.parse(HELVETIKER); // For measures\n  const { grids, width, height } = scene;\n\n  Object.values(grids).forEach(grid => {\n    switch (grid.type) {\n      case 'horizontal-streak':\n        gridMesh.add(gridHorizontalStreak(width, height, grid, font));\n        break;\n      case 'vertical-streak':\n        gridMesh.add(gridVerticalStreak(width, height, grid, font));\n        break;\n    }\n  });\n\n  gridMesh.position.y = -1;\n  return gridMesh;\n}\n","import * as Three from 'three';\nimport { COLORS } from '../../../shared-style';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { Grid } from '../../../models';\nimport { Font } from 'three/examples/jsm/loaders/FontLoader';\n\nexport default function (width: number, height: number, grid: Grid, font: Font) {\n  const step = grid.properties.step;\n  const colors = grid.properties.color ? [grid.properties.color] : grid.properties.colors;\n\n  const streak = new Three.Object3D();\n  streak.name = 'streak';\n  let counter = 0;\n\n  for (let i = 0; i <= height; i += step) {\n\n    const geometry = new Three.BufferGeometry();\n    const positions = new Float32Array([\n      0, 0, -i,\n      width, 0, -i,\n    ]);\n    geometry.setAttribute('position', new Three.BufferAttribute(positions, 3));\n    const color = colors[counter % colors.length];\n    const material = new Three.LineBasicMaterial({ color });\n\n    if (counter % 5 == 0) {\n      const shape = new TextGeometry(('' + (counter * step)), {\n        size: 16,\n        depth: 0.1,\n        font\n      });\n\n      const wrapper = new Three.MeshBasicMaterial({ color: COLORS.black });\n      const words = new Three.Mesh(shape, wrapper);\n\n      words.rotation.x -= Math.PI / 2;\n      words.position.set(-90, 0, -i);\n      streak.add(words);\n    }\n\n    streak.add(new Three.LineSegments(geometry, material));\n    counter++;\n  }\n  return streak;\n}\n","import * as Three from 'three';\nimport { COLORS } from '../../../shared-style';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport { Grid } from '../../../models';\nimport { Font } from 'three/examples/jsm/loaders/FontLoader';\n\nexport default function (width: number, height: number, grid: Grid, font: Font) {\n  const step = grid.properties.step;\n  const colors = grid.properties.color ? [grid.properties.color] : grid.properties.colors;\n\n  const streak = new Three.Object3D();\n  streak.name = 'streak';\n\n  let counter = 0;\n\n  for (let i = 0; i <= width; i += step) {\n\n    const geometry = new Three.BufferGeometry();\n    const positions = new Float32Array([\n      i, 0, 0,\n      i, 0, -height\n    ]);\n    geometry.setAttribute('position', new Three.BufferAttribute(positions, 3));\n    const color = colors[counter % colors.length];\n    const material = new Three.LineBasicMaterial({ color });\n\n    if (counter % 5 == 0) {\n      const shape = new TextGeometry(('' + (counter * step)), {\n        size: 16,\n        font: font,\n        depth: 0.1,\n      });\n\n      const wrapper = new Three.MeshBasicMaterial({ color: COLORS.black });\n      const words = new Three.Mesh(shape, wrapper);\n\n      words.rotation.x -= Math.PI / 2;\n      words.position.set(i - 20, 0, 50);\n      streak.add(words);\n    }\n\n    streak.add(new Three.LineSegments(geometry, material));\n    counter++;\n  }\n  return streak;\n}\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport * as Three from 'three';\nimport { parseData, PlanData, updateScene } from './scene-creator';\nimport { disposeScene } from './three-memory-cleaner';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport * as SharedStyle from '../../shared-style';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { usePrevious } from '@uidotdev/usehooks';\nimport { State } from '../../models';\nimport { diff } from '../../utils/history';\n\nlet mouseDownEvent: (event: MouseEvent) => void = null;\nlet mouseUpEvent: (event: MouseEvent) => void = null;\nlet cameraP: Three.PerspectiveCamera = null;\nlet scene3DP: Three.Scene = null;\nlet planDataP: PlanData = null;\nlet orbitControllerP = null;\nconst lastMousePosition = {\n  x: 0,\n  y: 0\n};\nlet renderingID: number;\n\ninterface Scene3DViewerProps {\n  state: State;\n  width: number;\n  height: number;\n}\n\nexport default function Scene3DViewer(props: Scene3DViewerProps) {\n  const { width, height } = props;\n\n  const previousProps = usePrevious(props);\n  const canvasWrapper = useRef(null);\n  const actions = useContext(ReactPlannerContext);\n  const { catalog, projectActions } = actions;\n\n  const [renderer, _setRenderer] = useState((\n    (window as any).__threeRenderer ||\n    new Three.WebGLRenderer({ preserveDrawingBuffer: true })\n  ) as Three.WebGLRenderer);\n  (window as any).__threeRenderer = renderer;\n\n  useEffect(() => {\n    const { state } = props;\n\n    const scene3D = new Three.Scene();\n\n    //RENDERER\n    renderer.setClearColor(new Three.Color(SharedStyle.COLORS.white));\n    renderer.setSize(width, height);\n\n    // LOAD DATA\n    const planData = parseData(state.scene, actions, catalog);\n\n    scene3D.add(planData.plan);\n    scene3D.add(planData.grid);\n\n    const aspectRatio = width / height;\n    const camera = new Three.PerspectiveCamera(45, aspectRatio, 1, 300000);\n\n    scene3D.add(camera);\n\n    // Set position for the camera\n    const cameraPositionX =\n      -(planData.boundingBox.max.x - planData.boundingBox.min.x) / 2;\n    const cameraPositionY =\n      ((planData.boundingBox.max.y - planData.boundingBox.min.y) / 2) * 10;\n    const cameraPositionZ =\n      (planData.boundingBox.max.z - planData.boundingBox.min.z) / 2;\n\n    camera.position.set(cameraPositionX, cameraPositionY, cameraPositionZ);\n    camera.up = new Three.Vector3(0, 1, 0);\n\n    // HELPER AXIS\n    // let axisHelper = new Three.AxesHelper(100);\n    // scene3D.add(axisHelper);\n\n    // LIGHT\n    const ambient = new Three.AmbientLight(0xffffff, 0.45);\n    scene3D.add(ambient);\n    const hemi = new Three.HemisphereLight(0xffffff, 0x666666, 0.5);\n    scene3D.add(hemi);\n    const spotLight1 = new Three.SpotLight(SharedStyle.COLORS.white, 1.0);\n    spotLight1.position.set(cameraPositionX, cameraPositionY, cameraPositionZ);\n    scene3D.add(spotLight1);\n    const dirLight = new Three.DirectionalLight(0xffffff, 0.8);\n    dirLight.position.set(cameraPositionX + 300, cameraPositionY + 400, cameraPositionZ + 300);\n    scene3D.add(dirLight);\n\n    // OBJECT PICKING\n    const toIntersect = [planData.plan];\n    const mouse = new Three.Vector2();\n    const raycaster = new Three.Raycaster();\n\n    mouseDownEvent = (event: MouseEvent) => {\n      const x = (event.offsetX / props.width) * 2 - 1;\n      const y = (-event.offsetY / props.height) * 2 + 1;\n      Object.assign(lastMousePosition, { x, y });\n    };\n    mouseUpEvent = (event: MouseEvent) => {\n      event.preventDefault();\n      mouse.x = (event.offsetX / props.width) * 2 - 1;\n      mouse.y = -(event.offsetY / props.height) * 2 + 1;\n\n      if (\n        Math.abs(mouse.x - lastMousePosition.x) <= 0.02 &&\n        Math.abs(mouse.y - lastMousePosition.y) <= 0.02\n      ) {\n        raycaster.setFromCamera(mouse, camera);\n        const intersects = raycaster.intersectObjects(toIntersect, true);\n\n        if (intersects.length > 0 && !isNaN(intersects[0].distance)) {\n          const object = intersects[0].object as any; //TODO\n          object.interact && object.interact();\n        } else {\n          projectActions.unselectAll();\n        }\n      }\n    };\n\n    renderer.domElement.addEventListener(\"mousedown\", mouseDownEvent);\n    renderer.domElement.addEventListener(\"mouseup\", mouseUpEvent);\n    renderer.domElement.style.display = \"block\";\n\n    canvasWrapper.current.appendChild(renderer.domElement);\n\n    // create orbit controls\n    const orbitController = new OrbitControls(camera, renderer.domElement);\n    const spotLightTarget = new Three.Object3D();\n    spotLightTarget.name = \"spotLightTarget\";\n    spotLightTarget.position.set(\n      orbitController.target.x,\n      orbitController.target.y,\n      orbitController.target.z\n    );\n    scene3D.add(spotLightTarget);\n    spotLight1.target = spotLightTarget;\n\n    const render = () => {\n      orbitController.update();\n      spotLight1.position.set(\n        camera.position.x,\n        camera.position.y,\n        camera.position.z\n      );\n      spotLightTarget.position.set(\n        orbitController.target.x,\n        orbitController.target.y,\n        orbitController.target.z\n      );\n      camera.updateMatrix();\n      camera.updateMatrixWorld();\n\n      for (const elemID in planData.sceneGraph.LODs) {\n        planData.sceneGraph.LODs[elemID].update(camera);\n      }\n\n      renderer.render(scene3D, camera);\n\n      renderingID = requestAnimationFrame(render);\n    };\n\n    render();\n\n    cameraP = camera;\n    scene3DP = scene3D;\n\n    planDataP = planData;\n    orbitControllerP = orbitController;\n\n    return () => {\n      cancelAnimationFrame(renderingID);\n      orbitControllerP.dispose();\n\n      renderer.domElement.removeEventListener(\"mousedown\", mouseDownEvent);\n      renderer.domElement.removeEventListener(\"mouseup\", mouseUpEvent);\n\n      disposeScene(scene3DP);\n      scene3DP.remove(planDataP.plan);\n      scene3DP.remove(planDataP.grid);\n\n      scene3DP = null;\n      planDataP = null;\n      cameraP = null;\n      orbitControllerP = null;\n      renderer.renderLists.dispose();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (cameraP) {\n      cameraP.aspect = props.width / props.height;\n      cameraP.updateProjectionMatrix();\n    }\n\n    if (previousProps && props.state.scene !== previousProps.state.scene) {\n      const changedValues = diff(previousProps.state.scene, props.state.scene);\n      updateScene(\n        planDataP,\n        props.state.scene,\n        previousProps.state.scene,\n        changedValues,\n        actions,\n        catalog\n      );\n    }\n    renderer.setSize(props.width, props.height);\n  }, [props]);\n\n  return <div ref={canvasWrapper} />;\n};\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport * as THREE from 'three';\n\nclass PointerLockControls {\n  yawObject: THREE.Object3D;\n  pitchObject: THREE.Object3D;\n  enabled = false;\n\n  constructor(camera: THREE.PerspectiveCamera) {\n    const scope = this;\n\n    camera.rotation.set(0, 0, 0);\n\n    this.pitchObject = new THREE.Object3D();\n    this.pitchObject.name = 'pitchObject';\n    this.pitchObject.add(camera);\n\n    this.yawObject = new THREE.Object3D();\n    this.yawObject.name = 'yawObject';\n    this.yawObject.position.y = 10;\n    this.yawObject.add(this.pitchObject);\n\n    document.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n  }\n  onMouseMove(event: MouseEvent) {\n    const PI_2 = Math.PI / 2;\n    if (this.enabled === false) return;\n\n    const movementX = event.movementX || (event as any).mozMovementX || (event as any).webkitMovementX || 0;\n    const movementY = event.movementY || (event as any).mozMovementY || (event as any).webkitMovementY || 0;\n\n    this.yawObject.rotation.y -= movementX * 0.002;\n    this.pitchObject.rotation.x -= movementY * 0.002;\n\n    this.pitchObject.rotation.x = Math.max(- PI_2, Math.min(PI_2, this.pitchObject.rotation.x));\n  };\n\n  dispose() {\n    document.removeEventListener('mousemove', this.onMouseMove.bind(this), false);\n  };\n\n\n  getObject() {\n    return this.yawObject;\n  };\n\n  getDirection = function () {\n    const direction = new THREE.Vector3(0, 0, - 1);\n    const rotation = new THREE.Euler(0, 0, 0, \"YXZ\");\n\n    return function (v: THREE.Vector3) {\n      rotation.set(this.pitchObject.rotation.x, this.yawObject.rotation.y, 0);\n\n      v.copy(direction).applyEuler(rotation);\n\n      return v;\n    };\n  }();\n};\n\nexport default PointerLockControls;","\"use strict\";\n\nimport React from 'react';\nimport * as Three from 'three';\nimport { parseData, PlanData, updateScene } from './scene-creator';\nimport { disposeScene } from './three-memory-cleaner';\nimport { initPointerLock } from \"./pointer-lock-navigation\";\nimport { firstPersonOnKeyDown, firstPersonOnKeyUp } from \"./libs/first-person-controls\";\nimport * as SharedStyle from '../../shared-style';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State } from '../../models';\nimport { diff } from '../../utils/history';\nimport PointerLockControls from './libs/pointer-lock-controls';\n\ninterface Viewer3DFirstPersonProps {\n  state: State;\n  width: number;\n  height: number;\n}\n\nexport default class Viewer3DFirstPerson extends React.Component<Viewer3DFirstPersonProps> {\n  static contextType = ReactPlannerContext;\n  declare context: React.ContextType<typeof ReactPlannerContext>;\n\n  private renderer: Three.WebGLRenderer;\n  private stopRendering = false;\n  private scene3D: Three.Scene | null = null;\n  private sceneOnTop: Three.Scene | null = null;\n  private camera: Three.PerspectiveCamera | null = null;\n  private planData: PlanData = null;\n  private controls: PointerLockControls = null;\n  private pointerlockChangeEvent: any = null;\n  private requestPointerLockEvent: any = null;\n  private keyDownEvent: any = null;\n  private keyUpEvent: any = null;\n  private mouseDownEvent: any = null;\n  private canvasWrapper = React.createRef<HTMLDivElement>();\n\n  constructor(props: Viewer3DFirstPersonProps) {\n    super(props);\n    this.renderer = (window as any).__threeRenderer || new Three.WebGLRenderer({ preserveDrawingBuffer: true });\n    (window as any).__threeRenderer = this.renderer;\n  }\n\n  componentDidMount() {\n    let prevTime = performance.now();\n    const velocity = new Three.Vector3();\n    const direction = new Three.Vector3();\n    let moveForward = false;\n    let moveBackward = false;\n    let moveLeft = false;\n    let moveRight = false;\n    let canJump = false;\n\n    const { width, height, state } = this.props;\n    const { catalog, projectActions } = this.context;\n    const actions = this.context;\n\n    this.renderer.setClearColor(new Three.Color(SharedStyle.COLORS.white));\n    this.renderer.setSize(width, height);\n\n    const scene3D = new Three.Scene();\n    const sceneOnTop = new Three.Scene();\n    const planData = parseData(state.scene, actions, catalog);\n    scene3D.add(planData.plan);\n\n    const aspectRatio = width / height;\n    const camera = new Three.PerspectiveCamera(45, aspectRatio, 0.1, 300000);\n    sceneOnTop.add(camera);\n    camera.position.set(0, 0, 0);\n    camera.up = new Three.Vector3(0, 1, 0);\n\n    const ambient = new Three.AmbientLight(0xafafaf);\n    scene3D.add(ambient);\n    const hemi = new Three.HemisphereLight(0xffffff, 0x666666, 0.5);\n    scene3D.add(hemi);\n    const pointLight = new Three.PointLight(SharedStyle.COLORS.white, 0.4, 1000);\n    pointLight.position.set(0, 0, 0);\n    scene3D.add(pointLight);\n    const dirLight = new Three.DirectionalLight(0xffffff, 0.8);\n    dirLight.position.set(300, 400, 300);\n    scene3D.add(dirLight);\n\n    document.body.requestPointerLock = document.body.requestPointerLock ||\n      (document.body as any).mozRequestPointerLock ||\n      (document.body as any).webkitRequestPointerLock;\n    document.body.requestPointerLock();\n\n    const humanHeight = 170;\n    let yInitialPosition = planData.boundingBox.min.y + (planData.boundingBox.min.y - planData.boundingBox.max.y) / 2 + humanHeight;\n    const { controls, pointerlockChangeEvent, requestPointerLockEvent } = initPointerLock(camera, this.renderer.domElement);\n    controls.getObject().position.set(-50, yInitialPosition, -100);\n    sceneOnTop.add(controls.getObject());\n\n    this.keyDownEvent = (event: KeyboardEvent) => {\n      const moveResult = firstPersonOnKeyDown(event, moveForward, moveLeft, moveBackward, moveRight, canJump, velocity);\n      moveForward = moveResult.moveForward;\n      moveLeft = moveResult.moveLeft;\n      moveBackward = moveResult.moveBackward;\n      moveRight = moveResult.moveRight;\n      canJump = moveResult.canJump;\n    };\n    this.keyUpEvent = (event: KeyboardEvent) => {\n      const moveResult = firstPersonOnKeyUp(event, moveForward, moveLeft, moveBackward, moveRight, canJump);\n      moveForward = moveResult.moveForward;\n      moveLeft = moveResult.moveLeft;\n      moveBackward = moveResult.moveBackward;\n      moveRight = moveResult.moveRight;\n      canJump = moveResult.canJump;\n    };\n    document.addEventListener('keydown', this.keyDownEvent);\n    document.addEventListener('keyup', this.keyUpEvent);\n\n    const pointer = new Three.Object3D();\n    pointer.name = 'pointer';\n    const pointerMaterial = new Three.MeshBasicMaterial({ depthTest: false, depthWrite: false, color: SharedStyle.COLORS.black });\n    const pointerGeometry1 = new Three.BufferGeometry();\n    pointerGeometry1.setAttribute('position', new Three.BufferAttribute(new Float32Array([-10, 0, 0, 10, 0, 0]), 3));\n    const linePointer1 = new Three.Line(pointerGeometry1, pointerMaterial); linePointer1.position.z -= 100;\n    const pointerGeometry2 = new Three.BufferGeometry();\n    pointerGeometry2.setAttribute('position', new Three.BufferAttribute(new Float32Array([0, 10, 0, 0, -10, 0]), 3));\n    const linePointer2 = new Three.Line(pointerGeometry2, pointerMaterial); linePointer2.position.z -= 100;\n    const pointerGeometry3 = new Three.BufferGeometry();\n    pointerGeometry3.setAttribute('position', new Three.BufferAttribute(new Float32Array([-1, 1, 0, 1, 1, 0, 1, -1, 0, -1, -1, 0, -1, 1, 0]), 3));\n    const linePointer3 = new Three.Line(pointerGeometry3, pointerMaterial); linePointer3.position.z -= 100;\n    pointer.add(linePointer1); pointer.add(linePointer2); pointer.add(linePointer3);\n    camera.add(pointer);\n\n    const toIntersect = [planData.plan];\n    const mouseVector = new Three.Vector2(0, 0);\n    const raycaster = new Three.Raycaster();\n    this.mouseDownEvent = (event: MouseEvent) => {\n      if (controls.enabled) {\n        event.preventDefault();\n        raycaster.setFromCamera(mouseVector, camera);\n        const intersects = raycaster.intersectObjects(toIntersect, true);\n        if (intersects.length > 0 && !isNaN(intersects[0].distance)) {\n          const object = intersects[0].object as any;\n          object.interact && object.interact();\n        } else {\n          projectActions.unselectAll();\n        }\n      }\n    };\n    document.addEventListener('mousedown', this.mouseDownEvent, false);\n\n    this.renderer.domElement.style.display = 'block';\n    (this.canvasWrapper.current as HTMLDivElement).appendChild(this.renderer.domElement);\n    this.renderer.autoClear = false;\n\n    const render = () => {\n      if (!this.stopRendering && planData) {\n        yInitialPosition = planData.boundingBox.min.y + humanHeight;\n        const multiplier = 5;\n        const time = performance.now();\n        const delta = (time - prevTime) / 1000 * multiplier;\n        velocity.x -= velocity.x * 10.0 * delta;\n        velocity.z -= velocity.z * 10.0 * delta;\n        velocity.y -= 9.8 * 100.0 * delta / multiplier;\n        direction.z = Number(moveForward) - Number(moveBackward);\n        direction.x = Number(moveLeft) - Number(moveRight);\n        direction.normalize();\n        if (moveForward || moveBackward) velocity.z -= direction.z * 400.0 * delta;\n        if (moveLeft || moveRight) velocity.x -= direction.x * 400.0 * delta;\n        controls.getObject().translateX(velocity.x * delta);\n        controls.getObject().translateY(velocity.y * delta);\n        controls.getObject().translateZ(velocity.z * delta);\n        if (controls.getObject().position.y < yInitialPosition) {\n          velocity.y = 0;\n          controls.getObject().position.y = yInitialPosition;\n          canJump = true;\n        }\n        prevTime = time;\n        const controlObjectPosition = controls.getObject().position;\n        pointLight.position.set(controlObjectPosition.x, controlObjectPosition.y, controlObjectPosition.z);\n        for (const elemID in planData.sceneGraph.LODs) planData.sceneGraph.LODs[elemID].update(camera);\n        this.renderer.clear();\n        this.renderer.render(scene3D, camera);\n        this.renderer.clearDepth();\n        this.renderer.render(sceneOnTop, camera);\n        requestAnimationFrame(render);\n      }\n    };\n    render();\n\n    this.scene3D = scene3D;\n    this.sceneOnTop = sceneOnTop;\n    this.camera = camera;\n    this.planData = planData;\n    this.controls = controls;\n    this.pointerlockChangeEvent = pointerlockChangeEvent;\n    this.requestPointerLockEvent = requestPointerLockEvent;\n  }\n\n  componentDidUpdate(prevProps: Viewer3DFirstPersonProps) {\n    if (!this.camera) return;\n    const { width, height, state } = this.props;\n    if (prevProps.width !== width || prevProps.height !== height) {\n      this.camera.aspect = width / height;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(width, height);\n    }\n    if (prevProps.state.scene !== state.scene && this.planData) {\n      const changedValues = diff(prevProps.state.scene, state.scene);\n      updateScene(this.planData, state.scene, prevProps.state.scene, changedValues, this.context, this.context.catalog);\n    }\n    if (this.scene3D && this.sceneOnTop && this.camera) {\n      this.renderer.clear();\n      this.renderer.render(this.scene3D, this.camera);\n      this.renderer.clearDepth();\n      this.renderer.render(this.sceneOnTop, this.camera);\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopRendering = true;\n    this.renderer.autoClear = true;\n    document.removeEventListener('mousedown', this.mouseDownEvent);\n    document.removeEventListener('keydown', this.keyDownEvent);\n    document.removeEventListener('keyup', this.keyUpEvent);\n    document.removeEventListener('pointerlockchange', this.pointerlockChangeEvent);\n    document.removeEventListener('mozpointerlockchange', this.pointerlockChangeEvent);\n    document.removeEventListener('webkitpointerlockchange', this.pointerlockChangeEvent);\n    this.renderer.domElement.removeEventListener('click', this.requestPointerLockEvent);\n    if (this.scene3D && this.planData) {\n      disposeScene(this.scene3D);\n      this.scene3D.remove(this.planData.plan);\n    }\n    this.scene3D = null;\n    this.planData = null;\n    this.renderer.renderLists.dispose();\n  }\n\n  render() {\n    return <div ref={this.canvasWrapper} />;\n  }\n}\n","import PointerLockControls from './libs/pointer-lock-controls';\n\nimport * as THREE from 'three';\n\nexport function initPointerLock(camera: THREE.PerspectiveCamera, rendererElement: HTMLCanvasElement) {\n  const havePointerLock = 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document;\n\n  const pointerlockchange = (event: Event) => {\n    controls.enabled = !controls.enabled;\n  };\n\n  const requestPointerLockEvent = (event: PointerEvent) => {\n    document.body.requestPointerLock = document.body.requestPointerLock ||\n      (document.body as any).mozRequestPointerLock ||\n      (document.body as any).webkitRequestPointerLock;\n    document.body.requestPointerLock();\n  };\n\n  if (havePointerLock) {\n\n    document.addEventListener('pointerlockchange', pointerlockchange, false);\n    document.addEventListener('mozpointerlockchange', pointerlockchange, false);\n    document.addEventListener('webkitpointerlockchange', pointerlockchange, false);\n    rendererElement.addEventListener('click', requestPointerLockEvent);\n\n  } else {\n    console.log('Your browser doesn\\'t seem to support Pointer Lock API');\n  }\n\n  const controls = new PointerLockControls(camera);\n  return { controls, pointerlockChangeEvent: pointerlockchange, requestPointerLockEvent };\n}\n\n\n/* Funzione per il calcolo delle collisioni con gli oggetti contenuti all'interno di un array.\n * L'idea è quella di utilizzare il ray casting. Per tenere conto del fatto che ci possiamo\n * muovere nelle quattro direzioni, applico una matrice di rotazione alla direzione verso la\n * quale l'oggetto del pointer lock è orientato. */\n\nfunction collision(controls, collisionArray) {\n\n  let rotationMatrix;\n  const cameraDirection = controls.getDirection(new THREE.Vector3(0, 0, 0)).clone();\n\n  if (controls.moveForward()) {\n    // Nothing to do!\n  }\n  else if (controls.moveBackward()) {\n    rotationMatrix = new THREE.Matrix4();\n    rotationMatrix.makeRotationY(180 * Math.PI / 180);\n  }\n  else if (controls.moveLeft()) {\n    rotationMatrix = new THREE.Matrix4();\n    rotationMatrix.makeRotationY(90 * Math.PI / 180);\n  }\n  else if (controls.moveRight()) {\n    rotationMatrix = new THREE.Matrix4();\n    rotationMatrix.makeRotationY((360 - 90) * Math.PI / 180);\n  }\n  else return;\n\n  if (rotationMatrix !== undefined) {\n    cameraDirection.applyMatrix4(rotationMatrix);\n  }\n  const rayCaster = new THREE.Raycaster(controls.getObject().position, cameraDirection.normalize());\n  const intersects = rayCaster.intersectObjects(collisionArray, true);\n\n  if ((intersects.length > 0 && intersects[0].distance < 10)) {\n    return true;\n  }\n\n  return false;\n}\n\n\n/* Funzione meno raffinata per il calcolo delle collisioni.\n * In pratica viene definita una bounding geometry (in questo caso la skymap) e poi vengono fatti\n * partire una serie di raggi dall'object del controller fino ai vertici di questa geometria. Se uno di questi interseca\n * uno degli oggetti dei quali vogliamo controllare la collisione, allora la funzione restituirà il valore true */\n/*\n function collision(object, boundingGeometry, collisionArray ) {\n\n for (let vertexIndex = 0; vertexIndex < boundingGeometry.geometry.vertices.length; vertexIndex++)\t{\n let localVertex = boundingGeometry.geometry.vertices[vertexIndex].clone();\n let globalVertex = localVertex.applyMatrix4( object.matrix );\n let directionVector = globalVertex.sub( object.position );\n\n let ray = new THREE.Raycaster(object.position, directionVector.clone().normalize());\n let collisionResults = ray.intersectObjects(collisionArray, true);\n if (collisionResults.length > 0 && collisionResults[0].distance < directionVector.length() - 1293) {\n console.log(\"collisione: \",collisionResults[0].distance,\" \",directionVector.length()-1293);\n return true;\n }\n }\n return false;\n }\n */\n\n/* Questa funzione si occupa di determinare se il controllo si trova su un oggetto, in caso negativo cade verso il basso\n * (vedi esempio pointer lock) */\n\nfunction translateY(controls, ray, objects) {\n\n  controls.isOnObject(false);\n  ray.ray.origin.copy(controls.getObject().position);\n  ray.ray.origin.y -= 10;\n  const intersections = ray.intersectObjects(objects, true);\n  if (intersections.length > 0) {\n    const distance = intersections[0].distance;\n    if (distance > 0 && distance < 10) {\n      controls.isOnObject(true);\n    }\n  }\n\n}\n\n/* Queste funzioni bloccano o sbloccano il movimento del controller (utili in caso di collisione) */\n\nfunction lockDirection(controls) {\n  if (controls.moveForward()) {\n    controls.lockMoveForward(true);\n  }\n  else if (controls.moveBackward()) {\n    controls.lockMoveBackward(true);\n  }\n  else if (controls.moveLeft()) {\n    controls.lockMoveLeft(true);\n  }\n  else if (controls.moveRight()) {\n    controls.lockMoveRight(true);\n  }\n}\n\nfunction unlockAllDirection(controls) {\n  controls.lockMoveForward(false);\n  controls.lockMoveBackward(false);\n  controls.lockMoveLeft(false);\n  controls.lockMoveRight(false);\n}\n","import { Vector3 } from 'three';\n\nexport function firstPersonOnKeyDown(event: KeyboardEvent, moveForward: boolean, moveLeft: boolean, moveBackward: boolean, moveRight: boolean, canJump: boolean, velocity: Vector3) {\n\n  switch (event.keyCode) {\n\n    case 38: // up\n    case 87: // w\n      moveForward = true;\n      break;\n\n    case 37: // left\n    case 65: // a\n      moveLeft = true;\n      break;\n\n    case 40: // down\n    case 83: // s\n      moveBackward = true;\n      break;\n\n    case 39: // right\n    case 68: // d\n      moveRight = true;\n      break;\n\n    case 32: // space\n      if (canJump === true) velocity.y += 225;\n      canJump = false;\n      break;\n  }\n\n  return { moveForward, moveLeft, moveBackward, moveRight, canJump }\n}\n\nexport function firstPersonOnKeyUp(event: KeyboardEvent, moveForward: boolean, moveLeft: boolean, moveBackward: boolean, moveRight: boolean, canJump: boolean) {\n\n  switch (event.keyCode) {\n    case 38: // up\n    case 87: // w\n      moveForward = false;\n      break;\n\n    case 37: // left\n    case 65: // a\n      moveLeft = false;\n      break;\n\n    case 40: // down\n    case 83: // s\n      moveBackward = false;\n      break;\n\n    case 39: // right\n    case 68: // d\n      moveRight = false;\n      break;\n  }\n  return { moveForward, moveLeft, moveBackward, moveRight, canJump }\n}\n","import React, { Component } from 'react';\nimport { FaPlusCircle as IconAdd } from 'react-icons/fa';\nimport * as SharedStyle from '../../shared-style';\nimport ReactPlannerContext from '../../react-planner-context';\n\nconst STYLE_BOX = {\n  width: '14em',\n  height: '14em',\n  padding: '0.625em',\n  background: '#f7f7f9',\n  border: '1px solid #e1e1e8',\n  cursor: 'pointer',\n  position: 'relative',\n  boxShadow: '0 1px 6px 0 rgba(0, 0, 0, 0.11), 0 1px 4px 0 rgba(0, 0, 0, 0.11)',\n  borderRadius: '2px',\n  transition: 'all .15s ease-in-out',\n  WebkitTransition: 'all .15s ease-in-out',\n  alignSelf: 'center',\n  justifySelf: 'center',\n} as const;\n\nconst STYLE_BOX_HOVER = {\n  ...STYLE_BOX,\n  background: SharedStyle.SECONDARY_COLOR.main\n} as const;\n\nconst STYLE_TITLE = {\n  width: '100%',\n  textAlign: 'center',\n  display: 'block',\n  marginBottom: '.5em',\n  textTransform: 'capitalize'\n} as const;\n\nconst STYLE_TITLE_HOVER = {\n  ...STYLE_TITLE,\n  color: SharedStyle.COLORS.white\n} as const;\n\nconst STYLE_IMAGE_CONTAINER = {\n  width: '100%',\n  height: '8em',\n  position: 'relative',\n  overflow: 'hidden',\n  border: 'solid 1px #e6e6e6',\n  padding: 0,\n  margin: 0,\n  marginBottom: '5px'\n} as const;\n\nconst STYLE_IMAGE = {\n  position: 'absolute',\n  background: '#222',\n  width: '100%',\n  height: '100%',\n  backgroundSize: 'contain',\n  backgroundPosition: '50% 50%',\n  backgroundColor: SharedStyle.COLORS.white,\n  backgroundRepeat: 'no-repeat',\n  transition: 'all .2s ease-in-out'\n} as const;\n\nconst STYLE_IMAGE_HOVER = {\n  ...STYLE_IMAGE,\n  transform: 'scale(1.2)'\n} as const;\n\nconst STYLE_PLUS_HOVER = {\n  marginTop: '1.5em',\n  color: SharedStyle.SECONDARY_COLOR.main,\n  fontSize: '2em',\n  opacity: '0.7',\n  width: '100%'\n} as const;\n\nconst STYLE_DESCRIPTION = {\n  display: 'block',\n  height: '2em',\n  margin: '0 auto',\n  fontSize: '0.75em',\n  fontStyle: 'italic',\n  lineHeight: '1em',\n  WebkitLineClamp: '2',\n  WebkitBoxOrient: 'vertical',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n} as const;\n\nconst STYLE_TAGS = {\n  listStyle: 'none',\n  margin: '0px',\n  padding: '0px',\n  fontSize: '11px',\n  marginBottom: '3px'\n} as const;\n\nconst STYLE_TAG = {\n  display: 'inline-block',\n  background: '#337ab7',\n  color: SharedStyle.COLORS.white,\n  padding: '1px 4px',\n  marginRight: '3px',\n  borderRadius: '3px'\n} as const;\n\ninterface CatalogItemProps {\n  element: {\n    prototype: string;\n    name: string;\n    info: {\n      title: string;\n      image: string;\n      tag: string[];\n      description: string;\n    };\n  };\n}\n\ninterface CatalogItemState {\n  hover: boolean;\n}\n\nexport default class CatalogItem extends Component<CatalogItemProps, CatalogItemState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = { hover: false };\n  }\n\n  select() {\n    const element = this.props.element;\n\n    switch (element.prototype) {\n      case 'lines':\n        this.context.linesActions.selectToolDrawingLine(element.name);\n        break;\n      case 'items':\n        this.context.itemsActions.selectToolDrawingItem(element.name);\n        break;\n      case 'holes':\n        this.context.holesActions.selectToolDrawingHole(element.name);\n        break;\n    }\n\n    this.context.projectActions.pushLastSelectedCatalogElementToHistory(element);\n  }\n\n  render() {\n    const element = this.props.element;\n    const hover = this.state.hover;\n\n    return (\n      <div\n        style={hover ? STYLE_BOX_HOVER : STYLE_BOX}\n        onClick={e => this.select()}\n        onMouseEnter={e => this.setState({ hover: true })}\n        onMouseLeave={e => this.setState({ hover: false })}\n      >\n        <b style={!hover ? STYLE_TITLE : STYLE_TITLE_HOVER}>{element.info.title}</b>\n        <div style={STYLE_IMAGE_CONTAINER}>\n          <div style={{ ...(!hover ? STYLE_IMAGE : STYLE_IMAGE_HOVER), backgroundImage: 'url(' + element.info.image + ')' }}>\n            {hover ? <IconAdd style={STYLE_PLUS_HOVER} /> : null}\n          </div>\n        </div>\n        <ul style={STYLE_TAGS}>\n          {element.info.tag.map((tag, index) => <li style={STYLE_TAG} key={index}>{tag}</li>)}\n        </ul>\n        <div style={STYLE_DESCRIPTION}>{element.info.description}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { MdArrowBack as Arrow } from 'react-icons/md';\nimport * as SharedStyle from '../../shared-style';\n\nconst breadcrumbStyle = {\n  margin: '1.5em',\n  display: 'flex'\n} as const;\n\nconst breadcrumbTextStyle = {\n  fontSize: '20px',\n  cursor: 'pointer'\n} as const;\n\nconst breadcrumbLastTextStyle = {\n  ...breadcrumbTextStyle,\n  fontWeight: 'bolder',\n  color: SharedStyle.SECONDARY_COLOR.main\n} as const;\n\nconst breadcrumbTabStyle = {\n  fill: SharedStyle.COLORS.black,\n  fontSize: '24px',\n  marginLeft: '10px',\n  marginRight: '10px'\n} as const;\n\ninterface CatalogBreadcrumbProps {\n  names: Array<{\n    name: string;\n    action?: () => void;\n  }>;\n}\n\nexport default function CatalogBreadcrumb({ names }: CatalogBreadcrumbProps) {\n  const labelNames = names.map((name, ind) => {\n\n    const lastElement = ind === names.length - 1;\n\n    return <div key={ind} style={{ display: 'flex' }}>\n      <div style={!lastElement ? breadcrumbTextStyle : breadcrumbLastTextStyle} onClick={name.action || null}>{name.name}</div>\n      {!lastElement ? <Arrow style={breadcrumbTabStyle} /> : null}\n    </div>\n  });\n\n  return <div style={breadcrumbStyle}>{labelNames}</div>;\n};\n","import React, { Component } from 'react';\nimport { MdNavigateNext } from 'react-icons/md';\nimport * as SharedStyle from '../../shared-style';\nimport ReactPlannerContext from '../../react-planner-context';\n\nconst STYLE_BOX = {\n  width: '14em',\n  height: '14em',\n  padding: '0.625em',\n  background: '#f7f7f9',\n  border: '1px solid #e1e1e8',\n  cursor: 'pointer',\n  position: 'relative',\n  boxShadow: '0 1px 6px 0 rgba(0, 0, 0, 0.11), 0 1px 4px 0 rgba(0, 0, 0, 0.11)',\n  borderRadius: '2px',\n  transition: 'all .2s ease-in-out',\n  WebkitTransition: 'all .2s ease-in-out',\n  alignSelf: 'center',\n  justifySelf: 'center',\n} as const;\n\nconst STYLE_BOX_HOVER = {\n  ...STYLE_BOX,\n  background: SharedStyle.SECONDARY_COLOR.main\n} as const;\n\nconst STYLE_TITLE = {\n  width: '100%',\n  position: 'absolute',\n  textAlign: 'center',\n  display: 'block',\n  marginBottom: '.5em',\n  padding: '1em',\n  textTransform: 'capitalize',\n  WebkitTransition: 'all .15s ease-in-out'\n} as const;\n\nconst STYLE_TITLE_HOVERED = {\n  ...STYLE_TITLE,\n  fontSize: '1.4em',\n  transform: 'translateY(-60px)',\n  color: 'rgb(28, 166, 252)',\n  marginTop: '0.5em'\n} as const;\n\nconst STYLE_NEXT_HOVER = {\n  position: 'absolute',\n  color: SharedStyle.SECONDARY_COLOR.main,\n  fontSize: '5em',\n  width: '100%',\n} as const;\n\nconst CONTAINER_DIV = {\n  background: SharedStyle.COLORS.white,\n  marginBottom: '5px',\n  border: 'solid 1px #EEE',\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n} as const;\n\ninterface CatalogPageItemProps {\n  page: {\n    name: string;\n    label: string;\n    [key: string]: any;\n  };\n  oldPage: {\n    name: string;\n    label: string;\n    [key: string]: any;\n  };\n}\n\ninterface CatalogPageItemState {\n  hover: boolean;\n}\n\nexport default class CatalogPageItem extends Component<CatalogPageItemProps, CatalogPageItemState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = { hover: false };\n  }\n\n  changePage(newPage) {\n    this.context.projectActions.changeCatalogPage(newPage, this.props.oldPage.name)\n  }\n\n  render() {\n    const page = this.props.page;\n    const hover = this.state.hover;\n\n    return (\n      <div\n        style={hover ? STYLE_BOX_HOVER : STYLE_BOX}\n        onClick={e => this.changePage(page.name)}\n        onMouseEnter={e => this.setState({ hover: true })}\n        onMouseLeave={e => this.setState({ hover: false })}\n      >\n        {hover ?\n          <div style={CONTAINER_DIV}>\n            <b style={STYLE_TITLE_HOVERED}>{page.label}</b>\n            <MdNavigateNext style={STYLE_NEXT_HOVER} />\n          </div>\n          :\n          <div style={CONTAINER_DIV}>\n            <b style={STYLE_TITLE}>{page.label}</b>\n          </div>}\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { MdNavigateBefore } from 'react-icons/md';\nimport * as SharedStyle from '../../shared-style';\nimport ReactPlannerContext from '../../react-planner-context';\n\nconst STYLE_BOX = {\n  width: '14em',\n  height: '14em',\n  padding: '0.625em',\n  background: '#f7f7f9',\n  border: '1px solid #e1e1e8',\n  margin: '0.3em',\n  cursor: 'pointer',\n  position: 'relative',\n  boxShadow: '0 1px 6px 0 rgba(0, 0, 0, 0.11), 0 1px 4px 0 rgba(0, 0, 0, 0.11)',\n  borderRadius: '2px',\n  transition: 'all .2s ease-in-out',\n  WebkitTransition: 'all .2s ease-in-out'\n} as const;\n\nconst STYLE_BOX_HOVER = {\n  ...STYLE_BOX,\n  background: SharedStyle.SECONDARY_COLOR.main\n} as const;\n\nconst STYLE_BACK = {\n  position: 'absolute',\n  color: SharedStyle.COLORS.black,\n  fontSize: '5em',\n  width: '100%'\n} as const;\n\nconst STYLE_BACK_HOVER = {\n  ...STYLE_BACK,\n  color: SharedStyle.SECONDARY_COLOR.main\n} as const;\n\nconst CONTAINER_DIV = {\n  background: SharedStyle.COLORS.white,\n  marginBottom: '5px',\n  border: 'solid 1px #e6e6e6',\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n} as const;\n\ninterface CatalogTurnBackPageItemProps {\n  page: {\n    name: string;\n    label: string;\n    [key: string]: any;\n  };\n}\n\ninterface CatalogTurnBackPageItemState {\n  hover: boolean;\n}\n\nexport default class CatalogTurnBackPageItem extends Component<CatalogTurnBackPageItemProps, CatalogTurnBackPageItemState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = { hover: false };\n  }\n\n  changePage(newPage) {\n    this.context.projectActions.goBackToCatalogPage(newPage)\n  }\n\n  render() {\n    const page = this.props.page;\n    const hover = this.state.hover;\n\n    return (\n      <div\n        style={hover ? STYLE_BOX_HOVER : STYLE_BOX}\n        onClick={e => this.changePage(page.name)}\n        onMouseEnter={e => this.setState({ hover: true })}\n        onMouseLeave={e => this.setState({ hover: false })}\n      >\n        <div style={CONTAINER_DIV}>\n          <MdNavigateBefore style={!hover ? STYLE_BACK : STYLE_BACK_HOVER} />\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport CatalogItem from './catalog-item';\nimport CatalogBreadcrumb from './catalog-breadcrumb';\nimport CatalogPageItem from './catalog-page-item';\nimport CatalogTurnBackPageItem from './catalog-turn-back-page-item';\nimport ContentContainer from '../style/content-container';\nimport ContentTitle from '../style/content-title';\nimport * as SharedStyle from '../../shared-style';\nimport ReactPlannerContext, { ReactPlannerContextProps } from '../../react-planner-context';\n\nconst containerStyle = {\n  position: 'fixed',\n  width: 'calc( 100% - 51px)',\n  height: 'calc( 100% - 20px)',\n  backgroundColor: '#FFF',\n  padding: '1em',\n  left: 50,\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  zIndex: 10\n} as const;\n\nconst itemsStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(auto-fit, minmax(14em, 1fr))',\n  gridGap: '10px',\n  marginTop: '1em'\n} as const;\n\nconst searchContainer = {\n  width: '100%',\n  height: '3em',\n  padding: '0.625em',\n  background: '#f7f7f9',\n  border: '1px solid #e1e1e8',\n  cursor: 'pointer',\n  position: 'relative',\n  boxShadow: '0 1px 6px 0 rgba(0, 0, 0, 0.11), 0 1px 4px 0 rgba(0, 0, 0, 0.11)',\n  borderRadius: '2px',\n  transition: 'all .2s ease-in-out',\n  WebkitTransition: 'all .2s ease-in-out',\n  marginBottom: '1em'\n} as const;\n\nconst searchText = {\n  width: '8em',\n  display: 'inline-block'\n} as const;\n\nconst searchInput = {\n  width: 'calc( 100% - 10em )',\n  height: '2em',\n  margin: '0',\n  padding: '0 1em',\n  border: '1px solid #EEE'\n} as const;\n\nconst historyContainer = {\n  ...searchContainer,\n  padding: '0.2em 0.625em'\n} as const;\n\nconst historyElementStyle = {\n  width: 'auto',\n  height: '2em',\n  lineHeight: '2em',\n  textAlign: 'center',\n  borderRadius: '1em',\n  display: 'inline-block',\n  cursor: 'pointer',\n  backgroundColor: SharedStyle.PRIMARY_COLOR.alt,\n  color: SharedStyle.PRIMARY_COLOR.text_main,\n  textTransform: 'capitalize',\n  margin: '0.25em',\n  padding: '0 1em'\n} as const;\nimport { State } from '../../models';\nimport { CatalogFn } from '../../catalog/catalog';\n\ninterface CatalogListProps {\n  state: State;\n  width: number;\n  height: number;\n  style?: any;\n}\n\ninterface CatalogListState {\n  categories: any[];\n  elements: any[];\n  matchString: string;\n  matchedElements: any[];\n}\n\nexport default class CatalogList extends Component<CatalogListProps, CatalogListState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props: CatalogListProps, context: ReactPlannerContextProps) {\n    super(props, context);\n\n    const page = props.state.catalog.page;\n    const currentCategory = CatalogFn.getCategory(context.catalog, page);\n    const categoriesToDisplay = currentCategory.categories;\n    const elementsToDisplay = currentCategory.elements.filter(element => element.info.visibility ? element.info.visibility.catalog : true);\n\n    this.state = {\n      categories: currentCategory.categories,\n      elements: elementsToDisplay,\n      matchString: '',\n      matchedElements: []\n    };\n  }\n\n  flattenCategories(categories) {\n    let toRet = [];\n\n    for (let x = 0; x < categories.length; x++) {\n      const curr = categories[x];\n      toRet = toRet.concat(curr.elements);\n      if (curr.categories.length) toRet = toRet.concat(this.flattenCategories(curr.categories));\n    }\n\n    return toRet;\n  }\n\n  matcharray(text) {\n\n    const array = this.state.elements.concat(this.flattenCategories(this.state.categories));\n\n    const filtered = [];\n\n    if (text != '') {\n      const regexp = new RegExp(text, 'i');\n      for (let i = 0; i < array.length; i++) {\n        if (regexp.test(array[i].info.title)) {\n          filtered.push(array[i]);\n        }\n      }\n    }\n\n    this.setState({\n      matchString: text,\n      matchedElements: filtered\n    });\n  };\n\n  select(element) {\n\n    switch (element.prototype) {\n      case 'lines':\n        this.context.linesActions.selectToolDrawingLine(element.name);\n        break;\n      case 'items':\n        this.context.itemsActions.selectToolDrawingItem(element.name);\n        break;\n      case 'holes':\n        this.context.holesActions.selectToolDrawingHole(element.name);\n        break;\n    }\n\n    this.context.projectActions.pushLastSelectedCatalogElementToHistory(element);\n  }\n\n  render() {\n\n    const page = this.props.state.catalog.page;\n    const currentCategory = CatalogFn.getCategory(this.context.catalog, page);\n    const categoriesToDisplay = currentCategory.categories;\n    const elementsToDisplay = currentCategory.elements.filter(element => element.info.visibility ? element.info.visibility.catalog : true);\n\n    let breadcrumbComponent = null;\n\n    if (page !== 'root') {\n\n      const breadcrumbsNames = [];\n\n      this.props.state.catalog.path.forEach(pathName => {\n        breadcrumbsNames.push({\n          name: CatalogFn.getCategory(this.context.catalog, pathName).label,\n          action: () => this.context.projectActions.goBackToCatalogPage(pathName)\n        });\n      });\n\n      breadcrumbsNames.push({ name: currentCategory.label, action: '' });\n\n      breadcrumbComponent = (<CatalogBreadcrumb names={breadcrumbsNames} />);\n    }\n\n    const pathSize = this.props.state.catalog.path.length;\n\n    const turnBackButton = pathSize > 0 ? (\n      <CatalogTurnBackPageItem key={pathSize} page={this.context.catalog.categories[this.props.state.catalog.path[pathSize - 1]]} />) : null;\n\n\n    const selectedHistory = this.props.state.selectedElementsHistory;\n    const selectedHistoryElements = selectedHistory.map((el, ind) =>\n      <div key={ind} style={historyElementStyle} title={el.name} onClick={() => this.select(el)}>{el.name}</div>\n    );\n\n    return (\n      <ContentContainer width={this.props.width} height={this.props.height} style={{ ...containerStyle, ...this.props.style }}>\n        <ContentTitle>{this.context.translator.t('Catalog')}</ContentTitle>\n        {breadcrumbComponent}\n        <div style={searchContainer}>\n          <span style={searchText}>{this.context.translator.t('Search Element')}</span>\n          <input type=\"text\" style={searchInput} onChange={(e) => { this.matcharray(e.target.value); }} />\n        </div>\n        {selectedHistory.length ?\n          <div style={historyContainer}>\n            <span>{this.context.translator.t('Last Selected')}</span>\n            {selectedHistoryElements}\n          </div> :\n          null\n        }\n        <div style={itemsStyle}>\n          {\n            this.state.matchString === '' ? [\n              turnBackButton,\n              categoriesToDisplay.map(cat => <CatalogPageItem key={cat.name} page={cat} oldPage={currentCategory} />),\n              elementsToDisplay.map(elem => <CatalogItem key={elem.name} element={elem} />)\n            ] :\n              this.state.matchedElements.map(elem => <CatalogItem key={elem.name} element={elem} />)\n          }\n        </div>\n      </ContentContainer>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  ContentTitle,\n  ContentContainer,\n  FormLabel,\n  FormBlock,\n  FormNumberInput,\n  FormSubmitButton,\n  CancelButton\n} from '../style/export';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State } from '../../models';\n\ninterface ProjectConfiguratorProps {\n  state: State;\n  width: number;\n  height: number;\n}\n\ninterface ProjectConfiguratorState {\n  dataWidth: number;\n  dataHeight: number;\n}\n\nexport default class ProjectConfigurator extends Component<ProjectConfiguratorProps, ProjectConfiguratorState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props, context) {\n    super(props, context);\n\n    const scene = props.state.scene;\n\n    this.state = {\n      dataWidth: parseInt(scene.width),\n      dataHeight: parseInt(scene.height),\n    };\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const { projectActions } = this.context;\n\n    let { dataWidth, dataHeight } = this.state;\n    dataWidth = dataWidth;\n    dataHeight = dataHeight;\n    if (dataWidth <= 100 || dataHeight <= 100) {\n      alert('Scene size too small');\n    } else {\n      projectActions.setProjectProperties({ width: dataWidth, height: dataHeight });\n    }\n  }\n\n\n  render() {\n    const { width, height } = this.props;\n    const { dataWidth, dataHeight } = this.state;\n    const { projectActions, translator } = this.context;\n\n    return (\n      <ContentContainer width={width} height={height}>\n        <ContentTitle>{translator.t('Project config')}</ContentTitle>\n\n        <form onSubmit={e => this.onSubmit(e)}>\n          <FormBlock>\n            <FormLabel htmlFor='width'>{translator.t('width')}</FormLabel>\n            <FormNumberInput\n              //id='width'\n              placeholder='width'\n              value={dataWidth}\n              onChange={e => this.setState({ dataWidth: e.target.value })}\n            />\n          </FormBlock>\n\n          <FormBlock>\n            <FormLabel htmlFor='height'>{translator.t('height')}</FormLabel>\n            <FormNumberInput\n              //id='height'\n              placeholder='height'\n              value={dataHeight}\n              onChange={e => this.setState({ dataHeight: e.target.value })}\n            />\n          </FormBlock>\n\n          <table style={{ float: 'right' }}>\n            <tbody>\n              <tr>\n                <td>\n                  <CancelButton size='large'\n                    onClick={e => projectActions.rollback()}>{translator.t('Cancel')}</CancelButton>\n                </td>\n                <td>\n                  <FormSubmitButton size='large'>{translator.t('Save')}</FormSubmitButton>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </form>\n      </ContentContainer>\n    )\n  }\n}\n","import React from 'react';\nimport Viewer2D from './viewer2d/viewer2d';\nimport Viewer3D from './viewer3d/viewer3d';\nimport Viewer3DFirstPerson from './viewer3d/viewer3d-first-person';\nimport CatalogList from './catalog-view/catalog-list';\nimport ProjectConfigurator from './configurator/project-configurator';\n\nimport * as constants from '../constants';\nimport { StateProps } from '../models';\n\ninterface ContentProps {\n  state: StateProps\n  width: number;\n  height: number;\n  customContents: { [key: string]: React.ComponentType<{ state: StateProps; width: number; height: number }> };\n}\n\nexport default function Content({ width, height, state, customContents }: ContentProps) {\n  const mode = state.mode;\n\n  switch (mode) {\n    case constants.MODE_3D_VIEW:\n      return <Viewer3D state={state} width={width} height={height} />;\n\n    case constants.MODE_3D_FIRST_PERSON:\n      return <Viewer3DFirstPerson state={state} width={width} height={height} />;\n\n    case constants.MODE_VIEWING_CATALOG:\n      return <CatalogList state={state} width={width} height={height} />;\n\n    case constants.MODE_IDLE:\n    case constants.MODE_2D_ZOOM_IN:\n    case constants.MODE_2D_ZOOM_OUT:\n    case constants.MODE_2D_PAN:\n    case constants.MODE_WAITING_DRAWING_LINE:\n    case constants.MODE_DRAGGING_LINE:\n    case constants.MODE_DRAGGING_VERTEX:\n    case constants.MODE_DRAGGING_ITEM:\n    case constants.MODE_DRAWING_LINE:\n    case constants.MODE_DRAWING_HOLE:\n    case constants.MODE_DRAWING_ITEM:\n    case constants.MODE_DRAGGING_HOLE:\n    case constants.MODE_ROTATING_ITEM:\n      return <Viewer2D state={state} width={width} height={height} />;\n\n    case constants.MODE_CONFIGURING_PROJECT:\n      return <ProjectConfigurator width={width} height={height} state={state} />;\n\n    default:\n      if (customContents.hasOwnProperty(mode)) {\n        const CustomContent = customContents[mode];\n        return <CustomContent width={width} height={height} state={state} />\n      } else {\n        throw new Error(`Mode ${mode} doesn't have a mapped content`);\n      }\n  }\n}\n","import React, { Component } from 'react';\nimport * as SharedStyle from '../../shared-style';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State } from '../../models';\n\nconst toggleButtonStyle = {\n  width: '5.5em',\n  color: '#CCC',\n  textAlign: 'center',\n  cursor: 'pointer',\n  userSelect: 'none',\n  border: '1px solid transparent',\n  margin: '-1px 5px 0 5px',\n  borderRadius: '2px',\n  display: 'inline-block'\n} as const;\n\nconst toggleButtonStyleOver = {\n  ...toggleButtonStyle,\n  backgroundColor: '#1c82c6',\n  border: '1px solid #FFF',\n  color: SharedStyle.COLORS.white\n} as const;\n\ninterface FooterToggleButtonProps {\n  toggleOn: () => void;\n  toggleOff: () => void;\n  text: string;\n  toggleState?: boolean;\n  title?: string;\n}\n\ninterface FooterToggleButtonState {\n  over: boolean;\n  active: boolean;\n}\n\nexport default class FooterToggleButton extends Component<FooterToggleButtonProps, FooterToggleButtonState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      over: false,\n      active: this.props.toggleState || false\n    };\n  }\n\n  toggleOver(e) { this.setState({ over: true }); }\n  toggleOut(e) { this.setState({ over: false }); }\n\n  toggle(e) {\n    const isActive = !this.state.active;\n    this.setState({ active: isActive });\n\n    if (isActive) {\n      this.props.toggleOn();\n    }\n    else {\n      this.props.toggleOff();\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.over != nextState.over) return true;\n    if (this.state.active != nextState.active) return true;\n    if (this.props.toggleState != nextProps.toggleState) return true;\n\n    return false;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.toggleState != prevProps.toggleState)\n      this.setState({ ...this.state, active: this.props.toggleState });\n  }\n\n  render() {\n\n    return (\n      <div\n        style={this.state.over || this.state.active ? toggleButtonStyleOver : toggleButtonStyle}\n        onMouseOver={e => this.toggleOver(e)}\n        onMouseOut={e => this.toggleOut(e)}\n        onClick={e => this.toggle(e)}\n        title={this.props.title}\n      >\n        {this.props.text}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport * as SharedStyle from '../../shared-style';\nimport { FaTimes as IconClose } from 'react-icons/fa';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State } from '../../models';\n\nconst labelContainerStyle = {\n  width: 'auto',\n  display: 'inline-block',\n  margin: 0,\n  padding: '0px 5px 0px 0px'\n} as const;\n\nconst toggleButtonStyle = {\n  color: '#CCC',\n  textAlign: 'center',\n  cursor: 'pointer',\n  userSelect: 'none'\n} as const;\n\nconst toggleButtonStyleOver = {\n  ...toggleButtonStyle,\n  color: SharedStyle.COLORS.white\n} as const;\n\nconst contentContainerStyleActive = {\n  position: 'fixed',\n  width: 'calc( 100% - 2px )',\n  height: '40%',\n  left: 0,\n  bottom: 20,\n  backgroundColor: SharedStyle.PRIMARY_COLOR.alt,\n  borderTop: SharedStyle.PRIMARY_COLOR.border,\n  zIndex: 0,\n  padding: 0,\n  margin: 0,\n  transition: 'all 300ms ease'\n} as const;\n\nconst contentContainerStyleInactive = {\n  ...contentContainerStyleActive,\n  visibility: 'hidden',\n  height: 0\n} as const;\n\nconst contentHeaderStyle = {\n  position: 'relative',\n  width: '100%',\n  height: '2em',\n  top: 0,\n  left: 0,\n  borderBottom: SharedStyle.PRIMARY_COLOR.border\n} as const;\n\nconst titleStyle = {\n  position: 'relative',\n  height: '2em',\n  lineHeight: '2em',\n  marginLeft: '1em'\n} as const;\n\nconst contentAreaStyle = {\n  position: 'relative',\n  width: '100%',\n  height: 'calc( 100% - 2em )',\n  padding: '1em',\n  overflowY: 'auto'\n} as const;\n\nconst iconCloseStyleOut = {\n  position: 'absolute',\n  width: '2em',\n  height: '2em',\n  right: 0,\n  top: 0,\n  padding: '0.5em',\n  borderLeft: SharedStyle.PRIMARY_COLOR.border,\n  cursor: 'pointer'\n} as const;\n\nconst iconCloseStyleOver = {\n  ...iconCloseStyleOut,\n  color: SharedStyle.COLORS.white,\n  backgroundColor: SharedStyle.SECONDARY_COLOR.alt\n} as const;\n\nconst iconStyle = {\n  width: '15px',\n  height: '15px',\n  marginTop: '-2px',\n  marginRight: '2px'\n} as const;\n\nconst textStyle = {\n  position: 'relative'\n} as const;\n\ninterface FooterContentButtonProps {\n  text: string;\n  textStyle?: React.CSSProperties;\n  icon?: React.FC<React.SVGProps<SVGSVGElement>>;\n  iconStyle?: React.CSSProperties;\n  content: React.ReactNode[];\n  toggleState?: boolean;\n  title?: string;\n  titleStyle?: React.CSSProperties;\n}\n\ninterface FooterContentButtonState {\n  over: boolean;\n  closeOver: boolean;\n  active: boolean;\n}\n\nexport default class FooterContentButton extends Component<FooterContentButtonProps, FooterContentButtonState> {\n  static contextType = ReactPlannerContext;\n  context!: React.ContextType<typeof ReactPlannerContext>;\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      over: false,\n      closeOver: false,\n      active: this.props.toggleState || false\n    };\n  }\n\n  toggleOver(e) { this.setState({ over: true }); }\n  toggleOut(e) { this.setState({ over: false }); }\n\n  toggle(e) {\n    const isActive = !this.state.active;\n    this.setState({ active: isActive });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.over != nextState.over) return true;\n    if (this.state.closeOver != nextState.closeOver) return true;\n    if (this.state.active != nextState.active) return true;\n\n    if (this.props.content.length != nextProps.content.length) return true;\n    if (this.props.toggleState != nextProps.toggleState) return true;\n\n    return false;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.toggleState != prevProps.toggleState)\n      this.setState({ ...this.state, active: this.props.toggleState });\n  }\n\n  render() {\n\n    const s = this.state;\n    const p = this.props;\n\n    const LabelIcon = p.icon || null;\n    const labelIconStyle = p.iconStyle || {};\n    const labelTextStyle = p.textStyle || {};\n    const inputTitleStyle = p.titleStyle || {};\n\n    return (\n      <div style={labelContainerStyle}>\n        <div\n          style={s.over || s.active ? toggleButtonStyleOver : toggleButtonStyle}\n          onClick={e => this.toggle(e)}\n          title={p.title}\n        >\n          <LabelIcon style={{ ...labelIconStyle, ...iconStyle }} />\n          <span style={{ ...textStyle, ...labelTextStyle }}>{p.text}</span>\n        </div>\n        <div style={s.active ? contentContainerStyleActive : contentContainerStyleInactive}>\n          <div style={contentHeaderStyle}>\n            <b style={{ ...titleStyle, ...inputTitleStyle }}>{p.title}</b>\n            <IconClose\n              style={s.closeOver ? iconCloseStyleOver : iconCloseStyleOut}\n              onMouseOver={e => this.setState({ closeOver: true })}\n              onMouseOut={e => this.setState({ closeOver: false })}\n              onClick={e => this.toggle(e)}\n            />\n          </div>\n          <div style={contentAreaStyle}>\n            {p.content}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\nexport const VERSION = '2.0.6';","import React, { Component, useContext, useState } from 'react';\nimport If from '../../utils/react-if';\nimport FooterToggleButton from './footer-toggle-button';\nimport FooterContentButton from './footer-content-button';\nimport { SNAP_POINT, SNAP_LINE, SNAP_SEGMENT, SNAP_GRID, SNAP_GUIDE } from '../../utils/snap';\nimport { MODE_SNAPPING } from '../../constants';\nimport * as SharedStyle from '../../shared-style';\nimport { MdAddCircle, MdWarning } from 'react-icons/md';\nimport { VERSION } from '../../version';\nimport ReactPlannerContext from '../../react-planner-context';\nimport { State } from '../../models';\n\nconst footerBarStyle = {\n  position: 'absolute',\n  bottom: 0,\n  lineHeight: '14px',\n  fontSize: '12px',\n  color: SharedStyle.COLORS.white,\n  backgroundColor: SharedStyle.SECONDARY_COLOR.alt,\n  padding: '3px 1em',\n  margin: 0,\n  boxSizing: 'border-box',\n  cursor: 'default',\n  userSelect: 'none',\n  zIndex: '9001'\n} as const;\n\nexport const leftTextStyle = {\n  position: 'relative',\n  borderRight: '1px solid #FFF',\n  float: 'left',\n  padding: '0 1em',\n  display: 'inline-block'\n} as const;\n\nexport const rightTextStyle = {\n  position: 'relative',\n  borderLeft: '1px solid #FFF',\n  float: 'right',\n  padding: '0 1em',\n  display: 'inline-block'\n} as const;\n\nconst coordStyle = {\n  display: 'inline-block',\n  width: '6em',\n  margin: 0,\n  padding: 0\n};\n\nconst appMessageStyle = { borderBottom: '1px solid #555', lineHeight: '1.5em' };\n\ninterface FooterBarProps {\n  state: State;\n  footerbarComponents: any[];\n  width: number;\n  height: number;\n  softwareSignature: string;\n}\n\nexport default function FooterBar(props: FooterBarProps) {\n  const [state] = useState({});\n  const { state: globalState, width, height, softwareSignature, footerbarComponents } = props;\n  const { translator, projectActions } = useContext(ReactPlannerContext);\n  const { x, y } = globalState.mouse;\n  const zoom = globalState.zoom;\n  const mode = globalState.mode;\n\n  const errors = globalState.errors;\n  const errorsJsx = errors.map((err, ind) =>\n    <div key={ind} style={appMessageStyle}>[ {(new Date(err.date)).toLocaleString()} ] {err.error}</div>\n  );\n  const errorLableStyle = errors.length ? { color: SharedStyle.MATERIAL_COLORS[500].red } : {};\n  const errorIconStyle = errors.length ? { transform: 'rotate(45deg)', color: SharedStyle.MATERIAL_COLORS[500].red } : { transform: 'rotate(45deg)' };\n\n  const warnings = globalState.warnings;\n  const warningsJsx = warnings.map((warn, ind) =>\n    <div key={ind} style={appMessageStyle}>[ {(new Date(warn.date)).toLocaleString()} ] {warn.warning}</div>\n  );\n  const warningLableStyle = warnings.length ? { color: SharedStyle.MATERIAL_COLORS[500].yellow } : {};\n  const warningIconStyle = warningLableStyle;\n\n  const updateSnapMask = (val) => {\n    projectActions.toggleSnap(\n      { ...globalState.snapMask, ...val }\n    );\n  };\n\n  return (\n    <div style={{ ...footerBarStyle, width, height }}>\n\n      <If condition={MODE_SNAPPING.includes(mode)} style={{}}>\n        <div style={leftTextStyle}>\n          <div title={translator.t('Mouse X Coordinate')} style={coordStyle}>X : {x.toFixed(3)}</div>\n          <div title={translator.t('Mouse Y Coordinate')} style={coordStyle}>Y : {y.toFixed(3)}</div>\n        </div>\n\n        <div style={leftTextStyle} title={translator.t('Scene Zoom Level')}>Zoom: {zoom.toFixed(3)}X</div>\n\n        <div style={leftTextStyle}>\n          <FooterToggleButton\n            toggleOn={() => { updateSnapMask({ SNAP_POINT: true }); }}\n            toggleOff={() => { updateSnapMask({ SNAP_POINT: false }); }}\n            text=\"Snap PT\"\n            toggleState={globalState.snapMask[SNAP_POINT]}\n            title={translator.t('Snap to Point')}\n          />\n          <FooterToggleButton\n            toggleOn={() => { updateSnapMask({ SNAP_LINE: true }); }}\n            toggleOff={() => { updateSnapMask({ SNAP_LINE: false }); }}\n            text=\"Snap LN\"\n            toggleState={globalState.snapMask[SNAP_LINE]}\n            title={translator.t('Snap to Line')}\n          />\n          <FooterToggleButton\n            toggleOn={() => { updateSnapMask({ SNAP_SEGMENT: true }); }}\n            toggleOff={() => { updateSnapMask({ SNAP_SEGMENT: false }); }}\n            text=\"Snap SEG\"\n            toggleState={globalState.snapMask[SNAP_SEGMENT]}\n            title={translator.t('Snap to Segment')}\n          />\n          <FooterToggleButton\n            toggleOn={() => { updateSnapMask({ SNAP_GRID: true }); }}\n            toggleOff={() => { updateSnapMask({ SNAP_GRID: false }); }}\n            text=\"Snap GRD\"\n            toggleState={globalState.snapMask[SNAP_GRID]}\n            title={translator.t('Snap to Grid')}\n          />\n          <FooterToggleButton\n            toggleOn={() => { updateSnapMask({ SNAP_GUIDE: true }); }}\n            toggleOff={() => { updateSnapMask({ SNAP_GUIDE: false }); }}\n            text=\"Snap GDE\"\n            toggleState={globalState.snapMask[SNAP_GUIDE]}\n            title={translator.t('Snap to Guide')}\n          />\n        </div>\n      </If>\n\n      {footerbarComponents.map((Component, index) => <Component state={state} key={index} />)}\n\n      {\n        softwareSignature ?\n          <div\n            style={rightTextStyle}\n            title={softwareSignature + (softwareSignature.includes('React-Planner') ? '' : ` using React-Planner ${VERSION}`)}\n          >\n            {softwareSignature}\n          </div>\n          : null\n      }\n\n      <div style={rightTextStyle}>\n        <FooterContentButton\n          icon={MdAddCircle}\n          iconStyle={errorIconStyle}\n          text={errors.length.toString()}\n          textStyle={errorLableStyle}\n          title={`Errors [ ${errors.length} ]`}\n          titleStyle={errorLableStyle}\n          content={[errorsJsx]}\n        />\n        <FooterContentButton\n          icon={MdWarning}\n          iconStyle={warningIconStyle}\n          text={warnings.length.toString()}\n          textStyle={warningLableStyle}\n          title={`Warnings [ ${warnings.length} ]`}\n          titleStyle={warningLableStyle}\n          content={[warningsJsx]}\n        />\n      </div>\n\n    </div>\n  );\n}\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./tabs.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./tabs.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useContext, useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect, ReactReduxContext } from 'react-redux';\n\nimport Translator from './translator/translator';\nimport { CatalogFactory, CatalogJson } from './catalog/catalog';\nimport actions, { AreaActionsType, GroupsActionsType, HolesActionsType, ItemsActionsType, LinesActionsType, ProjectActionsType, SceneActionsType, VerticesActionsType, Viewer2DActionsType, Viewer3DActionsType } from './actions/export';\nimport { objectsMap } from './utils/objects-utils';\nimport Toolbar from './components/toolbar/toolbar';\nimport Sidebar from './components/sidebar/sidebar';\nimport Content from './components/content';\nimport FooterBar from './components/footerbar/footerbar';\nimport { VERSION } from './version';\nimport './styles/export';\nimport { ReactPlannerPlugin, ReactPlannerStateExtractor } from './types';\nimport ReactPlannerContext from './react-planner-context';\nimport { enableMapSet } from 'immer';\nenableMapSet();\n\nconst toolbarW = 50;\nconst sidebarW = 300;\nconst footerBarH = 20;\n\nconst wrapperStyle = {\n  display: 'flex',\n  flexFlow: 'row nowrap'\n};\n\ninterface ReactPlannerOptionalProps {\n  translator: Translator,\n  catalog: CatalogJson,\n  allowProjectFileSupport: boolean,\n  toolbarButtons: any[],\n  sidebarComponents: [],\n  customContents: {},\n  softwareSignature: string, // `React Planner ${VERSION}`\n  footerbarComponents: [],\n  customOverlays: { [key: string]: React.ComponentType<any>, }[],\n  customActions: { [key: string]: any },\n}\n\ninterface ReactPlannerExternalProps {\n  plugins: ReactPlannerPlugin[],\n  autosaveKey?: string,\n  autosaveDelay?: number,\n  width: number,\n  height: number,\n  stateExtractor: ReactPlannerStateExtractor,\n}\n\ninterface ReactPlannerInternalProps {\n  projectActions: ProjectActionsType,\n  viewer2DActions: Viewer2DActionsType,\n  viewer3DActions: Viewer3DActionsType,\n  linesActions: LinesActionsType,\n  holesActions: HolesActionsType,\n  sceneActions: SceneActionsType,\n  verticesActions: VerticesActionsType,\n  itemsActions: ItemsActionsType,\n  areaActions: AreaActionsType,\n  groupsActions: GroupsActionsType,\n};\n\ntype ExternalReactPlannerProps = ReactPlannerExternalProps & Partial<ReactPlannerOptionalProps>;\ntype ReactPlannerProps = ReactPlannerInternalProps & ReactPlannerExternalProps & Partial<ReactPlannerOptionalProps>;\ntype InternalReactPlannerProps = ReactPlannerInternalProps & ReactPlannerExternalProps & ReactPlannerOptionalProps;\n\nfunction ReactPlanner(props: InternalReactPlannerProps) {\n  const { width, height, stateExtractor, ...restProps } = props;\n\n  const context = useContext(ReactReduxContext);\n\n  useEffect(() => {\n    const store = context.store;\n    const { projectActions, catalog, stateExtractor, plugins } = props;\n    plugins.forEach(plugin => plugin(store, stateExtractor));\n    projectActions.initCatalog(catalog);\n  }, []);\n\n  useEffect(() => {\n    const { stateExtractor, projectActions, catalog } = props;\n    const state = context.store.getState();\n    const plannerState = stateExtractor(state);\n    const catalogReady = plannerState.catalog.ready;\n    if (!catalogReady) {\n      projectActions.initCatalog(catalog);\n    }\n  }, [props]);\n\n  const state = context.store.getState();\n\n  const contentW = width - toolbarW - sidebarW;\n  const toolbarH = height - footerBarH;\n  const contentH = height - footerBarH;\n  const sidebarH = height - footerBarH;\n\n  const extractedState = stateExtractor(state);\n\n  return (\n    <div style={{ ...wrapperStyle, height }}>\n      <Toolbar {...restProps} width={toolbarW} height={toolbarH} state={extractedState} />\n      <Content {...restProps} width={contentW} height={contentH} state={extractedState} /> { /* onWheel={event => event.preventDefault()} */}\n      <Sidebar {...restProps} width={sidebarW} height={sidebarH} state={extractedState} />\n      <FooterBar {...restProps} width={width} height={footerBarH} state={extractedState} />\n    </div>\n  );\n}\n\n//redux connect\nfunction mapStateToProps(reduxState) {\n  return {\n    state: reduxState\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return objectsMap(actions, actionNamespace => bindActionCreators(actions[actionNamespace], dispatch));\n}\n\nfunction ReactPlannerWrapper(tempProps: ReactPlannerProps) {\n  const { translator = new Translator(), catalog = CatalogFactory(), allowProjectFileSupport = true,\n    toolbarButtons = [], sidebarComponents = [], footerbarComponents = [], customContents = {},\n    customOverlays = [], customActions = {}, softwareSignature = `React-Planner ${VERSION}`,\n    ...otherProps\n  } = tempProps;\n  const props = { ...otherProps, translator, catalog, allowProjectFileSupport, toolbarButtons, sidebarComponents, footerbarComponents, customContents, customOverlays, customActions, softwareSignature } as InternalReactPlannerProps;\n  return (\n    <ReactPlannerContext.Provider value={{ ...props }}>\n      <ReactPlanner {...props} />\n    </ReactPlannerContext.Provider>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReactPlannerWrapper as React.ComponentType<ExternalReactPlannerProps>);\n","const localStorage = window.hasOwnProperty('localStorage') ? window.localStorage : false;\nimport { loadProject } from '../actions/project-actions';\n\nconst TIMEOUT_DELAY = 500;\n\nlet timeout = null;\n\nexport default function autosave(autosaveKey, delay = TIMEOUT_DELAY) {\n\n  return (store, stateExtractor) => {\n    if (!autosaveKey) return;\n    if (!localStorage) return;\n\n    //revert\n    if (localStorage.getItem(autosaveKey) !== null) {\n      const data = localStorage.getItem(autosaveKey);\n      const json = JSON.parse(data);\n      store.dispatch(loadProject(json));\n    }\n\n    //update\n    store.subscribe(() => {\n      if (timeout) clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        const state = stateExtractor(store.getState());\n        localStorage.setItem(autosaveKey, JSON.stringify(state.scene));\n        /*let scene = state.sceneHistory.last;\n        if (scene) {\n          let json = JSON.stringify(scene.toJS());\n          localStorage.setItem(autosaveKey, json);\n        }*/\n      }, delay);\n    });\n  };\n}\n","import Autosave from './autosave';\nimport Keyboard from './keyboard';\nimport ConsoleDebugger from './console-debugger';\n\nexport {\n  Autosave,\n  Keyboard,\n  ConsoleDebugger\n};\n\nexport default {\n  Autosave,\n  Keyboard,\n  ConsoleDebugger\n};\n","import {\n  MODE_IDLE,\n  MODE_3D_FIRST_PERSON,\n  MODE_3D_VIEW,\n  MODE_SNAPPING,\n  KEYBOARD_BUTTON_CODE\n} from '../constants';\n\nimport {\n  rollback,\n  undo,\n  remove,\n  toggleSnap,\n  copyProperties,\n  pasteProperties,\n  setAlterateState\n} from '../actions/project-actions';\nimport { State } from '../models';\n\nexport default function keyboard() {\n\n  return (store, stateExtractor: (store: any) => State) => {\n\n    window.addEventListener('keydown', event => {\n\n      const state = stateExtractor(store.getState());\n      const mode = state.mode;\n\n      switch (event.keyCode) {\n        case KEYBOARD_BUTTON_CODE.BACKSPACE:\n        case KEYBOARD_BUTTON_CODE.DELETE:\n          {\n            if ([MODE_IDLE, MODE_3D_FIRST_PERSON, MODE_3D_VIEW].includes(mode))\n              store.dispatch(remove());\n            break;\n          }\n        case KEYBOARD_BUTTON_CODE.ESC:\n          {\n            store.dispatch(rollback());\n            break;\n          }\n        case KEYBOARD_BUTTON_CODE.Z:\n          {\n            if (event.getModifierState('Control') || event.getModifierState('Meta'))\n              store.dispatch(undo());\n            break;\n          }\n        case KEYBOARD_BUTTON_CODE.ALT:\n          {\n            if (MODE_SNAPPING.includes(mode))\n              store.dispatch(toggleSnap({\n                ...state.snapMask,\n                SNAP_POINT: false,\n                SNAP_LINE: false,\n                SNAP_SEGMENT: false,\n                SNAP_GRID: false,\n                SNAP_GUIDE: false,\n                //tempSnapConfiguartion: state.snapMask\n              }));\n            break;\n          }\n        case KEYBOARD_BUTTON_CODE.C:\n          {\n            const selectedLayer = state.scene.selectedLayer;\n            const selected = state.scene.layers[selectedLayer].selected;\n\n            if ((mode === MODE_IDLE || mode === MODE_3D_VIEW) && (selected.holes.length || selected.areas.length || selected.items.length || selected.lines.length)) {\n              if (selected.holes.length) {\n                const hole = state.scene.layers[selectedLayer].holes[selected.holes[0]];\n                store.dispatch(copyProperties(hole.properties));\n              }\n              else if (selected.areas.length) {\n                const area = state.scene.layers[selectedLayer].areas[selected.areas[0]];\n                store.dispatch(copyProperties(area.properties));\n              }\n              else if (selected.items.length) {\n                const item = state.scene.layers[selectedLayer].items[selected.items[0]];\n                store.dispatch(copyProperties(item.properties));\n              }\n              else if (selected.lines.length) {\n                const line = state.scene.layers[selectedLayer].lines[selected.lines[0]];\n                store.dispatch(copyProperties(line.properties));\n              }\n            }\n            break;\n          }\n        case KEYBOARD_BUTTON_CODE.V:\n          {\n            store.dispatch(pasteProperties());\n            break;\n          }\n        case KEYBOARD_BUTTON_CODE.CTRL:\n          {\n            store.dispatch(setAlterateState());\n            break;\n          }\n      }\n\n    });\n\n    window.addEventListener('keyup', event => {\n\n      const state = stateExtractor(store.getState());\n      const mode = state.mode;\n\n      switch (event.keyCode) {\n        case KEYBOARD_BUTTON_CODE.ALT:\n          {\n            if (MODE_SNAPPING.includes(mode))\n              store.dispatch(toggleSnap({\n                ...state.snapMask,\n                //...state.snapMask.tempSnapConfiguartion\n              }));\n            break;\n          }\n        case KEYBOARD_BUTTON_CODE.CTRL:\n          {\n            store.dispatch(setAlterateState());\n            break;\n          }\n      }\n\n    });\n\n  }\n}\n","import actions from '../actions/export';\n\nexport default function consoleDebugger() {\n\n  return (store, stateExtractor) => {\n    (window as any).ReactPlanner = {\n      ...actions,\n\n      getStore() {\n        return store;\n      },\n\n      getState() {\n        return stateExtractor(store.getState())\n      },\n\n      do(actions, delay = 300) {\n        actions = actions.reverse();\n        const dispatch = store.dispatch;\n        const dispatchAction = () => {\n          console.info(`There are other ${actions.length} actions on stack`);\n          if (actions.length === 0) return;\n          dispatch(actions.pop());\n          if (actions.length === 0) return;\n          setTimeout(dispatchAction, delay);\n        };\n        setTimeout(dispatchAction, 0);\n      }\n    };\n\n    console.groupCollapsed(\"ReactPlanner\");\n    console.info(\"ReactPlanner is ready\");\n    console.info(\"console.log(ReactPlanner)\");\n    console.log((window as any).ReactPlanner);\n    console.groupEnd();\n  }\n}\n","import ToolbarComponents from './toolbar/export';\nimport Content from './content';\nimport SidebarComponents from './sidebar/export';\nimport FooterBarComponents from './footerbar/export';\nimport Viewer2DComponents from './viewer2d/export';\nimport StyleComponents from './style/export';\n\nexport {\n  ToolbarComponents,\n  Content,\n  SidebarComponents,\n  FooterBarComponents,\n  Viewer2DComponents,\n  StyleComponents\n};\n\nexport default {\n  ToolbarComponents,\n  Content,\n  SidebarComponents,\n  FooterBarComponents,\n  Viewer2DComponents,\n  StyleComponents\n};\n","import ToolbarButton from './toolbar-button';\nimport ToolbarSaveButton from './toolbar-save-button';\nimport ToolbarLoadButton from './toolbar-load-button';\nimport Toolbar from './toolbar';\n\nexport {\n  ToolbarButton,\n  ToolbarSaveButton,\n  ToolbarLoadButton,\n  Toolbar\n};\n\nexport default {\n  ToolbarButton,\n  ToolbarSaveButton,\n  ToolbarLoadButton,\n  Toolbar\n};\n","import Sidebar from './sidebar';\nimport Panel from './panel';\nimport PanelLayers from './panel-layers';\nimport PanelLayerElement from './panel-layer-elements';\nimport PanelGuides from './panel-guides';\n\nexport {\n  Sidebar,\n  Panel,\n  PanelLayers,\n  PanelLayerElement,\n  PanelGuides\n};\n\nexport default {\n  Sidebar,\n  Panel,\n  PanelLayers,\n  PanelLayerElement,\n  PanelGuides\n};\n","import FooterToggleButton from './footer-toggle-button';\nimport FooterContentButton from './footer-content-button';\nimport FooterBar from './footerbar';\n\nexport {\n  FooterToggleButton,\n  FooterContentButton,\n  FooterBar\n};\n\nexport default {\n  FooterToggleButton,\n  FooterContentButton,\n  FooterBar\n};\n","import { Layer } from \"../../../models\";\nimport * as Geometry from \"../../../utils/geometry\";\n\nconst THRESHOLD_ANGLE = 0.3;\n\nfunction uniqueArray<T>(array: T[]): T[] {\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\nexport function calcLineEnd(layer: Layer, lineId: string, centerVertexId: string, thickness: number): { x: number, y: number }[] {\n    let points: { x: number, y: number }[] = [];\n    const centerVertex = layer.vertices[centerVertexId];\n    const connectedLines = uniqueArray(centerVertex.lines.map((lineId) => layer.lines[lineId])).filter(line => line !== undefined);\n    if (connectedLines.length < 2) {\n        points.push({\n            x: 0, y: thickness / 2\n        })\n        points.push({\n            x: 0, y: -thickness / 2\n        })\n        return points;\n    }\n\n    const connectedLineVertexId = layer.lines[lineId].vertices.find(id => id !== centerVertexId);\n    const firstVertexIsCenter = (layer.lines[lineId].vertices[0] === centerVertexId);\n    const connectedLineVertex = layer.vertices[connectedLineVertexId];\n    const connectedLineVertexAngle = Geometry.angleBetweenTwoVertices(centerVertex, connectedLineVertex);\n    const connectedLineThickness = layer.lines[lineId].properties.thickness.length || 0;\n\n    // Calculate relative angles for connected vertices\n    const connectedVertices = connectedLines.map((line) => {\n        const thickness: number = line.properties.thickness.length || 0;\n        const vertex = layer.vertices[line.vertices.find(id => id !== centerVertexId)];\n        if (!vertex) {\n            return;\n        }\n        const angle = Geometry.angleBetweenTwoVertices(centerVertex, vertex) - connectedLineVertexAngle;\n        const degree = angle * 180 / Math.PI;\n        return {\n            thickness,\n            angle,\n            vertex,\n            degree,\n        };\n    }).filter((v) => v !== undefined);\n\n    const sortedVertices = connectedVertices.sort((a, b) => a.angle - b.angle);\n\n    // Find vertices before and after the target vertex\n    const vertexIndex = sortedVertices.findIndex(v => v.vertex.id === connectedLineVertexId);\n    const rightVertex = sortedVertices[vertexIndex === 0 ? sortedVertices.length - 1 : vertexIndex - 1];\n    const leftVertex = sortedVertices[vertexIndex === sortedVertices.length - 1 ? 0 : vertexIndex + 1];\n    rightVertex.angle = 2 * Math.PI - rightVertex.angle;\n    if (rightVertex.angle > 2 * Math.PI) {\n        rightVertex.angle -= 2 * Math.PI;\n    }\n    rightVertex.degree = rightVertex.angle * 180 / Math.PI;\n    if (leftVertex.angle < 0) {\n        leftVertex.angle += 2 * Math.PI;\n    }\n\n    const oneNeigbor = (connectedLines.length === 2);\n\n    const half_thickness = thickness / 2;\n    let angleDiff = 0\n    const lengthLine = 340;\n    const length = 100;\n\n\n    angleDiff = leftVertex.angle;\n    if (oneNeigbor) {\n        angleDiff = 2 * Math.PI - angleDiff;\n    }\n    const halfLeftThickness = leftVertex.thickness / 2;\n\n    const botWall = Geometry.linePassingThroughTwoPoints(0, - half_thickness, length, - half_thickness);\n    const topLine = Geometry.linePassingThroughTwoPoints(0, halfLeftThickness / Math.cos(angleDiff), lengthLine * Math.cos(angleDiff), lengthLine * Math.sin(angleDiff) + halfLeftThickness / Math.cos(angleDiff));\n    let point2 = Geometry.twoLinesIntersection(botWall.a, botWall.b, botWall.c, topLine.a, topLine.b, topLine.c);\n    if (point2 && angleDiff > THRESHOLD_ANGLE) {\n        point2 = { x: -point2.x, y: point2.y };\n        points.push(point2);\n    } else {\n        points.push({ x: 0, y: -halfLeftThickness });\n    }\n    if (!oneNeigbor) {\n        points.push({ x: 0, y: 0 });\n    }\n\n    angleDiff = rightVertex.angle;\n\n    const halfRightThickness = rightVertex.thickness / 2;\n\n    const topWall = Geometry.linePassingThroughTwoPoints(0, half_thickness, length, half_thickness);\n    const botLine = Geometry.linePassingThroughTwoPoints(0, - halfRightThickness / Math.cos(angleDiff), lengthLine * Math.cos(angleDiff), lengthLine * Math.sin(angleDiff) - halfRightThickness / Math.cos(angleDiff));\n    let point = Geometry.twoLinesIntersection(topWall.a, topWall.b, topWall.c, botLine.a, botLine.b, botLine.c);\n    if (point && angleDiff > THRESHOLD_ANGLE && !(angleDiff == 2 * Math.PI)) {\n        point = { x: point.x, y: point.y };\n        points.push(point);\n    } else {\n        points.push({ x: 0, y: halfRightThickness });\n    }\n\n    if (Math.abs(connectedLineVertexAngle) == Math.PI / 2) {\n        points = points.map(p => { return { x: p.x, y: p.y } });\n    }\n\n    if (connectedLineVertexAngle <= Math.PI / 2 && connectedLineVertexAngle > -Math.PI / 2) {\n        points = points.map(p => { return { x: p.x, y: p.y } });\n    }\n\n    if (connectedLineVertexAngle == -Math.PI / 2 && firstVertexIsCenter) {\n        points = points.map(p => { return { x: p.x, y: -p.y } });\n    }\n    if (connectedLineVertexAngle == Math.PI / 2 && firstVertexIsCenter) {\n        points = points.map(p => { return { x: p.x, y: -p.y } });\n    }\n    if (Math.abs(connectedLineVertexAngle) < Math.PI / 2) {\n        points = points.map(p => { return { x: p.x, y: -p.y } });\n    }\n\n\n    return points\n    // returns deltas from line end 2/3 points always 3 maybe second(middle point) empty\n}\n","import {\n  TextureLoader,\n  Mesh,\n  RepeatWrapping,\n  Vector2,\n  BoxGeometry,\n  MeshBasicMaterial,\n  Group,\n  MeshStandardMaterial,\n  MeshStandardMaterialParameters,\n  BufferGeometry,\n  Float32BufferAttribute,\n  Vector3,\n  DoubleSide,\n  SRGBColorSpace,\n  Object3D,\n  Object3DEventMap,\n  Texture\n} from 'three';\n\nimport { CSG } from 'three-csg-ts';\nimport { verticesDistance } from '../../utils/geometry';\nimport * as SharedStyle from '../../shared-style';\nimport { Layer, Line, Scene } from '../../models';\nimport { CatalogElementTextures } from '../../types';\nimport { calcLineEnd } from './utils/calcPolygon';\n\nconst halfPI = Math.PI / 2;\n\nconst baseTextureCache: Record<string, Texture> = {};\nconst loaderSingleton = new TextureLoader();\n\nfunction getBaseTexture(uri: string): Texture {\n  if (!uri) return null as any;\n  if (baseTextureCache[uri]) return baseTextureCache[uri];\n  const tex = loaderSingleton.load(uri);\n  tex.colorSpace = SRGBColorSpace;\n  baseTextureCache[uri] = tex;\n  return tex;\n}\n\n\nconst applyTexture = (texture: CatalogElementTextures[string], length: number, height: number) => {\n  const material = new MeshStandardMaterial();\n\n  const setupMap = (\n    base: Texture,\n    repeatL: number,\n    repeatH: number,\n    assign: (t: Texture) => void,\n    extra?: (t: Texture) => void\n  ) => {\n    if (!base) return;\n\n    const cloneAndAssign = () => {\n      if (!base.image || !base.image.width) {\n        requestAnimationFrame(cloneAndAssign);\n        return;\n      }\n      const map = base.clone();\n      map.image = base.image;\n      map.wrapS = RepeatWrapping;\n      map.wrapT = RepeatWrapping;\n      map.repeat.set(repeatL, repeatH);\n      map.needsUpdate = true;\n      assign(map);\n      if (extra) extra(map);\n      material.needsUpdate = true;\n    };\n\n    cloneAndAssign();\n  };\n\n  if (texture) {\n    const base = getBaseTexture(texture.uri);\n    setupMap(\n      base,\n      length * texture.lengthRepeatScale,\n      height * texture.heightRepeatScale,\n      (m) => { material.map = m; }\n    );\n\n    if (texture.normal) {\n      const baseNormal = getBaseTexture(texture.normal.uri);\n      setupMap(\n        baseNormal,\n        length * texture.normal.lengthRepeatScale,\n        height * texture.normal.heightRepeatScale,\n        (m) => { material.normalMap = m; },\n        () => { material.normalScale = new Vector2(texture.normal.normalScaleX, texture.normal.normalScaleY); }\n      );\n    }\n  }\n\n  return material;\n};\n\n\nexport function buildWall(element: Line, layer: Layer, scene: Scene, textures: CatalogElementTextures) {\n  // Get the two vertices of the wall\n  let vertex0 = layer.vertices[element.vertices[0]];\n  let vertex1 = layer.vertices[element.vertices[1]];\n  let inverted = false;\n\n  // The first vertex is the smaller one\n  if (vertex0.x > vertex1.x) {\n    const app = vertex0;\n    vertex0 = vertex1;\n    vertex1 = app;\n    inverted = true;\n  }\n  // Get height and thickness of the wall converting them into the current scene units\n  const height = element.properties.height.length;\n  const thickness = element.properties.thickness.length;\n  const faceThickness = 0.2; // thickness of decorative textured panel\n  const faceDistance = 0.5;    // no artificial gap; panels will be shifted just outside the wall body\n\n  const distance = verticesDistance(vertex0, vertex1);\n\n\n  const points1 = calcLineEnd(layer, element.id, element.vertices[0], thickness);\n  const rawPoints2 = calcLineEnd(layer, element.id, element.vertices[1], thickness);\n  const points2 = rawPoints2.map(p => ({ x: distance - p.x, y: p.y }));\n\n  // Robustly pair front/back ends to avoid twists: match end corner closest (in plan y) to the start corner\n  const endA = points2[0];\n  const endB = points2[points2.length - 1];\n  const frontEnd = Math.abs(endA.y - points1[0].y) <= Math.abs(endB.y - points1[0].y) ? endA : endB;\n  const backEnd = (frontEnd === endA) ? endB : endA;\n\n  const frontPoints = [points1[0], frontEnd].map((p) => { return { y: p.y * -1, x: p.x } });\n  const backPoints = [points1[points1.length - 1], backEnd].map((p) => { return { y: p.y * -1, x: p.x } });\n\n  const halfDistance = distance / 2;\n\n  const soulMaterial = new MeshBasicMaterial({ color: (element.selected ? SharedStyle.MESH_SELECTED : 0xD3D3D3) });\n  soulMaterial.side = DoubleSide;\n\n  // Build a custom prism geometry using the four plan-view corners (front/back at start/end)\n  const fStart = frontPoints[0];\n  const fEnd = frontPoints[1];\n  const bStart = backPoints[0];\n  const bEnd = backPoints[1];\n\n  const bottomY = -height / 2;\n  const topY = height / 2;\n\n  const xLocal = (x: number) => x - halfDistance; // center geometry on X=0 like BoxGeometry\n  const uFromX = (x: number) => x / distance;     // normalize along length for UVs\n\n  // 8 corner points (bottom and top)\n  const v0 = { x: xLocal(fEnd.x), y: bottomY, z: fEnd.y }; // front start bottom\n  const v1 = { x: xLocal(fStart.x), y: bottomY, z: fStart.y }; // front end bottom\n  const v2 = { x: xLocal(bStart.x), y: bottomY, z: bStart.y }; // back end bottom\n  const v3 = { x: xLocal(bEnd.x), y: bottomY, z: bEnd.y }; // back start bottom\n\n  const v4 = { x: v0.x, y: topY, z: v0.z }; // front start top\n  const v5 = { x: v1.x, y: topY, z: v1.z }; // front end top\n  const v6 = { x: v2.x, y: topY, z: v2.z }; // back end top\n  const v7 = { x: v3.x, y: topY, z: v3.z }; // back start top\n\n  const positions: number[] = [];\n  const uvs: number[] = [];\n\n  const push = (vx: { x: number; y: number; z: number }, ux = 0, vy = 0) => {\n    positions.push(vx.x, vx.y, vx.z);\n    uvs.push(ux, vy);\n  };\n\n  const tri = (\n    a: { x: number; y: number; z: number }, b: { x: number; y: number; z: number }, c: { x: number; y: number; z: number },\n    au = 0, av = 0, bu = 0, bv = 0, cu = 0, cv = 0\n  ) => {\n    push(a, au, av); push(b, bu, bv); push(c, cu, cv);\n  };\n\n  // Front long face (map UVs: u along length [0..1], v along height [0..1])\n  const uF0 = uFromX(fStart.x), uF1 = uFromX(fEnd.x);\n  tri(v0, v1, v5, uF0, 0, uF1, 0, uF1, 1);\n  tri(v0, v5, v4, uF0, 0, uF1, 1, uF0, 1);\n\n  // Back long face (UVs)\n  const uB0 = uFromX(bStart.x), uB1 = uFromX(bEnd.x);\n  tri(v2, v3, v7, uB1, 0, uB0, 0, uB0, 1);\n  tri(v2, v7, v6, uB1, 0, uB0, 1, uB1, 1);\n\n  // Start end face (no UVs needed)\n  tri(v3, v0, v4);\n  tri(v3, v4, v7);\n\n  // End end face (no UVs needed)\n  tri(v1, v2, v6);\n  tri(v1, v6, v5);\n\n  // Bottom face (close the prism)\n  tri(v0, v2, v1);\n  tri(v0, v3, v2);\n\n  // Top face\n  tri(v4, v5, v6);\n  tri(v4, v6, v7);\n\n  const soulGeometry = new BufferGeometry();\n  soulGeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n  soulGeometry.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  soulGeometry.computeVertexNormals();\n\n  let soul: Mesh = new Mesh(soulGeometry, soulMaterial);\n\n  const alpha = Math.asin((vertex1.y - vertex0.y) / (distance));\n\n  const sinAlpha = Math.sin(alpha);\n  const cosAlpha = Math.cos(alpha);\n\n  element.holes.forEach(holeID => {\n    const holeData = layer.holes[holeID];\n\n    const holeWidth = holeData.properties.width.length;\n    const holeHeight = holeData.properties.height.length;\n    const holeAltitude = holeData.properties.altitude.length;\n    const offset = inverted ? 1 - holeData.offset : holeData.offset;\n    const holeDistance = offset * distance;\n\n    const holeGeometry = new BoxGeometry(holeWidth, holeHeight, thickness);\n    const holeMesh = new Mesh(holeGeometry);\n\n    // Work in wall local space\n    holeMesh.position.set(\n      holeDistance - distance / 2,\n      -(height / 2) + holeAltitude + holeHeight / 2,\n      0\n    );\n\n    holeMesh.updateMatrix();\n\n    soul = CSG.subtract(soul, holeMesh);\n  });\n\n  soul.position.y += height / 2;\n  soul.position.x += halfDistance * cosAlpha;\n  soul.position.z -= halfDistance * sinAlpha;\n\n  soul.rotation.y = alpha;\n  soul.name = 'soul';\n\n  const frontMaterial = applyTexture(textures[element.properties.textureB], distance, height);\n  const backMaterial = applyTexture(textures[element.properties.textureA], distance, height);\n\n  // Build proper thin face panels from actual face quads, offset outward along face normal\n  // Helper to build a thin extruded quad geometry with UVs along length (u) and height (v)\n  const buildExtrudedQuad = (\n    a: { x: number; y: number; z: number },\n    b: { x: number; y: number; z: number },\n    c: { x: number; y: number; z: number },\n    d: { x: number; y: number; z: number },\n    thicknessLocal: number,\n    uA: number,\n    uB: number\n  ) => {\n    // Convert to arrays for convenience\n    const ax = a.x, ay = a.y, az = a.z;\n    const bx = b.x, by = b.y, bz = b.z;\n    const cx = c.x, cy = c.y, cz = c.z;\n    const dx = d.x, dy = d.y, dz = d.z;\n\n    // Compute face normal (a->b) x (a->d)\n    const abx = bx - ax, aby = by - ay, abz = bz - az;\n    const adx = dx - ax, ady = dy - ay, adz = dz - az;\n    // cross(ab, ad)\n    let nx = aby * adz - abz * ady;\n    let ny = abz * adx - abx * adz;\n    let nz = abx * ady - aby * adx;\n    const nLen = Math.hypot(nx, ny, nz) || 1;\n    nx /= nLen; ny /= nLen; nz /= nLen;\n\n    const halfT = thicknessLocal / 2;\n\n    // Offset the quad along +/- normal to create a thin volume\n    const aF = [ax + nx * halfT, ay + ny * halfT, az + nz * halfT]; // +normal side\n    const bF = [bx + nx * halfT, by + ny * halfT, bz + nz * halfT];\n    const cF = [cx + nx * halfT, cy + ny * halfT, cz + nz * halfT];\n    const dF = [dx + nx * halfT, dy + ny * halfT, dz + nz * halfT];\n\n    const aB = [ax - nx * halfT, ay - ny * halfT, az - nz * halfT]; // -normal side\n    const bB = [bx - nx * halfT, by - ny * halfT, bz - nz * halfT];\n    const cB = [cx - nx * halfT, cy - ny * halfT, cz - nz * halfT];\n    const dB = [dx - nx * halfT, dy - ny * halfT, dz - nz * halfT];\n\n    const pos: number[] = [];\n    const uv: number[] = [];\n\n    const pushV = (v: number[], u = 0, vT = 0) => { pos.push(v[0], v[1], v[2]); uv.push(u, vT); };\n    const triV = (A: number[], B: number[], C: number[], Au = 0, Av = 0, Bu = 0, Bv = 0, Cu = 0, Cv = 0) => {\n      pushV(A, Au, Av); pushV(B, Bu, Bv); pushV(C, Cu, Cv);\n    };\n\n    // Front face (+normal side) with UVs\n    triV(aF, bF, cF, uA, 0, uB, 0, uB, 1);\n    triV(aF, cF, dF, uA, 0, uB, 1, uA, 1);\n\n    // Back face (-normal side) UVs can be mirrored or default\n    triV(bB, aB, dB);\n    triV(bB, dB, cB);\n\n    // Sides (no UVs needed)\n    // Edge AB\n    triV(aB, aF, bF); triV(aB, bF, bB);\n    // Edge BC\n    triV(bB, bF, cF); triV(bB, cF, cB);\n    // Edge CD\n    triV(cB, cF, dF); triV(cB, dF, dB);\n    // Edge DA\n    triV(dB, dF, aF); triV(dB, aF, aB);\n\n    const g = new BufferGeometry();\n    g.setAttribute('position', new Float32BufferAttribute(pos, 3));\n    g.setAttribute('uv', new Float32BufferAttribute(uv, 2));\n    g.computeVertexNormals();\n    return g;\n  };\n\n  // Build face quads from existing corners\n  const uFrontA = uFromX(fStart.x), uFrontB = uFromX(fEnd.x);\n  const frontGeom = buildExtrudedQuad(v0, v1, v5, v4, faceThickness, uFrontA, uFrontB);\n\n  const uBackA = uFromX(bStart.x), uBackB = uFromX(bEnd.x);\n  const backGeom = buildExtrudedQuad(v2, v3, v7, v6, faceThickness, uBackB, uBackA); // note reversed to keep u increasing along length\n\n  let frontFace: Mesh = new Mesh(frontGeom, frontMaterial);\n  let backFace: Mesh = new Mesh(backGeom, backMaterial);\n\n  // Compute outward normals based on center-to-center vector so panels always sit fully outside\n  const frontCenter = new Vector3(\n    (v0.x + v1.x + v5.x + v4.x) / 4,\n    (v0.y + v1.y + v5.y + v4.y) / 4,\n    (v0.z + v1.z + v5.z + v4.z) / 4\n  );\n  const backCenter = new Vector3(\n    (v2.x + v3.x + v7.x + v6.x) / 4,\n    (v2.y + v3.y + v7.y + v6.y) / 4,\n    (v2.z + v3.z + v7.z + v6.z) / 4\n  );\n  const centerVector = new Vector3().subVectors(backCenter, frontCenter); // from front to back\n  const thicknessDir = centerVector.clone().normalize();\n  // Invert previous direction: move front along +thicknessDir and back along -thicknessDir\n  const frontOutward = thicknessDir.clone();\n  const backOutward = thicknessDir.clone().multiplyScalar(1);\n  const outwardShift = (faceThickness / 2) + faceDistance; // ensure panel sits fully outside + epsilon\n  const inwardShift = (faceThickness / 2) - faceDistance; // ensure panel sits fully outside + epsilon\n\n  // Subtract holes from the face panels as well to avoid panels crossing openings\n  element.holes.forEach(holeID => {\n    const holeData = layer.holes[holeID];\n\n    const holeWidth = holeData.properties.width.length;\n    const holeHeight = holeData.properties.height.length;\n    const holeAltitude = holeData.properties.altitude.length;\n    const offset = inverted ? 1 - holeData.offset : holeData.offset;\n    const holeDistance = offset * distance;\n\n    const holeGeometry = new BoxGeometry(holeWidth, holeHeight, thickness + faceThickness * 2 + faceDistance * 2);\n    const holeMesh = new Mesh(holeGeometry);\n\n    holeMesh.position.set(\n      holeDistance - distance / 2,\n      -(height / 2) + holeAltitude + holeHeight / 2,\n      0\n    );\n\n    holeMesh.updateMatrix();\n\n    // Front face\n    frontFace = CSG.subtract(frontFace, holeMesh);\n\n    // Back face\n    backFace = CSG.subtract(backFace, holeMesh);\n  });\n\n  // Position/rotate like soul\n  [frontFace, backFace].forEach(face => {\n    face.position.y += height / 2;\n    face.position.x += halfDistance * cosAlpha;\n    face.position.z -= halfDistance * sinAlpha;\n    face.rotation.y = alpha;\n  });\n\n\n  frontFace.translateOnAxis(frontOutward, inwardShift);\n  backFace.translateOnAxis(backOutward, outwardShift);\n\n  frontFace.name = 'frontFace';\n  backFace.name = 'backFace';\n\n  const merged = new Group();\n  merged.add(soul, frontFace, backFace);\n\n  return merged;\n}\n\nexport function updatedWall(element: Line, layer: Layer, scene: Scene, textures: CatalogElementTextures, mesh: Object3D<Object3DEventMap>, oldElement: Line, differences, selfDestroy, selfBuild) {\n  const noPerf = () => { selfDestroy(); return selfBuild(); };\n\n  const soul = mesh.getObjectByName('soul');\n  const frontFace = mesh.getObjectByName('frontFace');\n  const backFace = mesh.getObjectByName('backFace');\n\n  if (differences[0] == 'selected') {\n    const mat = new MeshBasicMaterial({ color: (element.selected ? SharedStyle.MESH_SELECTED : 0xD3D3D3) });\n    mat.side = DoubleSide;\n    (soul as Mesh).material = mat;\n  }\n  else if (differences[0] == 'properties') {\n    if (differences[1] == 'thickness') {\n      const newThickness = element.properties.thickness.length;\n      const oldThickness = oldElement.properties.thickness.length;\n      const halfNewThickness = newThickness / 2;\n      const texturedFaceDistance = halfNewThickness + 1;\n      const originalThickness = oldThickness / soul.scale.z;\n      const alpha = soul.rotation.y;\n\n      const xTemp = texturedFaceDistance * Math.cos(alpha - halfPI);\n      const zTemp = texturedFaceDistance * Math.sin(alpha - halfPI);\n\n      soul.scale.set(1, 1, newThickness / originalThickness);\n\n      frontFace.position.x = soul.position.x + xTemp;\n      frontFace.position.z = soul.position.z + zTemp;\n\n      backFace.position.x = soul.position.x - xTemp;\n      backFace.position.z = soul.position.z - zTemp;\n      return noPerf();\n    }\n    else return noPerf();\n  }\n  else return noPerf();\n\n  return mesh;\n}\n","import React from 'react';\nimport { buildWall, updatedWall } from './wall-factory-3d';\nimport * as SharedStyle from '../../shared-style';\nimport * as Geometry from '../../utils/geometry';\nimport Translator from '../../translator/translator';\nimport { Layer, Line, Scene } from '../../models';\nimport { calcLineEnd } from './utils/calcPolygon';\nimport { CatalogElementTextures, CatalogElementInfo, CatalogElement } from '../../types';\nimport * as Three from 'three';\n\nconst epsilon = 20;\nconst EPSILON_ANGLE = 0.01;\n\nconst STYLE_TEXT = { textAnchor: 'middle' } as const;\nconst STYLE_LINE = { stroke: SharedStyle.LINE_MESH_COLOR.selected };\nconst STYLE_RECT = { strokeWidth: 1, stroke: SharedStyle.LINE_MESH_COLOR.unselected, fill: 'url(#diagonalFill)' };\nconst STYLE_RECT_SELECTED = { ...STYLE_RECT, stroke: SharedStyle.LINE_MESH_COLOR.selected };\n\nconst translator = new Translator();\n\nfunction orderPoints(points: { x: number, y: number }[]) {\n  // Compute centroid\n  const centroid = points.reduce(\n    (acc, p) => ({ x: acc.x + p.x, y: acc.y + p.y }),\n    { x: 0, y: 0 }\n  );\n  centroid.x /= points.length;\n  centroid.y /= points.length;\n\n  // Sort by angle from centroid\n  return points.slice().sort((a, b) => {\n    const angleA = Math.atan2(a.y - centroid.y, a.x - centroid.x);\n    const angleB = Math.atan2(b.y - centroid.y, b.x - centroid.x);\n    return angleA - angleB;\n  });\n}\n\nexport default function WallFactory(name: string, info: CatalogElementInfo, textures: CatalogElementTextures) {\n  const textureValues = { 'none': 'None', 'bricks': false };\n\n  for (const textureName in textures) { // textures is always an object\n    textureValues[textureName] = textures[textureName].name;\n  }\n\n  const wallElement: CatalogElement = {\n    name,\n    prototype: 'lines',\n    info,\n    properties: {\n      height: {\n        label: translator.t('height'),\n        type: 'length-measure',\n        defaultValue: {\n          length: 300\n        }\n      },\n      thickness: {\n        label: translator.t('thickness'),\n        type: 'length-measure',\n        defaultValue: {\n          length: 20\n        }\n      },\n      textureA: {\n        label: translator.t('texture') + ' A',\n        type: 'enum',\n        defaultValue: textureValues.bricks ? 'bricks' : 'none',\n        values: textureValues\n      },\n      textureB: {\n        label: translator.t('texture') + ' B',\n        type: 'enum',\n        defaultValue: textureValues.bricks ? 'bricks' : 'none',\n        values: textureValues\n      },\n    },\n\n    render2D: function (element: Line, layer: Layer, scene: Scene) {\n      let { x: x1, y: y1, lines: lines1 } = layer.vertices[element.vertices[0]];\n      let { x: x2, y: y2, lines: lines2 } = layer.vertices[element.vertices[1]];\n\n      const length = Geometry.pointsDistance(x1, y1, x2, y2);\n      const length_5 = length / 5;\n\n      const thickness = element.properties.thickness.length;\n      const half_thickness = thickness / 2;\n      const half_thickness_eps = half_thickness + epsilon;\n      const char_height = 11;\n      const extra_epsilon = 5;\n      const textDistance = half_thickness + epsilon + extra_epsilon;\n\n      const points1 = calcLineEnd(layer, element.id, element.vertices[0], thickness);\n      const points2 = calcLineEnd(layer, element.id, element.vertices[1], thickness);\n      const wp1 = layer.vertices[element.vertices[0]];\n      const wp2 = layer.vertices[element.vertices[1]];\n      const angleWall = Geometry.angleBetweenTwoVertices(wp1, wp2);\n      let points = [];\n\n      const degreeWall = angleWall * 180 / Math.PI;\n      const lineInverted = (degreeWall > 90 || degreeWall < -90);\n      if (lineInverted) { // currently dragged\n        points.push(...points1.map((p) => ({ x: length - p.x, y: p.y })));\n        points.push(...points2);\n      } else {\n        points.push(...points1);\n        points.push(...points2.map((p) => ({ x: length - p.x, y: p.y })));\n      }\n\n      points = orderPoints(points);\n\n      lines1 = lines1.filter((line) => (line !== undefined && line !== element.id));\n      lines2 = lines2.filter((line) => (line !== undefined && line !== element.id));\n\n      return (element.selected) ?\n        <g>\n          {/*<rect x=\"0\" y={-half_thickness} width={length} height={thickness} style={STYLE_RECT_SELECTED} />*/}\n          {<polygon points={points.map((p) => `${p.x},${p.y}`).join(' ')} style={STYLE_RECT_SELECTED} />}\n          <line x1={length_5} y1={-half_thickness_eps} x2={length_5} y2={half_thickness_eps} style={STYLE_LINE} />\n          <text x={length_5} y={textDistance + char_height} style={STYLE_TEXT}>A</text>\n          <text x={length_5} y={-textDistance} style={STYLE_TEXT}>B</text>\n        </g> :\n        <>\n          {/*<rect x=\"0\" y={-half_thickness} width={length} height={thickness} style={STYLE_RECT} />*/}\n          {<polygon points={points.map((p) => `${p.x},${p.y}`).join(' ')} style={STYLE_RECT} />}\n          {/* ////<text x={length_5} y={-thickness} style={STYLE_TEXT}>{element.id}</text>*/}\n        </>\n    },\n\n    async render3D(element: Line, layer: Layer, scene: Scene) {\n      return buildWall(element, layer, scene, textures);\n    },\n\n    async updateRender3D(element: Line, layer: Layer, scene: Scene, mesh: Three.Object3D<Three.Object3DEventMap>, oldElement: Line, differences, selfDestroy, selfBuild) {\n      return updatedWall(element, layer, scene, textures, mesh, oldElement, differences, selfDestroy, selfBuild);\n    }\n  };\n\n  return wallElement;\n}\n","import {\n  Shape,\n  MeshPhongMaterial,\n  ShapeGeometry,\n  Box3,\n  TextureLoader,\n  BackSide,\n  FrontSide,\n  Object3D,\n  Mesh,\n  MeshBasicMaterial,\n  RepeatWrapping,\n  Vector2,\n  DoubleSide,\n  Object3DEventMap\n} from 'three';\nimport * as SharedStyle from '../../shared-style';\nimport { CatalogElementTextures } from '../../types';\nimport { Scene, Layer, Area } from '../../models';\n\n/**\n * Apply a texture to a wall face\n * @param material: The material of the face\n * @param texture: The texture to load\n * @param length: The lenght of the face\n * @param height: The height of the face\n */\nconst applyTexture = (material: MeshPhongMaterial, texture: CatalogElementTextures[string], length: number, height: number) => {\n  const loader = new TextureLoader();\n\n  if (texture) {\n    material.map = loader.load(texture.uri);\n    material.needsUpdate = true;\n    material.map.wrapS = RepeatWrapping;\n    material.map.wrapT = RepeatWrapping;\n    material.map.repeat.set(length * texture.lengthRepeatScale, height * texture.heightRepeatScale);\n\n    if (texture.normal) {\n      material.normalMap = loader.load(texture.normal.uri);\n      material.normalScale = new Vector2(texture.normal.normalScaleX, texture.normal.normalScaleY);\n      material.normalMap.wrapS = RepeatWrapping;\n      material.normalMap.wrapT = RepeatWrapping;\n      material.normalMap.repeat.set(length * texture.normal.lengthRepeatScale, height * texture.normal.heightRepeatScale);\n    }\n  }\n};\n\n/**\n * Function that assign UV coordinates to a geometry\n * @param geometry\n */\nconst assignUVs = (geometry) => {\n  geometry.computeBoundingBox();\n\n  const { min, max } = geometry.boundingBox;\n\n  const offset = new Vector2(0 - min.x, 0 - min.y);\n  const range = new Vector2(max.x - min.x, max.y - min.y);\n\n  geometry.faceVertexUvs[0] = geometry.faces.map((face) => {\n\n    const v1 = geometry.vertices[face.a];\n    const v2 = geometry.vertices[face.b];\n    const v3 = geometry.vertices[face.c];\n\n    return [\n      new Vector2((v1.x + offset.x) / range.x, (v1.y + offset.y) / range.y),\n      new Vector2((v2.x + offset.x) / range.x, (v2.y + offset.y) / range.y),\n      new Vector2((v3.x + offset.x) / range.x, (v3.y + offset.y) / range.y)\n    ];\n\n  });\n\n  geometry.uvsNeedUpdate = true;\n};\n\nexport function createArea(element: Area, layer: Layer, scene: Scene, textures: CatalogElementTextures) {\n  const vertices = [];\n\n  element.vertices.forEach(vertexID => {\n    vertices.push(layer.vertices[vertexID]);\n  });\n\n  const textureName = element.properties.texture;\n  let color = element.properties.patternColor;\n\n  if (element.selected) {\n    color = SharedStyle.AREA_MESH_COLOR.selected;\n  } else if (textureName && textureName !== 'none') {\n    color = SharedStyle.AREA_MESH_COLOR.unselected;\n  }\n\n  const shape = new Shape();\n  shape.moveTo(vertices[0].x, vertices[0].y);\n  for (let i = 1; i < vertices.length; i++) {\n    shape.lineTo(vertices[i].x, vertices[i].y);\n  }\n\n  const areaMaterial = new MeshPhongMaterial({ side: DoubleSide, color });\n\n  /* Create holes for the area */\n  element.holes.forEach(holeID => {\n    let holeCoords = [];\n    layer.areas[holeID].vertices.forEach(vertexID => {\n      const { x, y } = layer.vertices[vertexID];\n      holeCoords.push([x, y]);\n    });\n    holeCoords = holeCoords.reverse();\n    const holeShape = createShape(holeCoords);\n    shape.holes.push(holeShape);\n  });\n\n  const shapeGeometry = new ShapeGeometry(shape);\n  //assignUVs(shapeGeometry);\n\n  const boundingBox = new Box3().setFromObject(new Mesh(shapeGeometry, new MeshBasicMaterial()));\n\n  const width = boundingBox.max.x - boundingBox.min.x;\n  const height = boundingBox.max.y - boundingBox.min.y;\n\n  const texture = textures[textureName];\n\n  applyTexture(areaMaterial, texture, width, height);\n\n  const area = new Mesh(shapeGeometry, areaMaterial);\n\n  area.rotation.x -= Math.PI / 2;\n  area.name = 'floor';\n\n  return area;\n}\n\nexport function updatedArea(element, layer, scene, textures, mesh: Object3D<Object3DEventMap>, oldElement, differences, selfDestroy, selfBuild) {\n  const noPerf = () => { selfDestroy(); return selfBuild(); };\n  const floor = mesh.getObjectByName('floor');\n\n  if (differences[0] == 'selected') {\n    const color = element.selected ? SharedStyle.AREA_MESH_COLOR.selected : (element.properties.patternColor || SharedStyle.AREA_MESH_COLOR.unselected);\n    ((floor as Mesh).material as MeshPhongMaterial).color.set(color);\n  }\n  else if (differences[0] == 'properties') {\n    if (differences[1] === 'texture') {\n      return noPerf();\n    }\n  }\n  else return noPerf();\n\n  return mesh;\n}\n\n/**\n * This function will create a shape given a list of coordinates\n * @param shapeCoords\n * @returns {Shape}\n */\nconst createShape = (shapeCoords) => {\n  const shape = new Shape();\n  shape.moveTo(shapeCoords[0][0], shapeCoords[0][1]);\n  for (let i = 1; i < shapeCoords.length; i++) {\n    shape.lineTo(shapeCoords[i][0], shapeCoords[i][1]);\n  }\n  return shape;\n};\n","import React from 'react';\nimport { createArea, updatedArea } from './area-factory-3d';\nimport * as SharedStyle from '../../shared-style';\nimport Translator from '../../translator/translator';\nimport { CatalogElementTextures } from '../../types';\nimport { Area, Layer, Scene } from '../../models';\nimport { Object3D, Object3DEventMap } from 'three';\nimport { CatalogElement, CatalogElementInfo } from '../../types';\n\nconst translator = new Translator();\n\nexport default function AreaFactory(name: string, info: CatalogElementInfo, textures: CatalogElementTextures) {\n  const textureValues = { 'none': 'None' };\n  for (const textureName in textures) {\n    textureValues[textureName] = textures[textureName].name\n  }\n\n  const areaElement: CatalogElement = {\n    name,\n    prototype: 'areas',\n    info: {\n      ...info,\n      visibility: {\n        catalog: false,\n        layerElementsVisible: false\n      }\n    },\n    properties: {\n      patternColor: {\n        label: translator.t('color'),\n        type: 'color',\n        defaultValue: SharedStyle.AREA_MESH_COLOR.unselected\n      },\n      thickness: {\n        label: translator.t('thickness'),\n        type: 'length-measure',\n        defaultValue: {\n          length: 0\n        }\n      },\n      texture: {\n        label: translator.t('texture'),\n        type: 'enum',\n        defaultValue: 'none',\n        values: textureValues\n      },\n    },\n    render2D: function (element: Area, layer: Layer, scene: Scene) {\n      let path = '';\n\n      ///print area path\n      element.vertices.forEach((vertexID, ind) => {\n        const vertex = layer.vertices[vertexID];\n        path += (ind ? 'L' : 'M') + vertex.x + ' ' + vertex.y + ' ';\n      });\n\n      //add holes\n      element.holes.forEach(areaID => {\n        const area = layer.areas[areaID];\n\n        area.vertices.reverse().forEach((vertexID, ind) => {\n          const vertex = layer.vertices[vertexID];\n          path += (ind ? 'L' : 'M') + vertex.x + ' ' + vertex.y + ' ';\n        });\n\n      });\n\n      const fill = element.selected ? SharedStyle.AREA_MESH_COLOR.selected : element.properties.patternColor;\n\n      return (<path d={path} fill={fill} />);\n    },\n\n    async render3D(element: Area, layer: Layer, scene: Scene) {\n      return createArea(element, layer, scene, textures)\n    },\n\n    async updateRender3D(element: Area, layer: Layer, scene: Scene, mesh: Object3D<Object3DEventMap>, oldElement: Area, differences, selfDestroy, selfBuild) {\n      return updatedArea(element, layer, scene, textures, mesh, oldElement, differences, selfDestroy, selfBuild);\n  }\n};\n\nreturn areaElement\n}\n","import WallFactory from './wall-factory';\nimport AreaFactory from './area-factory';\n\nexport {\n  WallFactory,\n  AreaFactory\n};\n\nexport default {\n  WallFactory,\n  AreaFactory\n};\n","import { Store, UnknownAction } from 'redux';\nimport { Area, Hole, Item, Layer, Line, Scene, State, StateProps } from './models';\nimport { SNAP_MASK } from './utils/snap';\nimport { ReactNode } from 'react';\nimport { Object3D, Object3DEventMap } from 'three';\n\nexport type CatalogPropertyType =\n    | 'color'\n    | 'enum'\n    | 'string'\n    | 'number'\n    | 'length-measure'\n    | 'toggle'\n    | 'checkbox'\n    | 'hidden'\n    | 'read-only';\n\ninterface CatalogPropertyBase {\n    label?: string;\n    hook?: (...args: any[]) => any;\n    // Additional arbitrary custom extensions are permitted\n    [extra: string]: any; // keep backward compatibility / extensibility\n}\n\nexport interface ColorProperty extends CatalogPropertyBase {\n    type: 'color';\n    /** hex / css color */\n    defaultValue: string;\n}\n\nexport interface EnumProperty extends CatalogPropertyBase {\n    type: 'enum';\n    defaultValue: string; // TODO: key of values map\n    values: Record<string, string | number | boolean>;\n}\n\nexport interface StringProperty extends CatalogPropertyBase {\n    type: 'string';\n    defaultValue: string;\n}\n\nexport type NumberProperty = CatalogPropertyBase & {\n    type: 'number';\n    defaultValue: number;\n    min?: number;\n    max?: number;\n    step?: number;\n}\n\nexport type LengthMeasureValue = {\n    /** canonical length in catalog unit (cm) */\n    length: number;\n    /** raw value in selected unit */\n    _length?: number;\n    /** selected unit (e.g., 'cm') */\n    _unit?: string;\n}\n\nexport type LengthMeasureProperty = CatalogPropertyBase & {\n    type: 'length-measure';\n    defaultValue: LengthMeasureValue;\n    min?: number;\n    max?: number;\n};\n\nexport type ToggleProperty = CatalogPropertyBase & {\n    type: 'toggle';\n    defaultValue: boolean;\n    /** label on the toggle button */\n    actionName?: string;\n}\n\nexport type CheckboxProperty = CatalogPropertyBase & {\n    type: 'checkbox';\n    defaultValue: boolean;\n    values?: Record<string, boolean>;\n}\n\nexport type HiddenProperty = CatalogPropertyBase & {\n    type: 'hidden';\n    defaultValue: any;\n}\n\nexport type ReadOnlyProperty = CatalogPropertyBase & {\n    type: 'read-only';\n    defaultValue: any;\n}\n\nexport type CatalogProperty =\n    | ColorProperty\n    | EnumProperty\n    | StringProperty\n    | NumberProperty\n    | LengthMeasureProperty\n    | ToggleProperty\n    | CheckboxProperty\n    | HiddenProperty\n    | ReadOnlyProperty;\n\nexport type CatalogElementProperty = CatalogProperty; //TODO: remove {}\nexport type CatalogElementPropertyWithDefault = CatalogElementProperty & { defaultValue?: any };\n\nexport type CatalogElementProperties = Record<string, CatalogElementProperty>;\n\n// ============================================================================\n// Property value inference helpers\n// Map a catalog property config to the runtime value type used in element.properties\n// ============================================================================\n\nexport type PropertyValue<T extends CatalogElementProperty> =\n    T extends LengthMeasureProperty ? LengthMeasureValue :\n    T extends ColorProperty ? string :\n    T extends EnumProperty ? string : // stored key (currently string)\n    T extends StringProperty ? string :\n    T extends NumberProperty ? number :\n    T extends ToggleProperty ? boolean :\n    T extends CheckboxProperty ? boolean :\n    T extends HiddenProperty ? any :\n    T extends ReadOnlyProperty ? any :\n    any;\n\nexport type ElementPropertiesValues<P extends CatalogElementProperties> = { [K in keyof P]: PropertyValue<P[K]> };\n\n// Map each property key to its catalog property 'type' literal (e.g. 'width' -> 'length-measure').\nexport type PropertyTypeMap<P extends CatalogElementProperties> = { [K in keyof P]: P[K]['type'] };\n\n// Convenience extractor: given a CatalogElementBase, get its PropertyTypeMap\nexport type ExtractPropertyTypeMap<E> = E extends CatalogElementBase<any, infer P> ? PropertyTypeMap<P> : never;\n\n// Map each prototype string to its concrete element type\nexport type PrototypeToElement = {\n    lines: Omit<Line, 'properties'>;\n    holes: Omit<Hole, 'properties'>;\n    areas: Omit<Area, 'properties'>;\n    items: Omit<Item, 'properties'>;\n};\n\n// Base catalog element type parameterized by its prototype kind and its properties definition object.\n// The render/update handlers receive an element whose \"properties\" field is strongly typed with\n// the value types derived from the element's own property config (length-measure -> LengthMeasureValue, etc.).\nexport type CatalogElementBase<\n    P extends keyof PrototypeToElement,\n    Props extends CatalogElementProperties = CatalogElementProperties\n> = {\n    name: string;\n    prototype: P;\n    info: CatalogElementInfo;\n    properties: Props;\n    render2D: (\n        element: PrototypeToElement[P] & { properties: { [K in keyof Props]: PropertyValue<Props[K]> } },\n        layer: Layer,\n        scene: Scene\n    ) => ReactNode;\n    render3D: (\n        element: PrototypeToElement[P] & { properties: ElementPropertiesValues<Props> },\n        layer: Layer,\n        scene: Scene\n    ) => Promise<Object3D<Object3DEventMap>>;\n    updateRender3D?: (\n        element: PrototypeToElement[P] & { properties: ElementPropertiesValues<Props> },\n        layer: Layer,\n        scene: Scene,\n        mesh: Object3D<Object3DEventMap>,\n        oldElement: PrototypeToElement[P] & { properties: ElementPropertiesValues<Props> },\n        differences: string[],\n        selfDestroy: () => void,\n        selfBuild: () => Promise<any>\n    ) => Promise<any>;\n};\n\nexport type CatalogElementBase2 = {\n    name: string;\n    prototype: keyof PrototypeToElement;\n    info: CatalogElementInfo;\n    properties: CatalogElementProperties;\n    render2D: (\n        element: any,\n        layer: Layer,\n        scene: Scene\n    ) => ReactNode;\n    render3D: (\n        element: any,\n        layer: Layer,\n        scene: Scene\n    ) => Promise<Object3D<Object3DEventMap>>;\n    updateRender3D?: (\n        element: any,\n        layer: Layer,\n        scene: Scene,\n        mesh: Object3D<Object3DEventMap>,\n        oldElement: any,\n        differences: string[],\n        selfDestroy: () => void,\n        selfBuild: () => Promise<any>\n    ) => Promise<any>;\n} extends infer Base\n    ? { [K in keyof Base]: Base[K] } & {\n        // 🔒 Infer properties properly\n        properties: Base extends { properties: infer Props extends CatalogElementProperties }\n        ? Props\n        : never;\n        render2D: (\n            element: Base extends { prototype: infer P extends keyof PrototypeToElement, properties: infer Props extends CatalogElementProperties }\n                ? PrototypeToElement[P] & { properties: { [K in keyof Props]: PropertyValue<Props[K]> } }\n                : never,\n            layer: Layer,\n            scene: Scene\n        ) => ReactNode;\n        render3D: (\n            element: Base extends { prototype: infer P extends keyof PrototypeToElement, properties: infer Props extends CatalogElementProperties }\n                ? PrototypeToElement[P] & { properties: { [K in keyof Props]: PropertyValue<Props[K]> } }\n                : never,\n            layer: Layer,\n            scene: Scene\n        ) => Promise<Object3D<Object3DEventMap>>;\n    }\n    : never;\n\nexport type CatalogElementBase3 = {\n    name: string;\n    prototype: keyof PrototypeToElement;\n    info: CatalogElementInfo;\n    properties: CatalogElementProperties;\n    render2D: (\n        element: any,\n        layer: Layer,\n        scene: Scene\n    ) => ReactNode;\n    render3D: (\n        element: any,\n        layer: Layer,\n        scene: Scene\n    ) => Promise<Object3D<Object3DEventMap>>;\n    updateRender3D?: (\n        element: any,\n        layer: Layer,\n        scene: Scene,\n        mesh: Object3D<Object3DEventMap>,\n        oldElement: any,\n        differences: string[],\n        selfDestroy: () => void,\n        selfBuild: () => Promise<any>\n    ) => Promise<any>;\n} & {\n    // 🔒 inference: when you actually assign an object, infer Props from its `properties`\n    __infer?: <P extends keyof PrototypeToElement, Props extends CatalogElementProperties>(\n        x: {\n            name: string;\n            prototype: P;\n            info: CatalogElementInfo;\n            properties: Props;\n            render2D: (\n                element: PrototypeToElement[P] & {\n                    properties: { [K in keyof Props]: PropertyValue<Props[K]> };\n                },\n                layer: Layer,\n                scene: Scene\n            ) => ReactNode;\n            render3D: (\n                element: PrototypeToElement[P] & {\n                    properties: { [K in keyof Props]: PropertyValue<Props[K]> };\n                },\n                layer: Layer,\n                scene: Scene\n            ) => Promise<Object3D<Object3DEventMap>>;\n            updateRender3D?: (\n                element: PrototypeToElement[P] & {\n                    properties: { [K in keyof Props]: PropertyValue<Props[K]> };\n                },\n                layer: Layer,\n                scene: Scene,\n                mesh: Object3D<Object3DEventMap>,\n                oldElement: PrototypeToElement[P] & {\n                    properties: { [K in keyof Props]: PropertyValue<Props[K]> };\n                },\n                differences: (keyof Props)[],\n                selfDestroy: () => void,\n                selfBuild: () => Promise<any>\n            ) => Promise<any>;\n        }\n    ) => void;\n};\n\nexport type CatalogElementBase4 =\n    <P extends keyof PrototypeToElement, Props extends CatalogElementProperties>(def: {\n        name: string;\n        prototype: P;\n        info: CatalogElementInfo;\n        properties: Props;\n        render2D: (\n            element: PrototypeToElement[P] & {\n                properties: { [K in keyof Props]: PropertyValue<Props[K]> };\n            },\n            layer: Layer,\n            scene: Scene\n        ) => ReactNode;\n        render3D: (\n            element: PrototypeToElement[P] & {\n                properties: { [K in keyof Props]: PropertyValue<Props[K]> };\n            },\n            layer: Layer,\n            scene: Scene\n        ) => Promise<Object3D<Object3DEventMap>>;\n    }) => typeof def;\n\n// Backward compatible non-generic union (uses loose property typing).\n// Kept for existing code that relied on previous definition.\nexport type AnyCatalogElement =\n    | CatalogElementBase<'lines', CatalogElementProperties>\n    | CatalogElementBase<'holes', CatalogElementProperties>\n    | CatalogElementBase<'areas', CatalogElementProperties>\n    | CatalogElementBase<'items', CatalogElementProperties>;\n\n// Generic CatalogElement alias with defaults allowing explicit instantiation if desired.\nexport type CatalogElement<\n    P extends keyof PrototypeToElement = keyof PrototypeToElement,\n    Props extends CatalogElementProperties = CatalogElementProperties\n> = CatalogElementBase<P, Props>;\n\n// Helper factory to get full inference of property value types when defining catalog elements.\n// Usage: export default defineCatalogElement({ name: ..., properties: { width: { type: 'length-measure', ... } }, ... })\n// Inside render2D/render3D the element parameter will have element.properties.width correctly typed.\n// NOTE: Previously there was a helper function `defineCatalogElement` used to preserve\n// generic inference for property value types when declaring catalog elements.\n// If you want full typing WITHOUT that function, declare your element with an\n// explicit generic instantiation of `CatalogElementBase` (or the `CatalogElement` alias):\n//\n//   type MyProps = {\n//     width: { type: 'length-measure'; defaultValue: { length: 100 } };\n//     color: { type: 'color'; defaultValue: '#ffffff' };\n//   };\n//   export const myElement: CatalogElementBase<'items', MyProps> = {\n//     name: 'myElement',\n//     prototype: 'items',\n//     info: { title: 'My Element', description: '', image: '', tag: [] },\n//     properties: {\n//       width: { type: 'length-measure', defaultValue: { length: 100 } },\n//       color: { type: 'color', defaultValue: '#ffffff' }\n//     },\n//     render2D(element, layer, scene) {\n//       // element.properties.width.length is strongly typed (number)\n//       return null;\n//     },\n//     async render3D(element, layer, scene) {\n//       // Same strong typing here\n//       return new Object3D();\n//     }\n//   };\n//\n// This pattern provides the same property-type safety without needing a factory function.\n\nexport type CatalogElementInfo = {\n    title: string;\n    description: string;\n    image: string | { uri: string; width?: number; height?: number };\n    tag: string[];\n    visibility?: { catalog?: boolean; layerElementsVisible?: boolean };\n}\n\nexport type CatalogElementTextures = {\n    [key: string]: {\n        name: string;\n        uri: string;\n        lengthRepeatScale: number;\n        heightRepeatScale: number;\n        normal?: {\n            uri: string;\n            lengthRepeatScale: number;\n            heightRepeatScale: number;\n            normalScaleX: number;\n            normalScaleY: number;\n        }\n    }\n}\n\nexport type ElementType = Line | Hole | Area | Item;\n\nexport type ReactPlannerStore = Store<any, UnknownAction>;\n\nexport interface ReactPlannerPluginProps {\n    store: ReactPlannerStore;\n    stateExtractor: (state: State) => any;\n}\n\nexport type SnapMaskType = Partial<typeof SNAP_MASK>;\n\nexport type ElementPrototypes = 'areas' | 'holes' | 'items' | 'lines' | 'vertices';\n\nexport type StructuredComponentType = {\n    index?: number;\n    condition: boolean;\n    dom: React.ReactNode;\n};\n\nexport type ComponentType =\n    | React.ComponentType<{ state: StateProps }>\n    | StructuredComponentType;\n\nexport interface ReactPlannerStateExtractor {\n    (state: State): StateProps;\n}\n\nexport interface ReactPlannerPlugin {\n    (store: ReactPlannerStore, stateExtractor: ReactPlannerStateExtractor): void;\n}\n\nexport class ViewerEventError extends Event {\n    viewerEvent: any;\n\n    constructor(type: string, viewerEvent: any) {\n        super(type);\n        this.viewerEvent = viewerEvent;\n    }\n}\n\nexport type ElementTypes = 'area' | 'hole' | 'item' | 'line';\n\n// ---------------------------------------------------------------------------\n// Helper factory for catalog elements with full property value inference.\n// Usage:\n//   export default defineCatalogElement({\n//     name: 'my-item',\n//     prototype: 'items',\n//     info: { title: 'My Item', description: '', image: '', tag: []},\n//     properties: { width: { type: 'length-measure', defaultValue: { length: 100 } } },\n//     render2D(element) { /* element.properties.width.length: number */ },\n//     async render3D(element) { ... }\n//   });\nexport function defineCatalogElement<\n    P extends keyof PrototypeToElement,\n    Props extends CatalogElementProperties\n>(el: CatalogElementBase<P, Props>): CatalogElementBase<P, Props> { return el; }\n","import React from 'react';\nimport { BoxGeometry, MeshBasicMaterial, Mesh, BoxHelper } from 'three';\nimport { defineCatalogElement, ReactPlannerSharedStyle } from '@archef2000/react-planner';\n\nexport default defineCatalogElement({\n  name: 'cube',\n  prototype: 'items',\n\n  info: {\n    title: 'cube',\n    tag: ['demo'],\n    description: 'Demo item',\n    image: require('./cube.png')\n  },\n\n  properties: {\n    color: {\n      label: 'Color',\n      type: 'color',\n      defaultValue: ReactPlannerSharedStyle.AREA_MESH_COLOR.unselected\n    },\n    width: {\n      label: 'Width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 100\n      }\n    },\n    height: {\n      label: 'Height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 100\n      }\n    },\n    depth: {\n      label: 'Depth',\n      type: 'length-measure',\n      defaultValue: {\n        length: 100\n      }\n    },\n  },\n\n  render2D: (element, layer, scene) => {\n    const style = {\n      stroke: !element.selected ? ReactPlannerSharedStyle.LINE_MESH_COLOR.unselected : ReactPlannerSharedStyle.MESH_SELECTED,\n      strokeWidth: 2,\n      fill: element.properties.color\n    } as const;\n\n    const w = element.properties.width.length;\n    const d = element.properties.depth.length;\n    const w2 = w / 2;\n    const d2 = d / 2;\n\n    return (\n      <g transform={`translate(-${w2}, -${d2})`}>\n        <rect x=\"0\" y=\"0\" width={w} height={d} style={style} />\n      </g>\n    );\n  },\n\n  async render3D(element, layer, scene) {\n    const w = element.properties.width.length;\n    const h = element.properties.height.length;\n    const d = element.properties.depth.length;\n    const geometry = new BoxGeometry(w, h, d);\n    const material = new MeshBasicMaterial({\n      color: element.properties.color\n    });\n\n    const mesh = new Mesh(geometry, material);\n\n    const box = new BoxHelper(mesh, !element.selected ? ReactPlannerSharedStyle.LINE_MESH_COLOR.unselected : ReactPlannerSharedStyle.MESH_SELECTED);\n    box.material.linewidth = 2;\n    box.renderOrder = 1000;\n    mesh.add(box);\n\n    mesh.position.y = (h / 2);\n\n    return mesh;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/text-3d/img.png\";","module.exports = __webpack_public_path__ + \"catalog/holes/window/window.mtl\";","import { defineCatalogElement } from '@archef2000/react-planner';\nimport React from 'react';\nimport * as Three from 'three';\n\nconst grey = new Three.MeshLambertMaterial({ color: 0x3f3f3f });\nconst white = new Three.MeshLambertMaterial({ color: 0xffffff, transparent: true, opacity: 0.5 });\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\n\nfunction makeDoor(handleSide: boolean) {\n  const slidingDoor = new Three.Mesh();\n\n  const doorShape = new Three.Shape();\n  doorShape.moveTo(1, 2);\n  doorShape.lineTo(0, 2);\n  doorShape.lineTo(0, 0);\n  doorShape.lineTo(1, 0);\n\n  const doorHole = new Three.Path();\n  doorHole.moveTo(.65, 1.75);\n  doorHole.lineTo(.35, 1.75);\n  doorHole.lineTo(.35, 1.25);\n  doorHole.lineTo(.65, 1.25);\n  doorShape.holes.push(doorHole);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: 0.05,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometry = new Three.ExtrudeGeometry(doorShape, extrudeSettings);\n  const door = new Three.Mesh(geometry, grey);\n  if (handleSide) {\n    door.position.set(-1, 0, 0);\n  } else {\n    door.position.set(0, 0, 0);\n  }\n  slidingDoor.add(door);\n\n  const doorGeometry = new Three.BoxGeometry(1, 2, 0.05);\n  const door2 = new Three.Mesh(doorGeometry, grey);\n  if (handleSide) {\n    door2.position.set(1.5, 1, 0.065);\n  } else {\n    door2.position.set(-.5, 1, 0.065);\n  }\n  door.add(door2);\n\n  const barGeometry = new Three.BoxGeometry(2, 0.1, 0.1);\n  const doorBar = new Three.Mesh(barGeometry, grey);\n  doorBar.position.set(-0, 2.07, 0.05);\n  slidingDoor.add(doorBar);\n\n  const glassGeometry = new Three.BoxGeometry(0.3, 0.5, 0.05);\n  const glass = new Three.Mesh(glassGeometry, white);\n  glass.position.set(0.5, 1.5, 0.025);\n  door.add(glass);\n\n  const HandleGeometry1 = new Three.CylinderGeometry(0.051, 0.051, 0.0625, 80, 80, true);\n  black.side = Three.DoubleSide;\n  const handle_p1 = new Three.Mesh(HandleGeometry1, black);\n  handle_p1.position.set(0.2, 1, 0.025);\n  handle_p1.rotation.x = Math.PI / 2;\n  door.add(handle_p1);\n\n  const HandleGeometry2 = new Three.BoxGeometry(0.1, 0.02, 0.0625);\n  const handle_p2 = new Three.Mesh(HandleGeometry2, black);\n  handle_p2.position.set(0.2, 1, 0.025);\n  door.add(handle_p2);\n\n  if (!handleSide) {\n    handle_p1.position.x = 0.8;\n    handle_p2.position.x = 0.8;\n  }\n\n  return slidingDoor\n}\n\nexport default defineCatalogElement({\n  name: 'sliding door',\n  prototype: 'holes',\n\n  info: {\n    tag: ['door'],\n    title: 'sliding door',\n    description: 'iron door',\n    image: require('./slidingDoor.png')\n  },\n\n  properties: {\n    width: {\n      label: 'width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 200\n      }\n    },\n    height: {\n      label: 'height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 215\n      }\n    },\n    thickness: {\n      label: 'thickness',\n      type: 'length-measure',\n      defaultValue: {\n        length: 30\n      }\n    },\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    },\n    flip_horizontal: {\n      label: 'horizontal flip',\n      type: 'checkbox',\n      defaultValue: false,\n      values: {\n        'none': false,\n        'yes': true\n      }\n    },\n    flip_vertical: {\n      label: 'vertical flip',\n      type: 'checkbox',\n      defaultValue: true,\n      values: {\n        'left': false,\n        'right': true\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const STYLE_HOLE_BASE = { stroke: '#000', strokeWidth: '14px', fill: '#000' };\n    const STYLE_HOLE_BASE2 = { stroke: '#000', strokeWidth: '16px', fill: '#000' };\n    const STYLE_HOLE_SELECTED = { stroke: '#0096fd', strokeWidth: '14px', fill: '#0096fd', cursor: 'move' };\n\n    const epsilon = 3;\n    const flip: boolean = element.properties.flip_horizontal;\n    const handleSide: boolean = element.properties.flip_vertical;\n    const holeWidth = element.properties.width.length;\n    const holeStyle = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE;\n    const holeStyle2 = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE2;\n    const length = element.properties.width.length;\n\n    let scaleX: number, scaleY: number;\n    let pX1: number, pX2: number;\n\n    if (flip) {\n      scaleX = 1;\n      if (handleSide) {\n        pX1 = 0;\n        pX2 = holeWidth / 2;\n        scaleY = -1;\n      } else {\n        pX1 = holeWidth / 2;\n        pX2 = holeWidth;\n        scaleY = -1;\n      }\n    } else {\n      scaleX = 1;\n      if (handleSide) {\n        pX1 = holeWidth / 2;\n        pX2 = holeWidth;\n        scaleY = 1;\n      } else {\n        pX1 = 0;\n        pX2 = holeWidth / 2;\n        scaleY = 1;\n      }\n    }\n\n    return (\n      <g transform={`translate(${-element.properties.width.length / 2}, 0)`}>\n        <line key='1' x1='0' y1={0 - epsilon} x2={holeWidth} y2={0 - epsilon} style={holeStyle}\n          transform={`scale(${scaleX},${scaleY})`} />\n        <line key='2' x1={pX1} y1={5 - epsilon} x2={pX2} y2={5 - epsilon} style={holeStyle2}\n          transform={`scale(${scaleX},${scaleY})`} />\n        <line key='3' x1={holeWidth} y1={0 - epsilon} x2={holeWidth} y2={15 + epsilon} style={holeStyle2}\n          transform={`scale(${scaleX},${scaleY})`} />\n        <line key='4' x1='0' y1={0 - epsilon} x2='0' y2={15 + epsilon} style={holeStyle2}\n          transform={`scale(${scaleX},${scaleY})`} />\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const flip: boolean = element.properties.flip_horizontal;\n    const handleSide: boolean = element.properties.flip_vertical;\n    const width = element.properties.width.length;\n    const height = element.properties.height.length;\n    const thickness = element.properties.thickness.length;\n    const newAltitude = element.properties.altitude.length;\n\n    const slidingDoor = new Three.Object3D();\n    slidingDoor.add(makeDoor(handleSide).clone());\n\n    const valuePosition = new Three.Box3().setFromObject(slidingDoor);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    if (element.selected) {\n      const boundingBox = new Three.BoxHelper(slidingDoor, 0x99c3fb);\n      boundingBox.material.linewidth = 5;\n      boundingBox.renderOrder = 1000;\n      boundingBox.material.depthTest = false;\n      slidingDoor.add(boundingBox);\n    }\n\n    if (flip) {\n      slidingDoor.rotation.y += Math.PI;\n    }\n\n    slidingDoor.position.y += newAltitude;\n    slidingDoor.scale.set(width / deltaX, height / deltaY, thickness / deltaZ);\n\n    return slidingDoor;\n  }\n});\n","import React, { Component } from 'react';\nimport { Models, ReactPlannerContext } from '@archef2000/react-planner';\n\nconst grabCircleRadius = 10;\nconst hoverCircleRadius = 14;\nconst rulerColor = '#f45c42';\nconst hoverColor = '#ff9900';\n\nconst grabCircleStyle = {\n  cursor: 'grab',\n  fill: rulerColor,\n  transition: 'r 150ms ease-in'\n};\n\nconst hoverCircleStyle = {\n  cursor: 'grab',\n  fill: hoverColor,\n  transition: 'r 150ms ease-in'\n};\n\nconst pointsDistance = (x1, y1, x2, y2) => {\n\n  if (\n    !isNaN(x1) &&\n    !isNaN(y1) &&\n    !isNaN(x2) &&\n    !isNaN(y2)\n  ) {\n    if (!(x1 == 0 && y1 == 0 && x2 == 0 && y2 == 0)) {\n      return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n    }\n  }\n\n  return 0;\n};\n\ninterface ImageFulProps {\n  element: any;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  distance: any;\n  width: number;\n  height: number;\n  imageUri: string;\n  layer: Models.Layer;\n  scene: Models.Scene;\n}\n\ninterface ImageFulState {\n  handleMouseMove1: boolean;\n  handleMouseMove2: boolean;\n  hover1: boolean;\n  hover2: boolean;\n  imageLoadError: boolean;\n}\n\nexport default class ImageFul extends Component<ImageFulProps, ImageFulState> {\n  static contextType = ReactPlannerContext;\n  declare context: React.ContextType<typeof ReactPlannerContext>;\n\n  constructor(props: ImageFulProps) {\n    super(props);\n\n    this.state = {\n      handleMouseMove1: false,\n      handleMouseMove2: false,\n      hover1: false,\n      hover2: false,\n      imageLoadError: false\n    };\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.toggleHover1 = this.toggleHover1.bind(this);\n    this.toggleHover2 = this.toggleHover2.bind(this);\n  }\n\n  onMouseDown(event) {\n    const target = event.viewerEvent.originalEvent.target;\n\n    if (target.nodeName === 'circle') {\n      if (target.attributes.name) {\n        if (target.attributes.name.nodeValue === 'fst-anchor') {\n          this.setState({ handleMouseMove1: !this.state.handleMouseMove1 });\n        }\n        else if (target.attributes.name.nodeValue === 'snd-anchor') {\n          this.setState({ handleMouseMove2: !this.state.handleMouseMove2 });\n        }\n      }\n    }\n  }\n\n  onMouseMove(event) {\n    let { x, y } = event.viewerEvent;\n\n    y = this.props.scene.height - y;\n\n    const dist = pointsDistance(this.props.x1, this.props.y1, this.props.x2, this.props.y2);\n    const scale = !isNaN(dist) && dist ? (this.props.distance.length / dist) : 0;\n\n    const origin = {\n      x: this.props.element.x - (this.props.width * scale / 2),\n      y: this.props.element.y + (this.props.height * scale / 2)\n    };\n\n    const minX = origin.x + (this.props.width * scale);\n    const minY = origin.y - (this.props.height * scale);\n\n    if (x < origin.x) {\n      x = origin.x;\n    }\n    else if (x > minX) {\n      x = minX;\n    }\n\n    if (y > origin.y) {\n      y = origin.y;\n    }\n    else if (y < minY) {\n      y = minY;\n    }\n\n    const newX = (x - origin.x);\n    const newY = (origin.y - y);\n\n    if (this.state.handleMouseMove1) {\n      const dist = pointsDistance(newX, newY, this.props.x2, this.props.y2);\n      this.context.projectActions.setProperties({ x1: newX, y1: newY, distance: { length: dist } });\n    }\n    else if (this.state.handleMouseMove2) {\n      const dist = pointsDistance(this.props.x1, this.props.y1, newX, newY);\n      this.context.projectActions.setProperties({ x2: newX, y2: newY, distance: { length: dist } });\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown-planner-event', this.onMouseDown);\n    document.addEventListener('mousemove-planner-event', this.onMouseMove);\n\n    if (this.props.imageUri) {\n      const img = new Image;\n      img.src = this.props.imageUri;\n      img.onload = () => {\n        this.setState({ imageLoadError: false });\n        this.context.projectActions.setProperties({ width: img.naturalWidth, height: img.naturalHeight });\n      };\n      img.onerror = () => {\n        this.setState({ imageLoadError: true })\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown-planner-event', this.onMouseDown);\n    document.removeEventListener('mousemove-planner-event', this.onMouseMove);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.imageUri !== this.props.imageUri) {\n      const img = new Image;\n      img.src = this.props.imageUri;\n      img.onload = () => {\n        this.setState({ imageLoadError: false });\n        this.context.projectActions.setProperties({ width: img.naturalWidth, height: img.naturalHeight });\n      };\n      img.onerror = () => {\n        this.setState({ imageLoadError: true })\n      };\n    }\n  }\n\n  toggleHover1(e) {\n    this.setState({ hover1: !this.state.hover1 })\n  }\n\n  toggleHover2(e) {\n    this.setState({ hover2: !this.state.hover2 })\n  }\n\n  render() {\n    const dist = pointsDistance(this.props.x1, this.props.y1, this.props.x2, this.props.y2);\n    const scale = !isNaN(dist) && dist ? (this.props.distance.length / dist) : 0;\n    const half_w = this.props.width / 2;\n\n    const ruler = !this.props.element.selected ? null : (\n      <g>\n        <line key=\"1\" x1={this.props.x1} y1={this.props.y1} x2={this.props.x2} y2={this.props.y2} stroke={rulerColor}\n          strokeWidth=\"3px\" />\n        <circle\n          onMouseEnter={this.toggleHover1}\n          onMouseLeave={this.toggleHover1}\n          key=\"2\"\n          name=\"fst-anchor\"\n          cx={this.props.x1}\n          cy={this.props.y1}\n          r={this.state.hover1 || this.state.handleMouseMove1 ? hoverCircleRadius : grabCircleRadius}\n          style={this.state.hover1 || this.state.handleMouseMove1 ? hoverCircleStyle : grabCircleStyle} />\n        <circle\n          onMouseEnter={this.toggleHover2}\n          onMouseLeave={this.toggleHover2}\n          key=\"3\"\n          name=\"snd-anchor\"\n          cx={this.props.x2}\n          cy={this.props.y2}\n          r={this.state.hover2 || this.state.handleMouseMove2 ? hoverCircleRadius : grabCircleRadius}\n          style={this.state.hover2 || this.state.handleMouseMove2 ? hoverCircleStyle : grabCircleStyle} />\n      </g>\n    );\n\n    return (\n      <g\n        transform={`scale(${scale}, ${scale}), scale(1,-1) translate(${-this.props.width / 2}, ${-this.props.height / 2})`}>\n        {\n          this.props.imageUri && !this.state.imageLoadError ?\n            <image\n              xlinkHref={this.props.imageUri}\n              x=\"0\"\n              y=\"0\"\n              width={this.props.width}\n              height={this.props.height}\n            /> :\n            <g>\n              <rect x=\"0\" y=\"0\" width={this.props.width} height={this.props.height} fill=\"#CCC\"></rect>\n              <text\n                x={half_w}\n                y={this.props.height / 2}\n                textAnchor=\"middle\"\n                alignmentBaseline=\"central\"\n                fontFamily=\"Arial\"\n                fontSize=\"35\"\n                fill=\"#666\"\n              >\n                <tspan x={half_w} dy=\"-2em\">Set the image url on the component</tspan>\n                <tspan x={half_w} dy=\"1em\">property inside the sidebar,</tspan>\n                <tspan x={half_w} dy=\"1em\">click and move each vertex</tspan>\n                <tspan x={half_w} dy=\"1em\">of the ruler then set the real distance</tspan>\n                <tspan x={half_w} dy=\"1em\">in the component property</tspan>\n              </text>\n            </g>\n        }\n        {ruler}\n      </g>\n    )\n  }\n}\n","import * as Three from 'three';\nimport React from 'react';\nimport ImageFul from './imageful';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nexport default defineCatalogElement({\n  name: \"image\",\n  prototype: \"items\",\n\n  info: {\n    title: \"image\",\n    tag: ['image'],\n    description: \"Image\",\n    image: require('./image.png')\n  },\n\n  properties: {\n    imageUri: {\n      label: \"Image URI\",\n      type: \"string\",\n      defaultValue: '',\n    },\n    x1: {\n      label: \"x1\",\n      type: \"number\",\n      defaultValue: 0\n    },\n    y1: {\n      label: \"y1\",\n      type: \"number\",\n      defaultValue: 0\n    },\n    x2: {\n      label: \"x2\",\n      type: \"number\",\n      defaultValue: 100\n    },\n    y2: {\n      label: \"y2\",\n      type: \"number\",\n      defaultValue: 0\n    },\n    distance: {\n      label: \"Distance\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    },\n    width: {\n      label: \"Width\",\n      type: \"number\",\n      defaultValue: 600\n    },\n    height: {\n      label: \"Height\",\n      type: \"number\",\n      defaultValue: 400\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const { x1, y1, x2, y2, distance, width, height, imageUri } = element.properties;\n\n    return (\n      <ImageFul\n        imageUri={imageUri}\n        element={element}\n        distance={distance}\n        x1={x1}\n        x2={x2}\n        y1={y1}\n        y2={y2}\n        width={width}\n        height={height}\n        layer={layer}\n        scene={scene}\n      />\n    );\n  },\n\n  async render3D(element, layer, scene) {\n    return new Three.Object3D();\n  }\n});\n","var map = {\n\t\"./air-conditioner/planner-element.tsx\": 7245,\n\t\"./armchairs/planner-element.tsx\": 2295,\n\t\"./balcony/planner-element.tsx\": 7808,\n\t\"./bench/planner-element.tsx\": 5898,\n\t\"./blackboard/planner-element.tsx\": 5649,\n\t\"./bookcase/planner-element.tsx\": 5449,\n\t\"./camera/planner-element.tsx\": 2187,\n\t\"./canteen-table/planner-element.tsx\": 3957,\n\t\"./canteencart/planner-element.tsx\": 3380,\n\t\"./chair/planner-element.tsx\": 831,\n\t\"./chairdesk/planner-element.tsx\": 3508,\n\t\"./child-chair-desk/planner-element.tsx\": 9458,\n\t\"./cleaningcart/planner-element.tsx\": 7845,\n\t\"./coat-hook/planner-element.tsx\": 1839,\n\t\"./column-square/planner-element.tsx\": 6750,\n\t\"./column/planner-element.tsx\": 4168,\n\t\"./cube/planner-element.tsx\": 8125,\n\t\"./desk/planner-element.tsx\": 8645,\n\t\"./deskdouble/planner-element.tsx\": 9574,\n\t\"./deskoffice/planner-element.tsx\": 3685,\n\t\"./electrical-panel/planner-element.tsx\": 3101,\n\t\"./fire-extinguisher/planner-element.tsx\": 2652,\n\t\"./fridge/planner-element.tsx\": 1889,\n\t\"./hanger/planner-element.tsx\": 7591,\n\t\"./hiroos/planner-element.tsx\": 3472,\n\t\"./hub/planner-element.tsx\": 9737,\n\t\"./image/planner-element.tsx\": 8246,\n\t\"./kitchen/planner-element.tsx\": 2600,\n\t\"./lim/planner-element.tsx\": 2482,\n\t\"./metal-detector/planner-element.tsx\": 5034,\n\t\"./monitor-pc/planner-element.tsx\": 9326,\n\t\"./naspo/planner-element.tsx\": 9457,\n\t\"./projector/planner-element.tsx\": 7492,\n\t\"./radiator-modern-style/planner-element.tsx\": 6862,\n\t\"./radiator-old-style/planner-element.tsx\": 6492,\n\t\"./recycling-bins/planner-element.tsx\": 6863,\n\t\"./router-wifi/planner-element.tsx\": 555,\n\t\"./schneider/planner-element.tsx\": 2504,\n\t\"./school-desk-double/planner-element.tsx\": 4414,\n\t\"./school-desk/planner-element.tsx\": 5142,\n\t\"./simple-stair/planner-element.tsx\": 3516,\n\t\"./sink/planner-element.tsx\": 4471,\n\t\"./smoke-detector/planner-element.tsx\": 7956,\n\t\"./sofa/planner-element.tsx\": 9363,\n\t\"./table/planner-element.tsx\": 24,\n\t\"./teaching-post/planner-element.tsx\": 6068,\n\t\"./text-3d/planner-element.tsx\": 2474,\n\t\"./three-phase-panel/planner-element.tsx\": 4447,\n\t\"./toilet/planner-element.tsx\": 5597,\n\t\"./trash/planner-element.tsx\": 4254,\n\t\"./tv/planner-element.tsx\": 7800,\n\t\"./umbrella-stand/planner-element.tsx\": 8525,\n\t\"./wardrobe/planner-element.tsx\": 3998\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8266;","module.exports = __webpack_public_path__ + \"catalog/holes/window/window.png\";","module.exports = __webpack_public_path__ + \"catalog/areas/area/textures/parquet.jpg\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 30;\nconst DEPTH = 40;\nconst HEIGHT = 70;\n\nconst textureLoader = new Three.TextureLoader();\nconst Image = textureLoader.load(require('./bronze-texture.jpg'));\nconst material = new Three.MeshLambertMaterial({ map: Image });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const umbrellaStand = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = .45;\n  const height = .7;\n\n  roundedRectShape.moveTo(x, y);\n  roundedRectShape.lineTo(x + width, y);\n  roundedRectShape.lineTo(x + width, y + height);\n  roundedRectShape.lineTo(x, y + height);\n\n  const holePath = new Three.Path();\n  holePath.moveTo(width / 2, height / 2);\n  holePath.absellipse(.225, .15, .100, .025, .025, Math.PI * 2, false);\n  roundedRectShape.holes.push(holePath);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: .05,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const SideGeometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const Side1 = new Three.Mesh(SideGeometry, material);\n\n  Side1.position.set(.05, 1.2, 0);\n  Side1.rotation.z += Math.PI;\n  umbrellaStand.add(Side1);\n\n  const Side2 = new Three.Mesh(SideGeometry, material);\n  Side2.position.set(.05, 1.2, -.4);\n  Side2.rotation.z += Math.PI;\n  umbrellaStand.add(Side2);\n\n  const Side3 = new Three.Mesh(SideGeometry, material);\n  Side3.position.set(.05, 1.2, -.4);\n  Side3.rotation.z += Math.PI;\n  Side3.rotation.y += Math.PI / 2;\n  umbrellaStand.add(Side3);\n\n  const Side4 = new Three.Mesh(SideGeometry, material);\n  Side4.position.set(-.45, 1.2, -.4);\n  Side4.rotation.z += Math.PI;\n  Side4.rotation.y += Math.PI / 2;\n  umbrellaStand.add(Side4);\n\n  const geometryBox = new Three.BoxGeometry(.55, .45, .05);\n  const downPlane = new Three.Mesh(geometryBox, material);\n  downPlane.rotation.x += Math.PI / 2;\n  downPlane.position.set(-.175, .475, -.175);\n  umbrellaStand.add(downPlane);\n\n  return umbrellaStand\n}\n\nfunction makeObjectMinLOD() {\n  const umbrellaStand = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width = .45;\n  const height = .7;\n\n  roundedRectShape.moveTo(x, y);\n  roundedRectShape.lineTo(x + width, y);\n  roundedRectShape.lineTo(x + width, y + height);\n  roundedRectShape.lineTo(x, y + height);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: .05,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const SideGeometry = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const Side1 = new Three.Mesh(SideGeometry, material);\n\n  Side1.position.set(.05, 1.2, 0);\n  Side1.rotation.z += Math.PI;\n  umbrellaStand.add(Side1);\n\n  const Side2 = new Three.Mesh(SideGeometry, material);\n  Side2.position.set(.05, 1.2, -.4);\n  Side2.rotation.z += Math.PI;\n  umbrellaStand.add(Side2);\n\n  const Side3 = new Three.Mesh(SideGeometry, material);\n  Side3.position.set(.05, 1.2, -.4);\n  Side3.rotation.z += Math.PI;\n  Side3.rotation.y += Math.PI / 2;\n  umbrellaStand.add(Side3);\n\n  const Side4 = new Three.Mesh(SideGeometry, material);\n  Side4.position.set(-.45, 1.2, -.4);\n  Side4.rotation.z += Math.PI;\n  Side4.rotation.y += Math.PI / 2;\n  umbrellaStand.add(Side4);\n\n  const geometryBox = new Three.BoxGeometry(.55, .45, .05);\n  const downPlane = new Three.Mesh(geometryBox, material);\n  downPlane.rotation.x += Math.PI / 2;\n  downPlane.position.set(-.175, .475, -.175);\n  umbrellaStand.add(downPlane);\n\n  return umbrellaStand\n}\n\nexport default defineCatalogElement({\n  name: \"umbrella-stand\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"umbrella stand\",\n    description: \"umbrella stand\",\n    image: require('./umbrellaStand.png')\n  },\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /***************** lod max *******************/\n\n    const umbrellaStandMaxLOD = new Three.Object3D();\n    umbrellaStandMaxLOD.add(objectMaxLOD.clone());\n\n    const value = new Three.Box3().setFromObject(umbrellaStandMaxLOD);\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    umbrellaStandMaxLOD.position.x += -WIDTH / 1.5;\n    umbrellaStandMaxLOD.position.z += DEPTH / 4;\n    umbrellaStandMaxLOD.position.y += -HEIGHT / 1.6 + newAltitude;\n    umbrellaStandMaxLOD.rotation.y += -Math.PI / 2;\n    umbrellaStandMaxLOD.scale.set(WIDTH / deltaZ, HEIGHT / deltaY, DEPTH / deltaX);\n\n    /**************** lod min *******************/\n\n    const umbrellaStandMinLOD = new Three.Object3D();\n    umbrellaStandMinLOD.add(objectMinLOD.clone());\n    umbrellaStandMinLOD.position.x += -WIDTH / 1.5;\n    umbrellaStandMinLOD.position.z += DEPTH / 4;\n    umbrellaStandMinLOD.position.y += -HEIGHT / 1.6 + newAltitude;\n    umbrellaStandMinLOD.rotation.y += -Math.PI / 2;\n    umbrellaStandMinLOD.scale.set(WIDTH / deltaZ, HEIGHT / deltaY, DEPTH / deltaX);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(umbrellaStandMaxLOD, 200);\n    lod.addLevel(umbrellaStandMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/sofa/sofa.obj\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 70;\nconst DEPTH = 50;\nconst HEIGHT = 90;\n\nconst brown = new Three.MeshLambertMaterial({ color: 0x9b8c75 });\nconst grey = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\nconst green = new Three.MeshBasicMaterial({ color: 0x669966 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const desk = new Three.Mesh();\n\n  const newDepth = .5;\n  const newWidth = .9;\n  const newHeight = 1;\n  const radius = .03;\n\n  const geometry = new Three.BoxGeometry(newWidth + newWidth / 6, newHeight / 20, newDepth + newDepth / 4);\n\n  const boxMaterials = [brown, brown, green, brown, brown, brown];\n\n  const plane = new Three.Mesh(geometry, boxMaterials);\n  plane.position.y = newHeight;\n  desk.add(plane);\n\n  const geometry_legs = new Three.CylinderGeometry(radius, radius, newHeight, 32, 32);\n\n  const geometry2 = new Three.BoxGeometry(newWidth, newHeight / 20, newDepth);\n  const plane2 = new Three.Mesh(geometry2, brown);\n  plane2.position.y = newHeight / 2 + newHeight / 4;\n  desk.add(plane2);\n\n  const geometry3 = new Three.BoxGeometry(newWidth, newHeight / 10, newDepth / 20);\n  const plane3 = new Three.Mesh(geometry3, brown);\n  plane3.position.y = newHeight / 2 + newHeight / 4 + newHeight / 16;\n  plane3.position.z = newDepth / 3 + newDepth / 5;\n  desk.add(plane3);\n\n  const leg1 = new Three.Mesh(geometry_legs, grey);\n  leg1.position.x = newWidth / 2;\n  leg1.position.z = newDepth / 2;\n  leg1.position.y = newHeight / 2;\n  desk.add(leg1);\n\n  const leg2 = new Three.Mesh(geometry_legs, grey);\n  leg2.position.x = newWidth / 2;\n  leg2.position.z = -newDepth / 2;\n  leg2.position.y = newHeight / 2;\n  desk.add(leg2);\n\n  const leg3 = new Three.Mesh(geometry_legs, grey);\n  leg3.position.x = -newWidth / 2;\n  leg3.position.z = newDepth / 2;\n  leg3.position.y = newHeight / 2;\n  desk.add(leg3);\n\n  const leg4 = new Three.Mesh(geometry_legs, grey);\n  leg4.position.x = -newWidth / 2;\n  leg4.position.z = -newDepth / 2;\n  leg4.position.y = newHeight / 2;\n  desk.add(leg4);\n\n  return desk\n}\n\nfunction makeObjectMinLOD() {\n  const desk = new Three.Mesh();\n\n  const newDepth = .5;\n  const newWidth = .9;\n  const newHeight = 1;\n  const radius = .03;\n\n  const geometry = new Three.BoxGeometry(newWidth + newWidth / 6, newHeight / 20, newDepth + newDepth / 4);\n\n  const boxMaterials = [brown, brown, green, brown, brown, brown];\n\n  const plane = new Three.Mesh(geometry, boxMaterials);\n  plane.position.y = newHeight;\n  desk.add(plane);\n\n  const geometry_legs = new Three.CylinderGeometry(radius, radius, newHeight, 32, 32);\n\n  const geometry2 = new Three.BoxGeometry(newWidth, newHeight / 20, newDepth);\n  const plane2 = new Three.Mesh(geometry2, brown);\n  plane2.position.y = newHeight / 2 + newHeight / 4;\n  desk.add(plane2);\n\n  const geometry3 = new Three.BoxGeometry(newWidth, newHeight / 10, newDepth / 20);\n  const plane3 = new Three.Mesh(geometry3, brown);\n  plane3.position.y = newHeight / 2 + newHeight / 4 + newHeight / 16;\n  plane3.position.z = newDepth / 3 + newDepth / 5;\n  desk.add(plane3);\n\n  const leg1 = new Three.Mesh(geometry_legs, grey);\n  leg1.position.x = newWidth / 2;\n  leg1.position.z = newDepth / 2;\n  leg1.position.y = newHeight / 2;\n  desk.add(leg1);\n\n  const leg2 = new Three.Mesh(geometry_legs, grey);\n  leg2.position.x = newWidth / 2;\n  leg2.position.z = -newDepth / 2;\n  leg2.position.y = newHeight / 2;\n  desk.add(leg2);\n\n  const leg3 = new Three.Mesh(geometry_legs, grey);\n  leg3.position.x = -newWidth / 2;\n  leg3.position.z = newDepth / 2;\n  leg3.position.y = newHeight / 2;\n  desk.add(leg3);\n\n  const leg4 = new Three.Mesh(geometry_legs, grey);\n  leg4.position.x = -newWidth / 2;\n  leg4.position.z = -newDepth / 2;\n  leg4.position.y = newHeight / 2;\n  desk.add(leg4);\n\n  return desk\n}\n\nexport default defineCatalogElement({\n  name: 'school desk',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'wood'],\n    title: 'school desk',\n    description: 'school desk',\n    image: require('./desk.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' }} />\n        <text key='2' x='0' y='0'\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /************* lod max ******************/\n\n    const deskMaxLOD = new Three.Object3D();\n    deskMaxLOD.add(objectMaxLOD.clone());\n\n    const valueObject = new Three.Box3().setFromObject(deskMaxLOD);\n\n    const deltaX = Math.abs(valueObject.max.x - valueObject.min.x);\n    const deltaY = Math.abs(valueObject.max.y - valueObject.min.y);\n    const deltaZ = Math.abs(valueObject.max.z - valueObject.min.z);\n\n    deskMaxLOD.rotation.y += Math.PI;\n    deskMaxLOD.position.y += newAltitude;\n    deskMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /************* lod min ******************/\n\n    const deskMinLOD = new Three.Object3D();\n    deskMinLOD.add(objectMinLOD.clone());\n    deskMinLOD.rotation.y += Math.PI;\n    deskMinLOD.position.y += newAltitude;\n    deskMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(deskMaxLOD, 200);\n    lod.addLevel(deskMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/fridge/logo.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/armchairs/armchairs.png\";","module.exports = __webpack_public_path__ + \"catalog/items/monitor-pc/black.jpg\";","module.exports = __webpack_public_path__ + \"catalog/items/sink/sink.png\";","import { ElementsFactories, CatalogElementTextures, CatalogElementInfo } from \"@archef2000/react-planner\";\n\nconst info: CatalogElementInfo = {\n  title: 'area',\n  tag: ['area'],\n  description: 'Generic Room',\n  image: ''\n};\n\nconst textures: CatalogElementTextures = {\n  parquet: {\n    name: 'Parquet',\n    uri: require('./textures/parquet.jpg'),\n    lengthRepeatScale: 0.004,\n    heightRepeatScale: 0.004,\n  },\n  tile1: {\n    name: 'Tile1',\n    uri: require('./textures/tile1.jpg'),\n    lengthRepeatScale: 0.01,\n    heightRepeatScale: 0.01,\n  },\n  ceramic: {\n    name: 'Ceramic Tile',\n    uri: require('./textures/ceramic-tile.jpg'),\n    lengthRepeatScale: 0.02,\n    heightRepeatScale: 0.02\n  },\n  strand_porcelain: {\n    name: 'Strand Porcelain Tile',\n    uri: require('./textures/strand-porcelain.jpg'),\n    lengthRepeatScale: 0.02,\n    heightRepeatScale: 0.02\n  },\n  grass: {\n    name: 'Grass',\n    uri: require('./textures/grass.jpg'),\n    lengthRepeatScale: 0.01,\n    heightRepeatScale: 0.01,\n  }\n};\n\nexport default ElementsFactories.AreaFactory('area', info, textures);\n","import { ElementsFactories, CatalogElementTextures, CatalogElementInfo } from '@archef2000/react-planner';\n\nconst info: CatalogElementInfo = {\n  title: 'wall',\n  tag: ['wall'],\n  description: 'Wall with bricks or painted',\n  image: require('./wall.png'),\n  visibility: {\n    catalog: true,\n    layerElementsVisible: true\n  }\n};\n\nconst textures: CatalogElementTextures = {\n  bricks: {\n    name: 'Bricks',\n    uri: require('./textures/bricks.jpg'),\n    lengthRepeatScale: 0.01,\n    heightRepeatScale: 0.01,\n    normal: {\n      uri: require('./textures/bricks-normal.jpg'),\n      lengthRepeatScale: 0.01,\n      heightRepeatScale: 0.01,\n      normalScaleX: 0.8,\n      normalScaleY: 0.8\n    }\n  },\n  painted: {\n    name: 'Painted',\n    uri: require('./textures/painted.jpg'),\n    lengthRepeatScale: 0.01,\n    heightRepeatScale: 0.01,\n    normal: {\n      uri: require('./textures/painted-normal.jpg'),\n      lengthRepeatScale: 0.01,\n      heightRepeatScale: 0.01,\n      normalScaleX: 0.4,\n      normalScaleY: 0.4\n    }\n  },\n};\n\nexport default ElementsFactories.WallFactory('wall', info, textures);\n\n","// TypeScript does not know about require.context by default, so we declare it here\ndeclare let require: {\n    context(directory: string, useSubdirectories?: boolean, regExp?: RegExp): any;\n};\nimport { CatalogFactory, CatalogFn } from '@archef2000/react-planner';\n\n\nimport Area from \"./areas/area/planner-element\";\nimport Wall from \"./lines/wall/planner-element\";\n\nexport function createCatalog() {\n    const catalog = CatalogFactory();\n\n    CatalogFn.registerElement(catalog, Area);\n    CatalogFn.registerElement(catalog, Wall);\n\n\n    const Holes: any[] = [];\n    const holesContext = require.context('./holes/', true, /planner-element\\.[tj]sx$/);\n    holesContext.keys().forEach((key: string) => {\n        const element = holesContext(key).default;\n        Holes.push(element);\n        CatalogFn.registerElement(catalog, element);\n    });\n\n    const Items: any[] = [];\n    const itemsContext = require.context('./items/', true, /planner-element\\.[tj]sx$/);\n    itemsContext.keys().forEach((key: string) => {\n        const element = itemsContext(key).default;\n        Items.push(element);\n        CatalogFn.registerElement(catalog, element);\n    });\n    CatalogFn.registerCategory(catalog, 'windows', 'Windows', Holes.filter(h => h.info.tag.includes(\"window\")));\n    CatalogFn.registerCategory(catalog, 'doors', 'Doors', Holes.filter(h => h.info.tag.includes(\"door\")));\n    return catalog;\n}\n\nexport default createCatalog();\n","import React, { useContext } from 'react';\nimport { MdCamera } from 'react-icons/md'\nimport { ReactPlannerComponents, ReactPlannerConstants, ReactPlannerContext } from '@archef2000/react-planner';\n\nconst {\n  MODE_IDLE,\n  MODE_2D_ZOOM_IN,\n  MODE_2D_ZOOM_OUT,\n  MODE_2D_PAN,\n  MODE_WAITING_DRAWING_LINE,\n  MODE_DRAGGING_LINE,\n  MODE_DRAGGING_VERTEX,\n  MODE_DRAGGING_ITEM,\n  MODE_DRAWING_LINE,\n  MODE_DRAWING_HOLE,\n  MODE_DRAWING_ITEM,\n  MODE_DRAGGING_HOLE,\n  MODE_ROTATING_ITEM,\n  MODE_3D_FIRST_PERSON,\n  MODE_3D_VIEW\n} = ReactPlannerConstants;\n\nconst { ToolbarButton } = ReactPlannerComponents.ToolbarComponents;\n\nexport default function ToolbarScreenshotButton({ mode }: { mode: string }) {\n  const { translator } = useContext(ReactPlannerContext);\n\n  const imageBrowserDownload = (imageUri: string) => {\n    const fileOutputLink = document.createElement('a');\n\n    let filename = 'output' + Date.now() + '.png';\n    filename = window.prompt('Insert output filename', filename) || filename;\n    if (!filename) return;\n\n    fileOutputLink.setAttribute('download', filename);\n    fileOutputLink.href = imageUri;\n    fileOutputLink.style.display = 'none';\n    document.body.appendChild(fileOutputLink);\n    fileOutputLink.click();\n    document.body.removeChild(fileOutputLink);\n  };\n\n\n  const saveScreenshotToFile: React.MouseEventHandler<HTMLDivElement> = event => {\n    event.preventDefault();\n    const canvas = document.getElementsByTagName('canvas')[0];\n    imageBrowserDownload(canvas.toDataURL());\n  };\n\n  const saveSVGScreenshotToFile: React.MouseEventHandler<HTMLDivElement> = event => {\n    event.preventDefault();\n\n    // First of all I need the svg content of the viewer\n    const svgElements = document.getElementsByTagName('svg');\n\n    // I get the element with max width (which is the viewer)\n    let maxWidthSVGElement = svgElements[0];\n    for (let i = 1; i < svgElements.length; i++) {\n      if (svgElements[i].width.baseVal.value > maxWidthSVGElement.width.baseVal.value) {\n        maxWidthSVGElement = svgElements[i];\n      }\n    }\n\n    const serializer = new XMLSerializer();\n\n    const img = new Image;\n\n    // I create the new canvas to draw\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    // Set width and height for the new canvas\n    const heightAtt = document.createAttribute('height');\n    heightAtt.value = maxWidthSVGElement.height.baseVal.value.toString();\n    canvas.setAttributeNode(heightAtt);\n\n    const widthAtt = document.createAttribute('width');\n    widthAtt.value = maxWidthSVGElement.width.baseVal.value.toString();\n    canvas.setAttributeNode(widthAtt);\n\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    img.crossOrigin = 'anonymous';\n    img.src = `data:image/svg+xml;base64,${window.btoa(serializer.serializeToString(maxWidthSVGElement))}`;\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0, maxWidthSVGElement.width.baseVal.value, maxWidthSVGElement.height.baseVal.value);\n      imageBrowserDownload(canvas.toDataURL());\n    };\n  };\n\n  if ([MODE_3D_FIRST_PERSON, MODE_3D_VIEW].includes(mode)) {\n    return (\n      <ToolbarButton active={false} tooltip={translator.t('Get Screenshot')} onClick={saveScreenshotToFile}>\n        <MdCamera />\n      </ToolbarButton>\n    );\n  }\n\n  if ([MODE_IDLE,\n    MODE_2D_ZOOM_IN,\n    MODE_2D_ZOOM_OUT,\n    MODE_2D_PAN,\n    MODE_WAITING_DRAWING_LINE,\n    MODE_DRAGGING_LINE,\n    MODE_DRAGGING_VERTEX,\n    MODE_DRAGGING_ITEM,\n    MODE_DRAWING_LINE,\n    MODE_DRAWING_HOLE,\n    MODE_DRAWING_ITEM,\n    MODE_DRAGGING_HOLE,\n    MODE_ROTATING_ITEM].includes(mode)) {\n\n    return (\n      <ToolbarButton active={false} tooltip={translator.t('Get Screenshot')} onClick={saveSVGScreenshotToFile}>\n        <MdCamera />\n      </ToolbarButton>\n    );\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport useMeasure from 'react-use-measure';\nimport { configureStore, isPlain, createSerializableStateInvariantMiddleware } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport MyCatalog, { createCatalog } from './catalog/mycatalog';\n\nimport ToolbarScreenshotButton from './ui/toolbar-screenshot-button';\n\nimport {\n  Models as PlannerModels,\n  reducer as PlannerReducer,\n  ReactPlanner,\n  Plugins as PlannerPlugins,\n} from '@archef2000/react-planner';\nimport { produce } from 'immer';\n\n//define state\nconst AppState = {\n  'react-planner': PlannerModels.State()\n};\n\n//define reducer\nconst reducer = (state: { [key: string]: any } | undefined, action: any) => {\n  state = state || AppState;\n  state = produce(state, draft => {\n    draft['react-planner'] = PlannerReducer(draft['react-planner'], action);\n  });\n  return state;\n};\n\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\n// Block specific actions in Redux DevTools\nconst devToolsActionsDenylist = [\n  'UPDATE_MOUSE_COORDS',\n  'UPDATE_ZOOM_SCALE',\n  'UPDATE_2D_CAMERA',\n];\n\nif (!isProduction) {\n  console.info('Environment is in development and these actions will be blacklisted', devToolsActionsDenylist);\n}\n\nconst isSerializable = (value: any) =>\n  typeof value === \"function\" || isPlain(value) // TODO: only exclude renderes: https://redux-toolkit.js.org/api/serializabilityMiddleware\n\nconst serializableMiddleware = createSerializableStateInvariantMiddleware({\n  isSerializable,\n})\n\nconst middleware = process.env.NODE_ENV !== 'production' ?\n  [serializableMiddleware] :\n  [];\n\nconst store = configureStore({\n  reducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    thunk: true,\n    immutableCheck: true,\n    serializableCheck: false,\n    actionCreatorCheck: true,\n  }).concat(),\n  //middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(middleware),\n  devTools: {\n    actionsDenylist: devToolsActionsDenylist,\n    maxAge: 10000,\n  },\n  /*\n  !isProduction && (window as any).devToolsExtension ?\n    (window as any).devToolsExtension({\n      features: {\n        pause: true,     // start/pause recording of dispatched actions\n        lock: true,     // lock/unlock dispatching actions and side effects\n        persist: true,     // persist states on page reloading\n        export: true,     // export history of actions in a file\n        import: 'custom', // import history of actions from a file\n        jump: true,     // jump back and forth (time travelling)\n        skip: true,     // skip (cancel) actions\n        reorder: true,     // drag and drop actions in the history list\n        dispatch: true,     // dispatch custom actions or action creators\n        test: true      // generate tests for the selected actions\n      },\n      maxAge: 99999999,\n      actionsDenylist: devToolsActionsDenylist,\n    }) :\n    f => f,\n    */\n  ...((window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__({\n    maxAge: 10000,\n    actionsDenylist: devToolsActionsDenylist,\n  }))\n});\n\nconst plugins = [\n  PlannerPlugins.Keyboard(),\n  PlannerPlugins.Autosave('react-planner_v0'),\n  PlannerPlugins.ConsoleDebugger(),\n];\n\nconst toolbarButtons = [\n  ToolbarScreenshotButton,\n];\n\n// Component that uses useMeasure hook\nfunction ResponsiveReactPlanner() {\n  const [ref, bounds] = useMeasure();\n\n  const catalog = createCatalog();\n\n  return (\n    <div ref={ref} style={{ width: '100%', height: '100%' }}>\n      {bounds.width > 0 && bounds.height > 0 && (\n        <ReactPlanner\n          catalog={catalog}\n          width={bounds.width}\n          height={bounds.height}\n          plugins={plugins}\n          toolbarButtons={toolbarButtons}\n          stateExtractor={state => state[\"react-planner\"]}\n        />\n      )}\n    </div>\n  );\n}\n\n//render\nconst container = document.getElementById('app');\nif (!container) {\n  throw new Error('Container element not found');\n}\n\n// Reuse a single React root across HMR updates\nconst globalAny = globalThis as any;\nconst ROOT_KEY = '__REACT_PLANNER_DEMO_ROOT__';\nconst root = globalAny[ROOT_KEY] || (globalAny[ROOT_KEY] = createRoot(container));\n\nroot.render(\n  <Provider store={store}>\n    <ResponsiveReactPlanner />\n  </Provider>\n);\n\n\n// Optional: clean up on hot dispose (will recreate root on next replace)\nif ((module as any)?.hot) {\n  try {\n    (module as any).hot.dispose(() => {\n      // Keep the root to avoid flicker; uncomment to fully unmount on replace\n      root.unmount();\n      delete globalAny[ROOT_KEY];\n    });\n  } catch { }\n}\n\n\n","module.exports = __webpack_public_path__ + \"catalog/holes/panic-door/panicDoor.png\";","module.exports = __webpack_public_path__ + \"catalog/items/bench/bench.png\";","module.exports = __webpack_public_path__ + \"catalog/items/lim/lim.png\";","module.exports = __webpack_public_path__ + \"catalog/items/bench/wood.jpg\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 50;\nconst DEPTH = 50;\nconst HEIGHT = 50;\n\nconst textureLoader = new Three.TextureLoader();\nconst power = textureLoader.load(require(\"./power.jpg\"));\nconst black = textureLoader.load(require(\"./black.jpg\"));\nconst white = textureLoader.load(require(\"./white.jpg\"));\nconst keyboard = textureLoader.load(require(\"./keyboard.jpg\"));\nconst blackMaterial = new Three.MeshLambertMaterial({ map: black });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const monitorPC = new Three.Mesh();\n\n  const cubeGeometryBase = new Three.BoxGeometry(0.04, 0.42, 0.06);\n  const whiteMaterial = new Three.MeshLambertMaterial({ map: white });\n  const edge_p0 = new Three.Mesh(cubeGeometryBase, whiteMaterial);\n  edge_p0.position.set(0, 0.79, 0);\n  edge_p0.rotation.x = Math.PI / 2;\n  monitorPC.add(edge_p0);\n\n  const cubeGeometryBase2 = new Three.BoxGeometry(0.04, 0.42, 0.06);\n  const edge_p1 = new Three.Mesh(cubeGeometryBase2, whiteMaterial);\n  edge_p1.position.set(0, 0.43, 0);\n  edge_p1.rotation.x = Math.PI / 2;\n  monitorPC.add(edge_p1);\n\n  const cubeGeometryBase3 = new Three.BoxGeometry(0.04, 0.42, 0.04);\n  const edge_p3 = new Three.Mesh(cubeGeometryBase3, whiteMaterial);\n  edge_p3.position.set(0, 0.61, 0.21);\n  monitorPC.add(edge_p3);\n\n  const cubeGeometryBase4 = new Three.BoxGeometry(0.04, 0.42, 0.04);\n  const edge_p4 = new Three.Mesh(cubeGeometryBase4, whiteMaterial);\n  edge_p4.position.set(0, 0.61, -0.21);\n  monitorPC.add(edge_p4);\n\n  const cubeGeometryBase5 = new Three.BoxGeometry(0.4, 0.40, 0.05);\n  const back = new Three.Mesh(cubeGeometryBase5, blackMaterial);\n  back.position.set(-0.02, 0.61, 0);\n  back.rotation.y = Math.PI / 2;\n  monitorPC.add(back);\n\n  const powerGeometry = new Three.BoxGeometry(0.01, 0.02, 0.02);\n  const powerMaterial = new Three.MeshLambertMaterial({ map: power });\n  const powerButton = new Three.Mesh(powerGeometry, powerMaterial);\n  powerButton.position.set(0.0155, 0.43, 0);\n  monitorPC.add(powerButton);\n\n  const cylinderGeometry1 = new Three.CylinderGeometry(0.02, 0.02, 0.06, 32, 32);\n  const base_p1 = new Three.Mesh(cylinderGeometry1, blackMaterial);\n  base_p1.position.set(0, 0.38, 0);\n  monitorPC.add(base_p1);\n\n  const geometry = new Three.CylinderGeometry(0.1, 0.1, 0.02, 32, 32);\n  const material = new Three.MeshLambertMaterial({ map: black });\n  const base_p2 = new Three.Mesh(geometry, material);\n  base_p2.scale.set(0.8, 1, 1);\n  base_p2.position.set(0, 0.36, 0);\n  monitorPC.add(base_p2);\n\n  //keyboard\n  const cubeGeometryBase8 = new Three.BoxGeometry(0.4, 0.02, 0.2);\n\n  const boxMaterials = [\n    new Three.MeshBasicMaterial({ color: 0x000000 }),\n    new Three.MeshBasicMaterial({ color: 0x000000 }),\n    new Three.MeshLambertMaterial({ map: keyboard }),\n    new Three.MeshBasicMaterial({ color: 0x000000 }),\n    new Three.MeshBasicMaterial({ color: 0x000000 }),\n    new Three.MeshBasicMaterial({ color: 0x000000 })\n  ];\n\n  const keyboardMesh = new Three.Mesh(cubeGeometryBase8, boxMaterials);\n  keyboardMesh.position.set(0.3, 0.36, 0);\n  keyboardMesh.rotation.y = Math.PI / 2;\n  monitorPC.add(keyboardMesh);\n\n  return monitorPC;\n}\n\nfunction makeObjectMinLOD() {\n  const monitorPC = new Three.Mesh();\n\n  const cubeGeometryBase = new Three.BoxGeometry(0.04, 0.42, 0.06);\n  const whiteMaterial = new Three.MeshLambertMaterial({ map: white });\n  const edge_p0 = new Three.Mesh(cubeGeometryBase, whiteMaterial);\n  edge_p0.position.set(0, 0.79, 0);\n  edge_p0.rotation.x = Math.PI / 2;\n  monitorPC.add(edge_p0);\n\n  const cubeGeometryBase2 = new Three.BoxGeometry(0.04, 0.42, 0.06);\n  const edge_p1 = new Three.Mesh(cubeGeometryBase2, whiteMaterial);\n  edge_p1.position.set(0, 0.43, 0);\n  edge_p1.rotation.x = Math.PI / 2;\n  monitorPC.add(edge_p1);\n\n  const cubeGeometryBase3 = new Three.BoxGeometry(0.04, 0.42, 0.04);\n  const edge_p3 = new Three.Mesh(cubeGeometryBase3, whiteMaterial);\n  edge_p3.position.set(0, 0.61, 0.21);\n  monitorPC.add(edge_p3);\n\n  const cubeGeometryBase4 = new Three.BoxGeometry(0.04, 0.42, 0.04);\n  const edge_p4 = new Three.Mesh(cubeGeometryBase4, whiteMaterial);\n  edge_p4.position.set(0, 0.61, -0.21);\n  monitorPC.add(edge_p4);\n\n  const cubeGeometryBase5 = new Three.BoxGeometry(0.4, 0.40, 0.05);\n  const blackMaterial = new Three.MeshLambertMaterial({ map: black });\n  const back = new Three.Mesh(cubeGeometryBase5, blackMaterial);\n  back.position.set(-0.02, 0.61, 0);\n  back.rotation.y = Math.PI / 2;\n  monitorPC.add(back);\n\n  const cylinderGeometry1 = new Three.CylinderGeometry(0.02, 0.02, 0.06, 8, 8);\n  const base_p1 = new Three.Mesh(cylinderGeometry1, blackMaterial);\n  base_p1.position.set(0, 0.38, 0);\n  monitorPC.add(base_p1);\n\n  const geometry = new Three.CylinderGeometry(0.1, 0.1, 0.02, 8, 8);\n  const base_p2 = new Three.Mesh(geometry, blackMaterial);\n  base_p2.scale.set(0.8, 1, 1);\n  base_p2.position.set(0, 0.36, 0);\n  monitorPC.add(base_p2);\n\n  //keyboard\n  const cubeGeometryBase8 = new Three.BoxGeometry(0.4, 0.02, 0.2);\n  const keyboardMesh = new Three.Mesh(cubeGeometryBase8, blackMaterial);\n  keyboardMesh.position.set(0.3, 0.36, 0);\n  keyboardMesh.rotation.y = Math.PI / 2;\n  monitorPC.add(keyboardMesh);\n\n  return monitorPC;\n}\n\nexport default defineCatalogElement({\n  name: \"monitor_pc\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings'],\n    title: \"pc monitor\",\n    description: \"pc monitor\",\n    image: require('./monitorPC.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 100\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"10px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /**************** LOD max ***********************/\n\n    const monitorPC_MaxLOD = new Three.Object3D();\n    monitorPC_MaxLOD.add(objectMaxLOD.clone());\n\n    const aa = new Three.Box3().setFromObject(monitorPC_MaxLOD);\n\n    const deltaX = Math.abs(aa.max.x - aa.min.x);\n    const deltaY = Math.abs(aa.max.y - aa.min.y);\n    const deltaZ = Math.abs(aa.max.z - aa.min.z);\n\n    monitorPC_MaxLOD.rotation.y += -Math.PI / 2;\n    monitorPC_MaxLOD.position.y += -HEIGHT * .75 + newAltitude;\n    monitorPC_MaxLOD.scale.set(WIDTH / deltaZ, HEIGHT / deltaY, DEPTH / deltaX);\n\n    /**************** LOD min ***********************/\n\n    const monitorPC_MinLOD = new Three.Object3D();\n\n    monitorPC_MinLOD.add(objectMinLOD.clone());\n\n    monitorPC_MinLOD.rotation.y += -Math.PI / 2;\n    monitorPC_MinLOD.position.y += -HEIGHT * .75 + newAltitude;\n    monitorPC_MinLOD.scale.set(WIDTH / deltaZ, HEIGHT / deltaY, DEPTH / deltaX);\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(monitorPC_MaxLOD, 300);\n    lod.addLevel(monitorPC_MinLOD, 700);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/teaching-post/teaching-post.png\";","module.exports = __webpack_public_path__ + \"catalog/items/deskoffice/desk.png\";","import { BoxHelper, Box3, ObjectLoader, Object3DJSON, Object3D, Object3DEventMap } from 'three';\nimport { loadObjWithMaterial } from '../../utils/load-obj';\nimport convert from 'convert-units';\n\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst mtl = require('./sofa.mtl');\nconst obj = require('./sofa.obj');\nconst img = require('./texture.jpg');\nconst resourcePath = img.substr(0, img.lastIndexOf(\"/\")) + \"/\";\n\nconst width = { length: 180, unit: 'cm' };\nconst depth = { length: 60, unit: 'cm' };\nconst height = { length: 70, unit: 'cm' };\n\nlet cachedJSONSofa: Object3DJSON;\n\nexport default defineCatalogElement({\n  name: 'sofa',\n  prototype: 'items',\n\n  info: {\n    title: 'sofa',\n    tag: ['furnishings', 'leather'],\n    description: 'Leather sofa',\n    image: require('./sofa.png')\n  },\n\n  // TODO: Add properties\n  properties: {},\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n    const textRotation = Math.sin(angle * Math.PI / 180) < 0 ? 180 : 0;\n\n    const style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' } as const;\n    const arrow_style = { stroke: element.selected ? '#0096fd' : undefined, strokeWidth: '2px', fill: '#84e1ce' } as const;\n\n    return (\n      <g transform={`translate(${-width.length / 2},${-depth.length / 2})`}>\n        <rect x=\"0\" y=\"0\" width={width.length} height={depth.length} style={style} />\n        <line x1={width.length / 2} x2={width.length / 2} y1={depth.length} y2={1.5 * depth.length}\n          style={arrow_style} />\n        <line\n          x1={.35 * width.length}\n          x2={width.length / 2}\n          y1={1.2 * depth.length}\n          y2={1.5 * depth.length}\n          style={arrow_style}\n        />\n        <line\n          x1={width.length / 2}\n          x2={.65 * width.length}\n          y1={1.5 * depth.length}\n          y2={1.2 * depth.length}\n          style={arrow_style}\n        />\n        <text\n          x=\"0\"\n          y=\"0\"\n          transform={`translate(${width.length / 2}, ${depth.length / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}\n        >\n          {element.type}\n        </text>\n      </g>\n    );\n  },\n\n  async render3D(element, layer, scene) {\n    const onLoadItem = (object: Object3D<Object3DEventMap>) => {\n      const newWidth = convert(width.length).from(width.unit).to(scene.unit);\n      const newHeight = convert(height.length).from(height.unit).to(scene.unit);\n      const newDepth = convert(depth.length).from(depth.unit).to(scene.unit);\n\n      object.scale.set(newWidth / width.length, newHeight / height.length, newDepth / depth.length);\n\n      const box = new BoxHelper(object, 0x99c3fb);\n      box.material.linewidth = 2;\n      box.material.depthTest = false;\n      box.renderOrder = 1000;\n      box.visible = element.selected;\n      object.add(box);\n\n      // Normalize the origin of this item\n      const boundingBox = new Box3().setFromObject(object);\n\n      const center = [\n        (boundingBox.max.x - boundingBox.min.x) / 2 + boundingBox.min.x,\n        (boundingBox.max.y - boundingBox.min.y) / 2 + boundingBox.min.y,\n        (boundingBox.max.z - boundingBox.min.z) / 2 + boundingBox.min.z];\n\n      object.position.x -= center[0];\n      object.position.y -= center[1] - (boundingBox.max.y - boundingBox.min.y) / 2;\n      object.position.z -= center[2];\n\n      return object;\n    };\n\n    if (cachedJSONSofa) {\n      const loader = new ObjectLoader();\n      const object = loader.parse(cachedJSONSofa);\n      return onLoadItem(object);\n    }\n\n    const object = await loadObjWithMaterial(mtl, obj, resourcePath);\n    cachedJSONSofa = object.toJSON();\n    return onLoadItem(object);\n  },\n\n  async updateRender3D(element, layer, scene, mesh, oldElement, differences, selfDestroy, selfBuild) {\n    const noPerf = () => { selfDestroy(); return selfBuild(); };\n\n    if (differences.indexOf('selected') !== -1) {\n      mesh.traverse((child) => {\n        if (child instanceof BoxHelper) {\n          child.visible = element.selected;\n        }\n      });\n\n      return mesh;\n    }\n\n    if (differences.indexOf('rotation') !== -1) {\n      mesh.rotation.y = element.rotation * Math.PI / 180;\n      return mesh;\n    }\n\n    return noPerf();\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 50;\nconst DEPTH = 30;\nconst HEIGHT = 80;\n\nconst red = new Three.MeshPhongMaterial({ color: 0xAA0000 });\nconst grey = new Three.MeshLambertMaterial({ color: 0xAAAAAA });\nconst black = new Three.MeshLambertMaterial({ color: 0x000000 });\nconst textureLoader = new Three.TextureLoader();\nconst frontTexture = textureLoader.load(require('./naspofront.png'));\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMiddleLOD = makeObjectMiddleLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const naspo = new Three.Mesh();\n\n  const roundedRectShape = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const radius = 0.1;\n  const height = 1.2;\n  const width = 0.8;\n  const depth = 0.6;\n\n  roundedRectShape.moveTo(x, y + radius);\n  roundedRectShape.lineTo(x, y + height - radius);\n  roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  roundedRectShape.lineTo(x + width - radius, y + height);\n  roundedRectShape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  roundedRectShape.lineTo(x + width, y + radius);\n  roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  roundedRectShape.lineTo(x + radius, y);\n  roundedRectShape.quadraticCurveTo(x, y, x, y + radius);\n\n  const extrudeSettings = {\n    steps: 2,\n    depth: depth / 3,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometryBody = new Three.ExtrudeGeometry(roundedRectShape, extrudeSettings);\n  const mesh = new Three.Mesh(geometryBody, red);\n  mesh.position.set(0.1, 1.1, 0.1);\n  naspo.add(mesh);\n\n  const geometryBox = new Three.BoxGeometry(0.95, 1.05, 0.2);\n  const mesh1 = new Three.Mesh(geometryBox, red);\n  mesh1.position.set(0.5, 1.7, 0.2);\n  naspo.add(mesh1);\n\n  const geometryPlane = new Three.PlaneGeometry(0.6, 0.9);\n  const mesh3 = new Three.Mesh(geometryPlane, new Three.MeshPhongMaterial({ map: frontTexture, transparent: true }));\n  mesh3.position.set(0.5, 1.7, 0.31);\n  naspo.add(mesh3);\n\n  const cylinderGeometry1 = new Three.CylinderGeometry(0.05, 0.05, 0.025, 80, 80);\n  const handle_p1 = new Three.Mesh(cylinderGeometry1, grey);\n  handle_p1.position.set(0.17, 1.7, 0.3);\n  handle_p1.rotation.x = Math.PI / 2;\n  naspo.add(handle_p1);\n\n  const cylinderGeometry2 = new Three.CylinderGeometry(0.051, 0.051, 0.05, 80, 80, true);\n  black.side = Three.DoubleSide;\n  const handle_p2 = new Three.Mesh(cylinderGeometry2, black);\n  handle_p2.position.set(0.17, 1.7, 0.31);\n  handle_p2.rotation.x = Math.PI / 2;\n  naspo.add(handle_p2);\n\n  const geometry = new Three.BoxGeometry(0.1, 0.02, 0.02);\n  const handle_p3 = new Three.Mesh(geometry, black);\n  handle_p3.position.set(0.17, 1.7, 0.32);\n  naspo.add(handle_p3);\n\n  const cylinderGeometry4 = new Three.CylinderGeometry(0.015, 0.015, 0.1, 80, 80);\n  const pivot1 = new Three.Mesh(cylinderGeometry4, black);\n  pivot1.position.set(0.99, 1.9, 0.28);\n  naspo.add(pivot1);\n\n  const cylinderGeometry5 = new Three.CylinderGeometry(0.015, 0.015, 0.1, 80, 80);\n  const pivot2 = new Three.Mesh(cylinderGeometry5, black);\n  pivot2.position.set(0.99, 1.4, 0.28);\n  naspo.add(pivot2);\n\n  const roundedRectShape2 = new Three.Shape();\n\n  const width2 = 1.05;\n  const height2 = 1.3;\n  const radius2 = 0.1;\n\n  roundedRectShape2.moveTo(x, y + radius2);\n  roundedRectShape2.lineTo(x, y + height2 - radius2);\n  roundedRectShape2.quadraticCurveTo(x, y + height2, x + radius2, y + height2);\n  roundedRectShape2.lineTo(x + width2 - radius2, y + height2);\n  roundedRectShape2.quadraticCurveTo(x + width2, y + height2, x + width2, y + height2 - radius2);\n  roundedRectShape2.lineTo(x + width2, y + radius2);\n  roundedRectShape2.quadraticCurveTo(x + width2, y, x + width2 - radius2, y);\n  roundedRectShape2.lineTo(x + radius2, y);\n  roundedRectShape2.quadraticCurveTo(x, y, x, y + radius2);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: depth,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometry2 = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n  const mesh2 = new Three.Mesh(geometry2, red);\n  mesh2.position.set(0, 1.05, -0.33);\n  naspo.add(mesh2);\n\n  return naspo\n}\n\nfunction makeObjectMiddleLOD() {\n  const naspo = new Three.Mesh();\n\n  const roundedRectShape2 = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width2 = 1.05;\n  const height2 = 1.3;\n  const radius2 = 0.1;\n  const depth = 0.6;\n\n  roundedRectShape2.moveTo(x, y + radius2);\n  roundedRectShape2.lineTo(x, y + height2 - radius2);\n  roundedRectShape2.quadraticCurveTo(x, y + height2, x + radius2, y + height2);\n  roundedRectShape2.lineTo(x + width2 - radius2, y + height2);\n  roundedRectShape2.quadraticCurveTo(x + width2, y + height2, x + width2, y + height2 - radius2);\n  roundedRectShape2.lineTo(x + width2, y + radius2);\n  roundedRectShape2.quadraticCurveTo(x + width2, y, x + width2 - radius2, y);\n  roundedRectShape2.lineTo(x + radius2, y);\n  roundedRectShape2.quadraticCurveTo(x, y, x, y + radius2);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: depth,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometry2 = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n  const mesh2 = new Three.Mesh(geometry2, red);\n  mesh2.position.set(0, 1.05, -0.33);\n  naspo.add(mesh2);\n\n  const geometryBox = new Three.BoxGeometry(0.95, 1.05, 0.2);\n  const mesh1 = new Three.Mesh(geometryBox, red);\n  mesh1.position.set(0.5, 1.7, 0.2);\n  naspo.add(mesh1);\n\n  const geometryPlane = new Three.PlaneGeometry(0.6, 0.9);\n  const mesh3 = new Three.Mesh(geometryPlane, new Three.MeshPhongMaterial({ map: frontTexture, transparent: true }));\n  mesh3.position.set(0.5, 1.7, 0.31);\n  naspo.add(mesh3);\n\n  return naspo;\n}\n\nfunction makeObjectMinLOD() {\n  const naspo = new Three.Mesh();\n\n  const roundedRectShape2 = new Three.Shape();\n\n  const x = 0;\n  const y = 0;\n  const width2 = 1.05;\n  const height2 = 1.3;\n  const radius2 = 0.1;\n  const depth = 0.6;\n\n  roundedRectShape2.moveTo(x, y + radius2);\n  roundedRectShape2.lineTo(x, y + height2 - radius2);\n  roundedRectShape2.quadraticCurveTo(x, y + height2, x + radius2, y + height2);\n  roundedRectShape2.lineTo(x + width2 - radius2, y + height2);\n  roundedRectShape2.quadraticCurveTo(x + width2, y + height2, x + width2, y + height2 - radius2);\n  roundedRectShape2.lineTo(x + width2, y + radius2);\n  roundedRectShape2.quadraticCurveTo(x + width2, y, x + width2 - radius2, y);\n  roundedRectShape2.lineTo(x + radius2, y);\n  roundedRectShape2.quadraticCurveTo(x, y, x, y + radius2);\n\n  const extrudeSettings2 = {\n    steps: 2,\n    depth: depth,\n    bevelEnabled: false,\n    bevelThickness: 1,\n    bevelSize: 1,\n    bevelSegments: 1\n  };\n\n  const geometry2 = new Three.ExtrudeGeometry(roundedRectShape2, extrudeSettings2);\n  const mesh2 = new Three.Mesh(geometry2, red);\n  mesh2.position.set(0, 1.05, -0.33);\n  naspo.add(mesh2);\n\n  return naspo;\n}\n\nexport default defineCatalogElement({\n  name: \"naspo\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"naspo\",\n    description: \"naspo\",\n    image: require('./naspo.png')\n  },\n\n  properties: {\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 60\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#ff0000\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /**************** LOD max ***********************/\n\n    const naspoMaxLOD = new Three.Object3D();\n    naspoMaxLOD.add(objectMaxLOD.clone());\n\n    const valuePosition = new Three.Box3().setFromObject(naspoMaxLOD);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    naspoMaxLOD.rotation.y += Math.PI;\n    naspoMaxLOD.position.x += WIDTH / 2;\n    naspoMaxLOD.position.y += -HEIGHT / 1.3 + newAltitude;\n    naspoMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n\n    /**************** LOD middle ***********************/\n\n    const naspoMiddleLOD = new Three.Object3D();\n    naspoMiddleLOD.add(objectMiddleLOD.clone());\n\n    naspoMiddleLOD.rotation.y += Math.PI;\n    naspoMiddleLOD.position.x += WIDTH / 2;\n    naspoMiddleLOD.position.y += -HEIGHT / 1.3 + newAltitude;\n    naspoMiddleLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**************** LOD min ***********************/\n\n    const naspoMinLOD = new Three.Object3D();\n    naspoMinLOD.add(objectMinLOD.clone());\n\n    naspoMinLOD.rotation.y += Math.PI;\n    naspoMinLOD.position.x += WIDTH / 2;\n    naspoMinLOD.position.y += -HEIGHT / 1.3 + newAltitude;\n    naspoMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /*** add all Level of Detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(naspoMaxLOD, 200);\n    lod.addLevel(naspoMiddleLOD, 900);\n    lod.addLevel(naspoMinLOD, 1200);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 70;\nconst DEPTH = 100;\nconst HEIGHT = 100;\n\nexport default defineCatalogElement({\n  name: 'child chair desk',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'wood', 'metal'],\n    title: 'child chair desk',\n    description: 'child chair desk',\n    image: require('./chairDesk.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    let angle = element.rotation;\n\n    if (angle > -180 && angle < 0)\n      angle = 360;\n    else\n      angle = 0;\n\n    const rect_style = { stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' };\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH} style={rect_style} />\n        <text key='2' x='0' y='0' transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${angle / 2})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const grey = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\n    const red = new Three.MeshPhongMaterial({ color: 0xff0000 });\n    const black = new Three.MeshPhongMaterial({ color: 0x000000 });\n\n    const newAltitude = element.properties.altitude.length;\n\n    const chairDesk = new Three.Object3D();\n\n    const roundedRectShapeTable = new Three.Shape();\n\n    const x = 0;\n    const y = 0;\n    const width = 1;\n    const height = 1.2;\n    const radius = 0.25;\n\n    roundedRectShapeTable.moveTo(x, y + radius);\n    roundedRectShapeTable.lineTo(x, y + height - radius);\n    roundedRectShapeTable.quadraticCurveTo(x, y + height, x + radius, y + height);\n    roundedRectShapeTable.lineTo(x + width - radius, y + height);\n    roundedRectShapeTable.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n    roundedRectShapeTable.lineTo(x + width, y + radius);\n    roundedRectShapeTable.quadraticCurveTo(x + width, y, x + width - radius, y);\n    roundedRectShapeTable.lineTo(x + radius, y);\n    roundedRectShapeTable.quadraticCurveTo(x, y, x, y + radius);\n\n    const extrudeSettingsTable = {\n      steps: 2,\n      depth: 0.1,\n      bevelEnabled: false,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 1\n    };\n\n    const tableGeometry = new Three.ExtrudeGeometry(roundedRectShapeTable, extrudeSettingsTable);\n    const table = new Three.Mesh(tableGeometry, red);\n\n    table.position.set(0, 1.2, 0);\n    table.rotation.x += Math.PI / 2;\n    chairDesk.add(table);\n\n    const baseGeometry = new Three.CylinderGeometry(0.08, 0.08, 1, 32);\n    const baseVerticalGeometry = new Three.CylinderGeometry(0.08, 0.08, .6, 32);\n    const unionGeometry = new Three.CylinderGeometry(0.08, 0.08, .2, 32);\n    const footGeometry = new Three.CylinderGeometry(0.06, 0.06, .025, 32);\n    const closureGeometry = new Three.CylinderGeometry(0.08, 0.08, .02, 32);\n\n    const basePiece1 = new Three.Mesh(baseGeometry, grey);\n    basePiece1.rotation.x += Math.PI / 2;\n    basePiece1.position.set(0.5, 0.6, 0.6);\n    table.add(basePiece1);\n\n    const basePiece2 = new Three.Mesh(baseGeometry, grey);\n    basePiece2.position.set(0.5, 0.6, 1.1);\n    table.add(basePiece2);\n\n    const basePiece3 = new Three.Mesh(baseGeometry, grey);\n    basePiece3.rotation.z += Math.PI / 2;\n    basePiece3.position.set(0, 0.6, 1.1);\n    table.add(basePiece3);\n\n    const baseVerticalPiece = new Three.Mesh(baseVerticalGeometry, grey);\n    baseVerticalPiece.rotation.x += Math.PI / 2;\n    baseVerticalPiece.position.set(-0.5, 0.6, 0.8);\n    table.add(baseVerticalPiece);\n\n    const unionPiece = new Three.Mesh(unionGeometry, grey);\n    unionPiece.position.set(-0.5, 0.6, 1.1);\n    table.add(unionPiece);\n\n    const foot1 = new Three.Mesh(footGeometry, black);\n    foot1.position.set(0.5, 0.2, 1.18);\n    foot1.rotation.x += Math.PI / 2;\n    table.add(foot1);\n\n    const foot2 = new Three.Mesh(footGeometry, black);\n    foot2.position.set(0.5, 1, 1.18);\n    foot2.rotation.x += Math.PI / 2;\n    table.add(foot2);\n\n    const foot3 = new Three.Mesh(footGeometry, black);\n    foot3.position.set(-.9, 0, 1.18);\n    foot3.rotation.x += Math.PI / 2;\n    table.add(foot3);\n\n    const foot4 = new Three.Mesh(footGeometry, black);\n    foot4.position.set(-.9, 1.2, 1.18);\n    foot4.rotation.x += Math.PI / 2;\n    table.add(foot4);\n\n    const closurePiece1 = new Three.Mesh(closureGeometry, grey);\n    closurePiece1.position.set(-1, 0, 1.1);\n    closurePiece1.rotation.z += Math.PI / 2;\n    table.add(closurePiece1);\n\n    const closurePiece2 = new Three.Mesh(closureGeometry, grey);\n    closurePiece2.position.set(-1, 1.2, 1.1);\n    closurePiece2.rotation.z += Math.PI / 2;\n    table.add(closurePiece2);\n\n    const curve = new Three.CatmullRomCurve3([\n      new Three.Vector3(.35, 0, 0),\n      new Three.Vector3(0, 0, 0),\n      new Three.Vector3(-.05, .25, 0),\n    ]);\n\n    const barGeometry = new Three.TubeGeometry(curve, 32, 0.03, 16, false);\n    const leftBar = new Three.Mesh(barGeometry, grey);\n    leftBar.rotation.x -= Math.PI / 2;\n    leftBar.position.set(-1, .35, .48);\n    table.add(leftBar);\n\n    const rightBar = new Three.Mesh(barGeometry, grey);\n    rightBar.position.set(-1, .85, .48);\n    rightBar.rotation.x -= Math.PI / 2;\n    table.add(rightBar);\n\n    const baseCurvedGeometry = new Three.TorusGeometry(.5, .08, 32, 32, Math.PI / 2);\n    const baseCurvePiece1 = new Three.Mesh(baseCurvedGeometry, grey);\n    baseCurvePiece1.position.set(-1, .70, 1.1);\n    table.add(baseCurvePiece1);\n\n    const baseCurvePiece2 = new Three.Mesh(baseCurvedGeometry, grey);\n    baseCurvePiece2.rotation.x += Math.PI;\n    baseCurvePiece2.position.set(-1, .50, 1.1);\n    table.add(baseCurvePiece2);\n\n    const roundedRectShapeStairPiece1 = new Three.Shape();\n\n    const x1 = 0;\n    const y1 = 0;\n    const width1 = .8;\n    const height1 = .8;\n    const radius1 = 0.25;\n\n    roundedRectShapeStairPiece1.moveTo(x1, y1 + radius1);\n    roundedRectShapeStairPiece1.lineTo(x1, y1 + height1 - radius1);\n    roundedRectShapeStairPiece1.quadraticCurveTo(x1, y1 + height1, x1 + radius1, y1 + height1);\n    roundedRectShapeStairPiece1.lineTo(x1 + width1 - radius1, y1 + height1);\n    roundedRectShapeStairPiece1.quadraticCurveTo(x1 + width1, y1 + height1, x1 + width1, y1 + height1 - radius1);\n    roundedRectShapeStairPiece1.lineTo(x1 + width1, y1 + radius1);\n    roundedRectShapeStairPiece1.quadraticCurveTo(x1 + width1, y1, x1 + width1 - radius1, y1);\n    roundedRectShapeStairPiece1.lineTo(x1 + radius1, y1);\n    roundedRectShapeStairPiece1.quadraticCurveTo(x1, y1, x1, y1 + radius1);\n\n    const extrudeSettingsStairPiece1 = {\n      steps: 2,\n      depth: 0.1,\n      bevelEnabled: false,\n      bevelThickness: 1,\n      bevelSize: 1,\n      bevelSegments: 1\n    };\n\n    const stairGeometryPiece1 = new Three.ExtrudeGeometry(roundedRectShapeStairPiece1, extrudeSettingsStairPiece1);\n    const stairPiece1 = new Three.Mesh(stairGeometryPiece1, red);\n\n    stairPiece1.position.set(-.9, .2, .45);\n    table.add(stairPiece1);\n\n    const roundedRectShapeStairPiece2 = new Three.Shape();\n\n    const x2 = 0;\n    const y2 = 0;\n    const width2 = .8;\n    const height2 = .8;\n    const radius2 = 0.25;\n\n    roundedRectShapeStairPiece2.moveTo(x2, y2 + radius2);\n    roundedRectShapeStairPiece2.lineTo(x2, y2 + height2 - radius2);\n    roundedRectShapeStairPiece2.quadraticCurveTo(x2, y2 + height2, x2 + radius2, y2 + height2);\n    roundedRectShapeStairPiece2.lineTo(x2 + width2 - radius2, y2 + height2);\n    roundedRectShapeStairPiece2.quadraticCurveTo(x2 + width2, y2 + height2, x2 + width2, y2 + height2 - radius2);\n    roundedRectShapeStairPiece2.lineTo(x2 + width2, y2 + radius2);\n    roundedRectShapeStairPiece2.quadraticCurveTo(x2 + width2, y2, x2 + width2 - radius2, y2);\n    roundedRectShapeStairPiece2.lineTo(x2 + radius2, y2);\n    roundedRectShapeStairPiece2.quadraticCurveTo(x2, y2, x2, y2 + radius2);\n\n    const holePath = new Three.Path();\n    holePath.moveTo(3.5, 3.5);\n    holePath.absellipse(.65, .4, .035, .125, .125, Math.PI * 2, false);\n    roundedRectShapeStairPiece2.holes.push(holePath);\n\n    const stairGeometryPiece2 = new Three.ExtrudeGeometry(roundedRectShapeStairPiece2, extrudeSettingsStairPiece1);\n    const stairPiece2 = new Three.Mesh(stairGeometryPiece2, red);\n    stairPiece2.position.set(-1.08, .2, .45);\n    stairPiece2.rotation.y += Math.PI / 2;\n    table.add(stairPiece2);\n\n    const value = new Three.Box3().setFromObject(chairDesk);\n\n    const deltaX = Math.abs(value.max.x - value.min.x);\n    const deltaY = Math.abs(value.max.y - value.min.y);\n    const deltaZ = Math.abs(value.max.z - value.min.z);\n\n    if (element.selected) {\n      const boundingBox = new Three.BoxHelper(chairDesk, 0x99c3fb);\n      boundingBox.material.linewidth = 5;\n      boundingBox.renderOrder = 1000;\n      boundingBox.material.depthTest = false;\n      chairDesk.add(boundingBox);\n    }\n\n    chairDesk.rotation.y += Math.PI / 2;\n    chairDesk.position.x += -DEPTH / 2.75;\n    chairDesk.scale.set(WIDTH / deltaZ, HEIGHT / deltaY, 1.25 * DEPTH / deltaX);\n\n    return chairDesk;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/blackboard/blackboard.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst WIDTH = 120;\nconst DEPTH = 50;\nconst HEIGHT = 90;\n\nconst brown = new Three.MeshLambertMaterial({ color: 0x9b8c75 });\nconst grey = new Three.MeshLambertMaterial({ color: 0xd9d7d7 });\nconst green = new Three.MeshBasicMaterial({ color: 0x669966 });\n\nconst objectMaxLOD = makeObjectMaxLOD();\nconst objectMinLOD = makeObjectMinLOD();\n\nfunction makeObjectMaxLOD() {\n  const deskdouble = new Three.Mesh();\n\n  const newDepth = .5;\n  const newWidth = .9;\n  const newHeight = 1;\n  const radius = .03;\n\n  const geometry = new Three.BoxGeometry(newWidth + newWidth / 6, newHeight / 20, newDepth + newDepth / 4);\n\n  const boxMaterials = [brown, brown, green, brown, brown, brown];\n\n  const plane = new Three.Mesh(geometry, boxMaterials);\n  plane.position.y = newHeight;\n  deskdouble.add(plane);\n\n  const geometry_legs = new Three.CylinderGeometry(radius, radius, newHeight, 32, 32);\n\n  const geometry2 = new Three.BoxGeometry(newWidth, newHeight / 20, newDepth);\n  const plane2 = new Three.Mesh(geometry2, brown);\n  plane2.position.y = newHeight / 2 + newHeight / 4;\n  deskdouble.add(plane2);\n\n  const geometry3 = new Three.BoxGeometry(newWidth, newHeight / 10, newDepth / 20);\n  const plane3 = new Three.Mesh(geometry3, brown);\n  plane3.position.y = newHeight / 2 + newHeight / 4 + newHeight / 16;\n  plane3.position.z = newDepth / 3 + newDepth / 5;\n  deskdouble.add(plane3);\n\n  const leg1 = new Three.Mesh(geometry_legs, grey);\n  leg1.position.x = newWidth / 2;\n  leg1.position.z = newDepth / 2;\n  leg1.position.y = newHeight / 2;\n  deskdouble.add(leg1);\n\n  const leg2 = new Three.Mesh(geometry_legs, grey);\n  leg2.position.x = newWidth / 2;\n  leg2.position.z = -newDepth / 2;\n  leg2.position.y = newHeight / 2;\n  deskdouble.add(leg2);\n\n  const leg3 = new Three.Mesh(geometry_legs, grey);\n  leg3.position.x = -newWidth / 2;\n  leg3.position.z = newDepth / 2;\n  leg3.position.y = newHeight / 2;\n  deskdouble.add(leg3);\n\n  const leg4 = new Three.Mesh(geometry_legs, grey);\n  leg4.position.x = -newWidth / 2;\n  leg4.position.z = -newDepth / 2;\n  leg4.position.y = newHeight / 2;\n  deskdouble.add(leg4);\n\n  return deskdouble\n}\n\nfunction makeObjectMinLOD() {\n  const deskdouble = new Three.Mesh();\n\n  const newDepth = .5;\n  const newWidth = .9;\n  const newHeight = 1;\n  const radius = .03;\n\n  const geometry = new Three.BoxGeometry(newWidth + newWidth / 6, newHeight / 20, newDepth + newDepth / 4);\n\n  const boxMaterials = [brown, brown, green, brown, brown, brown];\n\n  const plane = new Three.Mesh(geometry, boxMaterials);\n  plane.position.y = newHeight;\n  deskdouble.add(plane);\n\n  const geometry_legs = new Three.CylinderGeometry(radius, radius, newHeight, 8, 8);\n\n  const geometry2 = new Three.BoxGeometry(newWidth, newHeight / 20, newDepth);\n  const plane2 = new Three.Mesh(geometry2, brown);\n  plane2.position.y = newHeight / 2 + newHeight / 4;\n  deskdouble.add(plane2);\n\n  const geometry3 = new Three.BoxGeometry(newWidth, newHeight / 10, newDepth / 20);\n  const plane3 = new Three.Mesh(geometry3, brown);\n  plane3.position.y = newHeight / 2 + newHeight / 4 + newHeight / 16;\n  plane3.position.z = newDepth / 3 + newDepth / 5;\n  deskdouble.add(plane3);\n\n  const leg1 = new Three.Mesh(geometry_legs, grey);\n  leg1.position.x = newWidth / 2;\n  leg1.position.z = newDepth / 2;\n  leg1.position.y = newHeight / 2;\n  deskdouble.add(leg1);\n\n  const leg2 = new Three.Mesh(geometry_legs, grey);\n  leg2.position.x = newWidth / 2;\n  leg2.position.z = -newDepth / 2;\n  leg2.position.y = newHeight / 2;\n  deskdouble.add(leg2);\n\n  const leg3 = new Three.Mesh(geometry_legs, grey);\n  leg3.position.x = -newWidth / 2;\n  leg3.position.z = newDepth / 2;\n  leg3.position.y = newHeight / 2;\n  deskdouble.add(leg3);\n\n  const leg4 = new Three.Mesh(geometry_legs, grey);\n  leg4.position.x = -newWidth / 2;\n  leg4.position.z = -newDepth / 2;\n  leg4.position.y = newHeight / 2;\n  deskdouble.add(leg4);\n\n  return deskdouble\n}\n\nexport default defineCatalogElement({\n  name: 'double school desk',\n  prototype: 'items',\n\n  info: {\n    tag: ['furnishings', 'wood'],\n    title: 'double school desk',\n    description: 'double school desk',\n    image: require('./deskdouble.png')\n  },\n\n  properties: {\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-WIDTH / 2},${-DEPTH / 2})`}>\n        <rect key='1' x='0' y='0' width={WIDTH} height={DEPTH}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: '2px', fill: '#84e1ce' }} />\n        <text key='2' x='0' y='0'\n          transform={`translate(${WIDTH / 2}, ${DEPTH / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: 'middle', fontSize: '11px' }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newAltitude = element.properties.altitude.length;\n\n    /*************** lod max *******************/\n\n    const deskdoubleMaxLOD = new Three.Object3D();\n    deskdoubleMaxLOD.add(objectMaxLOD.clone());\n\n    const valueObject = new Three.Box3().setFromObject(deskdoubleMaxLOD);\n\n    const deltaX = Math.abs(valueObject.max.x - valueObject.min.x);\n    const deltaY = Math.abs(valueObject.max.y - valueObject.min.y);\n    const deltaZ = Math.abs(valueObject.max.z - valueObject.min.z);\n\n    deskdoubleMaxLOD.rotation.y += Math.PI;\n    deskdoubleMaxLOD.position.y += newAltitude;\n    deskdoubleMaxLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /*************** lod min *******************/\n\n    const deskdoubleMinLOD = new Three.Object3D();\n    deskdoubleMinLOD.add(objectMinLOD.clone());\n    deskdoubleMinLOD.rotation.y += Math.PI;\n    deskdoubleMinLOD.position.y += newAltitude;\n    deskdoubleMinLOD.scale.set(WIDTH / deltaX, HEIGHT / deltaY, DEPTH / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(deskdoubleMaxLOD, 200);\n    lod.addLevel(deskdoubleMinLOD, 900);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/holes/door/door.mtl\";","module.exports = __webpack_public_path__ + \"catalog/lines/wall/wall.png\";","import * as Three from 'three';\nimport React from 'react';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nconst textureLoader = new Three.TextureLoader();\nconst front = textureLoader.load(require('./front.png'));\nconst blackMaterial = new Three.MeshLambertMaterial({ color: 0x3d3d3d });\n\nfunction makeObjectMaxLOD(newWidth: number, newHeight: number, newDepth: number) {\n  const hub = new Three.Mesh();\n\n  const cubeGeometryBase = new Three.BoxGeometry(newWidth, newHeight, newDepth);\n  const body = new Three.Mesh(cubeGeometryBase, blackMaterial);\n  body.position.set(0, 1, 0);\n  hub.add(body);\n\n  for (let i = -newHeight / 2 + newHeight / 32; i < newHeight / 2; i += newHeight / 16) {\n    const planeGeometry = new Three.PlaneGeometry(newWidth, newHeight / 16);\n    const planeMaterial = new Three.MeshLambertMaterial({ map: front });\n    const plane_texture = new Three.Mesh(planeGeometry, planeMaterial);\n    plane_texture.position.set(0, i, newDepth / 3 + newDepth / 5.9);\n    body.add(plane_texture);\n  }\n  return hub\n}\n\nfunction makeObjectMinLOD(newWidth: number, newHeight: number, newDepth: number) {\n  const hub = new Three.Mesh();\n\n  const cubeGeometryBase = new Three.BoxGeometry(newWidth, newHeight, newDepth);\n  const body = new Three.Mesh(cubeGeometryBase, blackMaterial);\n  body.position.set(0, 1, 0);\n  hub.add(body);\n\n  return hub\n}\n\nexport default defineCatalogElement({\n  name: \"hub\",\n  prototype: \"items\",\n\n  info: {\n    tag: ['furnishings', 'metal'],\n    title: \"hub\",\n    description: \"hub\",\n    image: require('./hub.png')\n  },\n\n  properties: {\n    width: {\n      label: \"width\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 60\n      }\n    },\n    depth: {\n      label: \"depth\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 30\n      }\n    },\n    height: {\n      label: \"height\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 200\n      }\n    },\n    altitude: {\n      label: \"altitude\",\n      type: \"length-measure\",\n      defaultValue: {\n        length: 0\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const newWidth = element.properties.width.length;\n    const newDepth = element.properties.depth.length;\n\n    const angle = element.rotation + 90;\n\n    let textRotation = 0;\n    if (Math.sin(angle * Math.PI / 180) < 0) {\n      textRotation = 180;\n    }\n\n    return (\n      <g transform={`translate(${-newWidth / 2},${-newDepth / 2})`}>\n        <rect key=\"1\" x=\"0\" y=\"0\" width={newWidth} height={newDepth}\n          style={{ stroke: element.selected ? '#0096fd' : '#000', strokeWidth: \"2px\", fill: \"#84e1ce\" }} />\n        <text key=\"2\" x=\"0\" y=\"0\"\n          transform={`translate(${newWidth / 2}, ${newDepth / 2}) scale(1,-1) rotate(${textRotation})`}\n          style={{ textAnchor: \"middle\", fontSize: \"11px\" }}>\n          {element.type}\n        </text>\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const newWidth = element.properties.width.length;\n    const newDepth = element.properties.depth.length;\n    const newHeight = element.properties.height.length;\n    const newAltitude = element.properties.altitude.length;\n\n    /*************** lod max ******************/\n\n    const hubMaxLOD = new Three.Object3D();\n    hubMaxLOD.add(makeObjectMaxLOD(newWidth, newHeight, newDepth).clone());\n\n    const valuePosition = new Three.Box3().setFromObject(hubMaxLOD);\n\n    const deltaX = Math.abs(valuePosition.max.x - valuePosition.min.x);\n    const deltaY = Math.abs(valuePosition.max.y - valuePosition.min.y);\n    const deltaZ = Math.abs(valuePosition.max.z - valuePosition.min.z);\n\n    hubMaxLOD.position.y += newHeight / 2 + newAltitude;\n    hubMaxLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n\n    /*************** lod min ******************/\n\n    const hubMinLOD = new Three.Object3D();\n    hubMinLOD.add(makeObjectMinLOD(newWidth, newHeight, newDepth).clone());\n    hubMinLOD.position.y += newHeight / 2 + newAltitude;\n    hubMinLOD.scale.set(newWidth / deltaX, newHeight / deltaY, newDepth / deltaZ);\n\n    /**** all level of detail ***/\n\n    const lod = new Three.LOD();\n\n    lod.addLevel(hubMaxLOD, 200);\n    lod.addLevel(hubMinLOD, 2000);\n    lod.updateMatrix();\n    lod.matrixAutoUpdate = false;\n\n    if (element.selected) {\n      const bbox = new Three.BoxHelper(lod, 0x99c3fb);\n      bbox.material.linewidth = 5;\n      bbox.renderOrder = 1000;\n      bbox.material.depthTest = false;\n      lod.add(bbox);\n    }\n    return lod;\n  }\n});\n","module.exports = __webpack_public_path__ + \"catalog/items/metal-detector/display1.png\";","import React from 'react';\nimport * as Three from 'three';\nimport { defineCatalogElement } from '@archef2000/react-planner';\n\nexport default defineCatalogElement({\n  name: 'gate',\n  prototype: 'holes',\n\n  info: {\n    tag: ['gate'],\n    title: 'gate',\n    description: 'hole in the wall',\n    image: require('./gate.jpg')\n  },\n\n  properties: {\n    width: {\n      label: 'width',\n      type: 'length-measure',\n      defaultValue: {\n        length: 80\n      }\n    },\n    height: {\n      label: 'height',\n      type: 'length-measure',\n      defaultValue: {\n        length: 215\n      }\n    },\n    altitude: {\n      label: 'altitude',\n      type: 'length-measure',\n      defaultValue: {\n        length: 0\n      }\n    },\n    thickness: {\n      label: 'thickness',\n      type: 'length-measure',\n      defaultValue: {\n        length: 30\n      }\n    }\n  },\n\n  render2D: function (element, layer, scene) {\n    const STYLE_HOLE_BASE = { stroke: '#000', strokeWidth: '3px', fill: '#000' };\n    const STYLE_HOLE_SELECTED = { stroke: '#0096fd', strokeWidth: '4px', fill: '#0096fd', cursor: 'move' };\n    const STYLE_ARC_BASE = { stroke: '#000', strokeWidth: '3px', strokeDasharray: '5,5', fill: 'none' };\n    const STYLE_ARC_SELECTED = {\n      stroke: '#0096fd',\n      strokeWidth: '4px',\n      strokeDasharray: '5,5',\n      fill: 'none',\n      cursor: 'move'\n    };\n\n    const epsilon = 3;\n\n    const holeWidth = element.properties.width.length;\n    const holePath = `M${0} ${-epsilon}  L${holeWidth} ${-epsilon}  L${holeWidth} ${epsilon}  L${0} ${epsilon}  z`;\n    const arcPath = `M${0},${0}  A${0},${0} 0 0,1 ${holeWidth},${0}`;\n    const holeStyle = element.selected ? STYLE_HOLE_SELECTED : STYLE_HOLE_BASE;\n    const arcStyle = element.selected ? STYLE_ARC_SELECTED : STYLE_ARC_BASE;\n    const length = element.properties.width.length;\n\n    return (\n      <g transform={`translate(${-length / 2}, 0)`}>\n        <line key='1' x1={0} y1={holeWidth / 6 - epsilon} x2={0} y2={-holeWidth / 6 + epsilon} style={holeStyle}\n          transform={`scale(${-1},${1})`} />\n        <line key='2' x1={-holeWidth} y1={holeWidth / 6 - epsilon} x2={-holeWidth} y2={-holeWidth / 6 + epsilon} style={holeStyle}\n          transform={`scale(${-1},${1})`} />\n        <path key='3' d={arcPath} style={arcStyle} />\n      </g>\n    )\n  },\n\n  async render3D(element, layer, scene) {\n    const object = new Three.Object3D();\n    return object;\n  }\n});\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","PlaneMaterial","Three","color","material_legs","makeObjectMaxLOD","newWidth","newHeight","newDepth","table","PlaneGeometry","plane","position","add","geometry_legs","leg1","x","z","leg2","leg3","leg4","makeObjectMinLOD","defineCatalogElement","name","info","tag","title","description","image","require","properties","width","label","type","defaultValue","depth","height","altitude","render2D","element","layer","scene","angle","rotation","textRotation","Math","sin","PI","React","transform","concat","key","style","stroke","selected","strokeWidth","fill","textAnchor","fontSize","render3D","_callee","newAltitude","tableMaxLOD","objectMaxLod","tableMinLOD","objectMinLod","lod","bbox","_context","clone","addLevel","updateMatrix","matrixAutoUpdate","material","linewidth","renderOrder","depthTest","arguments","apply","_next","_throw","module","exports","black","metalBlue","grey","darkGrey","boxMaterials","makeDoor","thickness","door_double","LongDoorGeometry","longDoor","ShortDoorGeometry","shortDoor","handle","makeHandle","set","handleBase","makeHandleBase","handle2","handleBase2","geometry_p1","round","geometry_p2","geometry_p3","p1","p2","p3","p4","geometryBase1","geometryBase2","lock","LockGeometry1","lockGeometry2","lockGeometry3","lock_p1","lock_p2","lock_p3","makeLock","handleBase1","scale","flip_horizontal","values","flip","holeWidth","holePath","arcPath","arcPath2","holeStyle","cursor","arcStyle","strokeDasharray","x1","y1","x2","y2","valuePosition","deltaX","deltaY","deltaZ","setFromObject","abs","max","min","grey2","greenMaterial","objectMaxLOD","routerWifi","roundedRectShape","moveTo","lineTo","quadraticCurveTo","geometry","steps","DEPTH","bevelEnabled","bevelThickness","bevelSize","bevelSegments","mesh","geometry2","mesh2","cylinderGeometry","RADIUS","led","WIDTH","led2","led3","objectMinLOD","routerWifiMaxLOD","aa","routerWifiMinLOD","HEIGHT","chair","LegGeometry","LegMaterial","leg5","leg6","WoodMaterial","roundedRectShape2","backGeometry","back","chair1","chair0","green","red","turquoise","opacity","transparent","metalBlueGrey","makePanicDoor","handleSide","door","lowBaseDoorGeometry","middleBaseDoorGeometry","highBaseDoorGeometry","BorderCoverDoorGeometry1","BorderCoverDoorGeometry2","MiddleDoorGeometry2","MiddleDoorGeometry1","HighDoorGeometry","glassGeometry","LowDoorGeometry","glassCoverVertical","glassCoverHorizontal","lowCoverDoor","middleDoor1","middleDoor2","baseDoor","middleCoverDoor1","middleCoverDoor2","highCoverDoor","highDoor","borderCoverDoor1","borderCoverDoor2","glass","glassVerticalCover1","glassVerticalCover2","glassHorizontalCover1","glassHorizontalCover2","mechanism","BaseGeometry","PieceGeometry1","PieceGeometry2","base","piece1","piece2","DoorLock","doorLockGeometry1","doorLockGeometry2","doorLock1","doorLock2","panicDoor","leftDoor","handleSide_value","Lock","geometry1","geometry3","LockPiece1","LockPiece2","LockPiece3","BaseGeometry1","BaseGeometry2","base1","base2","hilt","Geometry_p1","Geometry_p2","Geometry_p3","piece3","piece4","makeHilt","leftDoorPivot","makePivot","rightDoorPivot","safetyHandleLeft","makeSafetyHandle","safetyHandleRight","doorLock","HandleSupportGeometry","PushGeometry","CoverPushGeometry","handleSupport","PushButton","CoverPush1","CoverPush2","DoorPivot","DownPivotGeometry","UpPivotGeometry","downPivot1","upPivot1","downPivot2","upPivot2","flip_vertical","scaleX","scaleY","rotateAngle","tX","tY","pX1","pX2","pY1","pY2","boundingBox","_render3D","_x","_x2","_x3","cached3DDoor","STYLE_HOLE_BASE","STYLE_HOLE_SELECTED","STYLE_ARC_BASE","STYLE_ARC_SELECTED","flip_orizzontal","onLoadItem","mtl","obj","img","resourcePath","object","initialWidth","initialHeight","initialThickness","box","substr","lastIndexOf","loadObjWithMaterial","FirstBlockGeometry","SecondBlockGeometry","FirstBlock","SecondBlock","panicDoorDouble","doorLeft","makeDoorStructure","doorRight","geometryLock1","geometryLock2","geometryLock3","lockPiece1","lockPiece2","lockPiece3","makeLockKey","GeometryPiece1","GeometryPiece2","GeometryPiece3","doorLeftPivot","doorRightPivot","doorLockLeft","makeDoorLock","doorLockRight","block","DoorLockGeometry1","DoorLockGeometry2","DoorLock1","DoorLock2","handleSupportGeometry","PushButtonGeometry","PushButtonCoverGeometry","pushButton","pushButtonCover1","pushButtonCover2","rect_style","arrow_style","undefined","coatHook","radius","texture","materialTexture","geometrySphereUp","sphere","sphere2","curve","geometry_legs2","mesh3","geometrySphere","sphereTop","load","map","textureLoader","logoTexture","steelTexture","logoMaterial","steel","fridge","gx","gz","foot","side1","side2","top","logo","door1","door2","middlePlane","handle1_p1","handle1_p2","handle1_p3","handle2_p1","handle2_p2","handle2_p3","fridgeMaxLOD","fridgeMinLOD","white","glassMaterial","video_camera","body","sphereUp","cylinderGeometry2b","focus","geometrySphereUp2","led_1","led_2","cos","cylinderGeometry2","cylinderGeometry3","cover","cubeGeometryBase","locknut1","locknut2","shape2","arm_p1","cylinderGeometry4","arm_p2","cylinderGeometry5","arm_p3","cylinderGeometry6","arm_p3b","cylinderGeometry7","arm_p4","cylinderGeometry8","arm_p5","joint","bezierCurveTo","geometry4","mesh_1","mesh_2","points","push","side","cover_2","cylinderGeometry9","antenna_p1","cylinderGeometry10","antenna_p2","sphere_p1","antenna_p3","sphere_p2","antenna_p4","cylinderGeometry11","antenna_p5","video_cameraMaxLOD","video_cameraMinLOD","greyMaterial","makeArmchairMaxLOD","armchair","g_base_foot","m_base_foot1","g_base_foot2","m_base_foot2","seat","extrusionSettings","shape_sed","g_sitting","sitting","shape_sc","g_back","g_asse_rotaz2","asse_rotaz2","armrest_1","armrest_2","makeArmchairMinLOD","base_foot1","base_foot2","seats","seatsArray","Array","ind","armchairsMaxLOD","seatArray","setArmchairsPos","makeSeriesArmchair2","armchairsObject2","valueObject","armchairsMinLOD","makeSeriesArmchair1","armchairsObject1","j","listObject","floor","font","FontLoader","parse","defaultColor","text","fontFamily","alignmentBaseline","size","Mesh","TextGeometry","MeshBasicMaterial","BoxHelper","lim","extrudeSettings","extrudeSettings2","etichettaImage","geometryPlane","roundedRectShape3","extrudeSettings3","mesh4","roundedRectShape4","extrudeSettings4","geometry5","mesh5","supportGeometry","support","roundedRectShape5","extrudeSettings5","geometry6","mesh6","supportGeometry2","support2","y3","x3","y4","x4","___CSS_LOADER_EXPORT___","id","locals","boxMaterials2","boxMaterials3","lcdTexture","schneider","gridVerticalElemGeometry","gridThickness","gridHorizontalElemGeometry","filter","gridVerticalElem","gridHorizontalElem","k","filterClone","panelSideElemGeometry","panelSideElemLeft","panelSideElemRight","panelSideBackElemGeometry","panelSideElemBack","boxElemGeometry","boxElem","panelSideFrontElemGeometry","panelSideElemFront_P1","panelSideElemFront_P2","panelSideElemFront_P3","planeGeometryFront","planeMaterialFront","planeGeometryFront1","panelBase","lcd","panelSideMiddleElemGeometry","panelSideElemMiddle","panelSideElemFooter","patternColor","fillValue","rackMaxLOD","rackMinLOD","darkSteel","darkSteelTexture","kitchen","front","oven","handle1","handle3","knob","knob_p2","fire","centralFire","longSideGrid","longSideGrid2","shortSideGrid","lsgc1","lsgc2","ssgc1","ssgc2","lsgi","cp","kitchenMaxLOD","kitchenMinLOD","bodyGeometry0","body0","yellow","bodyGeometry","bodyGeometry2","vent_p1","cylinderGeometry1","vent_p2","cylinder2","cylinder3","cylinder4","cylinder5","gageImage","material2","gage","cylinder6","cylinder7","labelImage","wrapS","wrapT","repeat","offset","material4","valve_p1","shape3","valve_p2","safetyValve_p1","safetyValve_p2","cylinder9","geometry7","objectMiddleLOD","bodyGeometry21","body1","bodyGeometry22","lock2","geometrySphereUp1","sphereUp1","makeObjectMiddleLOD","cx","cy","rx","ry","fireExtinguisher2","fireExtinguisher1","fireExtinguisher0","cached3DWindow","createTenda","createMesh","geom","applyMatrix4","makeTranslation","meshMaterial","Tenda","ParametricGeometry","torus","geometryAsta","asta","asta2","sphere3","sphere4","panelMaterial","buildPanel","mirror","pos","attributes","count","fromBufferAttribute","panelWidth","fold","panelHeight","setXYZ","computeVertexNormals","leftPanel","rightPanel","window","webpackContext","req","webpackContextResolve","__webpack_require__","Error","code","keys","cubeMaterial","electricalPanel","mat","planeGeometryBase","planeMaterial","elettricalPannel2","elettricalPannel1","canteen_cart","fx","fz","wheel","r1a","cr1","wheelCoverUp","wheelCoverDown","cr2","b1","cr3","b2","b3","side3","side4","a1","a2","plane2","plane3","plane4","Dz","plane5","plane6","plane7","plane8","d1","d2","canteen_cartMaxLOD","canteen_cartMinLOD","frontTexture1","rack","frontTexture","metalGrey","makeWheel","ArmrestGeometry","SupportGeometry","PivotGeometry","SupportGeometryStart","WheelGeometry","InsideWheelGeometry","WheelCoverGeometry","armrest","pivot","SupportStart","Wheel","WheelCover","InsideWheel","Armrest1","Armrest2","makeWheelMinLOD","makeArmrest","NodeGeometry","GeometryP1","GeometryP2","GeometryP3","node1","node2","P1","P2","P3","makeArmrestMinLOD","makePillow","pillow","CenterGeometry","CenterPillow","edge1","makeEdge","edge2","edge3","edge4","EdgeGeometry","AngleGeometry","edge","chairDesk","baseChair","bodyChair","backrestChair","SupportPillowGeometry1","SupportPillowGeometry2","ShortHandleGeometry","LongHandleGeometry","HandleGeometry","ArmrestSupportGeometry","SupportPillow1","SupportPillow2","LongHandle","ShortHandle","Handle1","Handle2","ArmrestBase1","ArmrestBase2","Pillow","armrest1","armrest2","ShortEdgeGeometry","LongEdgeGeometry","edgeShort1","edgeShort2","edgeLong1","edgeLong2","angle1c","angle2c","angle1l","angle2l","center","backrest","backrestGeometry1","backrestGeometry2","backrest1","backrest2","backrest3","backrest4","backrestPillow","CylinderGeometry1","CylinderGeometry2","CylinderGeometry3","CylinderCoverGeometryCylinder2","CylinderGeometry4","Cylinder1","Cylinder2","CoverCylinder1","CoverCylinder2","Cylinder3","wheels","makeWheels","makeWheelsMinLOD","makeBaseMinLOD","makeBodyMinLOD","makeBackrestMinLOD","chairDeskMaxLOD","chairDeskMinLOD","_asyncToGenerator","convert","from","ReactPlannerConstants","to","unit","loader","whitePaintTextureRepeatFactor","stair","numberOfSteps","stepHeight","stepDepth","stepWidth","stepPlaneGeometry","stepPlaneMaterial","starProfileShapePoints","stepPlane","stepCover","stairShapeProfile","_i","stairShapeProfileGeometry","stairProfileMaterial","stairProfile","stairProfileMaterial2","stairProfile2","closure1Slope","stairClosure1Width","stairClosure1Height","stairClosure1Geometry","closure1Material","stairClosure1","pivotClosure1","closure2","stairClosure3Geometry","closure3","assignUVs","needsUpdate","buildStepCover","atan","updateRender3D","oldElement","differences","selfDestroy","selfBuild","_callee2","noPerf","oldWidth","oldDepth","oldHeight","oldAltitude","widthChanged","depthChanged","heightChanged","altitudeChanged","ratioW","deltaAlt","_context2","indexOf","traverse","child","visible","computeBoundingBox","range","uvAttribute","getAttribute","positionAttribute","getX","getY","setXY","planeGeometry","stepCoverLength","planeGeometry2","planeGeometry3","stepCoverHeight","whiteMaterial","wood","makeMonitor","monitor","whiteTexture","cubeGeometryBase2","cubeGeometryBase3","screen","newWidthA","newWidthB","desk","rectShape","woodTexture","rectShape2","hole","holes","sqrt","pow","index","indexMonitor","lastPosition","lastPositionMonitor","incrPosition","mesh7","geometry8","mesh8","monitor2","widthA","widthB","scrivaniaMaxLOD","scrivaniaMinLOD","_loadObjWithMaterial","mtlFile","objFile","mtlLoader","materials","objLoader","MTLLoader","setResourcePath","loadAsync","preload","OBJLoader","setMaterials","brown","centralPillar","canteen_table","planeTop","dx","dz","nut","axis1","axis2","axis3","leg","legBase","baseNut1","baseNut2","fsx","fsz","chairBack","fbx","fbz","support1","nutBack1","nutBack2","fdx","fdz","fbsx","fbsz","seatSupport1","seatSupport2","seatNut1","seatNut2","canteen_table_MaxLOD","canteen_table_MinLOD","blue","wardrobe","bottomSide","backside","topside","centralAxis","lowShelve","upShelve","upDoor_p1","upDoor_p2","lowDoor_p1","lowDoor_p2","fy","wardrobeMaxLOD","wardrobeMinLOD","frameMaterial","RADIUS_10","RADIUS_2_5","column","frame1","frame2","frame3","frame4","circleStyle","columnMaxLOD","columnMinLOD","cestino","TOTAL_DEPTH","makeChair","bancoDouble","chair2","deskAndChairDouble","boundingBoxDeskAndChair","deltaZDeskAndChair","p5","p6","geometry50","geometry22","quadro","threePhasePanel","BackSideGeometry","BackSide","PanelGeometry","meshPanel","geometry0","mesh0","mesh1","geometry00","mesh00","geometry11","mesh11","geometry1b","mesh1b","mesh1c","geometry1d","mesh1d","mesh1e","geometry1f","mesh1f","mesh1g","stopperGeometry1","stopper_p1","stopperGeometry2","stopper_p2","stopperGeometry3","stopper_p3","stopper2_p1","stopper2_p2","stopper2_p3","handleGeometry","handle_p1","handle_p2","handle_p3","pivot1","pivot2","pivot3","pivot4","pivot11","pivot22","pivot33","pivot44","pivot1b","pivot2b","pivot3b","pivot4b","pivot11b","pivot22b","pivot33b","pivot44b","backSideGeometry","backSide","Panel","threePhasePanelMaxLOD","threePhasePanelMiddleLOD","threePhasePanelMinLOD","sink","pipe_p1","pipe_p2","pipe_p3","cylinderGeometry66","tap_p1","tap_p2","tap_p3","blackMaterial","hole_p1","hole_p2","hole_p3","hole_p4","hole_p5","sinkMaxLOD","sinkMinLOD","metalDetector","display1","display2","up","cubeGeometryBorderUp","up_border_down","up_border_top","cubeGeometrySide","left","right","cubeGeometrySide2","left2","right2","cubeGeometryBorder","left_border","right_border","cubeGeometryBorderLed","left_borderLed","right_borderLed","planeDisplay1","planeMaterial1","plane1","planeDisplay2","planeMaterial2","metalDetectorMaxLOD","metalDetectorMinLOD","banco","deskAndChair","woodMaterial","bookTexture1","bookTexture2","bookTexture3","bookcase","sideGeometry","bottomGeometry","bottomPanel","topGeometry","topPanel","shelveGeometry","shelve","choiceTexture","random","bookGeometry","bookMaterial","book1","book2","book3","book4","book5","bookcaseMaxLOD","bookcaseMinLOD","buildToiletGeom","seatHeight","tankBodyHeight","tankBottomOffset","showTank","lowDetail","roundLower","opening","ringWidth","seatBackFlat","roundingStartHeight","tankWidthRatio","tankDepth","seatThicknessValue","roundingSmoothness","group","mainColor","porcelain","dark","seatOuterHalfX","seatThickness","openingWidth","seatOuterRX","seatInnerRX","aspect","seatOuterRZ","seatInnerRZ","seatOuterHalfZ","baseOuterR","bowlHeight","bottomRadius","roundingStart","bowlProfile","arcSteps","easingExponent","prev","last","radialSegments","bowlGeom","bowlMesh","rimShape","shape","absellipse","segs","yBack","innerYBack","buildTopRimShape","rimGeom","rimMesh","tempPos","minZ","Infinity","maxZ","getZ","midZ","planeZ","setZ","capShape","capGeom","sx","capMesh","seatShape","buildSeatShape","seatGeom","curveSegments","seatMesh","tankWidth","tankHeightLocal","tankGeom","tankMesh","btnGeom","btnMesh","tankHeight","tankBottom","shapeNode","tankDepthValue","pts","dPath","join","tankNode","tankW","tankD","tankX","fillOpacity","seatH","ringWidthProp","maxLOD","minLOD","centerAndPlace","isFinite","cz","bottom","diffs","hasBox","isArray","console","debug","lavagna","bench","axi2","lx","beam","woodAxis","dy","benchMaxLOD","benchMinLOD","cattedra","cattedraX","cattedraZ","backPlane","downPlane","leftPlane","rightPlane","drawer","drawer2","cattedraY","OldStyleRadiator","holePath1","arc","holePath4","holePath7","holePath2","holePath5","holePath8","holePath3","holePath6","holePath9","tube","tube2","tube3","OldStyleRadiatorMaxLOD","OldStyleRadiatorMinLOD","ModernRadiator","ModernRadiatorMaxLOD","ModernRadiatorMinLOD","this","makeBin","bins","metalBin","yellowBin","brownBin","paperBin","glassBin","cestino_carta","coloredMaterial","plane1Geometry","etichettaGeometry","etichetta","air_conditioner","gridHorizontalGeometry","gridHorizontal","gridVerticalGeometry","gridVertical","frontCoverGeometry","frontCover","radius3","flapSupportGeometry","flapLeft","flapRight","points2","flapGeometry","flap1","flap2","air_conditionerMaxLOD","air_conditionerMinLOD","projector","g1","m1","projectorMaxLOD","projectorMinLOD","blueMaterial","hanger","base_geom","base2_geom","body_geom","g_umbrella_base","umbrella_base","g_umbrella","umbrella","g_hook_body","g_hook","hooks","hook_body","hook","m_umbrella","hangerMaxLOD","hangerMinLOD","cached3DTV","paintedtexture","brickTexture","baseMat","wallMat","WALL_THICKNESS","TEXTURE_TILE_SIZE","configureWallTexture","sizeX","sizeY","createSideWall","brickTex","brickMatA","brickMatB","plainMat","geo","wall","BASE_THICKNESS","buildBalcony","wallHeight","yWallCenter","leftWall","rightWall","frontWall","yTopRailCenter","TOP_RAIL_THICKNESS","railMat","leftRail","rightRail","frontRail","balcony","totalHeight","selectionAnchorGeo","selectionAnchorMat","selectionAnchor","_layer","_scene","selectionBox","replaceGeometry","_mat","_selectionBox","getObjectByName","dispose","updateMatrixWorld","update","cleaning_cart","rz","tire","bearing","coverUp","coverDown","p1Geometry","p1_left","p2Geometry","p2_left","p1_right","p2_right","drawerSupportGeometry","drawer_p1","drawer_p2","baseTop","shelfGeometry","shelf_1","shelf_2","drawerBorderGeometry","drawerBorder_1","drawerBorder_2","longSideGeometry","longSide_1","longSide_2","shortSideGeometry","shortSide_1","shortSide_2","bucket_1","bucket_2","bucket_3","bucket_4","bucket_5","wasteSupport_1","wasteSupport_2","wasteSupport_3","wasteSupportDown_1","wasteSupportDown_2","wasteSupportDown_3","wasteCover","sack","coverPivotGeometry","coverPivot_1","color1","delta1","color2","delta2","delta","coverPivot_2","sty","bucketTop_1","bucketTop_2","bucketTop_3","bucketTop_4","bucketTop_5","bucketTop2_p1","bucketTop2_p2","bucketTop2_p3","bucketTop2_p4","bucketTop2_p5","sdy","bucketTop3_p1","bucketTop3_p2","bucketTop3_p3","bucketTop3_p4","bucketTop3_p5","scy","broom","broom_handle","broom_p2","broom_p3","broom_p4","hook_p1","hook_p2","hook_p3","hook_p4","cleaning_cartMaxLOD","cleaning_cartMinLOD","object_4","venetian","tubo","width1","detector","base_p1","base_p2","BaseGeometry3","base_p3","BaseGeometry4","base_p4","torus2","torus3","detectorMaxLOD","detectorMinLOD","COLORS","MATERIAL_COLORS","amber","blue_grey","cyan","deep_orange","deep_purple","indigo","light_blue","light_green","lime","orange","pink","purple","teal","PRIMARY_COLOR","main","alt","icon","border","text_main","text_alt","input","SECONDARY_COLOR","MESH_SELECTED","AREA_MESH_COLOR","unselected","LINE_MESH_COLOR","BASE_STYLE","display","fontWeight","lineHeight","textAlign","whiteSpace","verticalAlign","WebkitUserSelect","MozUserSelect","MsUserSelect","userSelect","padding","SharedStyle","fonWeight","transition","outline","borderRadius","borderWidth","borderType","BASE_STYLE_SIZE","small","normal","large","Button","props","_useState2","useState","hover","state","setState","_props$type","_props$style","customStyle","backgroundColor","borderColor","_props$styleHover","styleHover","customStyleHover","_props$size","children","rest","_objectWithoutProperties","_excluded","styleMerged","assign","_extends","onMouseEnter","onMouseLeave","STYLE","STYLE_HOVER","CancelButton","_ref","overflowY","ContentContainer","_ref$style","_objectSpread","onWheel","event","stopPropagation","ContentTitle","marginBottom","FormBlock","STYLE_INPUT","backgroundImage","FormTextInput","textInputStyle","onFocus","onBlur","EREG_NUMBER","FormColorInput","onChange","target","test","autoComplete","FormLabel","NEW_PROJECT","LOAD_PROJECT","SAVE_PROJECT","OPEN_CATALOG","SELECT_TOOL_EDIT","UNSELECT_ALL","SET_PROPERTIES","SET_ITEMS_ATTRIBUTES","SET_LINES_ATTRIBUTES","SET_HOLES_ATTRIBUTES","REMOVE","UNDO","ROLLBACK","SET_PROJECT_PROPERTIES","OPEN_PROJECT_CONFIGURATOR","INIT_CATALOG","UPDATE_MOUSE_COORDS","UPDATE_ZOOM_SCALE","TOGGLE_SNAP","CHANGE_CATALOG_PAGE","GO_BACK_TO_CATALOG_PAGE","THROW_ERROR","THROW_WARNING","COPY_PROPERTIES","PASTE_PROPERTIES","PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY","ALTERATE_STATE","SET_MODE","ADD_HORIZONTAL_GUIDE","ADD_VERTICAL_GUIDE","ADD_CIRCULAR_GUIDE","REMOVE_HORIZONTAL_GUIDE","REMOVE_VERTICAL_GUIDE","REMOVE_CIRCULAR_GUIDE","SELECT_TOOL_ZOOM_IN","SELECT_TOOL_ZOOM_OUT","SELECT_TOOL_PAN","UPDATE_2D_CAMERA","SELECT_TOOL_3D_VIEW","SELECT_TOOL_3D_FIRST_PERSON","SELECT_TOOL_DRAWING_ITEM","UPDATE_DRAWING_ITEM","END_DRAWING_ITEM","BEGIN_DRAGGING_ITEM","UPDATE_DRAGGING_ITEM","END_DRAGGING_ITEM","BEGIN_ROTATING_ITEM","UPDATE_ROTATING_ITEM","END_ROTATING_ITEM","SELECT_HOLE","SELECT_AREA","SELECT_ITEM","SELECT_LINE","SELECT_TOOL_DRAWING_LINE","BEGIN_DRAWING_LINE","UPDATE_DRAWING_LINE","END_DRAWING_LINE","SELECT_TOOL_DRAWING_HOLE","UPDATE_DRAWING_HOLE","END_DRAWING_HOLE","BEGIN_DRAGGING_LINE","UPDATE_DRAGGING_LINE","END_DRAGGING_LINE","BEGIN_DRAGGING_HOLE","UPDATE_DRAGGING_HOLE","END_DRAGGING_HOLE","BEGIN_DRAGGING_VERTEX","UPDATE_DRAGGING_VERTEX","END_DRAGGING_VERTEX","SET_LAYER_PROPERTIES","ADD_LAYER","SELECT_LAYER","REMOVE_LAYER","PROJECT_ACTIONS","VIEWER2D_ACTIONS","VIEWER3D_ACTIONS","ITEMS_ACTIONS","HOLE_ACTIONS","LINE_ACTIONS","AREA_ACTIONS","GROUP_ACTIONS","ADD_GROUP","ADD_GROUP_FROM_SELECTED","SELECT_GROUP","UNSELECT_GROUP","ADD_TO_GROUP","REMOVE_FROM_GROUP","SET_GROUP_PROPERTIES","SET_GROUP_ATTRIBUTES","SET_GROUP_BARYCENTER","REMOVE_GROUP","REMOVE_GROUP_AND_DELETE_ELEMENTS","GROUP_TRANSLATE","GROUP_ROTATE","SCENE_ACTIONS","VERTEX_ACTIONS","MODE_IDLE","MODE_2D_ZOOM_IN","MODE_2D_ZOOM_OUT","MODE_2D_PAN","MODE_3D_VIEW","MODE_3D_FIRST_PERSON","MODE_WAITING_DRAWING_LINE","MODE_DRAGGING_LINE","MODE_DRAGGING_VERTEX","MODE_DRAGGING_ITEM","MODE_DRAGGING_HOLE","MODE_DRAWING_LINE","MODE_DRAWING_HOLE","MODE_DRAWING_ITEM","MODE_ROTATING_ITEM","MODE_UPLOADING_IMAGE","MODE_FITTING_IMAGE","MODE_VIEWING_CATALOG","MODE_CONFIGURING_PROJECT","MODE_SNAPPING","UNIT_CENTIMETER","UNITS_LENGTH","EPSILON","KEYBOARD_BUTTON_CODE","DELETE","BACKSPACE","ESC","Z","ALT","C","V","CTRL","ENTER","TAB","createContext","confirmStyle","FormNumberInput","_Component","context","_this","_classCallCheck","_defineProperty","_callSuper","valid","showedValue","_inherits","prevProps","_this2","_this$props","_this$props$value","_this$props$min","Number","MIN_SAFE_INTEGER","_this$props$max","MAX_SAFE_INTEGER","_this$props$precision","precision","onValid","onInvalid","placeholder","numericInputStyle","regexp","RegExp","isNaN","currValue","String","parseFloat","toFixed","different","saveFn","savedValue","evt","nativeEvent","onKeyDown","keyCode","which","preventDefault","newValue","handleKeyDown","onClick","translator","visibility","MdUpdate","Component","ReactPlannerContext","WebkitAppearance","WebkitBorderRadius","background","backgroundPosition","backgroundRepeat","FormSelect","sliderContainerStyle","marginRight","textContainerStyle","float","textStyle","Range","renderTrack","_ref2","renderThumb","_ref3","FormSubmitButton","DeleteButton","FormSlider","tableStyle","borderSpacing","firstTdStyle","textTransform","PropertyColor","onUpdate","configs","sourceElement","internalState","className","PropertyStyle","val","_val","PropertyEnum","entries","PropertyString","PropertyNumber","number","toFixedFloat","num","fAbs","multiplyMatrices","m2","result","sum","internalTableStyle","borderCollapse","secondTdStyle","unitContainerStyle","PropertyLengthMeasure","_length","_unit","configRest","lengthInput","unitInput","newLength","merged","el","PropertyToggle","buttonStyle","actionName","checkboxStyle","margin","PropertyCheckbox","checked","PropertyHidden","PropertyReadOnly","CatalogFn","getElement","catalog","elements","hasOwnProperty","getCategory","categoryName","hasCategory","categories","getPropertyType","propertyTypes","registerElement","json","validateElement","root","registerMultipleElements","elementArray","forEach","registerPropertyType","Viewer","Editor","registerMultiplePropertyType","propertyTypeArray","propertyName","propertyConfigs","hasElement","registerCategory","childs","validateCategory","addToCategory","splice","categoryHasElement","elementName","some","CatalogFactory","DEFAULT_LOCALE","Translator","locale","translations","registerTranslation","EN","IT","RU","languages","getBrowserLanguages","lang","setLocale","phrase","_len","params","_key","translate","_len2","_key2","translation","warn","translatedPhrase","replace","match","toLowerCase","navigator","language","userLanguage","compareVertices","v0","v1","minVertex","maxVertex","orderVertices","vertices","sort","pointsDistance","x0","y0","diff_x","diff_y","verticesDistance","v2","horizontalLine","b","verticalLine","linePassingThroughTwoPoints","distancePointFromLine","closestPointFromLine","denom","twoLinesIntersection","angularCoefficientsDiff","twoLineSegmentsIntersection","numA","numB","comparator","pa","pb","_sort2","lineA","lineB","lineSX","lineDX","uA","uB","point","distancePointFromLineSegment","xp","yp","xx","yy","D","len_sq","param","isPointOnLineSegment","maxDistance","closestPointFromLineSegment","q","mi","pointPositionOnLineSegment","mapRange","low1","high1","low2","high2","angleBetweenTwoPointsAndOrigin","atan2","angleBetweenTwoPoints","angleBetweenTwoVertices","absAngleBetweenTwoPoints","samePoints","extendLine","newDistance","rad","roundVertex","vertex","ContainsPoint","polygon","pointX","pointY","ax","lup","ay","bx","by","ii","cosWithThreshold","alpha","threshold","sinWithThreshold","midPoint","verticesMidPoint","verticesArray","res","reduce","incr","rotatePointAroundPoint","px","py","ox","oy","theta","thetaRad","SNAP_POINT","SNAP_LINE","SNAP_SEGMENT","SNAP_GRID","SNAP_GUIDE","SNAP_MASK","PointSnap","_createClass","_ref$radius","_ref$priority","priority","_ref$related","related","distance","Geometry","LineSnap","_ref2$radius","_ref2$priority","_ref2$related","LineSegmentSnap","_ref3$radius","_ref3$priority","_ref3$related","GridSnap","_ref4","_ref4$radius","_ref4$priority","_ref4$related","nearestSnap","snapElements","snapMask","isNear","snap","nearestPoint","_ref5","current","addPointSnap","relatedId","addLineSnap","lineSnap","intersection","_ref6","addLineSegmentSnap","addGridSnap","Grid","DefaultGrids","step","colors","ElementsSet","lines","areas","items","sharedAttributes","misc","Vertex","Line","Hole","line","Area","Item","Layer","order","Group","DefaultLayers","Scene","layers","grids","selectedLayer","groups","meta","guides","horizontal","vertical","circular","Catalog","path","page","_ref$path","ready","catalogElementFactory","options","initialProperties","catList","Catalog2","_toConsumableArray","HistoryStructure","_props$list","list","first","State","mode","sceneHistory","viewer2D","mouse","zoom","activeSnapElement","drawingSupport","draggingSupport","rotatingSupport","errors","warnings","clipboardProperties","selectedElementsHistory","alterate","create_array","array","immerable","Edge","Graph","subgraphs","time","E","adj","disc","low","st","parent","_BCCUtil","subgraph","graph","edges","component","Set","getVerticesFromBiconnectedComponent","_step","_iterator","_createForOfIteratorHelper","s","has","err","mod","compute_angle","P","get_starting_edge","incidences","ev_mapping","direction","get_next_edge","EV","n_items","out","endpoint","cycles","ev","compute_ev_mapping","incidence","i1","i2","compute_incidences","V_cycles","E_cycles","dir_E_cycles","start","V_cycle","E_cycle","dir_E_cycle","next","v_cycles","e_cycles","dir_e_cycles","find_cycles","indexes","e_cycle","v_cycle","find_short_cycles_indexes","indx","rooms_sums","cycle","room","positive_count","rm_neg","calculateInnerCycles","edgesArray","innerCycles","addEdge","BCC","edgesOfSubgraphsArray","getEdgesOfSubgraphs","es","graphCycles","shift","isClockWiseOrder","innerCycleWithCoords","twiceEnclosedArea","_innerCycleWithCoords","_innerCycleWithCoords2","sceneSnapElements","vertexID","_GeometryUtils$horizo","GeometryUtils","_GeometryUtils$vertic","lineID","_ref2$vertices","_vertices$v","_vertices$v2","xCycle","yCycle","xMul","hValues","vValues","hVal","vVal","diff","obj1","obj2","ops","idx","isObject","_typeof","isEqual","aKeys","bKeys","_aKeys","walk","basePath","aIsObj","bIsObj","_","op","subPath","av","bv","bothObj","patch","diffObj","_loop","_step$value","produce","draft","parts","split","Boolean","lastKey","applyOnDraft","historyPush","historyStructure","item","toPush","Date","now","historyPop","slice","objectsMap","func","mappedObject","objectsCompare","constructor","IDBroker","shortid","NameGenerator","toUpperCase","Project","setMode","sceneJSON","layerID","setPropertiesOnSelected","updatePropertiesOnSelected","setAttributesOnSelected","unselectAll","unselect","_state$scene$layers$s","selectedLines","selectedHoles","selectedItems","remove","holeID","itemID","detectAndUpdateAreas","history","coords","mask","error","date","warning","currHistory","previousPosition","findIndex","oldPage","newPage","pageIndex","coordinate","HorizontalGuide","VerticalGuide","guideID","groupID","setAlterate","layerList","_Object$entries$_i","_slicedToArray","_Object$entries","groupLayerID","groupLayerElements","select","areaID","_i2","_Object$keys","acquireID","GroupModel","newGroup","elementType","includes","elementPrototype","elementID","reloadBaricenter","xBar","yBar","elementCount","_draft$scene$layers$g","_draft$scene$layers$g2","_draft$scene$layers$g3","_GeometryUtils$midPoi","xM","yM","_draft$scene$layers$g4","_draft$scene$layers$g5","_draft$scene$layers$g6","_draft$scene$layers$g7","_GeometryUtils$midPoi2","_draft$scene$layers$g8","_draft$scene$layers$g9","area","vID","_draft$scene$layers$g0","_group$elements$layer","layerElements","processVertices","ids","getVertices","vertexIds","vId","barX","barY","newRotation","_ref7","_ref8","_GeometryUtils$rotate","newX","newY","_layer$lines$lineID","_layer$areas$areaID","_GeometryUtils$rotate2","sameSet","set1","set2","isSupersetOf","LayerModel","sortedLayers","acc","newSelectedLayer","layer0","vertexID_to_verticesArrayIndex","verticesArrayIndex_to_vertexID","linesArray","innerCyclesByVerticesID","GraphInnerCycles","vertexIndex","reverse","areaIDs","areasToReset","areaInUse","find","areaVerticesCoords","resultAdd","updatedState","lay","verticesCoordsForArea","_lay$vertices$vertexI","area1","holesList","area2","flat","doubleHoles","areaHoles","areaHoleID","doubleVertex","addElement","setProperties","updateProperties","setAttributes","_Vertex$add","stateV0","_Vertex$add2","stateV1","generateName","selectElement","removeElement","_Line$create","stateL1","line0","_Line$create2","stateL2","line1","splitPointOffset","holeOffset","_group$elements","holesWithOffsetPosition","pointsPair","_ref4$","_ref4$2","_ref6$","_ref6$2","_this2$create","stateL","holeWithOffsetPoint","_holeWithOffsetPoint$","offsetPosition","newOffset","oldProperties","oldHoles","_linesArr","_line$vertices$map2","hasCommonEndpoint","orderedVertices","oldLineLength","_Line$addFromPoints","addFromPoints","_Vertex$add3","stateV","sceneComponentType","SnapSceneUtils","SnapUtils","_snap$point","_Line$create3","_snap$point2","replaceVertex","_snap$point3","createAvoidingIntersections","vertex0","vertex1","startPointX","startPointY","startVertex0X","startVertex0Y","startVertex1X","startVertex1Y","diffX","diffY","newVertex0X","newVertex0Y","newVertex1X","newVertex1Y","curSnap0","curSnap1","maxV","minV","lineLength","pointOnLine","lineGroups","_group$elements2","mergeEqualsVertices","ret","addedLine","oldLineGroup","lineAttributes","vertexOne","vertexTwo","_unitLength","_draft$scene$layers$l","_draft$scene$layers$l2","selectedHoleID","_line$vertices","v0ID","v1ID","_this$create","stateH","updateDrawingHole","_draft$draggingSuppor","_this3","updateDraggingHole","_draft$scene$layers$l3","holesAttributes","_draft$scene$layers$l4","offsetA","offsetB","_unitA","_unitB","relatedPrototype","relatedID","_Object$values","VertexModel","vertexAttributes","elementIndex","selectedVertices","forceRemove","ID","previousMode","_state","v_id0","v_id1","oldVertexID","oldVertex","vertexId1","vertexObj1","lineType","lineProps","removeZeroLengthLines","_Line$createAvoidingI","newLines","verticesCoords","_draft$scene","propsPath","areaAttributes","currentID","stateI","updateDrawingItem","originalX","originalY","_draft$draggingSuppor2","updateRotatingItem","hGuideID","vGuideID","initialState","appReducer","action","newProject","loadProject","openCatalog","changeCatalogPage","goBackToCatalogPage","setItemsAttributes","itemsAttributes","setLinesAttributes","linesAttributes","setHolesAttributes","undo","rollback","setProjectProperties","openProjectConfigurator","initCatalog","updateMouseCoord","updateZoomScale","toggleSnap","throwError","throwWarning","copyProperties","pasteProperties","pushLastSelectedCatalogElementToHistory","addHorizontalGuide","addVerticalGuide","addCircularGuide","removeHorizontalGuide","removeVerticalGuide","removeCircularGuide","ReactPlannerProjectReducer","ReactPlannerViewer2dReducer","ReactPlannerViewer3dReducer","selectToolDrawingItem","endDrawingItem","beginDraggingItem","updateDraggingItem","endDraggingItem","beginRotatingItem","endRotatingItem","ReactPlannerItemsReducer","selectToolDrawingHole","endDrawingHole","beginDraggingHole","endDraggingHole","ReactPlannerHolesReducer","selectToolDrawingLine","beginDrawingLine","updateDrawingLine","endDrawingLine","beginDraggingLine","updateDraggingLine","endDraggingLine","ReactPlannerLinesReducer","ReactPlannerAreasReducer","createFromSelectedElements","setBarycenter","barycenter","removeAndDeleteElements","rotate","ReactPlannerGroupsReducer","ReactPlannerSceneReducer","beginDraggingVertex","updateDraggingVertex","endDraggingVertex","ReactPlannerVerticesReducer","saveProject","selectToolEdit","_ref$x","_ref$y","setAlterateState","updateCameraView","selectToolPan","selectToolZoomOut","selectToolZoomIn","selectTool3DView","selectTool3DFirstPerson","selectLine","selectHole","selectLayer","addLayer","setLayerProperties","removeLayer","selectItem","selectArea","addGroup","addGroupFromSelected","selectGroup","unselectGroup","addToGroup","removeFromGroup","setGroupAttributes","setGroupProperties","setGroupBarycenter","removeGroup","removeGroupAndDeleteElements","groupTranslate","groupRotate","projectActions","viewer2DActions","viewer3DActions","linesActions","holesActions","sceneActions","verticesActions","itemsActions","areaActions","groupsActions","alignItems","justifyContent","STYLE_TOOLTIP","marginTop","marginLeft","zIndex","STYLE_TOOLTIP_PIN","borderRight","borderTop","borderBottom","ToolbarButton","active","onMouseOver","onMouseOut","tooltip","ToolbarSaveButton","useContext","fileOutputLink","document","createElement","filename","prompt","output","JSON","stringify","data","Blob","url","URL","createObjectURL","setAttribute","href","appendChild","click","removeChild","browserDownload","IconSave","ToolbarLoadButton","_useContext","reject","fileInput","addEventListener","file","files","reader","FileReader","fileEvent","loadedData","readAsText","IconLoad","If","condition","iconTextStyle","textDecoration","Icon2D","Icon3D","ASIDE_STYLE","sortButtonsCb","mapButtonsCb","dom","Toolbar","allowProjectFileSupport","toolbarButtons","alterateColor","sorter","confirm","FaFile","FaPlus","FaMousePointer","MdDirectionsRun","MdUndo","MdSettings","maxWidth","maxHeight","STYLE_TITLE","textShadow","boxShadow","STYLE_CONTENT","STYLE_ARROW","opened","headComponents","_this$state","toggleHover","toggleOpen","FaAngleUp","FaAngleDown","inputStyle","ItemAttributesEditor","attributeFormData","renderedX","renderedY","renderedR","LineAttributesEditor","mapped","HoleAttributesEditor","_attributeFormData$na","_attributeFormData$of","_attributeFormData$of2","AttributesEditor","attrPorpSeparatorStyle","headActionStyle","iconHeadStyle","ElementEditor","attributesFormData","initAttrData","propertiesFormData","initPropData","updateAttribute","nextProps","nextState","v_a","v_b","_layer$vertices$line$","_layer$vertices$line$2","startAt","_lengthA","endAt","_lengthB","MathUtils","catalogElement","_element$properties$n","propDef","defVal","currentValue","attributeName","newAttributesFormData","oldAttributesFormData","v_0","v_1","_GeometryUtils$orderV2","v_b_new","attr","_orderedVertices","_orderedVertices$","_orderedVertices$2","widthLength","halfWidthLength","lengthValue","offsetUnit","_orderedVertices3","_orderedVertices3$","_orderedVertices3$2","save","_this$context","_this$props2","appState","MdContentCopy","MdContentPaste","updateProperty","PanelElementEditor","componentRenderer","VISIBILITY_MODE","styleEditButton","tablegroupStyle","iconColStyle","PanelGroupEditor","paddingBottom","FaUnlink","PanelMultiElementsEditor","selectedGroupID","selecteds","log","tableLayerStyle","styleHoverColor","styleEditButtonHover","styleAddLabel","styleEyeVisible","styleEyeHidden","newLayerLableStyle","newLayerLableHoverStyle","layerInputTableStyle","inputTableButtonStyle","PanelLayers","headHovered","layerAddUIVisible","editingLayer","layerData","parseInt","isLastLayer","colSpan","configureClick","isCurrentLayer","onDoubleClick","FaEye","FaPencilAlt","FaTrash","delLayer","TiDelete","TiPlus","resetLayerMod","updateLayer","tabStyle","iconStyle","addGuideStyle","tableTabStyle","PanelGuides","addHGVisible","setAddHGVisible","_useState4","addVGVisible","setAddVGVisible","Tabs","TabList","Tab","TabPanel","hgKey","hgVal","FaTimes","shouldUpdate","memo","PanelGroups","newEmptyHover","setNewEmptyHover","newSelectedHover","setNewSelectedHover","selectClick","shouldHighlight","rowStyle","dimension","lSum","elProt","FaLink","ElementList","areEqual","contentArea","elementStyle","elementSelectedStyle","categoryDividerStyle","tableSearchStyle","searchIconStyle","searchInputStyle","PanelLayerElement","matchString","matchedElements","oldElements","newElements","filterCb","MdSearch","matcharray","overflowX","Sidebar","sidebarComponents","multiselected","selectedGroup","g","PanelLayerElements","onKeyUp","ActiveDrawingHelper","h0","h1","pointH0","pointH1","pointV0","pointV1","STYLE_TEXT","pointerEvents","WebkitTouchCallout","Ruler","distanceText","renderedHoles","renderedHole","half_thickness","renderedLine","renderedRuler","STYLE_CIRCLE","STYLE_CIRCLE2","renderedItem","rendered","renderedAreaSize","_layer$vertices$verte","polygonWithHoles","polygonHole","_layer$vertices$verte2","polylabel","areaSize","areapolygon","holePolygon","_layer$vertices$verte3","fromCharCode","GridHorizontalStreak","grid","GridVerticalStreak","Grids","renderedGrids","gridID","sharedStyles","RulerX","unitPixelSize","_ref$positiveUnitsNum","positiveUnitsNumber","_ref$negativeUnitsNum","negativeUnitsNumber","_ref$mouseX","mouseX","zeroLeftPosition","_ref$backgroundColor","_ref$fontColor","fontColor","_ref$markerColor","markerColor","elementW","borderLeft","paddingLeft","insideElementsStyle","rulerStyle","markerStyle","rulerContainer","gridRowGap","gridColumnGap","gridTemplateRows","grdAutoColumns","positiveRulerContainer","negativeRulerContainer","positiveDomElements","gridColumn","gridRow","RulerY","mouseY","zeroTopPosition","elementH","textOrientation","writingMode","letterSpacing","gridTemplateColumns","grdAutoRows","Viewer2D","Snap","guideStyle","strokewidth","vgKey","vgVal","mode2Tool","constants","TOOL_PAN","TOOL_ZOOM_IN","TOOL_ZOOM_OUT","TOOL_AUTO","TOOL_NONE","mode2PointerEvents","mode2Cursor","mode2DetectAutopan","extractElementData","node","getNamedItem","tagName","parentNode","part","mapCursorPosition","_state$viewer2D","SVGWidth","SVGHeight","rulerSize","rulerUnitPixelSize","rulerBgColor","rulerFnColor","rulerMkColor","sceneWidth","sceneHeight","sceneZoom","rulerXElements","ceil","rulerYElements","overflow","ReactSVGPanZoom","onChangeValue","tool","onChangeTool","detectAutoPan","onMouseDown","viewerEvent","originalEvent","Event","dispatchEvent","_mapCursorPosition2","elementData","onMouseMove","_mapCursorPosition","onMouseUp","_mapCursorPosition3","miniatureProps","toolbarProps","patternUnits","HELVETIKER","disposeMaterial","disposeMesh","disposeScene","scene3D","disposeObject","parseData","sceneData","actions","planRoot","gridMesh","streak","counter","positions","Float32Array","wrapper","words","gridHorizontalStreak","gridVerticalStreak","createGrid","sceneGraph","busyResources","LODs","planData","plan","promises","createLayerObjects","all","updateBoundingBox","addLine","addHole","addArea","addItem","updateScene","oldSceneData","diffArray","filteredDiffs","foundDiff","minimizeRemoveDiffsWhenSwitchingLayers","idsFound","minimizeChangePropertiesAfterSelectionsDiffs","minimizeChangePropertiesDiffs","filterDiffs","layerId","layerGraph","removeLine","removeArea","removeItem","removeHole","replaceObject","modifiedPath","addPromise","addAction","addObject","removeObject","layerSelectedID","layerSelected","lineHoles","newHoleData","oldHole","updateHole","oldLine","updateLine","currentLineID","adjLineID","oldArea","updateArea","oldItem","updateItem","setTimeout","hole3D","line3D","area3D","item3D","_x4","_x5","_x6","_addHole","holeData","line_1","tmp","holeAltitude","holeHeight","asin","applyInteract","applyOpacity","_x7","_x8","_x9","_x0","_x1","_x10","_addLine","_x11","_x12","_x13","_x14","_x15","_x16","_addArea","_callee3","interactFunction","_context3","_x17","_x18","_x19","_x20","_x21","_x22","_addItem","_callee4","_context4","interact","maxOpacity","newBoundingBox","newCenter","sub","renderingID","mouseDownEvent","mouseUpEvent","cameraP","scene3DP","planDataP","orbitControllerP","lastMousePosition","Scene3DViewer","previousProps","usePrevious","canvasWrapper","useRef","__threeRenderer","preserveDrawingBuffer","renderer","useEffect","setClearColor","setSize","aspectRatio","camera","cameraPositionX","cameraPositionY","cameraPositionZ","ambient","hemi","spotLight1","dirLight","toIntersect","raycaster","offsetX","offsetY","setFromCamera","intersects","intersectObjects","domElement","orbitController","OrbitControls","spotLightTarget","render","elemID","requestAnimationFrame","cancelAnimationFrame","removeEventListener","renderLists","updateProjectionMatrix","changedValues","ref","PointerLockControls","THREE","pitchObject","yawObject","copy","applyEuler","PI_2","enabled","movementX","mozMovementX","webkitMovementX","movementY","mozMovementY","webkitMovementY","_defineProperties","_toPropertyKey","_isNativeReflectConstruct","valueOf","Reflect","construct","_getPrototypeOf","_setPrototypeOf","toPrimitive","_toPrimitive","Viewer3DFirstPerson","_React$Component","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","prevTime","performance","velocity","moveForward","moveBackward","moveLeft","moveRight","canJump","sceneOnTop","pointLight","requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","yInitialPosition","_initPointerLock","rendererElement","pointerlockchange","controls","requestPointerLockEvent","pointerlockChangeEvent","initPointerLock","getObject","keyDownEvent","moveResult","firstPersonOnKeyDown","keyUpEvent","firstPersonOnKeyUp","pointer","pointerMaterial","depthWrite","pointerGeometry1","linePointer1","pointerGeometry2","linePointer2","pointerGeometry3","linePointer3","mouseVector","autoClear","stopRendering","normalize","translateX","translateY","translateZ","controlObjectPosition","clear","clearDepth","STYLE_BOX","WebkitTransition","alignSelf","justifySelf","STYLE_BOX_HOVER","STYLE_TITLE_HOVER","STYLE_IMAGE_CONTAINER","STYLE_IMAGE","backgroundSize","STYLE_IMAGE_HOVER","STYLE_PLUS_HOVER","STYLE_DESCRIPTION","fontStyle","WebkitLineClamp","WebkitBoxOrient","textOverflow","STYLE_TAGS","listStyle","STYLE_TAG","CatalogItem","IconAdd","breadcrumbStyle","breadcrumbTextStyle","breadcrumbLastTextStyle","breadcrumbTabStyle","CatalogBreadcrumb","names","labelNames","lastElement","Arrow","STYLE_TITLE_HOVERED","STYLE_NEXT_HOVER","CONTAINER_DIV","CatalogPageItem","changePage","MdNavigateNext","STYLE_BACK","STYLE_BACK_HOVER","CatalogTurnBackPageItem","MdNavigateBefore","containerStyle","itemsStyle","gridGap","searchContainer","searchText","searchInput","historyContainer","historyElementStyle","CatalogList","currentCategory","elementsToDisplay","toRet","curr","flattenCategories","filtered","categoriesToDisplay","breadcrumbComponent","breadcrumbsNames","pathName","pathSize","turnBackButton","selectedHistory","selectedHistoryElements","cat","elem","ProjectConfigurator","dataWidth","dataHeight","alert","_this$state2","onSubmit","htmlFor","Content","customContents","Viewer3D","CustomContent","toggleButtonStyle","toggleButtonStyleOver","FooterToggleButton","over","toggleState","isActive","toggleOn","toggleOff","toggleOver","toggleOut","toggle","labelContainerStyle","contentContainerStyleActive","contentContainerStyleInactive","contentHeaderStyle","titleStyle","contentAreaStyle","iconCloseStyleOut","iconCloseStyleOver","FooterContentButton","closeOver","content","LabelIcon","labelIconStyle","labelTextStyle","inputTitleStyle","IconClose","VERSION","footerBarStyle","boxSizing","leftTextStyle","rightTextStyle","coordStyle","appMessageStyle","FooterBar","globalState","softwareSignature","footerbarComponents","_globalState$mouse","errorsJsx","toLocaleString","errorLableStyle","errorIconStyle","warningsJsx","warningLableStyle","warningIconStyle","updateSnapMask","MdAddCircle","toString","MdWarning","styleTagTransform","insert","domAPI","insertStyleElement","enableMapSet","wrapperStyle","flexFlow","ReactPlanner","stateExtractor","restProps","ReactReduxContext","store","plugins","plugin","getState","contentW","toolbarH","contentH","sidebarH","extractedState","connect","reduxState","dispatch","actionNamespace","bindActionCreators","tempProps","_tempProps$translator","_tempProps$catalog","_tempProps$allowProje","_tempProps$toolbarBut","_tempProps$sidebarCom","_tempProps$footerbarC","_tempProps$customCont","_tempProps$customOver","customOverlays","_tempProps$customActi","customActions","_tempProps$softwareSi","_excluded2","Provider","localStorage","timeout","Autosave","autosaveKey","delay","getItem","subscribe","clearTimeout","setItem","Keyboard","getModifierState","ConsoleDebugger","getStore","dispatchAction","pop","groupCollapsed","groupEnd","ToolbarComponents","SidebarComponents","FooterBarComponents","Viewer2DComponents","StyleComponents","calcLineEnd","lineId","centerVertexId","centerVertex","connectedLines","connectedLineVertexId","firstVertexIsCenter","connectedLineVertex","connectedLineVertexAngle","connectedVertices","degree","sortedVertices","rightVertex","leftVertex","oneNeigbor","angleDiff","lengthLine","halfLeftThickness","botWall","topLine","point2","halfRightThickness","topWall","botLine","halfPI","baseTextureCache","loaderSingleton","TextureLoader","getBaseTexture","uri","tex","colorSpace","SRGBColorSpace","applyTexture","MeshStandardMaterial","setupMap","repeatL","repeatH","extra","cloneAndAssign","RepeatWrapping","lengthRepeatScale","heightRepeatScale","normalMap","normalScale","Vector2","normalScaleX","normalScaleY","buildWall","textures","inverted","app","points1","endA","endB","frontEnd","backEnd","frontPoints","backPoints","halfDistance","soulMaterial","DoubleSide","fStart","fEnd","bStart","bEnd","bottomY","topY","xLocal","uFromX","v3","v4","v5","v6","v7","uvs","vx","ux","vy","tri","bu","cu","cv","uF0","uF1","uB0","uB1","soulGeometry","BufferGeometry","Float32BufferAttribute","soul","sinAlpha","cosAlpha","holeDistance","holeGeometry","BoxGeometry","holeMesh","CSG","subtract","frontMaterial","textureB","backMaterial","textureA","buildExtrudedQuad","thicknessLocal","az","bz","abx","aby","abz","adx","ady","adz","nx","ny","nz","nLen","hypot","halfT","aF","bF","cF","dF","aB","bB","cB","dB","uv","pushV","vT","triV","A","B","Bu","Bv","Cu","Cv","frontGeom","uBackA","backGeom","frontFace","backFace","frontCenter","Vector3","backCenter","thicknessDir","subVectors","frontOutward","backOutward","multiplyScalar","faceThickness","faceDistance","face","translateOnAxis","updatedWall","newThickness","texturedFaceDistance","originalThickness","xTemp","zTemp","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","STYLE_LINE","STYLE_RECT","STYLE_RECT_SELECTED","createArea","textureName","Shape","areaMaterial","MeshPhongMaterial","holeCoords","holeShape","createShape","shapeGeometry","ShapeGeometry","Box3","updatedArea","shapeCoords","WallFactory","textureValues","bricks","_points","_points2","_points3","_points4","_layer$vertices$eleme","lines1","_layer$vertices$eleme2","lines2","length_5","half_thickness_eps","textDistance","degreeWall","centroid","orderPoints","AreaFactory","layerElementsVisible","ReactPlannerSharedStyle","w2","h","slidingDoor","doorShape","doorHole","doorGeometry","barGeometry","doorBar","HandleGeometry1","HandleGeometry2","holeStyle2","rulerColor","grabCircleStyle","hoverCircleStyle","ImageFul","handleMouseMove1","handleMouseMove2","hover1","hover2","imageLoadError","toggleHover1","toggleHover2","nodeName","nodeValue","_event$viewerEvent","dist","origin","minX","minY","imageUri","Image","src","onload","naturalWidth","naturalHeight","onerror","half_w","ruler","xlinkHref","_element$properties","umbrellaStand","SideGeometry","Side1","Side2","Side3","Side4","geometryBox","umbrellaStandMaxLOD","umbrellaStandMinLOD","deskMaxLOD","deskMinLOD","parquet","tile1","ceramic","strand_porcelain","grass","ElementsFactories","painted","createCatalog","Wall","Holes","holesContext","Items","itemsContext","ReactPlannerComponents","AppState","PlannerModels","devToolsActionsDenylist","createSerializableStateInvariantMiddleware","isSerializable","isPlain","configureStore","reducer","PlannerReducer","middleware","getDefaultMiddleware","thunk","immutableCheck","serializableCheck","actionCreatorCheck","devTools","actionsDenylist","maxAge","__REDUX_DEVTOOLS_EXTENSION__","PlannerPlugins","imageBrowserDownload","canvas","getElementsByTagName","toDataURL","MdCamera","svgElements","maxWidthSVGElement","baseVal","serializer","XMLSerializer","ctx","getContext","heightAtt","createAttribute","setAttributeNode","widthAtt","fillStyle","fillRect","crossOrigin","btoa","serializeToString","drawImage","ResponsiveReactPlanner","_useMeasure2","useMeasure","bounds","container","getElementById","globalAny","globalThis","ROOT_KEY","createRoot","_module","hot","unmount","_unused","power","keyboard","monitorPC","edge_p0","edge_p1","edge_p3","cubeGeometryBase4","edge_p4","cubeGeometryBase5","powerGeometry","powerMaterial","powerButton","cubeGeometryBase8","keyboardMesh","monitorPC_MaxLOD","monitorPC_MinLOD","cachedJSONSofa","_object","ObjectLoader","toJSON","naspo","geometryBody","naspoMaxLOD","naspoMiddleLOD","naspoMinLOD","roundedRectShapeTable","extrudeSettingsTable","tableGeometry","baseGeometry","baseVerticalGeometry","unionGeometry","footGeometry","closureGeometry","basePiece1","basePiece2","basePiece3","baseVerticalPiece","unionPiece","foot1","foot2","foot3","foot4","closurePiece1","closurePiece2","leftBar","rightBar","baseCurvedGeometry","baseCurvePiece1","baseCurvePiece2","roundedRectShapeStairPiece1","extrudeSettingsStairPiece1","stairGeometryPiece1","stairPiece1","roundedRectShapeStairPiece2","stairGeometryPiece2","stairPiece2","deskdouble","deskdoubleMaxLOD","deskdoubleMinLOD","hub","plane_texture","hubMaxLOD","hubMinLOD"],"sourceRoot":""}