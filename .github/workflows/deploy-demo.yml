name: Deploy demo and PR previews to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || (github.event.action != 'closed' && github.event.action != 'deleted')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Run install
        run: yarn install --frozen-lockfile

      - name: Build demo
        run: yarn build-demo

      - name: Copy dist to tmp
        run: |
          mkdir -p /tmp/demo-dist
          cp -r ./demo/dist/* /tmp/demo-dist/

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      - name: Set destination directory
        id: destdir
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "push" || "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            echo "DEST=./" >> $GITHUB_ENV
          else
            echo "DEST=./pr-preview/pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          fi

      - name: Delete old files (main or PR)
        run: |
          if [[ "$DEST" == "./" ]]; then
            find . -mindepth 1 -maxdepth 1 ! -name 'pr-preview' -exec rm -rf {} +
          else
            rm -rf "$DEST"/* || true
            mkdir -p "$DEST"
          fi

      - name: Copy new build files from tmp
        run: |
          cp -r /tmp/demo-dist/* "$DEST"

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update site files"
          git push origin gh-pages

  delete-pr-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.event.action == 'closed' || github.event.action == 'deleted')
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      - name: Remove PR preview folder
        run: |
          rm -rf pr-${{ github.event.pull_request.number }}

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Remove PR preview for #${{ github.event.pull_request.number }}"
          git push origin gh-pages
