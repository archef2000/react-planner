name: Deploy demo and PR previews to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request_target:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write
  pages: write
  id-token: write
  issues: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || (github.event.action != 'closed' && github.event.action != 'deleted')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: main

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Run install
        run: |
          cd main
          yarn install --frozen-lockfile

      - name: Build demo
        run: |
          cd main
          yarn build-demo

      - name: Clone gh-pages branch
        run: |
          git clone --single-branch --branch gh-pages https://github.com/${{ github.repository }} gh-pages-work

      - name: Set destination directory
        id: destdir
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "push" || "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            echo "DEST=gh-pages-work/" >> $GITHUB_ENV
          else
            echo "DEST=gh-pages-work/pr-preview/pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          fi

      - name: Delete old files (main or PR)
        run: |
          if [[ "$DEST" == "gh-pages-work/" ]]; then
            find gh-pages-work -mindepth 1 -maxdepth 1 ! -name 'pr-preview' ! -name '.git' -exec rm -rf {} +
          else
            rm -rf "$DEST"/* || true
            mkdir -p "$DEST"
          fi

      - name: Copy new build files
        run: |
          cp -r main/demo/dist/* "$DEST"

      - name: Debug print
        run: |
          echo "github.event_name is set to: ${{ github.event_name }}"
          echo "github.event.action is set to: ${{ github.event.action }}"
          echo "GITHUB_EVENT_NAME is set to: $GITHUB_EVENT_NAME"

      - name: Post PR demo URL comment
        uses: peter-evans/create-or-update-comment@v4
        if: github.event_name == 'pull_request_target' && github.event.action == 'synchronize' # opened
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ":rocket: PR demo available at: https://archef2000.github.io/react-planner/pr-preview/pr-${{ github.event.pull_request.number }}/"

      - name: Commit and push changes
        run: |
          cd gh-pages-work
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add .
          # Generate msgHash
          baseRepo="${{ github.repository }}"
          hash=$(git --git-dir=../main/.git rev-parse --short HEAD)
          extRepo=""
          if [[ "$baseRepo" != "archef2000/react-planner" ]]; then
            extRepo="$baseRepo"
          fi
          if [[ -n "$extRepo" ]]; then
            msgHash="$extRepo@$hash"
          else
            msgHash="$hash"
          fi
          git commit -m "deploy: $msgHash" || true
          git push

  delete-pr-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.event.action == 'closed' || github.event.action == 'deleted')
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      - name: Remove PR preview folder
        run: |
          rm -rf pr-${{ github.event.pull_request.number }}

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Remove PR preview for #${{ github.event.pull_request.number }}"
          git push origin gh-pages
